{
  "id": "bp-02-nas-san",
  "title": "Network Attached Storage (NAS) und Storage Area Network (SAN)",
  "description": "Verstehe die Unterschiede zwischen NAS und SAN, lerne ihre Anwendungsfälle, Protokolle und Architektur kennen.",
  "category": "BP-02",
  "subcategory": "Sicherstellen der Qualität von Softwareanwendungen - Speicherlösungen",
  "difficulty": "intermediate",
  "examRelevance": "high",
  "newIn2025": true,
  "removedIn2025": false,
  "important": true,
  "estimatedTime": "40 Minuten",
  "prerequisites": [],
  "tags": [
    "nas",
    "san",
    "storage",
    "netzwerkspeicher",
    "iscsi",
    "nfs",
    "smb",
    "fibre channel"
  ],
  "content": "# Network Attached Storage (NAS) und Storage Area Network (SAN)\n\n## Übersicht\n\nNAS und SAN sind zwei verschiedene Ansätze für Netzwerkspeicher in Unternehmensumgebungen. Beide ermöglichen zentralisierte Datenspeicherung, unterscheiden sich aber grundlegend in Architektur, Protokollen und Anwendungsfällen.\n\n<!-- micro-quiz:bp-02-nas-san-ubersicht-micro-1 -->\n## Network Attached Storage (NAS)\n\n### Was ist NAS?\n\nNAS ist ein dediziertes Speichergerät, das über ein Standard-Netzwerk (Ethernet) verbunden ist und **dateibasierten** Zugriff bietet.\n\n### Hauptmerkmale\n\n- **File-Level Storage**: Zugriff auf Dateiebene\n- **Ethernet-basiert**: Verwendet Standard-Netzwerkinfrastruktur\n- **Einfache Einrichtung**: Plug-and-Play, webbasierte Verwaltung\n- **Protokolle**: NFS, SMB/CIFS, AFP, FTP\n- **Betriebssystem**: Eigenes OS (oft Linux-basiert)\n\n### NAS-Architektur\n\n```\n┌─────────────────────────────────────────┐\n│         Clients (Windows, Mac, Linux)   │\n└──────────────┬──────────────────────────┘\n               │ Ethernet (TCP/IP)\n               │ SMB/NFS/AFP\n┌──────────────▼──────────────────────────┐\n│           NAS-Gerät                     │\n│  ┌─────────────────────────────────┐   │\n│  │  NAS-Betriebssystem             │   │\n│  │  (File System Management)       │   │\n│  └─────────────────────────────────┘   │\n│  ┌─────────────────────────────────┐   │\n│  │  RAID-Controller                │   │\n│  └─────────────────────────────────┘   │\n│  ┌───┐ ┌───┐ ┌───┐ ┌───┐             │\n│  │HDD│ │HDD│ │HDD│ │HDD│             │\n│  └───┘ └───┘ └───┘ └───┘             │\n└─────────────────────────────────────────┘\n```\n\n### NAS-Protokolle\n\n#### 1. NFS (Network File System)\n- **Entwickelt von**: Sun Microsystems\n- **Primär für**: Unix/Linux-Systeme\n- **Vorteile**: Hohe Performance, native Linux-Integration\n- **Port**: 2049 (NFSv4)\n\n#### 2. SMB/CIFS (Server Message Block)\n- **Entwickelt von**: Microsoft\n- **Primär für**: Windows-Systeme\n- **Versionen**: SMB 1.0, 2.0, 3.0, 3.1.1\n- **Port**: 445\n- **Features**: Verschlüsselung (SMB 3.0+), Multichannel\n\n#### 3. AFP (Apple Filing Protocol)\n- **Entwickelt von**: Apple\n- **Primär für**: macOS\n- **Status**: Veraltet, ersetzt durch SMB\n\n### Vorteile von NAS\n\n✅ **Einfache Einrichtung**: Schnelle Installation und Konfiguration\n✅ **Kostengünstig**: Niedrigere Anschaffungskosten als SAN\n✅ **Flexibel**: Unterstützt verschiedene Betriebssysteme\n✅ **File Sharing**: Ideal für gemeinsamen Dateizugriff\n✅ **Skalierbar**: Einfache Kapazitätserweiterung\n✅ **Zusatzfunktionen**: Backup, Snapshots, Replikation\n\n### Nachteile von NAS\n\n❌ **Performance**: Langsamer als SAN bei hohen I/O-Anforderungen\n❌ **Netzwerk-Overhead**: Abhängig von Netzwerkbandbreite\n❌ **Latenz**: Höhere Latenz als DAS oder SAN\n❌ **Protokoll-Overhead**: File-Level-Protokolle haben mehr Overhead\n\n## Storage Area Network (SAN)\n<!-- micro-quiz:bp-02-nas-san-network-attached-storage-nas-micro-1 -->\n\n\n### Was ist SAN?\n\nSAN ist ein dediziertes Hochgeschwindigkeitsnetzwerk, das **blockbasierten** Zugriff auf Speicher bietet.\n\n### Hauptmerkmale\n\n- **Block-Level Storage**: Zugriff auf Blockebene\n- **Dediziertes Netzwerk**: Separates Storage-Netzwerk\n- **Hohe Performance**: Niedrige Latenz, hoher Durchsatz\n- **Protokolle**: Fibre Channel, iSCSI, FCoE\n- **Erscheint als lokale Disk**: Server sieht SAN-LUN als lokales Laufwerk\n\n### SAN-Architektur\n\n```\n┌──────────┐  ┌──────────┐  ┌──────────┐\n│ Server 1 │  │ Server 2 │  │ Server 3 │\n└────┬─────┘  └────┬─────┘  └────┬─────┘\n     │ HBA        │ HBA        │ HBA\n     │            │            │\n┌────▼────────────▼────────────▼─────┐\n│      Fibre Channel Switch          │\n│      (SAN Fabric)                  │\n└────┬────────────┬────────────┬─────┘\n     │            │            │\n┌────▼─────┐ ┌───▼──────┐ ┌───▼──────┐\n│ Storage  │ │ Storage  │ │ Storage  │\n│ Array 1  │ │ Array 2  │ │ Array 3  │\n└──────────┘ └──────────┘ └──────────┘\n```\n\n### SAN-Protokolle\n\n#### 1. Fibre Channel (FC)\n- **Geschwindigkeit**: 8, 16, 32, 64 Gbit/s\n- **Topologie**: Point-to-Point, Arbitrated Loop, Switched Fabric\n- **Vorteile**: Sehr hohe Performance, niedrige Latenz\n- **Nachteile**: Teuer, spezielle Hardware erforderlich\n- **Komponenten**: HBA (Host Bus Adapter), FC-Switches\n\n#### 2. iSCSI (Internet Small Computer System Interface)\n- **Basis**: SCSI über TCP/IP\n- **Geschwindigkeit**: 1, 10, 25, 40 Gbit/s Ethernet\n- **Vorteile**: Kostengünstiger als FC, Standard-Ethernet\n- **Nachteile**: Höhere CPU-Last, höhere Latenz als FC\n- **Port**: 3260\n\n#### 3. FCoE (Fibre Channel over Ethernet)\n- **Basis**: Fibre Channel über Ethernet\n- **Geschwindigkeit**: 10, 40, 100 Gbit/s\n- **Vorteile**: Konvergenz von LAN und SAN\n- **Nachteile**: Spezielle Switches erforderlich\n\n### Vorteile von SAN\n\n✅ **Hohe Performance**: Sehr niedrige Latenz, hoher Durchsatz\n✅ **Skalierbarkeit**: Große Speicherkapazitäten\n✅ **Zentralisierung**: Zentrale Speicherverwaltung\n✅ **Flexibilität**: Dynamische Zuweisung von Storage\n✅ **Hochverfügbarkeit**: Redundante Pfade, Failover\n✅ **Snapshots und Replikation**: Enterprise-Features\n\n### Nachteile von SAN\n\n❌ **Kosten**: Hohe Anschaffungs- und Betriebskosten\n❌ **Komplexität**: Erfordert spezialisiertes Know-how\n❌ **Hardware**: Spezielle HBAs und Switches erforderlich\n❌ **Wartung**: Aufwändige Administration\n\n<!-- micro-quiz:bp-02-nas-san-storage-area-network-san-micro-1 -->\n## NAS vs. SAN - Detaillierter Vergleich\n\n| Merkmal | NAS | SAN |\n|---------|-----|-----|\n| **Zugriff** | File-Level | Block-Level |\n| **Protokolle** | NFS, SMB/CIFS, AFP | FC, iSCSI, FCoE |\n| **Netzwerk** | Standard Ethernet | Dediziertes Storage-Netzwerk |\n| **Performance** | Gut für File Sharing | Exzellent für Datenbanken |\n| **Latenz** | Höher (ms) | Sehr niedrig (μs) |\n| **Kosten** | Niedrig bis mittel | Hoch |\n| **Komplexität** | Einfach | Komplex |\n| **Skalierbarkeit** | Gut | Exzellent |\n| **Anwendungsfälle** | File Sharing, Backup | Datenbanken, VMs |\n| **Verwaltung** | Einfach | Komplex |\n| **Erscheint als** | Netzlaufwerk | Lokale Disk |\n\n## Anwendungsfälle\n<!-- micro-quiz:bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1 -->\n\n\n### Wann NAS verwenden?\n\n1. **File Sharing**: Gemeinsamer Zugriff auf Dokumente\n2. **Home Directories**: Benutzer-Home-Verzeichnisse\n3. **Backup-Ziel**: Zentrale Backup-Lösung\n4. **Media Streaming**: Video/Audio-Streaming\n5. **Kleine bis mittlere Unternehmen**: Kostengünstige Lösung\n6. **Abteilungs-Storage**: Abteilungsspezifische Dateiablage\n\n**Beispiel-Szenario**:\n```\nMarketing-Abteilung benötigt gemeinsamen Zugriff auf:\n- Präsentationen\n- Bilder und Videos\n- Kampagnen-Dokumente\n→ NAS ist ideal\n```\n\n### Wann SAN verwenden?\n\n1. **Datenbanken**: SQL Server, Oracle, MySQL\n2. **Virtualisierung**: VMware, Hyper-V, KVM\n3. **High-Performance Computing**: Wissenschaftliche Anwendungen\n4. **Transaktionssysteme**: ERP, CRM\n5. **Email-Server**: Exchange, Lotus Notes\n6. **Boot from SAN**: Diskless Servers\n\n**Beispiel-Szenario**:\n```\nUnternehmen betreibt:\n- 50 virtuelle Maschinen\n- SQL-Datenbank mit hohem I/O\n- 24/7 Verfügbarkeit erforderlich\n→ SAN ist erforderlich\n```\n\n<!-- micro-quiz:bp-02-nas-san-anwendungsfalle-micro-1 -->\n## Hybrid-Ansätze\n\n### Unified Storage\n\nModerne Storage-Systeme bieten oft **beide** Zugriffsmethoden:\n- NAS-Protokolle (NFS, SMB) für File Sharing\n- SAN-Protokolle (iSCSI, FC) für Block Storage\n- Gemeinsame Verwaltung\n\n### Beispiel: NetApp, Dell EMC, HPE\n\n```\n┌─────────────────────────────────────┐\n│    Unified Storage System           │\n│                                     │\n│  ┌──────────┐      ┌──────────┐   │\n│  │   NAS    │      │   SAN    │   │\n│  │ (Files)  │      │ (Blocks) │   │\n│  └──────────┘      └──────────┘   │\n│         │                │         │\n│         └────────┬───────┘         │\n│                  │                 │\n│         ┌────────▼────────┐        │\n│         │  Storage Pool   │        │\n│         └─────────────────┘        │\n└─────────────────────────────────────┘\n```\n\n## Performance-Vergleich\n<!-- micro-quiz:bp-02-nas-san-hybrid-ansatze-micro-1 -->\n\n\n### Durchsatz\n\n| Technologie | Typischer Durchsatz |\n|-------------|--------------------|\n| **NAS (1 GbE)** | ~100-120 MB/s |\n| **NAS (10 GbE)** | ~1000-1200 MB/s |\n| **iSCSI (10 GbE)** | ~1000-1200 MB/s |\n| **Fibre Channel (16 Gbit/s)** | ~1600 MB/s |\n| **Fibre Channel (32 Gbit/s)** | ~3200 MB/s |\n\n### Latenz\n\n| Technologie | Typische Latenz |\n|-------------|----------------|\n| **NAS** | 1-5 ms |\n| **iSCSI** | 0.5-2 ms |\n| **Fibre Channel** | 0.1-0.5 ms |\n| **Lokale SSD** | 0.05-0.1 ms |\n\n<!-- micro-quiz:bp-02-nas-san-performance-vergleich-micro-1 -->\n## Konfigurationsbeispiele\n\n### NAS-Konfiguration (Linux NFS-Server)\n\n```bash\n# NFS-Server installieren\nsudo apt-get install nfs-kernel-server\n\n# Export-Verzeichnis erstellen\nsudo mkdir -p /export/data\nsudo chown nobody:nogroup /export/data\n\n# /etc/exports konfigurieren\necho \"/export/data 192.168.1.0/24(rw,sync,no_subtree_check)\" | sudo tee -a /etc/exports\n\n# NFS-Server neu starten\nsudo systemctl restart nfs-kernel-server\n\n# Client-seitig mounten\nsudo mount -t nfs 192.168.1.100:/export/data /mnt/nas\n```\n\n### iSCSI-Konfiguration (Linux)\n\n```bash\n# iSCSI-Target (Server-Seite)\nsudo apt-get install tgt\n\n# Target erstellen\nsudo tgtadm --lld iscsi --op new --mode target --tid 1 \\\n  -T iqn.2025-01.com.company:storage.target1\n\n# LUN hinzufügen\nsudo tgtadm --lld iscsi --op new --mode logicalunit --tid 1 \\\n  --lun 1 -b /dev/sdb\n\n# Zugriff erlauben\nsudo tgtadm --lld iscsi --op bind --mode target --tid 1 \\\n  -I 192.168.1.0/24\n\n# iSCSI-Initiator (Client-Seite)\nsudo apt-get install open-iscsi\n\n# Target entdecken\nsudo iscsiadm -m discovery -t st -p 192.168.1.100\n\n# Mit Target verbinden\nsudo iscsiadm -m node --targetname iqn.2025-01.com.company:storage.target1 \\\n  --portal 192.168.1.100 --login\n\n# Disk ist nun als /dev/sdX verfügbar\nlsblk\n```\n\n## Best Practices\n<!-- micro-quiz:bp-02-nas-san-konfigurationsbeispiele-micro-1 -->\n\n\n### NAS Best Practices\n\n1. **RAID verwenden**: RAID 5, 6 oder 10 für Redundanz\n2. **Regelmäßige Backups**: 3-2-1 Backup-Regel\n3. **Snapshots**: Regelmäßige Snapshots für schnelle Wiederherstellung\n4. **Netzwerk-Segmentierung**: Separates VLAN für Storage-Traffic\n5. **Monitoring**: Überwachung von Kapazität und Performance\n6. **Updates**: Regelmäßige Firmware-Updates\n\n### SAN Best Practices\n\n1. **Redundante Pfade**: Multipathing für Hochverfügbarkeit\n2. **Zoning**: FC-Zoning für Sicherheit und Performance\n3. **LUN Masking**: Zugriffskontrolle auf LUN-Ebene\n4. **Performance-Monitoring**: Latenz und IOPS überwachen\n5. **Kapazitätsplanung**: Proaktive Kapazitätsverwaltung\n6. **Disaster Recovery**: Replikation zu zweitem Standort\n\n<!-- micro-quiz:bp-02-nas-san-best-practices-micro-1 -->\n## Zusammenfassung\n\n**NAS (Network Attached Storage)**:\n- File-Level Storage über Ethernet\n- Protokolle: NFS, SMB/CIFS\n- Ideal für: File Sharing, Backup, kleine/mittlere Unternehmen\n- Vorteile: Einfach, kostengünstig, flexibel\n\n**SAN (Storage Area Network)**:\n- Block-Level Storage über dediziertes Netzwerk\n- Protokolle: Fibre Channel, iSCSI, FCoE\n- Ideal für: Datenbanken, Virtualisierung, High-Performance\n- Vorteile: Sehr hohe Performance, Skalierbarkeit, Enterprise-Features\n\n**Entscheidungskriterien**:\n- **Performance-Anforderungen**: SAN für hohe I/O, NAS für File Sharing\n- **Budget**: NAS kostengünstiger\n- **Komplexität**: NAS einfacher zu verwalten\n- **Anwendungsfall**: Datenbanken → SAN, Dokumente → NAS\n\nFür die IHK-Prüfung wichtig:\n- Verstehe den Unterschied zwischen File-Level (NAS) und Block-Level (SAN)\n- Kenne die Protokolle (NFS, SMB für NAS; FC, iSCSI für SAN)\n- Verstehe Anwendungsfälle und Vor-/Nachteile\n- Kenne Performance-Unterschiede\n\n\n\n<!-- micro-quiz:bp-02-nas-san-quiz -->\n<!-- micro-quiz:bp-02-nas-san-zusammenfassung-micro-1 -->\n",
  "codeExamples": [
    {
      "language": "bash",
      "title": "NFS-Server einrichten (Linux)",
      "code": "# NFS-Server installieren\nsudo apt-get update\nsudo apt-get install nfs-kernel-server\n\n# Export-Verzeichnis erstellen\nsudo mkdir -p /export/shared\nsudo mkdir -p /export/backup\n\n# Berechtigungen setzen\nsudo chown nobody:nogroup /export/shared\nsudo chmod 755 /export/shared\n\n# /etc/exports konfigurieren\nsudo nano /etc/exports\n# Inhalt:\n# /export/shared 192.168.1.0/24(rw,sync,no_subtree_check,no_root_squash)\n# /export/backup 192.168.1.50(rw,sync,no_subtree_check)\n\n# Exports aktivieren\nsudo exportfs -a\n\n# NFS-Server neu starten\nsudo systemctl restart nfs-kernel-server\n\n# Status prüfen\nsudo systemctl status nfs-kernel-server\nsudo exportfs -v\n\n# Client-seitig mounten\nsudo apt-get install nfs-common\nsudo mkdir -p /mnt/shared\nsudo mount -t nfs 192.168.1.100:/export/shared /mnt/shared\n\n# Permanent mounten (/etc/fstab)\necho \"192.168.1.100:/export/shared /mnt/shared nfs defaults 0 0\" | sudo tee -a /etc/fstab",
      "explanation": "Komplette NFS-Server-Einrichtung unter Linux. Zeigt Installation, Konfiguration, Export-Freigabe und Client-Mount."
    },
    {
      "language": "bash",
      "title": "iSCSI-Target und Initiator konfigurieren",
      "code": "# === iSCSI-Target (Server) ===\n\n# TGT installieren\nsudo apt-get install tgt\n\n# Target erstellen\nsudo tgtadm --lld iscsi --op new --mode target --tid 1 \\\n  -T iqn.2025-01.com.company:storage.lun1\n\n# Backing Store (LUN) hinzufügen\n# Option 1: Blockdevice verwenden\nsudo tgtadm --lld iscsi --op new --mode logicalunit --tid 1 \\\n  --lun 1 -b /dev/sdb\n\n# Option 2: Image-Datei verwenden\nsudo dd if=/dev/zero of=/storage/lun1.img bs=1M count=10240  # 10GB\nsudo tgtadm --lld iscsi --op new --mode logicalunit --tid 1 \\\n  --lun 1 -b /storage/lun1.img\n\n# Zugriff für Initiator erlauben\nsudo tgtadm --lld iscsi --op bind --mode target --tid 1 \\\n  -I 192.168.1.0/24\n\n# CHAP-Authentifizierung (optional)\nsudo tgtadm --lld iscsi --op bind --mode account --tid 1 \\\n  --user username --password secretpassword\n\n# Konfiguration anzeigen\nsudo tgtadm --lld iscsi --op show --mode target\n\n# === iSCSI-Initiator (Client) ===\n\n# Open-iSCSI installieren\nsudo apt-get install open-iscsi\n\n# Initiator-Name setzen (optional)\nsudo nano /etc/iscsi/initiatorname.iscsi\n# InitiatorName=iqn.2025-01.com.company:client1\n\n# Target entdecken\nsudo iscsiadm -m discovery -t sendtargets -p 192.168.1.100\n\n# Mit Target verbinden\nsudo iscsiadm -m node --targetname iqn.2025-01.com.company:storage.lun1 \\\n  --portal 192.168.1.100:3260 --login\n\n# Verbundene Sessions anzeigen\nsudo iscsiadm -m session\n\n# Neue Disk finden\nlsblk\nsudo fdisk -l\n\n# Disk formatieren und mounten\nsudo mkfs.ext4 /dev/sdc\nsudo mkdir -p /mnt/iscsi\nsudo mount /dev/sdc /mnt/iscsi\n\n# Automatisch beim Boot verbinden\nsudo iscsiadm -m node --targetname iqn.2025-01.com.company:storage.lun1 \\\n  --portal 192.168.1.100:3260 --op update -n node.startup -v automatic",
      "explanation": "Vollständige iSCSI-Konfiguration für Target (Server) und Initiator (Client). Zeigt LUN-Erstellung, Zugriffskontrolle und Client-Verbindung."
    },
    {
      "language": "python",
      "title": "NAS-Performance-Monitoring",
      "code": "import os\nimport time\nimport psutil\nfrom datetime import datetime\n\nclass NASMonitor:\n    def __init__(self, mount_point):\n        self.mount_point = mount_point\n        \n    def get_storage_info(self):\n        \"\"\"Speicherinformationen abrufen\"\"\"\n        usage = psutil.disk_usage(self.mount_point)\n        \n        return {\n            'total_gb': usage.total / (1024**3),\n            'used_gb': usage.used / (1024**3),\n            'free_gb': usage.free / (1024**3),\n            'percent_used': usage.percent\n        }\n    \n    def measure_read_performance(self, file_size_mb=100):\n        \"\"\"Lese-Performance messen\"\"\"\n        test_file = os.path.join(self.mount_point, 'perf_test_read.dat')\n        \n        # Testdatei erstellen\n        data = os.urandom(file_size_mb * 1024 * 1024)\n        with open(test_file, 'wb') as f:\n            f.write(data)\n        \n        # Lese-Performance messen\n        start_time = time.time()\n        with open(test_file, 'rb') as f:\n            _ = f.read()\n        end_time = time.time()\n        \n        # Aufräumen\n        os.remove(test_file)\n        \n        duration = end_time - start_time\n        throughput_mbps = file_size_mb / duration\n        \n        return {\n            'duration_seconds': duration,\n            'throughput_mbps': throughput_mbps,\n            'file_size_mb': file_size_mb\n        }\n    \n    def measure_write_performance(self, file_size_mb=100):\n        \"\"\"Schreib-Performance messen\"\"\"\n        test_file = os.path.join(self.mount_point, 'perf_test_write.dat')\n        data = os.urandom(file_size_mb * 1024 * 1024)\n        \n        start_time = time.time()\n        with open(test_file, 'wb') as f:\n            f.write(data)\n            f.flush()\n            os.fsync(f.fileno())  # Sicherstellen, dass Daten geschrieben wurden\n        end_time = time.time()\n        \n        # Aufräumen\n        os.remove(test_file)\n        \n        duration = end_time - start_time\n        throughput_mbps = file_size_mb / duration\n        \n        return {\n            'duration_seconds': duration,\n            'throughput_mbps': throughput_mbps,\n            'file_size_mb': file_size_mb\n        }\n    \n    def measure_latency(self, iterations=100):\n        \"\"\"Latenz messen (kleine Dateizugriffe)\"\"\"\n        test_file = os.path.join(self.mount_point, 'latency_test.dat')\n        latencies = []\n        \n        for i in range(iterations):\n            # Kleine Datei schreiben\n            start = time.time()\n            with open(test_file, 'w') as f:\n                f.write('test')\n                f.flush()\n                os.fsync(f.fileno())\n            latency = (time.time() - start) * 1000  # ms\n            latencies.append(latency)\n        \n        # Aufräumen\n        if os.path.exists(test_file):\n            os.remove(test_file)\n        \n        return {\n            'avg_latency_ms': sum(latencies) / len(latencies),\n            'min_latency_ms': min(latencies),\n            'max_latency_ms': max(latencies),\n            'iterations': iterations\n        }\n    \n    def generate_report(self):\n        \"\"\"Vollständigen Performance-Report erstellen\"\"\"\n        print(f\"\\n=== NAS Performance Report ===\")\n        print(f\"Mount Point: {self.mount_point}\")\n        print(f\"Timestamp: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\")\n        print(f\"\\n--- Storage Info ---\")\n        \n        storage = self.get_storage_info()\n        print(f\"Total: {storage['total_gb']:.2f} GB\")\n        print(f\"Used: {storage['used_gb']:.2f} GB ({storage['percent_used']:.1f}%)\")\n        print(f\"Free: {storage['free_gb']:.2f} GB\")\n        \n        print(f\"\\n--- Read Performance ---\")\n        read_perf = self.measure_read_performance(100)\n        print(f\"Throughput: {read_perf['throughput_mbps']:.2f} MB/s\")\n        print(f\"Duration: {read_perf['duration_seconds']:.2f} seconds\")\n        \n        print(f\"\\n--- Write Performance ---\")\n        write_perf = self.measure_write_performance(100)\n        print(f\"Throughput: {write_perf['throughput_mbps']:.2f} MB/s\")\n        print(f\"Duration: {write_perf['duration_seconds']:.2f} seconds\")\n        \n        print(f\"\\n--- Latency ---\")\n        latency = self.measure_latency(50)\n        print(f\"Average: {latency['avg_latency_ms']:.2f} ms\")\n        print(f\"Min: {latency['min_latency_ms']:.2f} ms\")\n        print(f\"Max: {latency['max_latency_ms']:.2f} ms\")\n        \n        print(f\"\\n=== End of Report ===\\n\")\n\n# Verwendung\nif __name__ == \"__main__\":\n    # NAS-Mount-Point\n    nas_path = \"/mnt/nas\"\n    \n    if os.path.exists(nas_path):\n        monitor = NASMonitor(nas_path)\n        monitor.generate_report()\n    else:\n        print(f\"Mount point {nas_path} nicht gefunden!\")",
      "explanation": "Python-Tool zur NAS-Performance-Überwachung. Misst Durchsatz, Latenz und Speicherauslastung."
    }
  ],
  "relatedQuizzes": [
    "bp-02-nas-san-quiz"
  ],
  "resources": [
    {
      "title": "NFS Protocol Specification (RFC 5661)",
      "url": "https://tools.ietf.org/html/rfc5661",
      "type": "documentation"
    },
    {
      "title": "iSCSI Protocol Specification (RFC 7143)",
      "url": "https://tools.ietf.org/html/rfc7143",
      "type": "documentation"
    },
    {
      "title": "Fibre Channel Standards",
      "url": "https://www.fibrechannel.org/",
      "type": "documentation"
    }
  ],
  "lastUpdated": "2025-01-05T10:00:00Z",
  "version": "1.0",
  "learningObjectives": [
    "Du kannst nas erklären",
    "Du kannst san erklären",
    "Du kannst storage erklären",
    "Du kannst netzwerkspeicher erklären",
    "Du kannst iscsi erklären"
  ],
  "summary": "Verstehe die Unterschiede zwischen NAS und SAN, lerne ihre Anwendungsfälle, Protokolle und Architektur kennen.",
  "contentOutline": [
    {
      "id": "network-attached-storage-nas-und-storage-area-netw",
      "title": "Network Attached Storage (NAS) und Storage Area Network (SAN)",
      "summary": "Kernaspekt: Network Attached Storage (NAS) und Storage Area Network (SAN)"
    },
    {
      "id": "ubersicht",
      "title": "Übersicht",
      "summary": "Kernaspekt: Übersicht"
    },
    {
      "id": "network-attached-storage-nas",
      "title": "Network Attached Storage (NAS)",
      "summary": "Kernaspekt: Network Attached Storage (NAS)"
    },
    {
      "id": "storage-area-network-san",
      "title": "Storage Area Network (SAN)",
      "summary": "Kernaspekt: Storage Area Network (SAN)"
    },
    {
      "id": "nas-vs-san---detaillierter-vergleich",
      "title": "NAS vs. SAN - Detaillierter Vergleich",
      "summary": "Kernaspekt: NAS vs. SAN - Detaillierter Vergleich"
    },
    {
      "id": "anwendungsfalle",
      "title": "Anwendungsfälle",
      "summary": "Kernaspekt: Anwendungsfälle"
    },
    {
      "id": "hybrid-ansatze",
      "title": "Hybrid-Ansätze",
      "summary": "Kernaspekt: Hybrid-Ansätze"
    },
    {
      "id": "performance-vergleich",
      "title": "Performance-Vergleich",
      "summary": "Kernaspekt: Performance-Vergleich"
    },
    {
      "id": "konfigurationsbeispiele",
      "title": "Konfigurationsbeispiele",
      "summary": "Kernaspekt: Konfigurationsbeispiele"
    },
    {
      "id": "nfs-server-installieren",
      "title": "NFS-Server installieren",
      "summary": "Kernaspekt: NFS-Server installieren"
    },
    {
      "id": "export-verzeichnis-erstellen",
      "title": "Export-Verzeichnis erstellen",
      "summary": "Kernaspekt: Export-Verzeichnis erstellen"
    },
    {
      "id": "etcexports-konfigurieren",
      "title": "/etc/exports konfigurieren",
      "summary": "Kernaspekt: /etc/exports konfigurieren"
    },
    {
      "id": "nfs-server-neu-starten",
      "title": "NFS-Server neu starten",
      "summary": "Kernaspekt: NFS-Server neu starten"
    },
    {
      "id": "client-seitig-mounten",
      "title": "Client-seitig mounten",
      "summary": "Kernaspekt: Client-seitig mounten"
    },
    {
      "id": "iscsi-target-server-seite",
      "title": "iSCSI-Target (Server-Seite)",
      "summary": "Kernaspekt: iSCSI-Target (Server-Seite)"
    },
    {
      "id": "target-erstellen",
      "title": "Target erstellen",
      "summary": "Kernaspekt: Target erstellen"
    },
    {
      "id": "lun-hinzufugen",
      "title": "LUN hinzufügen",
      "summary": "Kernaspekt: LUN hinzufügen"
    },
    {
      "id": "zugriff-erlauben",
      "title": "Zugriff erlauben",
      "summary": "Kernaspekt: Zugriff erlauben"
    },
    {
      "id": "iscsi-initiator-client-seite",
      "title": "iSCSI-Initiator (Client-Seite)",
      "summary": "Kernaspekt: iSCSI-Initiator (Client-Seite)"
    },
    {
      "id": "target-entdecken",
      "title": "Target entdecken",
      "summary": "Kernaspekt: Target entdecken"
    },
    {
      "id": "mit-target-verbinden",
      "title": "Mit Target verbinden",
      "summary": "Kernaspekt: Mit Target verbinden"
    },
    {
      "id": "disk-ist-nun-als-devsdx-verfugbar",
      "title": "Disk ist nun als /dev/sdX verfügbar",
      "summary": "Kernaspekt: Disk ist nun als /dev/sdX verfügbar"
    },
    {
      "id": "best-practices",
      "title": "Best Practices",
      "summary": "Kernaspekt: Best Practices"
    },
    {
      "id": "zusammenfassung",
      "title": "Zusammenfassung",
      "summary": "Kernaspekt: Zusammenfassung"
    }
  ],
  "accessibilityNotes": "Klare Überschriften, kurze Sätze, keine reine Farb-Codierung.",
  "editorNote": "Automatisch ergänzt: Review erforderlich",
  "microQuizzes": [
    "bp-02-nas-san-ubersicht-micro-1",
    "bp-02-nas-san-network-attached-storage-nas-micro-1",
    "bp-02-nas-san-storage-area-network-san-micro-1",
    "bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1",
    "bp-02-nas-san-anwendungsfalle-micro-1",
    "bp-02-nas-san-hybrid-ansatze-micro-1",
    "bp-02-nas-san-performance-vergleich-micro-1",
    "bp-02-nas-san-konfigurationsbeispiele-micro-1",
    "bp-02-nas-san-best-practices-micro-1",
    "bp-02-nas-san-quiz",
    "bp-02-nas-san-zusammenfassung-micro-1"
  ]
}