{
  "id": "fue-04-security",
  "title": "FÃœ-04: Sicherstellen der Informationssicherheit",
  "description": "Technisch-Organisatorische MaÃŸnahmen (TOM), Datenschutz, Datensicherheit und Sicherheitsbedrohungen. Essentielles Wissen fÃ¼r den Schutz von Daten und Systemen.",
  "category": "FÃœ-04",
  "subcategory": "Informationssicherheit",
  "difficulty": "intermediate",
  "examRelevance": "high",
  "newIn2025": false,
  "removedIn2025": false,
  "important": true,
  "estimatedTime": 110,
  "prerequisites": ["fue-04-security-threats"],
  "tags": ["Informationssicherheit", "TOM", "Datenschutz", "DSGVO", "Datensicherheit", "IT-Sicherheit"],
  "content": "# FÃœ-04: Sicherstellen der Informationssicherheit\\n\\n## EinfÃ¼hrung\\n\\nInformationssicherheit ist ein zentrales Thema in der IT. Sie umfasst den Schutz von Daten vor unbefugtem Zugriff, Verlust und Manipulation. Dieses Modul behandelt Technisch-Organisatorische MaÃŸnahmen (TOM), Datenschutz nach DSGVO und praktische Sicherheitskonzepte.\\n\\n**Hinweis**: Dieses Modul ergÃ¤nzt das Modul \\\"Sicherheitsbedrohungen\\\" (Man-in-the-Middle, SQL-Injection, DDoS), das separat behandelt wird.\\n\\n## 1. Schutzziele der Informationssicherheit\\n\\nDie drei klassischen Schutzziele (CIA-Triade):\\n\\n### 1.1 Vertraulichkeit (Confidentiality)\\n\\n**Definition**: Nur autorisierte Personen dÃ¼rfen auf Informationen zugreifen.\\n\\n**MaÃŸnahmen:**\\n- VerschlÃ¼sselung\\n- Zugriffskontrollen\\n- Authentifizierung\\n- Autorisierung\\n\\n### 1.2 IntegritÃ¤t (Integrity)\\n\\n**Definition**: Daten dÃ¼rfen nicht unbemerkt verÃ¤ndert werden.\\n\\n**MaÃŸnahmen:**\\n- Checksummen und Hashes\\n- Digitale Signaturen\\n- Versionskontrolle\\n- Audit-Logs\\n\\n### 1.3 VerfÃ¼gbarkeit (Availability)\\n\\n**Definition**: Systeme und Daten mÃ¼ssen bei Bedarf verfÃ¼gbar sein.\\n\\n**MaÃŸnahmen:**\\n- Redundanz\\n- Backups\\n- HochverfÃ¼gbarkeits-Architekturen\\n- DDoS-Schutz\\n\\n## 2. Datenschutz und DSGVO\\n\\nDie **Datenschutz-Grundverordnung (DSGVO)** regelt den Umgang mit personenbezogenen Daten in der EU.\\n\\n**Personenbezogene Daten:** Name, Adresse, E-Mail, Geburtsdatum, IP-Adressen, Standortdaten, Gesundheitsdaten, Biometrische Daten\\n\\n### 2.1 Grundprinzipien der DSGVO\\n\\n1. **RechtmÃ¤ÃŸigkeit und Transparenz**: Datenverarbeitung muss rechtmÃ¤ÃŸig sein, Betroffene mÃ¼ssen informiert werden\\n2. **Zweckbindung**: Daten nur fÃ¼r festgelegte Zwecke erheben\\n3. **Datenminimierung**: Nur notwendige Daten erheben\\n4. **Richtigkeit**: Daten mÃ¼ssen korrekt und aktuell sein\\n5. **Speicherbegrenzung**: Daten nur so lange speichern wie nÃ¶tig\\n6. **IntegritÃ¤t und Vertraulichkeit**: Angemessene SicherheitsmaÃŸnahmen\\n7. **Rechenschaftspflicht**: Nachweis der Einhaltung\\n\\n### 2.2 Rechte der Betroffenen\\n\\n- **Auskunftsrecht (Art. 15)**: Auskunft Ã¼ber gespeicherte Daten\\n- **Recht auf Berichtigung (Art. 16)**: Korrektur falscher Daten\\n- **Recht auf LÃ¶schung (Art. 17)**: \\\"Recht auf Vergessenwerden\\\"\\n- **Recht auf DatenÃ¼bertragbarkeit (Art. 20)**: Daten in maschinenlesbarem Format\\n- **Widerspruchsrecht (Art. 21)**: Widerspruch gegen Datenverarbeitung\\n\\n## 3. Technisch-Organisatorische MaÃŸnahmen (TOM)\\n\\nTOM sind konkrete MaÃŸnahmen zum Schutz personenbezogener Daten gemÃ¤ÃŸ Art. 32 DSGVO.\\n\\n### 3.1 Zutrittskontrolle\\n**Ziel**: Unbefugten physischen Zugang verhindern\\n**MaÃŸnahmen**: Zugangskontrollen (SchlÃ¼ssel, Chipkarten), Alarmanlagen, VideoÃ¼berwachung, Besucherregistrierung\\n\\n### 3.2 Zugangskontrolle\\n**Ziel**: Unbefugte Systemnutzung verhindern\\n**MaÃŸnahmen**: Benutzer-Authentifizierung, Starke PasswÃ¶rter, Multi-Faktor-Authentifizierung (MFA), Automatische Abmeldung\\n\\n### 3.3 Zugriffskontrolle\\n**Ziel**: Nur autorisierte Zugriffe auf Daten\\n**MaÃŸnahmen**: Rollenbasierte Zugriffskontrolle (RBAC), Least-Privilege-Prinzip, Need-to-Know-Prinzip\\n\\n### 3.4 Weitergabekontrolle\\n**Ziel**: Schutz bei Ãœbertragung und Transport\\n**MaÃŸnahmen**: VerschlÃ¼sselung (TLS/SSL), VPN fÃ¼r Remote-Zugriff, Sichere DateiÃ¼bertragung (SFTP), E-Mail-VerschlÃ¼sselung\\n\\n### 3.5 Eingabekontrolle\\n**Ziel**: Nachvollziehbarkeit von DatenÃ¤nderungen\\n**MaÃŸnahmen**: Logging und Audit-Trails, Versionierung, Zeitstempel, Benutzer-Identifikation\\n\\n### 3.6 VerfÃ¼gbarkeitskontrolle\\n**Ziel**: Schutz vor Datenverlust\\n**MaÃŸnahmen**: Backup-Strategie (3-2-1-Regel), Redundante Systeme, USV, Disaster Recovery Plan\\n\\n**3-2-1-Backup-Regel:**\\n- 3 Kopien der Daten\\n- 2 verschiedene Medientypen\\n- 1 Kopie extern/offsite\\n\\n### 3.7 Trennungskontrolle\\n**Ziel**: Getrennte Verarbeitung verschiedener Zwecke\\n**MaÃŸnahmen**: MandantenfÃ¤higkeit, Separate Datenbanken, Verschiedene Umgebungen (Dev, Test, Prod)\\n\\n## 4. VerschlÃ¼sselung\\n\\n### 4.1 Symmetrische VerschlÃ¼sselung\\n**Prinzip**: Ein SchlÃ¼ssel fÃ¼r Ver- und EntschlÃ¼sselung\\n**Algorithmen**: AES, ChaCha20\\n**Vorteile**: Schnell, effizient fÃ¼r groÃŸe Datenmengen\\n**Nachteile**: SchlÃ¼sselaustausch-Problem\\n\\n### 4.2 Asymmetrische VerschlÃ¼sselung\\n**Prinzip**: SchlÃ¼sselpaar (Ã¶ffentlich/privat)\\n**Algorithmen**: RSA, ECC\\n**Vorteile**: Kein SchlÃ¼sselaustausch-Problem, Digitale Signaturen mÃ¶glich\\n**Nachteile**: Langsamer als symmetrisch\\n\\n### 4.3 Hybride VerschlÃ¼sselung\\n**Prinzip**: Kombination aus symmetrisch und asymmetrisch\\n**Beispiel**: HTTPS/TLS verwendet hybride VerschlÃ¼sselung\\n\\n### 4.4 Hashing\\n**Prinzip**: Einweg-Funktion, nicht umkehrbar\\n**Algorithmen**: SHA-256, bcrypt (fÃ¼r PasswÃ¶rter), Argon2\\n**Anwendungen**: Passwort-Speicherung, IntegritÃ¤tsprÃ¼fung, Digitale Signaturen\\n\\n## 5. Authentifizierung und Autorisierung\\n\\n### 5.1 Authentifizierungsfaktoren\\n\\n1. **Wissen** (Something you know): Passwort, PIN\\n2. **Besitz** (Something you have): Smartphone, Hardware-Token\\n3. **Biometrie** (Something you are): Fingerabdruck, Gesichtserkennung\\n\\n**Multi-Faktor-Authentifizierung (MFA)**: Kombination aus mindestens zwei verschiedenen Faktoren\\n\\n### 5.2 Autorisierung\\n\\n**Role-Based Access Control (RBAC)**: Benutzer werden Rollen zugewiesen, Rollen haben Berechtigungen\\n\\n**Attribute-Based Access Control (ABAC)**: Regeln basierend auf Attributen (Abteilung, Position, Standort)\\n\\n## 6. Backup und Disaster Recovery\\n\\n### 6.1 Backup-Strategien\\n\\n**Vollbackup**: Alle Daten werden gesichert\\n**Inkrementelles Backup**: Nur Ã„nderungen seit letztem Backup\\n**Differentielles Backup**: Ã„nderungen seit letztem Vollbackup\\n\\n### 6.2 Disaster Recovery\\n\\n**Recovery Time Objective (RTO)**: Maximale Ausfallzeit\\n**Recovery Point Objective (RPO)**: Maximaler Datenverlust\\n\\n## PrÃ¼fungsrelevante Punkte\\n\\nâœ“ CIA-Triade (Vertraulichkeit, IntegritÃ¤t, VerfÃ¼gbarkeit)\\nâœ“ DSGVO-Grundprinzipien und Betroffenenrechte\\nâœ“ Technisch-Organisatorische MaÃŸnahmen (TOM)\\nâœ“ VerschlÃ¼sselungsverfahren (symmetrisch, asymmetrisch, hybrid)\\nâœ“ Authentifizierung und Multi-Faktor-Authentifizierung\\nâœ“ Backup-Strategien und Disaster Recovery\\nâœ“ Zusammenhang mit Sicherheitsbedrohungen\\n\\n## Zusammenfassung\\n\\n**Schutzziele**: Vertraulichkeit, IntegritÃ¤t, VerfÃ¼gbarkeit (CIA)\\n\\n**DSGVO**: Regelt Umgang mit personenbezogenen Daten, Rechte der Betroffenen (Auskunft, LÃ¶schung, etc.)\\n\\n**TOM**: Technische MaÃŸnahmen (Zutritts-, Zugangs-, Zugriffskontrolle) und Organisatorische MaÃŸnahmen (Schulung, Incident Response)\\n\\n**VerschlÃ¼sselung**: Symmetrisch (schnell, ein SchlÃ¼ssel), Asymmetrisch (SchlÃ¼sselpaar), Hybrid (Best of both)\\n\\n**Backup**: 3-2-1-Regel, RTO und RPO definieren, regelmÃ¤ÃŸig testen",
  "codeExamples": [
    {
      "language": "java",
      "title": "Beispiel: Passwort-Hashing mit bcrypt",
      "code": "import org.mindrot.jbcrypt.BCrypt;\\n\\npublic class PasswordService {\\n    \\n    public String hashPassword(String plainPassword) {\\n        return BCrypt.hashpw(plainPassword, BCrypt.gensalt(12));\\n    }\\n    \\n    public boolean verifyPassword(String plainPassword, String hashedPassword) {\\n        return BCrypt.checkpw(plainPassword, hashedPassword);\\n    }\\n    \\n    public static void main(String[] args) {\\n        PasswordService service = new PasswordService();\\n        String password = \\\"Sicher123!\\\";\\n        String hash = service.hashPassword(password);\\n        System.out.println(\\\"Hash: \\\" + hash);\\n        \\n        boolean isValid = service.verifyPassword(password, hash);\\n        System.out.println(\\\"Passwort korrekt: \\\" + isValid);\\n    }\\n}",
      "explanation": "PasswÃ¶rter dÃ¼rfen niemals im Klartext gespeichert werden. bcrypt ist ein sicherer Hashing-Algorithmus mit automatischem Salt."
    },
    {
      "language": "javascript",
      "title": "Beispiel: RBAC-Implementierung",
      "code": "class AccessControl {\\n  constructor() {\\n    this.roles = {\\n      admin: ['read', 'write', 'delete', 'manage_users'],\\n      editor: ['read', 'write'],\\n      viewer: ['read']\\n    };\\n    this.userRoles = new Map();\\n  }\\n  \\n  assignRole(userId, role) {\\n    if (!this.roles[role]) {\\n      throw new Error(`Rolle ${role} existiert nicht`);\\n    }\\n    this.userRoles.set(userId, role);\\n  }\\n  \\n  hasPermission(userId, permission) {\\n    const role = this.userRoles.get(userId);\\n    if (!role) return false;\\n    return this.roles[role].includes(permission);\\n  }\\n}\\n\\nconst ac = new AccessControl();\\nac.assignRole('user123', 'editor');\\nconsole.log(ac.hasPermission('user123', 'read'));   // true\\nconsole.log(ac.hasPermission('user123', 'delete')); // false",
      "explanation": "Role-Based Access Control (RBAC) weist Benutzern Rollen zu, die bestimmte Berechtigungen haben."
    }
  ],
  "relatedQuizzes": ["fue-04-quiz"],
  "resources": [
    {
      "title": "DSGVO-Gesetzestext",
      "url": "https://dsgvo-gesetz.de",
      "type": "documentation"
    },
    {
      "title": "BSI IT-Grundschutz",
      "url": "https://www.bsi.bund.de/grundschutz",
      "type": "documentation"
    }
  ],
  "lastUpdated": "2025-01-10T00:00:00Z",
  "version": "1.0"
}
