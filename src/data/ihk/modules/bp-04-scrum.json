{
  "id": "bp-04-scrum",
  "title": "Scrum - Agiles Projektmanagement",
  "description": "Verstehe das Scrum-Framework mit seinen Rollen, Events und Artefakten fÃ¼r agile Softwareentwicklung.",
  "category": "BP-04",
  "subcategory": "Projektmanagement und Softwareentwicklungsmethoden",
  "difficulty": "intermediate",
  "examRelevance": "high",
  "newIn2025": true,
  "removedIn2025": false,
  "important": true,
  "estimatedTime": 50,
  "prerequisites": [],
  "tags": ["Scrum", "Agile", "Projektmanagement", "Sprint", "Product Owner", "Scrum Master", "Neu 2025"],
  "content": "# Scrum - Agiles Projektmanagement\n\n## Was ist Scrum?\n\nScrum ist ein **agiles Framework** fÃ¼r die Entwicklung, Lieferung und Wartung komplexer Produkte. Es basiert auf empirischer Prozesssteuerung und setzt auf Transparenz, ÃœberprÃ¼fung und Anpassung.\n\n### Scrum-Werte\n\n- **Commitment** (Selbstverpflichtung): Das Team verpflichtet sich, die Sprint-Ziele zu erreichen\n- **Focus** (Fokus): Konzentration auf die Sprint-Arbeit\n- **Openness** (Offenheit): Transparenz Ã¼ber Fortschritt und Probleme\n- **Respect** (Respekt): Gegenseitiger Respekt im Team\n- **Courage** (Mut): Mut, schwierige Probleme anzugehen\n\n## Die drei Scrum-Rollen\n\n### 1. Product Owner (PO)\n\n**Verantwortlichkeiten:**\n- Maximierung des Produktwerts\n- Verwaltung des Product Backlogs\n- Priorisierung der Anforderungen\n- Kommunikation mit Stakeholdern\n- Akzeptanz der Arbeitsergebnisse\n\n**Wichtig:** Der Product Owner ist **eine Person**, kein Komitee!\n\n### 2. Scrum Master (SM)\n\n**Verantwortlichkeiten:**\n- Sicherstellen, dass Scrum verstanden und gelebt wird\n- Beseitigung von Hindernissen (Impediments)\n- Moderation der Scrum-Events\n- Coaching des Teams und der Organisation\n- Schutz des Teams vor externen StÃ¶rungen\n\n**Wichtig:** Der Scrum Master ist **kein Projektleiter**, sondern ein Servant Leader!\n\n### 3. Development Team (Entwicklungsteam)\n\n**Eigenschaften:**\n- Selbstorganisierend und cross-funktional\n- 3-9 Mitglieder (optimal)\n- Gemeinsam verantwortlich fÃ¼r das Increment\n- Keine Sub-Teams oder Hierarchien\n- Alle FÃ¤higkeiten zur Produkterstellung vorhanden\n\n## Die fÃ¼nf Scrum-Events\n\n### 1. Sprint\n\n- **Dauer:** 1-4 Wochen (meist 2 Wochen)\n- **Ziel:** Erstellung eines nutzbaren Increments\n- **Regel:** Keine Ã„nderungen, die das Sprint-Ziel gefÃ¤hrden\n\n```\n[Sprint 1] â†’ [Sprint 2] â†’ [Sprint 3] â†’ ...\n  2 Wochen    2 Wochen    2 Wochen\n```\n\n### 2. Sprint Planning\n\n- **Dauer:** Max. 8 Stunden fÃ¼r 4-Wochen-Sprint\n- **Teilnehmer:** Gesamtes Scrum Team\n- **Ergebnis:** Sprint Goal und Sprint Backlog\n\n**Zwei Hauptfragen:**\n1. **Was** kann in diesem Sprint geliefert werden?\n2. **Wie** wird die Arbeit erledigt?\n\n### 3. Daily Scrum (Daily Standup)\n\n- **Dauer:** Max. 15 Minuten\n- **Zeitpunkt:** TÃ¤glich zur gleichen Zeit\n- **Teilnehmer:** Development Team (PO und SM optional)\n\n**Drei Fragen:**\n1. Was habe ich gestern erreicht?\n2. Was werde ich heute tun?\n3. Welche Hindernisse gibt es?\n\n### 4. Sprint Review\n\n- **Dauer:** Max. 4 Stunden fÃ¼r 4-Wochen-Sprint\n- **Teilnehmer:** Scrum Team + Stakeholder\n- **Ziel:** Increment prÃ¤sentieren und Feedback einholen\n\n**AktivitÃ¤ten:**\n- Demonstration des Increments\n- Diskussion Ã¼ber erreichte Ziele\n- Anpassung des Product Backlogs\n\n### 5. Sprint Retrospective\n\n- **Dauer:** Max. 3 Stunden fÃ¼r 4-Wochen-Sprint\n- **Teilnehmer:** Scrum Team\n- **Ziel:** Prozessverbesserung\n\n**Drei Fragen:**\n1. Was lief gut?\n2. Was kann verbessert werden?\n3. Was werden wir im nÃ¤chsten Sprint anders machen?\n\n## Die drei Scrum-Artefakte\n\n### 1. Product Backlog\n\n- **Inhalt:** Geordnete Liste aller Anforderungen\n- **Verantwortlich:** Product Owner\n- **Eigenschaften:** Dynamisch, priorisiert, verfeinert\n\n**Beispiel-EintrÃ¤ge:**\n- User Stories\n- Bugfixes\n- Technische Verbesserungen\n- Wissensaufbau\n\n### 2. Sprint Backlog\n\n- **Inhalt:** AusgewÃ¤hlte Product Backlog Items + Plan\n- **Verantwortlich:** Development Team\n- **Eigenschaften:** FÃ¼r den aktuellen Sprint, detailliert\n\n**Besteht aus:**\n- Sprint Goal\n- AusgewÃ¤hlte Product Backlog Items\n- Aufgaben zur Umsetzung\n\n### 3. Increment\n\n- **Definition:** Summe aller abgeschlossenen Product Backlog Items\n- **Zustand:** Potenziell auslieferbar\n- **QualitÃ¤t:** ErfÃ¼llt die Definition of Done\n\n## Definition of Done (DoD)\n\n Die **Definition of Done** ist eine gemeinsame Vereinbarung darÃ¼ber, wann ein Product Backlog Item als \"fertig\" gilt.\n\n**Beispiel DoD:**\n- âœ… Code geschrieben und reviewed\n- âœ… Unit Tests geschrieben und bestanden\n- âœ… Integration Tests erfolgreich\n- âœ… Dokumentation aktualisiert\n- âœ… Code in Main-Branch gemerged\n- âœ… Von Product Owner akzeptiert\n\n## User Stories\n\nUser Stories sind eine gÃ¤ngige Form, Anforderungen im Product Backlog zu beschreiben.\n\n**Format:**\n```\nAls [Rolle]\nmÃ¶chte ich [FunktionalitÃ¤t]\ndamit [Nutzen]\n```\n\n**Beispiel:**\n```\nAls Kunde\nmÃ¶chte ich meine Bestellhistorie einsehen\ndamit ich frÃ¼here KÃ¤ufe nachvollziehen kann\n```\n\n**Akzeptanzkriterien:**\n- Liste der Bedingungen, die erfÃ¼llt sein mÃ¼ssen\n- Testbar und messbar\n- Vom Product Owner definiert\n\n## Story Points\n\nStory Points sind eine relative SchÃ¤tzeinheit fÃ¼r den Aufwand von User Stories.\n\n**Fibonacci-Skala:** 1, 2, 3, 5, 8, 13, 21, ...\n\n- **1-2 Punkte:** Sehr kleine Aufgabe\n- **3-5 Punkte:** Kleine bis mittlere Aufgabe\n- **8-13 Punkte:** GroÃŸe Aufgabe\n- **21+ Punkte:** Zu groÃŸ, sollte aufgeteilt werden\n\n## Scrum-Ablauf Visualisierung\n\n```\nProduct Backlog\n     â†“\n[Sprint Planning] â†’ Sprint Goal + Sprint Backlog\n     â†“\n[Sprint (2 Wochen)]\n  â”œâ”€ Daily Scrum (tÃ¤glich 15 min)\n  â”œâ”€ Entwicklung\n  â””â”€ Testing\n     â†“\n[Sprint Review] â†’ Increment prÃ¤sentieren\n     â†“\n[Sprint Retrospective] â†’ Prozess verbessern\n     â†“\n[NÃ¤chster Sprint]\n```\n\n## Praktische Szenarien\n\n### Szenario 1: Impediment im Sprint\n\n**Situation:** Das Development Team kann nicht weiterarbeiten, weil der Zugang zur Testumgebung fehlt.\n\n**LÃ¶sung:**\n- Team meldet Impediment im Daily Scrum\n- Scrum Master Ã¼bernimmt die Beseitigung\n- Scrum Master koordiniert mit IT-Abteilung\n- Team arbeitet an anderen Sprint Backlog Items\n\n### Szenario 2: Neue dringende Anforderung\n\n**Situation:** Ein wichtiger Kunde fordert ein neues Feature wÃ¤hrend des Sprints.\n\n**LÃ¶sung:**\n- Product Owner nimmt Anforderung auf\n- Priorisierung im Product Backlog\n- **Nicht** in den laufenden Sprint aufnehmen\n- Im nÃ¤chsten Sprint Planning berÃ¼cksichtigen\n- Bei echter Notwendigkeit: Sprint abbrechen (selten!)\n\n### Szenario 3: Team erreicht Sprint Goal nicht\n\n**Situation:** Am Ende des Sprints sind nicht alle Sprint Backlog Items fertig.\n\n**LÃ¶sung:**\n- Fertige Items werden im Sprint Review prÃ¤sentiert\n- Unfertige Items gehen zurÃ¼ck ins Product Backlog\n- In der Retrospective analysieren: Warum?\n- VerbesserungsmaÃŸnahmen definieren\n- Velocity fÃ¼r nÃ¤chste Planung anpassen\n\n## Vorteile von Scrum\n\nâœ… **FlexibilitÃ¤t:** Schnelle Anpassung an Ã„nderungen\n\nâœ… **Transparenz:** Alle wissen, woran gearbeitet wird\n\nâœ… **FrÃ¼he Lieferung:** RegelmÃ¤ÃŸige Increments\n\nâœ… **Risikominimierung:** FrÃ¼he Problemerkennung\n\nâœ… **Kundenzufriedenheit:** Kontinuierliches Feedback\n\n## HÃ¤ufige Fehler (Anti-Patterns)\n\nâŒ **Scrum-But:** \"Wir machen Scrum, aber...\"\n\nâŒ **Scrum Master als Projektleiter:** Falsche Rolleninterpretation\n\nâŒ **Kein echtes Increment:** Nichts ist wirklich fertig\n\nâŒ **Sprint Planning ohne Vorbereitung:** Product Backlog nicht refined\n\nâŒ **Daily Scrum als Status-Meeting:** Berichtet an Scrum Master statt Team-Synchronisation\n\n## Ãœbungsaufgaben\n\n### Aufgabe 1: Rollen zuordnen\n\nOrdne die folgenden Aufgaben der richtigen Rolle zu:\n- Product Backlog priorisieren\n- Impediments beseitigen\n- Code schreiben und testen\n- Sprint Review moderieren\n- Definition of Done erstellen\n\n### Aufgabe 2: Event-Reihenfolge\n\nBringe die Scrum-Events in die richtige Reihenfolge fÃ¼r einen Sprint.\n\n### Aufgabe 3: Szenario-Analyse\n\nEin Stakeholder mÃ¶chte im Daily Scrum teilnehmen und dem Team Aufgaben zuweisen. Was ist falsch daran und wie sollte es richtig sein?\n\n### Aufgabe 4: User Story schreiben\n\nSchreibe eine User Story fÃ¼r ein Login-Feature mit mindestens 3 Akzeptanzkriterien.\n\n## Zusammenfassung\n\nScrum ist ein leichtgewichtiges Framework fÃ¼r agile Produktentwicklung. Mit seinen klar definierten Rollen (Product Owner, Scrum Master, Development Team), Events (Sprint, Sprint Planning, Daily Scrum, Sprint Review, Sprint Retrospective) und Artefakten (Product Backlog, Sprint Backlog, Increment) ermÃ¶glicht es Teams, komplexe Produkte iterativ und inkrementell zu entwickeln.",
  "codeExamples": [
    {
      "language": "markdown",
      "title": "Beispiel: User Story mit Akzeptanzkriterien",
      "code": "# User Story: Benutzer-Login\n\n## Story\nAls registrierter Benutzer\nmÃ¶chte ich mich mit E-Mail und Passwort anmelden\ndamit ich auf mein persÃ¶nliches Dashboard zugreifen kann\n\n## Akzeptanzkriterien\n\n1. GIVEN ich bin auf der Login-Seite\n   WHEN ich gÃ¼ltige Anmeldedaten eingebe\n   THEN werde ich zum Dashboard weitergeleitet\n\n2. GIVEN ich bin auf der Login-Seite\n   WHEN ich ungÃ¼ltige Anmeldedaten eingebe\n   THEN sehe ich eine Fehlermeldung \"E-Mail oder Passwort falsch\"\n\n3. GIVEN ich habe 3x falsche Anmeldedaten eingegeben\n   WHEN ich einen 4. Versuch starte\n   THEN wird mein Account fÃ¼r 15 Minuten gesperrt\n\n4. GIVEN ich bin angemeldet\n   WHEN ich 30 Minuten inaktiv bin\n   THEN werde ich automatisch abgemeldet\n\n## Story Points: 5\n\n## Definition of Done\n- [ ] Code implementiert\n- [ ] Unit Tests geschrieben (Coverage > 80%)\n- [ ] Integration Tests erfolgreich\n- [ ] Security Review durchgefÃ¼hrt\n- [ ] Dokumentation aktualisiert\n- [ ] Von Product Owner akzeptiert",
      "explanation": "Eine vollstÃ¤ndige User Story mit dem Standard-Format, testbaren Akzeptanzkriterien im Given-When-Then Format und einer Definition of Done."
    },
    {
      "language": "markdown",
      "title": "Beispiel: Sprint Backlog",
      "code": "# Sprint Backlog - Sprint 15 (01.02. - 14.02.2025)\n\n## Sprint Goal\n\"Benutzer kÃ¶nnen sich registrieren, anmelden und ihr Profil verwalten\"\n\n## Selected Product Backlog Items\n\n### 1. User Story: Benutzer-Registrierung (8 SP)\n**Status:** In Progress\n**Verantwortlich:** Team\n\n**Tasks:**\n- [x] Datenbank-Schema fÃ¼r User-Tabelle erstellen (Anna)\n- [x] Backend API fÃ¼r Registrierung implementieren (Tom)\n- [ ] Frontend Registrierungsformular erstellen (Lisa)\n- [ ] E-Mail-Verifizierung implementieren (Tom)\n- [ ] Unit Tests schreiben (Anna)\n- [ ] Integration Tests (Lisa)\n\n### 2. User Story: Benutzer-Login (5 SP)\n**Status:** To Do\n**Verantwortlich:** Team\n\n**Tasks:**\n- [ ] JWT-Token-Generierung implementieren (Tom)\n- [ ] Login-Endpoint erstellen (Tom)\n- [ ] Frontend Login-Formular (Lisa)\n- [ ] Session-Management (Anna)\n- [ ] Tests schreiben (Team)\n\n### 3. User Story: Profil anzeigen (3 SP)\n**Status:** To Do\n**Verantwortlich:** Team\n\n**Tasks:**\n- [ ] Profil-Endpoint erstellen (Tom)\n- [ ] Profil-Seite im Frontend (Lisa)\n- [ ] Avatar-Upload (Anna)\n- [ ] Tests (Team)\n\n## Impediments\n- âš ï¸ Zugang zur Test-Datenbank fehlt (Scrum Master kÃ¼mmert sich)\n\n## Burndown\nTag 1: 16 SP verbleibend\nTag 2: 14 SP verbleibend\nTag 3: 14 SP verbleibend (Impediment)\n...",
      "explanation": "Ein Sprint Backlog zeigt das Sprint Goal, die ausgewÃ¤hlten User Stories mit Story Points und die detaillierten Tasks mit Verantwortlichkeiten und Status."
    },
    {
      "language": "markdown",
      "title": "Beispiel: Sprint Retrospective - Ergebnisse",
      "code": "# Sprint Retrospective - Sprint 14\n\n**Datum:** 31.01.2025\n**Teilnehmer:** Gesamtes Scrum Team\n**Moderator:** Scrum Master (Sarah)\n\n## ðŸ˜Š Was lief gut?\n\n1. **Pair Programming bei komplexen Features**\n   - Weniger Bugs\n   - Besserer Wissenstransfer\n   - â†’ Weiter so!\n\n2. **Verbesserte Definition of Done**\n   - Klarere Erwartungen\n   - Weniger Diskussionen im Review\n   - â†’ Beibehalten\n\n3. **Daily Scrum pÃ¼nktlich und fokussiert**\n   - Alle waren vorbereitet\n   - Nur 12 Minuten statt 15\n   - â†’ Weiter so!\n\n## ðŸ˜• Was kann verbessert werden?\n\n1. **Code Reviews dauern zu lange**\n   - Teilweise 2 Tage bis zum Merge\n   - Blockiert andere Entwickler\n   - â†’ Action Item definiert\n\n2. **Unklare Akzeptanzkriterien**\n   - Mehrfache RÃ¼ckfragen an PO\n   - VerzÃ¶gerungen\n   - â†’ Action Item definiert\n\n3. **Testumgebung instabil**\n   - 3x ausgefallen wÃ¤hrend Sprint\n   - Tests konnten nicht durchgefÃ¼hrt werden\n   - â†’ Action Item definiert\n\n## ðŸŽ¯ Action Items fÃ¼r nÃ¤chsten Sprint\n\n1. **Code Review SLA einfÃ¼hren**\n   - Verantwortlich: Tom\n   - Ziel: Reviews innerhalb 4 Stunden\n   - MaÃŸnahme: Rotation-System einfÃ¼hren\n\n2. **Backlog Refinement verbessern**\n   - Verantwortlich: Product Owner (Michael)\n   - Ziel: Alle Stories haben klare Akzeptanzkriterien\n   - MaÃŸnahme: Refinement-Session 2 Tage vor Planning\n\n3. **Testumgebung stabilisieren**\n   - Verantwortlich: Scrum Master (Sarah)\n   - Ziel: 99% VerfÃ¼gbarkeit\n   - MaÃŸnahme: Mit DevOps-Team Monitoring einrichten\n\n## ðŸ“Š Metriken\n\n- **Velocity:** 18 SP (Ziel: 20 SP)\n- **Sprint Goal erreicht:** Ja (80% der Stories Done)\n- **Team-Zufriedenheit:** 8/10\n\n## NÃ¤chste Retrospective\n14.02.2025 - ÃœberprÃ¼fung der Action Items",
      "explanation": "Eine Sprint Retrospective dokumentiert, was gut lief, was verbessert werden kann und definiert konkrete Action Items mit Verantwortlichkeiten fÃ¼r den nÃ¤chsten Sprint."
    }
  ],
  "relatedQuizzes": ["scrum-quiz"],
  "resources": [
    {
      "title": "Scrum Guide (offiziell)",
      "url": "https://scrumguides.org/",
      "type": "documentation"
    },
    {
      "title": "Scrum.org - Learning Path",
      "url": "https://www.scrum.org/",
      "type": "article"
    }
  ],
  "lastUpdated": "2025-01-10T00:00:00Z",
  "version": "1.0"
}
