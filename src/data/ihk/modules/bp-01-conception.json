{
  "modules": [
    {
      "id": "bp-01-networks-basics",
      "title": "Netzwerktopologien und Grundlagen",
      "description": "Grundlegende Netzwerkkonzepte, Topologien und deren Anwendungsfälle",
      "category": "BP-01",
      "subcategory": "Netzwerke und Protokolle",
      "difficulty": "beginner",
      "examRelevance": "high",
      "newIn2025": false,
      "removedIn2025": false,
      "important": true,
      "estimatedTime": 45,
      "prerequisites": [],
      "tags": ["Netzwerk", "Topologie", "LAN", "WAN", "Grundlagen"],
      "content": "# Netzwerktopologien und Grundlagen\n\n## Einführung\n\nNetzwerktopologien beschreiben die physische oder logische Anordnung von Netzwerkkomponenten. Die Wahl der richtigen Topologie beeinflusst Leistung, Skalierbarkeit und Ausfallsicherheit eines Netzwerks.\n\n## Wichtige Netzwerktopologien\n\n### 1. Stern-Topologie (Star)\n\n**Merkmale:**\n- Alle Geräte sind mit einem zentralen Knotenpunkt (Switch/Hub) verbunden\n- Häufigste Topologie in modernen LANs\n- Einfache Fehlersuche\n\n**Vorteile:**\n- Ausfall eines Endgeräts betrifft nicht das gesamte Netzwerk\n- Einfache Erweiterung\n- Zentrale Verwaltung\n\n**Nachteile:**\n- Single Point of Failure (zentraler Switch)\n- Höherer Kabelaufwand\n\n### 2. Bus-Topologie\n\n**Merkmale:**\n- Alle Geräte sind an ein gemeinsames Übertragungsmedium angeschlossen\n- Früher bei Ethernet (10Base2, 10Base5) verwendet\n\n**Vorteile:**\n- Geringer Kabelaufwand\n- Einfache Installation\n\n**Nachteile:**\n- Kabelbruch betrifft gesamtes Netzwerk\n- Schwierige Fehlersuche\n- Begrenzte Skalierbarkeit\n\n### 3. Ring-Topologie\n\n**Merkmale:**\n- Geräte sind in einem geschlossenen Ring verbunden\n- Daten fließen in eine Richtung (oder bidirektional)\n- Verwendet bei Token Ring, FDDI\n\n**Vorteile:**\n- Gleichmäßige Datenübertragung\n- Keine Kollisionen\n\n**Nachteile:**\n- Ausfall eines Geräts kann Netzwerk unterbrechen\n- Komplexe Fehlersuche\n\n### 4. Vermaschte Topologie (Mesh)\n\n**Merkmale:**\n- Jedes Gerät ist mit mehreren anderen verbunden\n- Vollvermascht: Jedes Gerät mit jedem verbunden\n- Teilvermascht: Nur kritische Verbindungen redundant\n\n**Vorteile:**\n- Hohe Ausfallsicherheit\n- Mehrere Übertragungswege\n- Lastverteilung möglich\n\n**Nachteile:**\n- Hoher Kabel- und Konfigurationsaufwand\n- Teuer\n\n## Netzwerktypen\n\n### LAN (Local Area Network)\n- Lokales Netzwerk (Gebäude, Campus)\n- Hohe Übertragungsraten (1-100 Gbps)\n- Geringe Latenz\n\n### WAN (Wide Area Network)\n- Weitverkehrsnetz (Städte, Länder)\n- Niedrigere Übertragungsraten\n- Höhere Latenz\n\n### MAN (Metropolitan Area Network)\n- Städtisches Netzwerk\n- Zwischen LAN und WAN\n\n### WLAN (Wireless LAN)\n- Drahtloses lokales Netzwerk\n- IEEE 802.11 Standards (WiFi)\n\n## Prüfungsrelevante Aspekte\n\n- Topologien erkennen und zuordnen können\n- Vor- und Nachteile benennen\n- Anwendungsfälle identifizieren\n- Netzwerktypen unterscheiden",
      "codeExamples": [],
      "relatedQuizzes": [],
      "resources": [
        {
          "title": "IEEE 802 Standards",
          "url": "https://www.ieee802.org/",
          "type": "documentation"
        }
      ],
      "lastUpdated": "2025-01-10T00:00:00Z",
      "version": "1.0"
    },
    {
      "id": "bp-01-network-protocols",
      "title": "Netzwerkprotokolle (TCP/IP, HTTP, DNS)",
      "description": "Wichtige Netzwerkprotokolle und ihre Funktionsweise im OSI-Modell",
      "category": "BP-01",
      "subcategory": "Netzwerke und Protokolle",
      "difficulty": "intermediate",
      "examRelevance": "high",
      "newIn2025": false,
      "removedIn2025": false,
      "important": true,
      "estimatedTime": 60,
      "prerequisites": ["bp-01-networks-basics"],
      "tags": ["Protokolle", "TCP/IP", "HTTP", "DNS", "OSI-Modell"],
      "content": "# Netzwerkprotokolle\n\n## OSI-Modell und TCP/IP-Modell\n\n### OSI-Modell (7 Schichten)\n\n1. **Anwendungsschicht (Application Layer)**: HTTP, FTP, SMTP, DNS\n2. **Darstellungsschicht (Presentation Layer)**: Datenkodierung, Verschlüsselung\n3. **Sitzungsschicht (Session Layer)**: Sitzungsverwaltung\n4. **Transportschicht (Transport Layer)**: TCP, UDP\n5. **Vermittlungsschicht (Network Layer)**: IP, ICMP, Routing\n6. **Sicherungsschicht (Data Link Layer)**: Ethernet, MAC-Adressen\n7. **Bitübertragungsschicht (Physical Layer)**: Kabel, Signale\n\n### TCP/IP-Modell (4 Schichten)\n\n1. **Anwendungsschicht**: HTTP, FTP, SMTP, DNS\n2. **Transportschicht**: TCP, UDP\n3. **Internetschicht**: IP, ICMP\n4. **Netzzugangsschicht**: Ethernet, WiFi\n\n## Wichtige Protokolle\n\n### TCP (Transmission Control Protocol)\n\n**Eigenschaften:**\n- Verbindungsorientiert\n- Zuverlässig (Bestätigung, Neuübertragung)\n- Reihenfolge garantiert\n- Flusskontrolle\n\n**Verwendung:**\n- HTTP/HTTPS\n- FTP\n- SMTP\n- SSH\n\n**Three-Way-Handshake:**\n```\nClient -> Server: SYN\nServer -> Client: SYN-ACK\nClient -> Server: ACK\n```\n\n### UDP (User Datagram Protocol)\n\n**Eigenschaften:**\n- Verbindungslos\n- Unzuverlässig (keine Bestätigung)\n- Keine Reihenfolgegarantie\n- Geringer Overhead\n\n**Verwendung:**\n- DNS\n- DHCP\n- Streaming (Video, Audio)\n- Online-Gaming\n\n### IP (Internet Protocol)\n\n**IPv4:**\n- 32-Bit-Adressen (z.B. 192.168.1.1)\n- Adressknappheit\n- NAT zur Adresserweiterung\n\n**IPv6:**\n- 128-Bit-Adressen (z.B. 2001:0db8:85a3::8a2e:0370:7334)\n- Praktisch unbegrenzte Adressen\n- Vereinfachter Header\n\n### HTTP/HTTPS (Hypertext Transfer Protocol)\n\n**HTTP-Methoden:**\n- GET: Daten abrufen\n- POST: Daten senden\n- PUT: Daten aktualisieren\n- DELETE: Daten löschen\n- PATCH: Teilweise aktualisieren\n\n**Status-Codes:**\n- 2xx: Erfolg (200 OK, 201 Created)\n- 3xx: Umleitung (301 Moved Permanently, 302 Found)\n- 4xx: Client-Fehler (400 Bad Request, 404 Not Found)\n- 5xx: Server-Fehler (500 Internal Server Error)\n\n**HTTPS:**\n- HTTP über TLS/SSL\n- Verschlüsselte Übertragung\n- Authentifizierung\n\n### DNS (Domain Name System)\n\n**Funktion:**\n- Auflösung von Domainnamen zu IP-Adressen\n- Hierarchisches System\n\n**DNS-Record-Typen:**\n- A: IPv4-Adresse\n- AAAA: IPv6-Adresse\n- CNAME: Alias\n- MX: Mail-Server\n- TXT: Textinformationen\n\n**DNS-Abfrage:**\n```\n1. Client fragt lokalen DNS-Server\n2. Rekursive Abfrage durch DNS-Hierarchie\n3. Root-Server -> TLD-Server -> Autoritativer Server\n4. Antwort wird gecacht\n```\n\n### DHCP (Dynamic Host Configuration Protocol)\n\n**Funktion:**\n- Automatische IP-Adressvergabe\n- Konfiguration von Netzwerkparametern\n\n**DHCP-Prozess:**\n```\n1. DHCP Discover (Client sucht Server)\n2. DHCP Offer (Server bietet Konfiguration)\n3. DHCP Request (Client akzeptiert)\n4. DHCP Acknowledge (Server bestätigt)\n```\n\n## Ports\n\n**Well-Known Ports (0-1023):**\n- 20/21: FTP\n- 22: SSH\n- 23: Telnet\n- 25: SMTP\n- 53: DNS\n- 80: HTTP\n- 443: HTTPS\n- 3306: MySQL\n- 5432: PostgreSQL\n\n## Prüfungsrelevante Aspekte\n\n- OSI-Modell und TCP/IP-Modell kennen\n- Protokolle den Schichten zuordnen\n- TCP vs. UDP unterscheiden\n- HTTP-Methoden und Status-Codes kennen\n- DNS-Funktionsweise verstehen\n- Standard-Ports kennen",
      "codeExamples": [],
      "relatedQuizzes": [],
      "resources": [
        {
          "title": "RFC 791 - Internet Protocol",
          "url": "https://tools.ietf.org/html/rfc791",
          "type": "documentation"
        },
        {
          "title": "RFC 793 - TCP",
          "url": "https://tools.ietf.org/html/rfc793",
          "type": "documentation"
        }
      ],
      "lastUpdated": "2025-01-10T00:00:00Z",
      "version": "1.0"
    },
    {
      "id": "bp-01-kerberos",
      "title": "Kerberos - Authentifizierung und Zugriffskontrolle",
      "description": "Kerberos-Protokoll für sichere Authentifizierung in Netzwerken (Neu ab 2025)",
      "category": "BP-01",
      "subcategory": "Zugriffskontrolle",
      "difficulty": "advanced",
      "examRelevance": "high",
      "newIn2025": true,
      "removedIn2025": false,
      "important": true,
      "estimatedTime": 50,
      "prerequisites": ["bp-01-network-protocols"],
      "tags": ["Kerberos", "Authentifizierung", "Sicherheit", "Active Directory", "Neu 2025"],
      "content": "# Kerberos - Authentifizierung und Zugriffskontrolle\n\n## Einführung\n\nKerberos ist ein Netzwerk-Authentifizierungsprotokoll, das entwickelt wurde, um sichere Authentifizierung über unsichere Netzwerke zu ermöglichen. Es wird häufig in Windows Active Directory und Unix/Linux-Umgebungen eingesetzt.\n\n**Neu ab 2025**: Kerberos ist explizit im neuen Prüfungskatalog aufgeführt.\n\n## Grundkonzepte\n\n### Komponenten\n\n1. **Client**: Benutzer oder Dienst, der Zugriff benötigt\n2. **Server**: Ressource, auf die zugegriffen werden soll\n3. **KDC (Key Distribution Center)**:\n   - **AS (Authentication Server)**: Authentifiziert Clients\n   - **TGS (Ticket Granting Server)**: Stellt Service-Tickets aus\n\n### Tickets\n\n- **TGT (Ticket Granting Ticket)**: Berechtigung zum Anfordern von Service-Tickets\n- **Service Ticket**: Berechtigung zum Zugriff auf einen bestimmten Dienst\n\n## Kerberos-Authentifizierungsprozess\n\n### Schritt 1: Initiale Authentifizierung (AS-REQ/AS-REP)\n\n```\n1. Client -> AS: Authentifizierungsanfrage\n   - Benutzername\n   - Zeitstempel (verschlüsselt mit Benutzerpasswort)\n\n2. AS -> Client: TGT + Session Key\n   - TGT (verschlüsselt mit TGS-Schlüssel)\n   - Session Key (verschlüsselt mit Benutzerpasswort)\n```\n\n### Schritt 2: Service-Ticket-Anfrage (TGS-REQ/TGS-REP)\n\n```\n3. Client -> TGS: Service-Ticket-Anfrage\n   - TGT\n   - Service-Name\n   - Authenticator (verschlüsselt mit Session Key)\n\n4. TGS -> Client: Service Ticket\n   - Service Ticket (verschlüsselt mit Service-Schlüssel)\n   - Service Session Key (verschlüsselt mit Client Session Key)\n```\n\n### Schritt 3: Service-Zugriff (AP-REQ/AP-REP)\n\n```\n5. Client -> Server: Service-Anfrage\n   - Service Ticket\n   - Authenticator (verschlüsselt mit Service Session Key)\n\n6. Server -> Client: Bestätigung (optional)\n   - Zeitstempel (verschlüsselt mit Service Session Key)\n```\n\n## Sicherheitsmerkmale\n\n### 1. Gegenseitige Authentifizierung\n- Sowohl Client als auch Server authentifizieren sich\n- Schutz vor Man-in-the-Middle-Angriffen\n\n### 2. Single Sign-On (SSO)\n- Einmalige Anmeldung für Zugriff auf mehrere Dienste\n- TGT wird für mehrere Service-Tickets verwendet\n\n### 3. Zeitbasierte Sicherheit\n- Tickets haben begrenzte Gültigkeit (typisch 8-10 Stunden)\n- Zeitstempel verhindern Replay-Angriffe\n- Uhren müssen synchronisiert sein (max. 5 Min. Abweichung)\n\n### 4. Keine Passwortübertragung\n- Passwörter werden nie über das Netzwerk gesendet\n- Nur verschlüsselte Tickets und Authenticators\n\n## Kerberos in der Praxis\n\n### Windows Active Directory\n\n```\n- Domain Controller = KDC\n- Benutzer authentifiziert sich beim Anmelden\n- TGT wird für Zugriff auf Dateiserver, Drucker, etc. verwendet\n- Kerberos-Realm = Active Directory Domain\n```\n\n### Linux/Unix\n\n```bash\n# Kerberos-Ticket anfordern\nkinit username@REALM\n\n# Tickets anzeigen\nklist\n\n# Ticket löschen\nkdestroy\n```\n\n## Vorteile\n\n- **Sicherheit**: Starke Verschlüsselung, keine Passwortübertragung\n- **Skalierbarkeit**: Zentrale Authentifizierung für viele Dienste\n- **Single Sign-On**: Benutzerfreundlichkeit\n- **Gegenseitige Authentifizierung**: Schutz vor Spoofing\n\n## Nachteile\n\n- **Zeitsynchronisation erforderlich**: Uhren müssen synchron sein\n- **Single Point of Failure**: KDC muss verfügbar sein\n- **Komplexität**: Konfiguration und Verwaltung aufwendig\n- **Keine Passwortänderung**: Passwortänderung erfordert neue Tickets\n\n## Angriffsvektoren und Schutzmaßnahmen\n\n### Pass-the-Ticket-Angriff\n- Angreifer stiehlt TGT oder Service Ticket\n- **Schutz**: Ticket-Verschlüsselung, kurze Gültigkeitsdauer\n\n### Kerberoasting\n- Angreifer fordert Service-Tickets an und versucht Offline-Brute-Force\n- **Schutz**: Starke Service-Account-Passwörter, Monitoring\n\n### Golden Ticket\n- Angreifer erstellt gefälschtes TGT mit gestohlenem KRBTGT-Hash\n- **Schutz**: KRBTGT-Passwort regelmäßig ändern, Monitoring\n\n## Prüfungsrelevante Aspekte\n\n- Kerberos-Komponenten (KDC, AS, TGS) kennen\n- Authentifizierungsprozess verstehen\n- Tickets (TGT, Service Ticket) unterscheiden\n- Sicherheitsmerkmale benennen\n- Anwendungsfälle (Active Directory) kennen\n- Vorteile und Nachteile nennen",
      "codeExamples": [
        {
          "language": "bash",
          "code": "# Kerberos-Ticket anfordern\nkinit user@EXAMPLE.COM\n\n# Tickets anzeigen\nklist\n# Output:\n# Ticket cache: FILE:/tmp/krb5cc_1000\n# Default principal: user@EXAMPLE.COM\n#\n# Valid starting     Expires            Service principal\n# 01/10/25 10:00:00  01/10/25 20:00:00  krbtgt/EXAMPLE.COM@EXAMPLE.COM\n\n# Service-Ticket für SSH anfordern\nkvno host/server.example.com\n\n# Alle Tickets löschen\nkdestroy",
          "explanation": "Grundlegende Kerberos-Befehle unter Linux/Unix",
          "title": "Kerberos CLI-Befehle"
        }
      ],
      "relatedQuizzes": [],
      "resources": [
        {
          "title": "RFC 4120 - Kerberos V5",
          "url": "https://tools.ietf.org/html/rfc4120",
          "type": "documentation"
        },
        {
          "title": "MIT Kerberos Documentation",
          "url": "https://web.mit.edu/kerberos/",
          "type": "documentation"
        }
      ],
      "lastUpdated": "2025-01-10T00:00:00Z",
      "version": "1.0"
    }
  ]
}
