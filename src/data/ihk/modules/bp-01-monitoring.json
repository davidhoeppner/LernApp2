{
  "id": "bp-01-monitoring",
  "title": "System-Monitoring und Überwachung",
  "description": "Monitoring von Systemen, Anwendungen und Infrastruktur (Neu ab 2025)",
  "category": "BP-01",
  "subcategory": "Monitoring",
  "difficulty": "intermediate",
  "examRelevance": "high",
  "newIn2025": true,
  "removedIn2025": false,
  "important": true,
  "estimatedTime": 50,
  "prerequisites": [],
  "tags": [
    "Monitoring",
    "Logging",
    "Metriken",
    "Alerting",
    "Neu 2025"
  ],
  "content": "# System-Monitoring und Überwachung\n\n## Einführung\n\nMonitoring ist die kontinuierliche Überwachung von IT-Systemen, Anwendungen und Infrastruktur, um Verfügbarkeit, Performance und Sicherheit sicherzustellen.\n\n**Neu ab 2025**: Monitoring ist explizit im neuen Prüfungskatalog aufgeführt.\n\n<!-- micro-quiz:bp-01-monitoring-einfuhrung-micro-1 -->\n## Monitoring-Bereiche\n\n### 1. Infrastruktur-Monitoring\n\n**Hardware:**\n- CPU-Auslastung\n- RAM-Nutzung\n- Festplattenspeicher\n- Netzwerkbandbreite\n- Temperatur\n\n**Netzwerk:**\n- Latenz\n- Paketverlust\n- Bandbreitennutzung\n- Verbindungsstatus\n\n### 2. Anwendungs-Monitoring\n\n**Performance:**\n- Response Time\n- Throughput (Anfragen/Sekunde)\n- Error Rate\n- Verfügbarkeit (Uptime)\n\n**Ressourcen:**\n- Speichernutzung\n- Datenbankverbindungen\n- Thread-Pools\n- Cache-Hit-Rate\n\n### 3. Log-Monitoring\n\n**Log-Typen:**\n- Application Logs\n- System Logs\n- Security Logs\n- Access Logs\n\n**Log-Levels:**\n- ERROR: Fehler\n- WARN: Warnungen\n- INFO: Informationen\n- DEBUG: Debug-Informationen\n\n## Monitoring-Metriken\n<!-- micro-quiz:bp-01-monitoring-monitoring-bereiche-micro-1 -->\n\n\n### Golden Signals (Google SRE)\n\n1. **Latency**: Wie lange dauern Anfragen?\n2. **Traffic**: Wie viele Anfragen gibt es?\n3. **Errors**: Wie viele Anfragen schlagen fehl?\n4. **Saturation**: Wie ausgelastet sind Ressourcen?\n\n### RED-Methode (für Services)\n\n1. **Rate**: Anfragen pro Sekunde\n2. **Errors**: Fehlerrate\n3. **Duration**: Antwortzeit\n\n### USE-Methode (für Ressourcen)\n\n1. **Utilization**: Auslastung\n2. **Saturation**: Warteschlangenlänge\n3. **Errors**: Fehleranzahl\n\n<!-- micro-quiz:bp-01-monitoring-monitoring-metriken-micro-1 -->\n## Monitoring-Tools\n\n### Prometheus\n\n**Eigenschaften:**\n- Open Source\n- Time-Series-Datenbank\n- Pull-basiert\n- PromQL Query Language\n\n**Beispiel-Metrik:**\n```prometheus\n# CPU-Auslastung\nnode_cpu_seconds_total{mode=\"idle\"}\n\n# HTTP-Requests\nhttp_requests_total{method=\"GET\", status=\"200\"}\n\n# Query: Requests pro Sekunde\nrate(http_requests_total[5m])\n```\n\n### Grafana\n\n**Eigenschaften:**\n- Visualisierung\n- Dashboards\n- Alerting\n- Unterstützt viele Datenquellen\n\n### ELK-Stack (Elasticsearch, Logstash, Kibana)\n\n**Komponenten:**\n- **Elasticsearch**: Speicherung und Suche\n- **Logstash**: Log-Verarbeitung\n- **Kibana**: Visualisierung\n\n**Log-Pipeline:**\n```\nAnwendung -> Logstash -> Elasticsearch -> Kibana\n```\n\n### Nagios\n\n**Eigenschaften:**\n- Klassisches Monitoring-Tool\n- Plugin-basiert\n- Host- und Service-Checks\n\n### Zabbix\n\n**Eigenschaften:**\n- Enterprise-Monitoring\n- Agent-basiert\n- Auto-Discovery\n- Trigger und Actions\n\n## Alerting\n<!-- micro-quiz:bp-01-monitoring-monitoring-tools-micro-1 -->\n\n\n### Alert-Regeln\n\n```yaml\n# Prometheus Alert\nalert: HighCPUUsage\nexpr: node_cpu_usage > 80\nfor: 5m\nlabels:\n  severity: warning\nannotations:\n  summary: \"CPU-Auslastung über 80%\"\n  description: \"Server {{ $labels.instance }} hat {{ $value }}% CPU-Auslastung\"\n```\n\n### Alert-Kanäle\n\n- **E-Mail**: Benachrichtigung per Mail\n- **SMS**: Kritische Alerts\n- **Slack/Teams**: Team-Benachrichtigungen\n- **PagerDuty**: On-Call-Management\n- **Webhook**: Integration mit anderen Systemen\n\n### Alert-Severity\n\n1. **Critical**: Sofortige Aktion erforderlich\n2. **Warning**: Beobachtung erforderlich\n3. **Info**: Informativ\n\n<!-- micro-quiz:bp-01-monitoring-alerting-micro-1 -->\n## Health Checks\n\n### Liveness Probe\n\n```python\n# Flask Beispiel\n@app.route('/health/live')\ndef liveness():\n    return {'status': 'alive'}, 200\n```\n\n**Zweck**: Ist die Anwendung am Leben?\n\n### Readiness Probe\n\n```python\n@app.route('/health/ready')\ndef readiness():\n    # Prüfe Datenbankverbindung\n    if database.is_connected():\n        return {'status': 'ready'}, 200\n    else:\n        return {'status': 'not ready'}, 503\n```\n\n**Zweck**: Ist die Anwendung bereit, Anfragen zu verarbeiten?\n\n## Metriken sammeln\n<!-- micro-quiz:bp-01-monitoring-health-checks-micro-1 -->\n\n\n### Application Metrics (Python)\n\n```python\nfrom prometheus_client import Counter, Histogram, Gauge\nimport time\n\n# Counter: Zählt Ereignisse\nrequest_count = Counter(\n    'http_requests_total',\n    'Total HTTP Requests',\n    ['method', 'endpoint', 'status']\n)\n\n# Histogram: Misst Verteilung\nrequest_duration = Histogram(\n    'http_request_duration_seconds',\n    'HTTP Request Duration'\n)\n\n# Gauge: Aktueller Wert\nactive_users = Gauge(\n    'active_users',\n    'Number of active users'\n)\n\n# Verwendung\n@app.route('/api/users')\ndef get_users():\n    start = time.time()\n    \n    # Business Logic\n    users = fetch_users()\n    \n    # Metriken aktualisieren\n    duration = time.time() - start\n    request_count.labels(\n        method='GET',\n        endpoint='/api/users',\n        status=200\n    ).inc()\n    request_duration.observe(duration)\n    \n    return users\n```\n\n### System Metrics (Node Exporter)\n\n```bash\n# CPU-Auslastung\nnode_cpu_seconds_total\n\n# Speicher\nnode_memory_MemAvailable_bytes\nnode_memory_MemTotal_bytes\n\n# Festplatte\nnode_filesystem_avail_bytes\nnode_filesystem_size_bytes\n\n# Netzwerk\nnode_network_receive_bytes_total\nnode_network_transmit_bytes_total\n```\n\n<!-- micro-quiz:bp-01-monitoring-metriken-sammeln-micro-1 -->\n## Logging Best Practices\n\n### Strukturiertes Logging\n\n```python\nimport logging\nimport json\n\nlogger = logging.getLogger(__name__)\n\n# Strukturiertes Log\nlogger.info(json.dumps({\n    'event': 'user_login',\n    'user_id': 12345,\n    'ip': '192.168.1.100',\n    'timestamp': '2025-01-10T10:30:00Z',\n    'success': True\n}))\n```\n\n### Log-Aggregation\n\n```\nServer 1 -> Logs -> Zentraler Log-Server\nServer 2 -> Logs -> Zentraler Log-Server\nServer 3 -> Logs -> Zentraler Log-Server\n                         |\n                         v\n                    Elasticsearch\n                         |\n                         v\n                      Kibana\n```\n\n## Dashboards\n<!-- micro-quiz:bp-01-monitoring-logging-best-practices-micro-1 -->\n\n\n### Wichtige Metriken für Dashboards\n\n**System-Dashboard:**\n- CPU-Auslastung (Zeitreihe)\n- RAM-Nutzung (Gauge)\n- Festplattenspeicher (Gauge)\n- Netzwerk-Traffic (Zeitreihe)\n\n**Anwendungs-Dashboard:**\n- Requests/Sekunde (Zeitreihe)\n- Response Time (Histogram)\n- Error Rate (Zeitreihe)\n- Active Users (Gauge)\n\n**Business-Dashboard:**\n- Transaktionen/Stunde\n- Umsatz\n- Conversion Rate\n\n<!-- micro-quiz:bp-01-monitoring-dashboards-micro-1 -->\n## SLA und SLO\n\n### SLA (Service Level Agreement)\n- Vertragliche Vereinbarung\n- Beispiel: 99.9% Verfügbarkeit\n\n### SLO (Service Level Objective)\n- Internes Ziel\n- Beispiel: 99.95% Verfügbarkeit\n\n### SLI (Service Level Indicator)\n- Messbare Metrik\n- Beispiel: Uptime, Response Time\n\n**Berechnung:**\n```\nVerfügbarkeit = (Gesamtzeit - Ausfallzeit) / Gesamtzeit * 100\n\n99.9% = 43.2 Minuten Ausfall pro Monat\n99.99% = 4.32 Minuten Ausfall pro Monat\n```\n\n## Prüfungsrelevante Aspekte\n<!-- micro-quiz:bp-01-monitoring-sla-und-slo-micro-1 -->\n\n\n- Monitoring-Bereiche kennen\n- Wichtige Metriken (Golden Signals, RED, USE) verstehen\n- Monitoring-Tools (Prometheus, Grafana, ELK) kennen\n- Alerting-Konzepte verstehen\n- Health Checks (Liveness, Readiness) unterscheiden\n- Logging Best Practices kennen\n- SLA/SLO/SLI unterscheiden\n\n\n<!-- micro-quiz:bp-01-monitoring-prufungsrelevante-aspekte-micro-1 -->",
  "codeExamples": [
    {
      "language": "python",
      "code": "from prometheus_client import start_http_server, Counter, Histogram\nimport time\nimport random\n\n# Metriken definieren\nrequest_counter = Counter(\n    'app_requests_total',\n    'Total requests',\n    ['method', 'endpoint']\n)\n\nrequest_duration = Histogram(\n    'app_request_duration_seconds',\n    'Request duration'\n)\n\n# Metrics-Server starten (Port 8000)\nstart_http_server(8000)\n\n# Anwendungslogik mit Monitoring\ndef process_request(method, endpoint):\n    start = time.time()\n    \n    # Simuliere Verarbeitung\n    time.sleep(random.uniform(0.1, 0.5))\n    \n    # Metriken aktualisieren\n    duration = time.time() - start\n    request_counter.labels(method=method, endpoint=endpoint).inc()\n    request_duration.observe(duration)\n    \n    return f\"Processed {method} {endpoint} in {duration:.2f}s\"\n\n# Beispielaufrufe\nwhile True:\n    process_request('GET', '/api/users')\n    time.sleep(1)",
      "explanation": "Prometheus-Metriken in Python-Anwendung integrieren",
      "title": "Prometheus Monitoring Beispiel"
    }
  ],
  "relatedQuizzes": [],
  "resources": [
    {
      "title": "Prometheus Documentation",
      "url": "https://prometheus.io/docs/",
      "type": "documentation"
    },
    {
      "title": "Google SRE Book",
      "url": "https://sre.google/books/",
      "type": "article"
    }
  ],
  "lastUpdated": "2025-01-10T00:00:00Z",
  "version": "1.0",
  "learningObjectives": [
    "Du kannst monitoring erklären",
    "Du kannst logging erklären",
    "Du kannst metriken erklären",
    "Du kannst alerting erklären",
    "Du kannst neu 2025 erklären"
  ],
  "summary": "Monitoring von Systemen, Anwendungen und Infrastruktur (Neu ab 2025)",
  "contentOutline": [
    {
      "id": "system-monitoring-und-uberwachung",
      "title": "System-Monitoring und Überwachung",
      "summary": "Kernaspekt: System-Monitoring und Überwachung"
    },
    {
      "id": "einfuhrung",
      "title": "Einführung",
      "summary": "Kernaspekt: Einführung"
    },
    {
      "id": "monitoring-bereiche",
      "title": "Monitoring-Bereiche",
      "summary": "Kernaspekt: Monitoring-Bereiche"
    },
    {
      "id": "monitoring-metriken",
      "title": "Monitoring-Metriken",
      "summary": "Kernaspekt: Monitoring-Metriken"
    },
    {
      "id": "monitoring-tools",
      "title": "Monitoring-Tools",
      "summary": "Kernaspekt: Monitoring-Tools"
    },
    {
      "id": "cpu-auslastung",
      "title": "CPU-Auslastung",
      "summary": "Kernaspekt: CPU-Auslastung"
    },
    {
      "id": "http-requests",
      "title": "HTTP-Requests",
      "summary": "Kernaspekt: HTTP-Requests"
    },
    {
      "id": "query-requests-pro-sekunde",
      "title": "Query: Requests pro Sekunde",
      "summary": "Kernaspekt: Query: Requests pro Sekunde"
    },
    {
      "id": "alerting",
      "title": "Alerting",
      "summary": "Kernaspekt: Alerting"
    },
    {
      "id": "prometheus-alert",
      "title": "Prometheus Alert",
      "summary": "Kernaspekt: Prometheus Alert"
    },
    {
      "id": "health-checks",
      "title": "Health Checks",
      "summary": "Kernaspekt: Health Checks"
    },
    {
      "id": "flask-beispiel",
      "title": "Flask Beispiel",
      "summary": "Kernaspekt: Flask Beispiel"
    },
    {
      "id": "metriken-sammeln",
      "title": "Metriken sammeln",
      "summary": "Kernaspekt: Metriken sammeln"
    },
    {
      "id": "counter-zahlt-ereignisse",
      "title": "Counter: Zählt Ereignisse",
      "summary": "Kernaspekt: Counter: Zählt Ereignisse"
    },
    {
      "id": "histogram-misst-verteilung",
      "title": "Histogram: Misst Verteilung",
      "summary": "Kernaspekt: Histogram: Misst Verteilung"
    },
    {
      "id": "gauge-aktueller-wert",
      "title": "Gauge: Aktueller Wert",
      "summary": "Kernaspekt: Gauge: Aktueller Wert"
    },
    {
      "id": "verwendung",
      "title": "Verwendung",
      "summary": "Kernaspekt: Verwendung"
    },
    {
      "id": "speicher",
      "title": "Speicher",
      "summary": "Kernaspekt: Speicher"
    },
    {
      "id": "festplatte",
      "title": "Festplatte",
      "summary": "Kernaspekt: Festplatte"
    },
    {
      "id": "netzwerk",
      "title": "Netzwerk",
      "summary": "Kernaspekt: Netzwerk"
    },
    {
      "id": "logging-best-practices",
      "title": "Logging Best Practices",
      "summary": "Kernaspekt: Logging Best Practices"
    },
    {
      "id": "strukturiertes-log",
      "title": "Strukturiertes Log",
      "summary": "Kernaspekt: Strukturiertes Log"
    },
    {
      "id": "dashboards",
      "title": "Dashboards",
      "summary": "Kernaspekt: Dashboards"
    },
    {
      "id": "sla-und-slo",
      "title": "SLA und SLO",
      "summary": "Kernaspekt: SLA und SLO"
    },
    {
      "id": "prufungsrelevante-aspekte",
      "title": "Prüfungsrelevante Aspekte",
      "summary": "Kernaspekt: Prüfungsrelevante Aspekte"
    }
  ],
  "accessibilityNotes": "Klare Überschriften, kurze Sätze, keine reine Farb-Codierung.",
  "editorNote": "Automatisch ergänzt: Review erforderlich",
  "microQuizzes": [
    "bp-01-monitoring-einfuhrung-micro-1",
    "bp-01-monitoring-monitoring-bereiche-micro-1",
    "bp-01-monitoring-monitoring-metriken-micro-1",
    "bp-01-monitoring-monitoring-tools-micro-1",
    "bp-01-monitoring-alerting-micro-1",
    "bp-01-monitoring-health-checks-micro-1",
    "bp-01-monitoring-metriken-sammeln-micro-1",
    "bp-01-monitoring-logging-best-practices-micro-1",
    "bp-01-monitoring-dashboards-micro-1",
    "bp-01-monitoring-sla-und-slo-micro-1",
    "bp-01-monitoring-prufungsrelevante-aspekte-micro-1"
  ]
}
