var gg=Object.defineProperty,hg=Object.defineProperties;var pg=Object.getOwnPropertyDescriptors;var q=Object.getOwnPropertySymbols;var G=Object.prototype.hasOwnProperty,U=Object.prototype.propertyIsEnumerable;var $=(f,e,n)=>e in f?gg(f,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):f[e]=n,z=(f,e)=>{for(var n in e||(e={}))G.call(e,n)&&$(f,n,e[n]);if(q)for(var n of q(e))U.call(e,n)&&$(f,n,e[n]);return f},v=(f,e)=>hg(f,pg(e));var H=(f,e)=>{var n={};for(var t in f)G.call(f,t)&&e.indexOf(t)<0&&(n[t]=f[t]);if(f!=null&&q)for(var t of q(f))e.indexOf(t)<0&&U.call(f,t)&&(n[t]=f[t]);return n};var d=(f,e,n)=>new Promise((t,i)=>{var s=l=>{try{o(n.next(l))}catch(u){i(u)}},a=l=>{try{o(n.throw(l))}catch(u){i(u)}},o=l=>l.done?t(l.value):Promise.resolve(l.value).then(s,a);o((n=n.apply(f,e)).next())});(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function n(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(i){if(i.ep)return;i.ep=!0;const s=n(i);fetch(i.href,s)}})();const fg="modulepreload",bg=function(f,e){return new URL(f,e).href},Q={},r=function(e,n,t){let i=Promise.resolve();if(n&&n.length>0){let u=function(c){return Promise.all(c.map(h=>Promise.resolve(h).then(m=>({status:"fulfilled",value:m}),m=>({status:"rejected",reason:m}))))};const a=document.getElementsByTagName("link"),o=document.querySelector("meta[property=csp-nonce]"),l=(o==null?void 0:o.nonce)||(o==null?void 0:o.getAttribute("nonce"));i=u(n.map(c=>{if(c=bg(c,t),c in Q)return;Q[c]=!0;const h=c.endsWith(".css"),m=h?'[rel="stylesheet"]':"";if(t)for(let p=a.length-1;p>=0;p--){const b=a[p];if(b.href===c&&(!h||b.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${c}"]${m}`))return;const g=document.createElement("link");if(g.rel=h?"stylesheet":fg,h||(g.as="script"),g.crossOrigin="",g.href=c,l&&g.setAttribute("nonce",l),document.head.appendChild(g),h)return new Promise((p,b)=>{g.addEventListener("load",p),g.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(a){const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=a,window.dispatchEvent(o),!o.defaultPrevented)throw a}return i.then(a=>{for(const o of a||[])o.status==="rejected"&&s(o.reason);return e().catch(s)})},kg="1.0.0",zg="2025-01-20",vg="Three-tier category system for IHK content organization",yg=[{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",shortName:"DPA",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Daten- und Prozessanalyse",color:"#3b82f6",icon:"üìä",examCode:"AP2-DPA",contentTypes:["modules","quizzes"],specializationRelevance:{"daten-prozessanalyse":"high",anwendungsentwicklung:"low"},metadata:{primarySpecialization:"daten-prozessanalyse",crossRelevance:!1,examWeight:"high"}},{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",shortName:"AE",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Anwendungsentwicklung",color:"#10b981",icon:"üíª",examCode:"AP2-AE",contentTypes:["modules","quizzes"],specializationRelevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"low"},metadata:{primarySpecialization:"anwendungsentwicklung",crossRelevance:!1,examWeight:"high"}},{id:"allgemein",name:"Allgemein",shortName:"F√ú",description:"Fachrichtungs√ºbergreifende Inhalte und Grundlagen f√ºr beide Spezialisierungen",color:"#6b7280",icon:"üìö",examCode:"AP2-F√ú",contentTypes:["modules","quizzes"],specializationRelevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"},metadata:{primarySpecialization:null,crossRelevance:!0,examWeight:"high"}}],Sg={defaultCategory:"allgemein",conflictResolution:"priority-based",validationRequired:!0,preserveOriginalCategory:!0},Z={version:kg,lastUpdated:zg,description:vg,categories:yg,mappingConfiguration:Sg},wg="1.0.0",Ag="2025-01-20",Eg="Priority-based mapping rules for converting existing categories to three-tier system",_g=[{id:"dpa-explicit-prefix",name:"DPA Explicit Prefix Mapping",sourcePattern:"^(BP-DPA-|bp-dpa-)",targetCategory:"daten-prozessanalyse",priority:100,description:"Content with explicit DPA prefix (BP-DPA- or bp-dpa-)",examples:["BP-DPA-01","bp-dpa-01-data-modeling","BP-DPA-04"],conditions:null,active:!0},{id:"ae-explicit-prefix",name:"AE Explicit Prefix Mapping",sourcePattern:"^(BP-AE-|bp-ae-)",targetCategory:"anwendungsentwicklung",priority:100,description:"Content with explicit AE prefix (BP-AE- or bp-ae-)",examples:["BP-AE-01","bp-ae-01-conception","BP-AE-05"],conditions:null,active:!0},{id:"general-fue-prefix",name:"General F√ú Prefix Mapping",sourcePattern:"^(F√ú-|FUE-|fue-)",targetCategory:"allgemein",priority:90,description:"General content with F√ú/FUE prefix",examples:["F√ú-01","FUE-02","fue-03-quality"],conditions:null,active:!0},{id:"dpa-high-relevance",name:"DPA High Relevance Content",sourcePattern:".*",targetCategory:"daten-prozessanalyse",priority:80,description:"Content with high DPA relevance and low/no AE relevance",examples:["data-warehousing","etl-processes","bpmn-modeling"],conditions:{specializationRelevance:{"daten-prozessanalyse":"high",anwendungsentwicklung:["low","none"]}},active:!0},{id:"ae-high-relevance",name:"AE High Relevance Content",sourcePattern:".*",targetCategory:"anwendungsentwicklung",priority:80,description:"Content with high AE relevance and low/no DPA relevance",examples:["design-patterns","tdd","architecture-patterns"],conditions:{specializationRelevance:{anwendungsentwicklung:"high","daten-prozessanalyse":["low","none"]}},active:!0},{id:"cross-specialization-high",name:"Cross-Specialization High Relevance",sourcePattern:".*",targetCategory:"allgemein",priority:75,description:"Content with high relevance for both specializations",examples:["sql-reference","security","quality-assurance"],conditions:{specializationRelevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"}},active:!0},{id:"bp-ae-content",name:"BP Content for Anwendungsentwicklung",sourcePattern:"^(BP-0[1-5]|bp-0[1-5])",targetCategory:"anwendungsentwicklung",priority:85,description:"BP-01 through BP-05 content primarily relevant for Anwendungsentwicklung",examples:["BP-01","BP-02","BP-03","BP-04","BP-05"],conditions:null,active:!0},{id:"legacy-bp-general",name:"Legacy BP General Content",sourcePattern:"^(BP-|bp-)",targetCategory:"allgemein",priority:70,description:"Legacy BP content without specific specialization indicators",examples:["BP-06","bp-07-other","BP-08"],conditions:{not:{sourcePattern:"^(BP-DPA-|BP-AE-|bp-dpa-|bp-ae-|BP-0[1-5]|bp-0[1-5])"}},active:!0},{id:"sql-content",name:"SQL Content Mapping",sourcePattern:"(sql|SQL)",targetCategory:"allgemein",priority:65,description:"SQL-related content (relevant for both specializations)",examples:["sql-ddl","sql-dml","sql-comprehensive"],conditions:null,active:!0},{id:"scrum-agile-content",name:"Scrum and Agile Content",sourcePattern:"(scrum|agile|tdd)",targetCategory:"anwendungsentwicklung",priority:60,description:"Scrum, Agile, and TDD content (primarily AE relevant)",examples:["scrum","tdd","agile-methods"],conditions:null,active:!0},{id:"data-analysis-keywords",name:"Data Analysis Keywords",sourcePattern:"(data|etl|bi|warehouse|analytics|bpmn|process)",targetCategory:"daten-prozessanalyse",priority:55,description:"Content with data analysis related keywords",examples:["data-structures","etl-quiz","bi-tools"],conditions:null,active:!0},{id:"programming-keywords",name:"Programming Keywords",sourcePattern:"(oop|design-pattern|architecture|programming|development)",targetCategory:"anwendungsentwicklung",priority:55,description:"Content with programming and development keywords",examples:["oop-fundamentals","design-patterns","architecture-patterns"],conditions:null,active:!0},{id:"security-content",name:"Security Content",sourcePattern:"(security|kerberos|encryption|threats)",targetCategory:"allgemein",priority:50,description:"Security-related content (relevant for both specializations)",examples:["security-threats","kerberos","encryption"],conditions:null,active:!0},{id:"default-fallback",name:"Default Fallback",sourcePattern:".*",targetCategory:"allgemein",priority:1,description:"Default fallback for unmapped content",examples:["any-unmapped-content"],conditions:null,active:!0}],Dg=[{id:"no-empty-category",description:"Content must have a valid category assignment",rule:"targetCategory !== null && targetCategory !== ''"},{id:"valid-target-category",description:"Target category must be one of the three-tier categories",rule:"targetCategory in ['daten-prozessanalyse', 'anwendungsentwicklung', 'allgemein']"},{id:"priority-uniqueness",description:"Mapping rules should have unique priorities for deterministic resolution",rule:"unique(mappingRules.map(rule => rule.priority))"}],Pg={totalRules:14,activeRules:14,priorityRange:{min:1,max:100},categoryCoverage:{"daten-prozessanalyse":4,anwendungsentwicklung:5,allgemein:5}},J={version:wg,lastUpdated:Ag,description:Eg,mappingRules:_g,validationRules:Dg,statistics:Pg};class Tg{constructor(e){this.specializationService=e,this.threeTierCategories=this._loadThreeTierCategories(),this.mappingRules=this._loadMappingRules(),this.configuration=Z.mappingConfiguration}_loadThreeTierCategories(){try{return Z.categories||[]}catch(e){return console.error("Error loading three-tier categories:",e),this._getFallbackCategories()}}_getFallbackCategories(){return[{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Daten- und Prozessanalyse",color:"#3b82f6",icon:"üìä"},{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Anwendungsentwicklung",color:"#10b981",icon:"üíª"},{id:"allgemein",name:"Allgemein",description:"Fachrichtungs√ºbergreifende Inhalte und Grundlagen f√ºr beide Spezialisierungen",color:"#6b7280",icon:"üìö"}]}_loadMappingRules(){try{return(J.mappingRules||[]).filter(n=>n.active!==!1).map(n=>v(z({},n),{sourcePattern:new RegExp(n.sourcePattern,"i"),condition:n.conditions})).sort((n,t)=>t.priority-n.priority)}catch(e){return console.error("Error loading mapping rules:",e),this._getFallbackMappingRules()}}_getFallbackMappingRules(){return[{id:"dpa-explicit-fallback",sourcePattern:/^(BP-DPA-|bp-dpa-)/i,targetCategory:"daten-prozessanalyse",priority:100,description:"Fallback: DPA-specific content with BP-DPA prefix"},{id:"ae-explicit-fallback",sourcePattern:/^(BP-AE-|bp-ae-)/i,targetCategory:"anwendungsentwicklung",priority:100,description:"Fallback: AE-specific content with BP-AE prefix"},{id:"general-fue-fallback",sourcePattern:/^(F√ú-|FUE-|fue-)/i,targetCategory:"allgemein",priority:90,description:"Fallback: General content with F√ú/FUE prefix"},{id:"default-fallback",sourcePattern:/.*/,targetCategory:"allgemein",priority:1,description:"Fallback: Default for unmapped content"}]}mapToThreeTierCategory(e){try{if(!e||typeof e!="object")throw new Error("Invalid content item provided");const n=e.category||e.categoryId||"",t=this._findMatchingRule(n,e);if(!t)return console.warn(`No mapping rule found for content item: ${e.id||"unknown"}`),this._createMappingResult("allgemein",null,"No matching rule found");const i=this.threeTierCategories.find(s=>s.id===t.targetCategory);return this._createMappingResult(t.targetCategory,t,"Successfully mapped using rule",i)}catch(n){return console.error("Error mapping content item to three-tier category:",n),this._createMappingResult("allgemein",null,`Error: ${n.message}`)}}_findMatchingRule(e,n){const t=this.mappingRules.filter(i=>this._ruleMatches(i,e,n)).sort((i,s)=>s.priority-i.priority);return t.length>0?t[0]:null}_ruleMatches(e,n,t){return e.sourcePattern.test(n)?e.condition?this._evaluateRuleCondition(e.condition,t):!0:!1}_evaluateRuleCondition(e,n){if(e.specializationRelevance&&this.specializationService){const t=n.category||n.categoryId;for(const[i,s]of Object.entries(e.specializationRelevance)){const a=this.specializationService.getCategoryRelevance(t,i);if(Array.isArray(s)){if(!s.includes(a))return!1}else if(a!==s)return!1}}if(e.contentType&&this._inferContentType(n)!==e.contentType)return!1;if(e.tags&&Array.isArray(e.tags)){const t=n.tags||[];if(!e.tags.some(s=>t.some(a=>a.toLowerCase().includes(s.toLowerCase()))))return!1}return!0}_inferContentType(e){return e.questions&&Array.isArray(e.questions)?"quiz":e.content||e.sections?"module":"unknown"}_createMappingResult(e,n,t,i=null){const s=i||this.threeTierCategories.find(a=>a.id===e);return{threeTierCategory:e,categoryInfo:s,appliedRule:n?{priority:n.priority,description:n.description,pattern:n.sourcePattern.toString()}:null,reason:t,timestamp:new Date().toISOString()}}getCategoryRelevance(e,n){var i;return!e||!n?"none":((i={"daten-prozessanalyse":{"daten-prozessanalyse":"high",anwendungsentwicklung:"low"},anwendungsentwicklung:{anwendungsentwicklung:"high","daten-prozessanalyse":"low"},allgemein:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"}}[e])==null?void 0:i[n])||"none"}getThreeTierCategories(){return[...this.threeTierCategories]}getThreeTierCategory(e){return this.threeTierCategories.find(n=>n.id===e)||null}validateCategoryMapping(e){try{const n=Array.isArray(e)?e:[e],t={status:"success",totalItems:n.length,validItems:0,invalidItems:0,warnings:[],errors:[],details:[]};for(const i of n){const s=this._validateSingleItem(i);t.details.push(s),s.isValid?t.validItems++:(t.invalidItems++,t.errors.push(...s.errors)),s.warnings.length>0&&t.warnings.push(...s.warnings)}return t.invalidItems>0?t.status="error":t.warnings.length>0&&(t.status="warning"),t.summary=this._generateValidationSummary(t),t}catch(n){return console.error("Error validating category mapping:",n),{status:"error",totalItems:0,validItems:0,invalidItems:0,warnings:[],errors:[`Validation failed: ${n.message}`],details:[]}}}_validateSingleItem(e){if(!e||typeof e!="object")return{itemId:"unknown",isValid:!1,errors:["Invalid item structure: item must be an object"],warnings:[],mappingResult:null,originalCategory:null};const n={itemId:e.id||"unknown",isValid:!0,errors:[],warnings:[],mappingResult:null,originalCategory:e.category||e.categoryId||null};e.id||n.warnings.push("Item missing ID field");try{n.mappingResult=this.mapToThreeTierCategory(e),n.mappingResult.threeTierCategory?this._isValidThreeTierCategory(n.mappingResult.threeTierCategory)||(n.isValid=!1,n.errors.push(`Invalid target category: ${n.mappingResult.threeTierCategory}`)):(n.isValid=!1,n.errors.push("Mapping failed: no target category assigned"));const t=this._checkMappingConflicts(e,n.mappingResult);t.length>0&&n.warnings.push(...t);const i=this._validateRelevanceConsistency(e,n.mappingResult);i.length>0&&n.warnings.push(...i)}catch(t){n.isValid=!1,n.errors.push(`Mapping error: ${t.message}`)}return n}_isValidThreeTierCategory(e){return["daten-prozessanalyse","anwendungsentwicklung","allgemein"].includes(e)}_checkMappingConflicts(e,n){const t=[],i=e.category||e.categoryId||"",s=n.threeTierCategory;return i.toLowerCase().includes("dpa")&&s!=="daten-prozessanalyse"&&t.push(`Potential conflict: DPA content mapped to ${s}`),i.toLowerCase().includes("ae")&&s!=="anwendungsentwicklung"&&t.push(`Potential conflict: AE content mapped to ${s}`),i.toLowerCase().includes("fue")&&s!=="allgemein"&&t.push(`Potential conflict: General content mapped to ${s}`),n.appliedRule&&n.appliedRule.priority<50&&e.important&&t.push("Important content mapped using low-priority rule"),t}_validateRelevanceConsistency(e,n){const t=[];if(!this.specializationService)return t;const i=n.threeTierCategory,s=e.category||e.categoryId;if(s){const a=this.specializationService.getCategoryRelevance(s,"anwendungsentwicklung"),o=this.specializationService.getCategoryRelevance(s,"daten-prozessanalyse");i==="anwendungsentwicklung"&&a==="none"&&t.push("Content mapped to AE category but has no AE relevance"),i==="daten-prozessanalyse"&&o==="none"&&t.push("Content mapped to DPA category but has no DPA relevance"),i==="allgemein"&&a==="none"&&o==="none"&&t.push("Content mapped to general category but has no relevance for either specialization")}return t}_generateValidationSummary(e){const n={},t={};let i=0;return e.details.forEach(s=>{if(s.mappingResult&&s.mappingResult.threeTierCategory){const a=s.mappingResult.threeTierCategory;if(n[a]=(n[a]||0)+1,s.mappingResult.appliedRule){const o=s.mappingResult.appliedRule.description||"unknown";t[o]=(t[o]||0)+1}}s.warnings.some(a=>a.includes("conflict"))&&i++}),{categoryDistribution:n,ruleUsage:t,conflictCount:i,successRate:e.totalItems>0?(e.validItems/e.totalItems*100).toFixed(2)+"%":"0%"}}validateMappingRules(){try{const e={status:"success",totalRules:this.mappingRules.length,validRules:0,invalidRules:0,errors:[],warnings:[],details:[]},n=new Set,t=new Set;for(const a of this.mappingRules){const o=this._validateSingleRule(a);e.details.push(o),o.isValid?(e.validRules++,n.add(a.priority),t.add(a.targetCategory)):(e.invalidRules++,e.errors.push(...o.errors)),o.warnings.length>0&&e.warnings.push(...o.warnings)}n.size!==this.mappingRules.length&&e.warnings.push("Some rules have duplicate priorities - this may cause non-deterministic behavior");const s=["daten-prozessanalyse","anwendungsentwicklung","allgemein"].filter(a=>!t.has(a));return s.length>0&&e.warnings.push(`No rules target these categories: ${s.join(", ")}`),e.invalidRules>0?e.status="error":e.warnings.length>0&&(e.status="warning"),e}catch(e){return console.error("Error validating mapping rules:",e),{status:"error",totalRules:0,validRules:0,invalidRules:0,errors:[`Rule validation failed: ${e.message}`],warnings:[],details:[]}}}_validateSingleRule(e){const n={ruleId:e.id||"unknown",isValid:!0,errors:[],warnings:[]};if(e.sourcePattern||(n.isValid=!1,n.errors.push("Rule missing sourcePattern")),e.targetCategory||(n.isValid=!1,n.errors.push("Rule missing targetCategory")),typeof e.priority!="number"&&(n.isValid=!1,n.errors.push("Rule missing or invalid priority")),e.targetCategory&&!this._isValidThreeTierCategory(e.targetCategory)&&(n.isValid=!1,n.errors.push(`Invalid target category: ${e.targetCategory}`)),typeof e.priority=="number"&&(e.priority<1||e.priority>100)&&n.warnings.push(`Priority ${e.priority} outside recommended range (1-100)`),e.sourcePattern&&!(e.sourcePattern instanceof RegExp))try{new RegExp(e.sourcePattern)}catch(t){n.isValid=!1,n.errors.push(`Invalid regex pattern: ${t.message}`)}return n}getMappingRules(){return[...this.mappingRules]}getValidationConfiguration(){return v(z({},this.configuration),{validationRules:J.validationRules||[],threeTierCategories:this.threeTierCategories.map(e=>e.id)})}}class P{constructor(e="learning-app"){this.prefix=e,this.isAvailable=this._checkAvailability(),this.fallbackStorage=new Map}_checkAvailability(){try{const e="__storage_test__";return localStorage.setItem(e,e),localStorage.removeItem(e),!0}catch(e){return console.warn("localStorage is not available, using in-memory storage"),!1}}_getKey(e){return`${this.prefix}:${e}`}get(e){try{if(!this.isAvailable)return this.fallbackStorage.get(this._getKey(e))||null;const n=localStorage.getItem(this._getKey(e));return n===null?null:JSON.parse(n)}catch(n){return console.error(`Error getting item "${e}" from storage:`,n),this.fallbackStorage.get(this._getKey(e))||null}}set(e,n){const t=this._getKey(e);try{if(!this.isAvailable)return this.fallbackStorage.set(t,n),!0;const i=JSON.stringify(n);return localStorage.setItem(t,i),this.fallbackStorage.set(t,n),!0}catch(i){if(i.name==="QuotaExceededError"){console.error("Storage quota exceeded. Unable to save data."),this.fallbackStorage.set(t,n);const s=new Error("Storage quota exceeded. Please export your progress or clear some data.");throw s.name="QuotaExceededError",s}throw console.error(`Error setting item "${e}" in storage:`,i),this.fallbackStorage.set(t,n),i}}remove(e){const n=this._getKey(e);try{return this.isAvailable&&localStorage.removeItem(n),this.fallbackStorage.delete(n),!0}catch(t){return console.error(`Error removing item "${e}" from storage:`,t),this.fallbackStorage.delete(n),!1}}clear(){try{return this.isAvailable&&Object.keys(localStorage).filter(i=>i.startsWith(`${this.prefix}:`)).forEach(i=>localStorage.removeItem(i)),Array.from(this.fallbackStorage.keys()).forEach(n=>{n.startsWith(`${this.prefix}:`)&&this.fallbackStorage.delete(n)}),!0}catch(e){return console.error("Error clearing storage:",e),!1}}has(e){const n=this._getKey(e);return this.isAvailable?localStorage.getItem(n)!==null:this.fallbackStorage.has(n)}getStorageInfo(){if(!this.isAvailable)return{available:!1,used:0,total:0,percentage:0};try{let e=0;for(let i in localStorage)Object.prototype.hasOwnProperty.call(localStorage,i)&&(e+=localStorage[i].length+i.length);const n=5*1024*1024,t=e/n*100;return{available:!0,used:e,total:n,percentage:Math.round(t)}}catch(e){return console.error("Error getting storage info:",e),{available:!0,used:0,total:0,percentage:0}}}}class qg{constructor(e,n){this.stateManager=e,this.ihkContentService=n,this.storage=new P("exam-progress")}getProgressByCategory(){return d(this,null,function*(){try{const e=yield this.ihkContentService.loadCategories(),n=this.stateManager.getState("progress")||{},t=n.modulesCompleted||[],i=n.modulesInProgress||[];yield this.ihkContentService._loadAllModules();const s=Array.from(this.ihkContentService.modules.values()),a=[];for(const o of e.categories)for(const l of o.subcategories){const u=s.filter(p=>p.category===l.id),c=u.length,h=u.filter(p=>t.includes(p.id)).length,m=u.filter(p=>i.includes(p.id)).length,g=c>0?Math.round(h/c*100):0;a.push({categoryId:l.id,categoryCode:l.code,categoryName:l.name,mainCategory:o.code,examRelevance:l.examRelevance,totalModules:c,completedModules:h,inProgressModules:m,notStartedModules:c-h-m,completionPercentage:g,status:g===100?"completed":g>0?"in-progress":"not-started"})}return a.sort((o,l)=>{const u={high:0,medium:1,low:2},c=u[o.examRelevance]-u[l.examRelevance];return c!==0?c:l.completionPercentage-o.completionPercentage}),a}catch(e){throw console.error("Error getting progress by category:",e),new Error("Failed to calculate category progress")}})}getWeakAreas(){return d(this,null,function*(){try{const e=this.stateManager.getState("progress")||{},n=e.quizAttempts||[],t=e.modulesCompleted||[],i=[],s=new Map;for(const c of n){const m=c.quizId.match(/^(fue|bp)-\d+/i);if(m){const g=m[0].toUpperCase(),p=c.score;s.has(g)||s.set(g,[]),s.get(g).push(p)}}for(const[c,h]of s){const m=h.reduce((g,p)=>g+p,0)/h.length;m<70&&i.push({type:"quiz-performance",category:c,averageScore:Math.round(m),attempts:h.length,severity:m<50?"high":m<60?"medium":"low",recommendation:`Wiederhole die Module in ${c} und √ºbe mehr Quizzes`})}const a=yield this.getProgressByCategory();for(const c of a)c.examRelevance==="high"&&c.completionPercentage<50&&i.push({type:"incomplete-category",category:c.categoryCode,categoryName:c.categoryName,completionPercentage:c.completionPercentage,severity:c.completionPercentage===0?"high":c.completionPercentage<25?"medium":"low",recommendation:`Fokussiere dich auf ${c.categoryName} - hohe Pr√ºfungsrelevanz!`});const l=(yield this.ihkContentService.getNewTopics2025()).filter(c=>!t.includes(c.id));l.length>0&&i.push({type:"new-topics-2025",count:l.length,topics:l.map(c=>c.title),severity:"high",recommendation:"Neue Themen ab 2025 sind besonders pr√ºfungsrelevant - starte hier!"});const u={high:0,medium:1,low:2};return i.sort((c,h)=>u[c.severity]-u[h.severity]),i}catch(e){throw console.error("Error identifying weak areas:",e),new Error("Failed to identify weak areas")}})}getExamReadiness(){return d(this,null,function*(){try{const e=this.stateManager.getState("progress")||{},n=e.modulesCompleted||[],t=e.quizAttempts||[];yield this.ihkContentService._loadAllModules();const i=Array.from(this.ihkContentService.modules.values());let s=0,a=0;const o={high:3,medium:2,low:1};for(const S of i){const k=o[S.examRelevance]||1;s+=k,n.includes(S.id)&&(a+=k)}const l=s>0?a/s*100:0;let u=0;t.length>0&&(u=t.reduce((k,E)=>k+E.score,0)/t.length);const c=yield this.ihkContentService.getNewTopics2025(),h=c.filter(S=>n.includes(S.id)).length,m=c.length>0?h/c.length*100:100,g=Math.round(l*.5+u*.3+m*.2);let p,b;return g>=85?(p="excellent",b="Du bist sehr gut vorbereitet! Wiederhole schwierige Themen und mache Pr√ºfungssimulationen."):g>=70?(p="good",b="Gute Vorbereitung! Fokussiere dich auf deine Schwachstellen und √ºbe mehr Quizzes."):g>=50?(p="moderate",b="Du bist auf einem guten Weg. Arbeite systematisch die fehlenden Module durch."):g>=30?(p="needs-improvement",b="Du brauchst noch mehr Vorbereitung. Erstelle einen Lernplan und arbeite t√§glich daran."):(p="insufficient",b="Starte jetzt mit deiner Vorbereitung! Beginne mit den wichtigsten Themen (hohe Pr√ºfungsrelevanz)."),{overallReadiness:g,readinessLevel:p,recommendation:b,breakdown:{moduleReadiness:Math.round(l),quizReadiness:Math.round(u),newTopicsReadiness:Math.round(m)},statistics:{totalModules:i.length,completedModules:n.length,quizzesTaken:t.length,newTopicsCompleted:h,totalNewTopics:c.length}}}catch(e){throw console.error("Error calculating exam readiness:",e),new Error("Failed to calculate exam readiness")}})}getRecommendedModules(){return d(this,null,function*(){try{const e=yield this.getWeakAreas(),n=this.stateManager.getState("progress")||{},t=n.modulesCompleted||[],i=n.modulesInProgress||[],s=[];yield this.ihkContentService._loadAllModules();const a=Array.from(this.ihkContentService.modules.values());for(const m of e)if(m.type==="quiz-performance"){const g=a.filter(p=>p.category.startsWith(m.category)&&!t.includes(p.id)).slice(0,3);g.length>0&&s.push({reason:`Schwache Quiz-Performance in ${m.category}`,priority:m.severity,modules:g})}const o=a.filter(m=>m.examRelevance==="high"&&!t.includes(m.id)&&!i.includes(m.id)).slice(0,5);o.length>0&&s.push({reason:"Hohe Pr√ºfungsrelevanz",priority:"high",modules:o});const u=(yield this.ihkContentService.getNewTopics2025()).filter(m=>!t.includes(m.id)).slice(0,5);u.length>0&&s.push({reason:"Neue Themen ab 2025",priority:"high",modules:u});const c=a.filter(m=>t.includes(m.id)||i.includes(m.id)?!1:m.prerequisites&&m.prerequisites.length>0?m.prerequisites.every(g=>t.includes(g)):!1);c.length>0&&s.push({reason:"Voraussetzungen erf√ºllt",priority:"medium",modules:c.slice(0,3)});const h={high:0,medium:1,low:2};return s.sort((m,g)=>h[m.priority]-h[g.priority]),s}catch(e){throw console.error("Error getting recommended modules:",e),new Error("Failed to generate module recommendations")}})}getCategoryProgress(e){try{const t=(this.stateManager.getState("progress")||{}).modulesCompleted||[],s=Array.from(this.ihkContentService.modules.values()).filter(o=>o.category===e);if(s.length===0)return 0;const a=s.filter(o=>t.includes(o.id)).length;return Math.round(a/s.length*100)}catch(n){return console.error(`Error getting category progress for ${e}:`,n),0}}exportProgress(){return d(this,null,function*(){var e,n;try{const t=this.stateManager.getState("progress")||{},i=yield this.getProgressByCategory(),s=yield this.getWeakAreas(),a=yield this.getExamReadiness(),o=yield this.getRecommendedModules(),l={exportDate:new Date().toISOString(),examType:"IHK Fachinformatiker Anwendungsentwicklung AP2",examVersion:"2025",summary:{examReadiness:a.overallReadiness,readinessLevel:a.readinessLevel,totalModulesCompleted:((e=t.modulesCompleted)==null?void 0:e.length)||0,totalQuizzesTaken:((n=t.quizAttempts)==null?void 0:n.length)||0,lastActivity:t.lastActivity},examReadiness:a,categoryProgress:i,weakAreas:s,recommendations:o.map(g=>({reason:g.reason,priority:g.priority,moduleCount:g.modules.length,modules:g.modules.map(p=>({id:p.id,title:p.title,category:p.category,examRelevance:p.examRelevance}))})),detailedProgress:{modulesCompleted:t.modulesCompleted||[],modulesInProgress:t.modulesInProgress||[],quizAttempts:(t.quizAttempts||[]).map(g=>({quizId:g.quizId,score:g.score,date:g.date,passed:g.score>=70}))}},u=JSON.stringify(l,null,2),c=new Blob([u],{type:"application/json"}),h=URL.createObjectURL(c),m=document.createElement("a");return m.href=h,m.download=`ihk-exam-progress-${new Date().toISOString().split("T")[0]}.json`,document.body.appendChild(m),m.click(),document.body.removeChild(m),URL.revokeObjectURL(h),l}catch(t){throw console.error("Error exporting exam progress:",t),new Error("Failed to export exam progress")}})}}const ne=(f,e,n)=>{const t=f[e];return t?typeof t=="function"?t():Promise.resolve(t):new Promise((i,s)=>{(typeof queueMicrotask=="function"?queueMicrotask:setTimeout)(s.bind(null,new Error("Unknown variable dynamic import: "+e+(e.split("/").length!==n?". Note that variables only represent file names one level deep.":""))))})},Rg="2025.1",Ig="2025-01-20",Cg="AP2",Lg="Fachinformatiker",Mg=["anwendungsentwicklung","daten-prozessanalyse"],Og=[{id:"FUE",code:"F√ú",name:"Fachrichtungs√ºbergreifende berufsprofilgebende Fertigkeiten, Kenntnisse und F√§higkeiten",description:"Inhalte, die f√ºr alle IT-Berufe relevant sind",color:"#6b7280",contentCategory:"general",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"},subcategories:[{id:"FUE-01",code:"F√ú-01",name:"Planen eines Softwareproduktes",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"},topics:["Kundenanforderungen analysieren","Projektplanung","Wirtschaftlichkeitsberechnung","Lasten-/Pflichtenheft"]},{id:"FUE-02",code:"F√ú-02",name:"Entwickeln und Bereitstellen von Softwareanwendungen",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"medium"},topics:["Kontrollstrukturen (Aktivit√§tsdiagramm, Pseudocode)","Anomalien/Redundanzen in Datenbanken","SQL (siehe Beiblatt)","Komponententest, Integrationstest, Systemtest"],changes2025:[{type:"added",description:"Anomalien/Redundanzen in Datenbanken erkennen",important:!0},{type:"added",description:"SQL mit detailliertem Beiblatt",important:!0},{type:"removed",description:"Struktogramm und PAP entfernt",replacement:"Aktivit√§tsdiagramm"}]},{id:"FUE-03",code:"F√ú-03",name:"Durchf√ºhren von qualit√§tssichernden Ma√ünahmen",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"},topics:["Software-Test (Black Box, White Box, Review)","Last- und Performancetests","Testdaten und Extremwertetests"],changes2025:[{type:"added",description:"Last- und Performancetests",important:!1}]},{id:"FUE-04",code:"F√ú-04",name:"Sicherstellen der Informationssicherheit",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"},topics:["Technisch Organisatorische Ma√ünahmen (TOM)","Bedrohungsszenarien (Man-in-the-Middle, SQL-Injection, DDoS)","Datenschutz und Datensicherheit"],changes2025:[{type:"added",description:"Bedrohungsszenarien: Man-in-the-Middle, SQL-Injection, DDoS-Attack",important:!0}]}]},{id:"BP-AE",code:"BP-AE",name:"Berufsprofilgebende Fertigkeiten, Kenntnisse und F√§higkeiten in der Fachrichtung Anwendungsentwicklung",description:"Spezifische Inhalte f√ºr Fachinformatiker Anwendungsentwicklung",color:"#10b981",contentCategory:"ae-specific",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"none"},subcategories:[{id:"BP-AE-01",code:"BP-AE-01",name:"Konzipieren und Umsetzen von kundenspezifischen Softwareanwendungen",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"low"},topics:["Netzwerktopologien und Protokolle","Zugriffskontrolle (RADIUS, Kerberos)","Datenabruf (HTTP, ODBC)","Monitoring von Systemen","Programm- und Konfigurationsdokumentation"],changes2025:[{type:"added",description:"Kerberos f√ºr Zugriffskontrolle",important:!0},{type:"added",description:"ODBC f√ºr Datenabruf",important:!0},{type:"added",description:"Monitoring von Systemen (Schwellwerte, Monitoringdaten)",important:!1},{type:"added",description:"Programm- und Konfigurationsdokumentation",important:!0},{type:"removed",description:"Load Balancing entfernt"}]},{id:"BP-AE-02",code:"BP-AE-02",name:"Sicherstellen der Qualit√§t von Softwareanwendungen",examRelevance:"medium",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"medium"},topics:["NAS und SAN","Datenaustauschformate (XML, JSON, CSV)","Cloud-Modelle (SaaS, IaaS, PaaS)","Verschl√ºsselung (z.B. Bitlocker)"],changes2025:[{type:"added",description:"NAS und SAN",important:!1},{type:"removed",description:"Data Warehouse entfernt"}]},{id:"BP-AE-03",code:"BP-AE-03",name:"Entwickeln von Softwareanwendungen",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"low"},topics:["Softwarequalit√§tsmerkmale (ISO 25001)","Cyber-physische Systeme","Test Driven Development (TDD)","API-Entwicklung (REST)","Unit-Tests und E2E-Tests"],changes2025:[{type:"added",description:"Softwarequalit√§tsmerkmale nach ISO 25001 (√Ñnderbarkeit/Erweiterbarkeit, Wartbarkeit)",important:!0},{type:"added",description:"Cyber-physische Systeme (CPS-Software, Sensoren/Aktoren, Bibliotheken)",important:!0},{type:"added",description:"Test Driven Development (TDD)",important:!0}]},{id:"BP-AE-04",code:"BP-AE-04",name:"Projektmanagement und Softwareentwicklungsmethoden",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"medium"},topics:["Scrum (Rollen, Events, Artefakte)","Architektur-Pattern (MVC, Layered, Microservices)","Design-Pattern","Software-Entwicklungswerkzeuge"],changes2025:[{type:"added",description:"Scrum explizit genannt",important:!0},{type:"added",description:"Architektur-Pattern zus√§tzlich zu Design-Pattern",important:!0},{type:"removed",description:"Struktogramm und PAP entfernt",important:!0},{type:"removed",description:"Programmierparadigmen entfernt"}]},{id:"BP-AE-05",code:"BP-AE-05",name:"Objektorientierte Programmierung und Algorithmen",examRelevance:"high",relevance:{anwendungsentwicklung:"high","daten-prozessanalyse":"low"},topics:["Objektorientierte Konzepte (Kapselung, Vererbung, Polymorphie)","Sortierverfahren (Bubble, Selection, Insertion Sort)","Datenstrukturen","SQL (mit Verweis auf Beiblatt)"],changes2025:[{type:"added",description:"Kapselung in OOP explizit genannt",important:!0},{type:"added",description:"Elementares Sortieren: Bubble Sort, Selection Sort, Insertion Sort",important:!0},{type:"modified",description:"SQL mit Verweis auf Beiblatt (detaillierter)",important:!0}]}]},{id:"BP-DPA",code:"BP-DPA",name:"Berufsprofilgebende Fertigkeiten, Kenntnisse und F√§higkeiten in der Fachrichtung Daten- und Prozessanalyse",description:"Spezifische Inhalte f√ºr Fachinformatiker Daten- und Prozessanalyse",color:"#3b82f6",contentCategory:"dpa-specific",relevance:{anwendungsentwicklung:"none","daten-prozessanalyse":"high"},subcategories:[{id:"BP-DPA-01",code:"BP-DPA-01",name:"Daten erfassen, aufbereiten und auswerten",examRelevance:"high",relevance:{anwendungsentwicklung:"low","daten-prozessanalyse":"high"},topics:["Datenquellen identifizieren und bewerten","ETL-Prozesse (Extract, Transform, Load)","Datenqualit√§t sicherstellen","Statistische Grundlagen","Datenbereinigung und -validierung"]},{id:"BP-DPA-02",code:"BP-DPA-02",name:"Datenmodelle entwickeln und implementieren",examRelevance:"high",relevance:{anwendungsentwicklung:"medium","daten-prozessanalyse":"high"},topics:["ER-Modellierung und Normalisierung","Dimensionale Modellierung (Star/Snowflake Schema)","NoSQL-Datenmodelle","Data Warehouse Konzepte","Datenarchitektur-Patterns"]},{id:"BP-DPA-03",code:"BP-DPA-03",name:"Gesch√§ftsprozesse analysieren und optimieren",examRelevance:"high",relevance:{anwendungsentwicklung:"low","daten-prozessanalyse":"high"},topics:["Prozessmodellierung (BPMN)","Workflow-Analyse","KPI-Definition und -Messung","Process Mining","Prozessoptimierung und -automatisierung"]},{id:"BP-DPA-04",code:"BP-DPA-04",name:"Datenvisualisierung und Reporting",examRelevance:"high",relevance:{anwendungsentwicklung:"low","daten-prozessanalyse":"high"},topics:["Dashboard-Design","Business Intelligence Tools","Datenvisualisierung Best Practices","Self-Service Analytics","Reporting-Automatisierung"]},{id:"BP-DPA-05",code:"BP-DPA-05",name:"Big Data und Analytics",examRelevance:"medium",relevance:{anwendungsentwicklung:"low","daten-prozessanalyse":"high"},topics:["Big Data Technologien (Hadoop, Spark)","Machine Learning Grundlagen","Predictive Analytics","Data Lakes vs. Data Warehouses","Cloud-basierte Analytics-Plattformen"]}]}],Ng=[{topic:"Struktogramm (Nassi-Shneiderman)",category:"F√ú-02, BP-04",replacement:"Aktivit√§tsdiagramm",reason:"Modernisierung der Darstellungsmethoden"},{topic:"Programmablaufplan (PAP)",category:"F√ú-02, BP-04",replacement:"Aktivit√§tsdiagramm oder Pseudocode",reason:"Modernisierung der Darstellungsmethoden"},{topic:"Trend-Themen (Smart Grid, IoT, Industrie 4.0, KI, Blockchain, Big Data, Augmented Reality)",category:"F√ú-02",replacement:null,reason:"Trends von gestern sind Normalzustand heute, teilweise in andere Berufe verschoben"},{topic:"Load Balancing",category:"BP-01",replacement:null,reason:"Nicht mehr explizit gefordert"},{topic:"Data Warehouse",category:"BP-02",replacement:null,reason:"Nicht mehr explizit gefordert"},{topic:"Programmierparadigmen",category:"BP-04",replacement:null,reason:"Nicht mehr explizit gefordert"}],Bg=["SQL mit detailliertem 2-seitigem Beiblatt","Test Driven Development (TDD) neu","Scrum explizit genannt","Sortierverfahren (Bubble, Selection, Insertion Sort)","Cyber-physische Systeme","Architektur-Pattern zus√§tzlich zu Design-Pattern","Sicherheitsbedrohungen (Man-in-the-Middle, SQL-Injection, DDoS)","Kapselung in OOP explizit","Struktogramm und PAP entfernt"],te={version:Rg,lastUpdated:Ig,examType:Cg,profession:Lg,supportedSpecializations:Mg,categories:Og,removedTopics:Ng,importantChanges2025:Bg},xg="2025.1",Vg="2025-05-01",Fg="Sommer 2025",Kg="IHK Pr√ºfungskatalog Fachinformatiker/Fachinformatikerin ‚Äì Anwendungsentwicklung",Wg="Umfassende √Ñnderungen am Pr√ºfungskatalog f√ºr die AP2 ab Sommer 2025",jg=[{category:"additions",title:"SQL mit detailliertem Beiblatt",description:"2-seitiges Beiblatt mit allen SQL-Befehlen, das der Pr√ºfung beiliegt",impact:"high",affectedCategories:["F√ú-02","BP-05"],details:"Umfasst DDL (CREATE TABLE, ALTER TABLE, CREATE INDEX), DML (INSERT, UPDATE, DELETE) und DQL (SELECT, WHERE, JOIN, GROUP BY, HAVING, Subqueries, Aggregatfunktionen)"},{category:"additions",title:"Test Driven Development (TDD)",description:"TDD als explizite Anforderung mit Red-Green-Refactor Zyklus",impact:"high",affectedCategories:["BP-03"],details:"Grunds√§tzliches Vorgehen beim Testen, z.B. print-Debugging, TDD, Unit-Test, E2E Test"},{category:"additions",title:"Scrum",description:"Scrum als agile Methode explizit im Katalog",impact:"high",affectedCategories:["BP-04"],details:"Rollen, Events, Artefakte, Sprint-Planung"},{category:"additions",title:"Sortierverfahren",description:"Elementares Sortieren: Bubble Sort, Selection Sort, Insertion Sort",impact:"high",affectedCategories:["BP-05"],details:"Algorithmen, Zeitkomplexit√§t, Implementierung"},{category:"additions",title:"Cyber-physische Systeme (CPS)",description:"CPS-Software, Sensoren/Aktoren, Bibliotheken, Abfragerhythmus",impact:"high",affectedCategories:["BP-03"],details:"Auswahl von geeigneten Sensoren/Aktoren, Nutzung von Bibliotheken, Kenntnis des Zugriffs"},{category:"additions",title:"Architektur-Pattern",description:"Architektur-Pattern zus√§tzlich zu Design-Pattern",impact:"high",affectedCategories:["BP-04"],details:"z.B. MVC, Layered Architecture, Microservices, Event-Driven Architecture"},{category:"additions",title:"Sicherheitsbedrohungen",description:"Potentielle Angriffe: Man-in-the-Middle, SQL-Injection, DDoS-Attack",impact:"high",affectedCategories:["F√ú-04"],details:"Bedrohungsszenarien erkennen und Gegenma√ünahmen kennen"},{category:"additions",title:"Kapselung in OOP",description:"Kapselung als explizites OOP-Konzept",impact:"high",affectedCategories:["BP-05"],details:"Private, Protected, Public, Information Hiding, Getter/Setter"},{category:"additions",title:"Anomalien/Redundanzen in Datenbanken",description:"Erkennen von Anomalien und Redundanzen in Datenbankstrukturen",impact:"medium",affectedCategories:["F√ú-02"],details:"Normalisierung, Datenintegrit√§t"},{category:"additions",title:"Last- und Performancetests",description:"Zus√§tzliche Testverfahren f√ºr Performance",impact:"medium",affectedCategories:["F√ú-03"],details:"Lasttests, Performancetests, Benchmarking"},{category:"additions",title:"Kerberos",description:"Kerberos f√ºr Zugriffskontrolle im Netzwerk",impact:"medium",affectedCategories:["BP-01"],details:"Authentifizierung, Autorisierung"},{category:"additions",title:"ODBC",description:"ODBC f√ºr Datenabruf",impact:"medium",affectedCategories:["BP-01"],details:"Datenbankverbindungen, Treiber"},{category:"additions",title:"Monitoring",description:"Monitoring von Systemen mit Schwellwerten",impact:"medium",affectedCategories:["BP-01"],details:"Festlegen von Monitoringdaten und Schwellwerten"},{category:"additions",title:"Programm- und Konfigurationsdokumentation",description:"Explizite Anforderung an Dokumentation",impact:"medium",affectedCategories:["BP-01"],details:"Dokumentationsstandards, Checklisten"},{category:"additions",title:"NAS und SAN",description:"Network Attached Storage und Storage Area Network",impact:"low",affectedCategories:["BP-02"],details:"Speicherl√∂sungen, Netzwerkspeicher"},{category:"removals",title:"Struktogramm und PAP",description:"Struktogramm (Nassi-Shneiderman) und Programmablaufplan entfernt",impact:"high",affectedCategories:["F√ú-02","BP-04"],replacement:"Aktivit√§tsdiagramm oder Pseudocode",details:"Modernisierung der Darstellungsmethoden"},{category:"removals",title:"Trend-Themen",description:"Smart Grid, IoT, Industrie 4.0, KI, Blockchain, Big Data, Augmented Reality",impact:"medium",affectedCategories:["F√ú-02"],replacement:null,details:"Trends von gestern sind Normalzustand heute, teilweise in andere Berufe verschoben (z.B. FIDV)"},{category:"removals",title:"Load Balancing",description:"Load Balancing nicht mehr explizit gefordert",impact:"low",affectedCategories:["BP-01"],replacement:null,details:"Nicht mehr im Katalog"},{category:"removals",title:"Data Warehouse",description:"Data Warehouse nicht mehr explizit gefordert",impact:"low",affectedCategories:["BP-02"],replacement:null,details:"Nicht mehr im Katalog"},{category:"removals",title:"Programmierparadigmen",description:"Programmierparadigmen (Skriptsprache, Compilersprache) entfernt",impact:"low",affectedCategories:["BP-04"],replacement:null,details:"Nicht mehr explizit gefordert"}],$g=[{priority:"critical",topic:"SQL",reason:"Detailliertes Beiblatt, sehr pr√ºfungsrelevant",estimatedHours:20,resources:["SQL-Beiblatt","Praktische √úbungen","Online-SQL-Editoren"]},{priority:"critical",topic:"Test Driven Development (TDD)",reason:"Neu und wichtig f√ºr moderne Softwareentwicklung",estimatedHours:10,resources:["TDD-Tutorials","Unit-Test-Frameworks","Praktische √úbungen"]},{priority:"critical",topic:"Scrum",reason:"Explizit genannt, wichtig f√ºr Projektmanagement",estimatedHours:8,resources:["Scrum Guide","Agile Methoden","Praxisbeispiele"]},{priority:"critical",topic:"Sortierverfahren",reason:"Neu und grundlegend f√ºr Algorithmen",estimatedHours:12,resources:["Algorithmen-B√ºcher","Visualisierungen","Code-Implementierungen"]},{priority:"high",topic:"Architektur-Pattern",reason:"Neu zus√§tzlich zu Design-Pattern",estimatedHours:15,resources:["Software-Architektur-B√ºcher","Pattern-Kataloge","Praxisbeispiele"]},{priority:"high",topic:"Sicherheitsbedrohungen",reason:"Wichtig f√ºr IT-Sicherheit",estimatedHours:10,resources:["IT-Security-Grundlagen","Angriffsszenarien","Gegenma√ünahmen"]},{priority:"high",topic:"Cyber-physische Systeme",reason:"Neu und zukunftsrelevant",estimatedHours:8,resources:["CPS-Grundlagen","Sensor/Aktor-Programmierung","Bibliotheken"]},{priority:"medium",topic:"Kapselung in OOP",reason:"Explizit genannt, Grundlage f√ºr OOP",estimatedHours:6,resources:["OOP-Grundlagen","Code-Beispiele","Best Practices"]}],Gg=["Fokus auf neue Themen 2025 legen","SQL-Beiblatt auswendig lernen und praktisch √ºben","TDD-Zyklus verstehen und anwenden k√∂nnen","Scrum-Rollen, Events und Artefakte kennen","Sortierverfahren implementieren und Komplexit√§t berechnen k√∂nnen","Architektur-Pattern von Design-Pattern unterscheiden k√∂nnen","Sicherheitsbedrohungen erkennen und Gegenma√ünahmen benennen k√∂nnen","Aktivit√§tsdiagramme statt Struktogramme verwenden","Alte Pr√ºfungen ab 2020 durcharbeiten, aber √Ñnderungen 2025 beachten"],Ug={announcement:"2024-10-01",catalogPublished:"2024-11-01",firstExam:"2025-05-01",winterExam:"2025-11-01"},Hg={version:xg,effectiveDate:Vg,examPeriod:Fg,source:Kg,summary:Wg,majorChanges:jg,studyRecommendations:$g,examPreparationTips:Gg,timeline:Ug},Qg="ap2-complete-2025",Zg="AP2 Komplett-Vorbereitung 2025",Jg="Vollst√§ndiger Lernpfad zur Vorbereitung auf die IHK Abschlusspr√ºfung Teil 2 f√ºr Fachinformatiker Anwendungsentwicklung. Dieser Pfad deckt alle Themen des Pr√ºfungskatalogs 2025 systematisch ab und ber√ºcksichtigt alle neuen und ge√§nderten Inhalte.",Yg="AP2-2025",Xg="intermediate",eh=180,nh=["AP2","Komplett","Pr√ºfungsvorbereitung","2025"],th=[{moduleId:"fue-01-planning",order:1,required:!0},{moduleId:"fue-02-development",order:2,required:!0},{moduleId:"sql-ddl",order:3,required:!0},{moduleId:"sql-dml",order:4,required:!0},{moduleId:"sql-dql",order:5,required:!0},{moduleId:"fue-03-quality",order:6,required:!0},{moduleId:"bp-03-tdd",order:7,required:!0},{moduleId:"fue-04-security",order:8,required:!0},{moduleId:"fue-04-security-threats",order:9,required:!0},{moduleId:"bp-01-conception",order:10,required:!0},{moduleId:"bp-01-monitoring",order:11,required:!0},{moduleId:"bp-01-documentation",order:12,required:!0},{moduleId:"bp-02-quality-assurance",order:13,required:!0},{moduleId:"bp-02-data-formats",order:14,required:!0},{moduleId:"bp-02-cloud-models",order:15,required:!0},{moduleId:"bp-03-software-quality",order:16,required:!0},{moduleId:"bp-03-cps",order:17,required:!0},{moduleId:"bp-03-rest-api",order:18,required:!0},{moduleId:"bp-04-scrum",order:19,required:!0},{moduleId:"bp-04-architecture-patterns",order:20,required:!0},{moduleId:"bp-04-design-patterns",order:21,required:!0},{moduleId:"bp-05-encapsulation",order:22,required:!0},{moduleId:"bp-05-sorting",order:23,required:!0},{moduleId:"bp-05-data-structures",order:24,required:!0},{moduleId:"bp-05-sql-reference",order:25,required:!0}],ih=[{quizId:"sql-comprehensive-quiz",order:1,unlockAfterModules:["sql-ddl","sql-dml","sql-dql"]},{quizId:"tdd-quiz",order:2,unlockAfterModules:["bp-03-tdd"]},{quizId:"scrum-quiz",order:3,unlockAfterModules:["bp-04-scrum"]},{quizId:"sorting-algorithms-quiz",order:4,unlockAfterModules:["bp-05-sorting"]},{quizId:"security-threats-quiz",order:5,unlockAfterModules:["fue-04-security","fue-04-security-threats"]}],rh=[{title:"Grundlagen abgeschlossen",description:"Du hast die fachrichtungs√ºbergreifenden Grundlagen erfolgreich abgeschlossen und bist bereit f√ºr die berufsprofilgebenden Themen.",requiredModules:["fue-01-planning","fue-02-development","fue-03-quality","fue-04-security"],requiredQuizzes:[]},{title:"SQL-Kompetenz erreicht",description:"Du beherrschst alle SQL-Befehle aus dem Pr√ºfungsbeiblatt und kannst komplexe Datenbankabfragen durchf√ºhren.",requiredModules:["sql-ddl","sql-dml","sql-dql","bp-05-sql-reference"],requiredQuizzes:["sql-comprehensive-quiz"]},{title:"Neue Themen 2025 gemeistert",description:"Du hast alle neuen Themen ab 2025 erfolgreich gelernt und bist auf dem aktuellen Stand der Pr√ºfungsanforderungen.",requiredModules:["bp-03-tdd","bp-04-scrum","bp-05-sorting","bp-03-cps","bp-04-architecture-patterns","fue-04-security-threats","bp-05-encapsulation"],requiredQuizzes:["tdd-quiz","scrum-quiz","sorting-algorithms-quiz","security-threats-quiz"]},{title:"Softwareentwicklung vertieft",description:"Du hast fundierte Kenntnisse in Softwareentwicklung, Architektur und Best Practices erworben.",requiredModules:["bp-03-software-quality","bp-03-rest-api","bp-04-architecture-patterns","bp-04-design-patterns"],requiredQuizzes:[]},{title:"OOP und Algorithmen beherrscht",description:"Du verstehst objektorientierte Programmierung und wichtige Algorithmen vollst√§ndig.",requiredModules:["bp-05-encapsulation","bp-05-sorting","bp-05-data-structures"],requiredQuizzes:["sorting-algorithms-quiz"]},{title:"Pr√ºfungsbereit",description:"Herzlichen Gl√ºckwunsch! Du hast alle Themen durchgearbeitet und bist bereit f√ºr die AP2-Pr√ºfung 2025.",requiredModules:["fue-01-planning","fue-02-development","fue-03-quality","fue-04-security","fue-04-security-threats","bp-01-conception","bp-01-monitoring","bp-01-documentation","bp-02-quality-assurance","bp-02-data-formats","bp-02-cloud-models","bp-03-software-quality","bp-03-cps","bp-03-tdd","bp-03-rest-api","bp-04-scrum","bp-04-architecture-patterns","bp-04-design-patterns","bp-05-encapsulation","bp-05-sorting","bp-05-data-structures","bp-05-sql-reference","sql-ddl","sql-dml","sql-dql"],requiredQuizzes:["sql-comprehensive-quiz","tdd-quiz","scrum-quiz","sorting-algorithms-quiz","security-threats-quiz"]}],sh={id:Qg,title:Zg,description:Jg,targetExam:Yg,difficulty:Xg,estimatedDuration:eh,tags:nh,modules:th,quizzes:ih,milestones:rh},ah="sql-mastery-2025",oh="SQL-Mastery: Von Grundlagen bis Experte",lh="Fokussierter Lernpfad zur vollst√§ndigen Beherrschung von SQL basierend auf dem IHK Pr√ºfungsbeiblatt 2025. Dieser Pfad f√ºhrt dich systematisch von den Grundlagen bis zu komplexen Datenbankabfragen und bereitet dich optimal auf SQL-Aufgaben in der AP2 vor.",uh="AP2-2025",ch="beginner",dh=40,mh=["SQL","Datenbanken","Beiblatt","DDL","DML","DQL"],gh=[{moduleId:"sql-ddl",order:1,required:!0},{moduleId:"sql-dml",order:2,required:!0},{moduleId:"sql-dql",order:3,required:!0},{moduleId:"bp-05-sql-reference",order:4,required:!0}],hh=[{quizId:"sql-comprehensive-quiz",order:1,unlockAfterModules:["sql-ddl","sql-dml","sql-dql"]}],ph=[{title:"DDL gemeistert",description:"Du kannst Tabellen erstellen, √§ndern und Indizes anlegen. Die Grundlagen der Datenbankstruktur sind dir vertraut.",requiredModules:["sql-ddl"],requiredQuizzes:[]},{title:"DML beherrscht",description:"Du kannst Daten einf√ºgen, aktualisieren und l√∂schen. Die Manipulation von Datenbankdaten ist f√ºr dich kein Problem mehr.",requiredModules:["sql-ddl","sql-dml"],requiredQuizzes:[]},{title:"DQL Experte",description:"Du beherrschst komplexe SELECT-Abfragen mit JOINs, Subqueries, Aggregatfunktionen und Gruppierungen.",requiredModules:["sql-ddl","sql-dml","sql-dql"],requiredQuizzes:[]},{title:"SQL-Master",description:"Herzlichen Gl√ºckwunsch! Du beherrschst alle SQL-Befehle aus dem Pr√ºfungsbeiblatt und bist bereit f√ºr jede SQL-Aufgabe in der AP2.",requiredModules:["sql-ddl","sql-dml","sql-dql","bp-05-sql-reference"],requiredQuizzes:["sql-comprehensive-quiz"]}],fh={id:ah,title:oh,description:lh,targetExam:uh,difficulty:ch,estimatedDuration:dh,tags:mh,modules:gh,quizzes:hh,milestones:ph},bh="new-topics-2025",kh="Neue Themen 2025: Pr√ºfungs√§nderungen meistern",zh="Fokussierter Lernpfad f√ºr alle neuen und ge√§nderten Themen im Pr√ºfungskatalog 2025. Dieser Pfad hilft dir, dich gezielt auf die wichtigsten Neuerungen vorzubereiten und sicherzustellen, dass du keine pr√ºfungsrelevanten √Ñnderungen verpasst.",vh="AP2-2025",yh="intermediate",Sh=50,wh=["Neu 2025","Pr√ºfungs√§nderungen","TDD","Scrum","Sortierverfahren","CPS","Sicherheit"],Ah=[{moduleId:"bp-03-tdd",order:1,required:!0},{moduleId:"bp-04-scrum",order:2,required:!0},{moduleId:"bp-05-sorting",order:3,required:!0},{moduleId:"bp-03-cps",order:4,required:!0},{moduleId:"bp-04-architecture-patterns",order:5,required:!0},{moduleId:"fue-04-security-threats",order:6,required:!0},{moduleId:"bp-05-encapsulation",order:7,required:!0},{moduleId:"sql-ddl",order:8,required:!0},{moduleId:"sql-dml",order:9,required:!0},{moduleId:"sql-dql",order:10,required:!0},{moduleId:"bp-01-monitoring",order:11,required:!0},{moduleId:"bp-01-documentation",order:12,required:!0},{moduleId:"bp-02-quality-assurance",order:13,required:!1},{moduleId:"bp-03-software-quality",order:14,required:!1}],Eh=[{quizId:"tdd-quiz",order:1,unlockAfterModules:["bp-03-tdd"]},{quizId:"scrum-quiz",order:2,unlockAfterModules:["bp-04-scrum"]},{quizId:"sorting-algorithms-quiz",order:3,unlockAfterModules:["bp-05-sorting"]},{quizId:"security-threats-quiz",order:4,unlockAfterModules:["fue-04-security-threats"]},{quizId:"sql-comprehensive-quiz",order:5,unlockAfterModules:["sql-ddl","sql-dml","sql-dql"]}],_h=[{title:"Agile Methoden verstanden",description:"Du beherrschst Test Driven Development und Scrum - zwei zentrale neue Themen f√ºr 2025.",requiredModules:["bp-03-tdd","bp-04-scrum"],requiredQuizzes:["tdd-quiz","scrum-quiz"]},{title:"Algorithmen und OOP vertieft",description:"Du verstehst Sortierverfahren und Kapselung in der objektorientierten Programmierung.",requiredModules:["bp-05-sorting","bp-05-encapsulation"],requiredQuizzes:["sorting-algorithms-quiz"]},{title:"Moderne Technologien kennengelernt",description:"Du kennst Cyber-physische Systeme, Architektur-Pattern und moderne Sicherheitsbedrohungen.",requiredModules:["bp-03-cps","bp-04-architecture-patterns","fue-04-security-threats"],requiredQuizzes:["security-threats-quiz"]},{title:"SQL-Beiblatt gemeistert",description:"Du beherrschst alle SQL-Befehle aus dem neuen detaillierten Pr√ºfungsbeiblatt.",requiredModules:["sql-ddl","sql-dml","sql-dql"],requiredQuizzes:["sql-comprehensive-quiz"]},{title:"Bereit f√ºr 2025",description:"Herzlichen Gl√ºckwunsch! Du bist mit allen wichtigen √Ñnderungen im Pr√ºfungskatalog 2025 vertraut und optimal vorbereitet.",requiredModules:["bp-03-tdd","bp-04-scrum","bp-05-sorting","bp-03-cps","bp-04-architecture-patterns","fue-04-security-threats","bp-05-encapsulation","sql-ddl","sql-dml","sql-dql","bp-01-monitoring","bp-01-documentation"],requiredQuizzes:["tdd-quiz","scrum-quiz","sorting-algorithms-quiz","security-threats-quiz","sql-comprehensive-quiz"]}],Dh={id:bh,title:kh,description:zh,targetExam:vh,difficulty:yh,estimatedDuration:Sh,tags:wh,modules:Ah,quizzes:Eh,milestones:_h},Ph="oop-fundamentals-2025",Th="OOP-Fundamentals: Objektorientierte Programmierung meistern",qh="Umfassender Lernpfad zur objektorientierten Programmierung. Dieser Pfad f√ºhrt dich durch alle wichtigen OOP-Konzepte - von Kapselung √ºber Vererbung bis zu Polymorphie - und bereitet dich optimal auf OOP-Aufgaben in der AP2 vor.",Rh="AP2-2025",Ih="beginner",Ch=35,Lh=["OOP","Objektorientierung","Kapselung","Vererbung","Polymorphie","Design Patterns"],Mh=[{moduleId:"bp-05-encapsulation",order:1,required:!0},{moduleId:"bp-05-data-structures",order:2,required:!0},{moduleId:"bp-04-design-patterns",order:3,required:!0},{moduleId:"bp-04-architecture-patterns",order:4,required:!0},{moduleId:"bp-03-software-quality",order:5,required:!1},{moduleId:"bp-03-tdd",order:6,required:!1}],Oh=[{quizId:"tdd-quiz",order:1,unlockAfterModules:["bp-05-encapsulation","bp-03-tdd"]}],Nh=[{title:"Kapselung verstanden",description:"Du verstehst das Konzept der Kapselung und kannst Zugriffsmodifikatoren (private, protected, public) korrekt einsetzen.",requiredModules:["bp-05-encapsulation"],requiredQuizzes:[]},{title:"Datenstrukturen beherrscht",description:"Du kennst wichtige Datenstrukturen und kannst sie in objektorientierten Programmen einsetzen.",requiredModules:["bp-05-encapsulation","bp-05-data-structures"],requiredQuizzes:[]},{title:"Design Patterns anwenden",description:"Du kennst wichtige Design Patterns und verstehst, wann und wie sie eingesetzt werden.",requiredModules:["bp-05-encapsulation","bp-05-data-structures","bp-04-design-patterns"],requiredQuizzes:[]},{title:"Architektur verstehen",description:"Du verstehst verschiedene Architektur-Pattern wie MVC, Layered Architecture und Microservices.",requiredModules:["bp-05-encapsulation","bp-05-data-structures","bp-04-design-patterns","bp-04-architecture-patterns"],requiredQuizzes:[]},{title:"OOP-Experte",description:"Herzlichen Gl√ºckwunsch! Du beherrschst die Grundlagen der objektorientierten Programmierung und bist bereit f√ºr komplexe OOP-Aufgaben.",requiredModules:["bp-05-encapsulation","bp-05-data-structures","bp-04-design-patterns","bp-04-architecture-patterns"],requiredQuizzes:[]}],Bh={id:Ph,title:Th,description:qh,targetExam:Rh,difficulty:Ih,estimatedDuration:Ch,tags:Lh,modules:Mh,quizzes:Oh,milestones:Nh},xh="fue-01-planning",Vh="F√ú-01: Planen eines Softwareproduktes",Fh="Umfassende Einf√ºhrung in die Planung von Softwareprodukten: Kundenanforderungen analysieren, Projekte strukturieren und Wirtschaftlichkeit bewerten.",Kh="F√ú-01",Wh="Planen eines Softwareproduktes",jh="intermediate",$h="high",Gh=!1,Uh=!1,Hh=!0,Qh=90,Zh=[],Jh=["Projektplanung","Anforderungsanalyse","Wirtschaftlichkeit","Kundenanforderungen","Projektmanagement"],Yh=`# F√ú-01: Planen eines Softwareproduktes

## Einf√ºhrung

Die Planung eines Softwareproduktes ist der erste und wichtigste Schritt in jedem Softwareprojekt. Eine gr√ºndliche Planung legt den Grundstein f√ºr den Projekterfolg und hilft, Risiken fr√ºhzeitig zu erkennen.

<!-- micro-quiz:fue-01-planning-einfuhrung-micro-1 -->
## 1. Kundenanforderungen analysieren

### 1.1 Anforderungserhebung

Die Anforderungserhebung ist der Prozess, bei dem die Bed√ºrfnisse und Erwartungen des Kunden ermittelt werden.

**Methoden zur Anforderungserhebung:**

- **Interviews**: Direkte Gespr√§che mit Stakeholdern
- **Workshops**: Gemeinsame Arbeitssitzungen mit allen Beteiligten
- **Frageb√∂gen**: Strukturierte Befragungen
- **Beobachtung**: Analyse bestehender Arbeitsabl√§ufe
- **Prototyping**: Fr√ºhe Visualisierung von L√∂sungsans√§tzen

### 1.2 Arten von Anforderungen

**Funktionale Anforderungen:**
- Beschreiben WAS das System tun soll
- Beispiel: "Das System muss Benutzer authentifizieren k√∂nnen"

**Nicht-funktionale Anforderungen:**
- Beschreiben WIE das System arbeiten soll
- Kategorien:
  - **Performance**: Antwortzeiten, Durchsatz
  - **Sicherheit**: Authentifizierung, Autorisierung, Verschl√ºsselung
  - **Usability**: Benutzerfreundlichkeit, Barrierefreiheit
  - **Zuverl√§ssigkeit**: Verf√ºgbarkeit, Fehlertoleranz
  - **Wartbarkeit**: Erweiterbarkeit, Testbarkeit

### 1.3 Anforderungsdokumentation

**Lastenheft (Requirements Specification):**
- Wird vom Auftraggeber erstellt
- Beschreibt die Anforderungen aus Kundensicht
- Enth√§lt: Ziele, Funktionen, Rahmenbedingungen

**Pflichtenheft (Functional Specification):**
- Wird vom Auftragnehmer erstellt
- Beschreibt WIE die Anforderungen umgesetzt werden
- Enth√§lt: Technische Details, Architektur, Schnittstellen

## 2. Projektplanung
<!-- micro-quiz:fue-01-planning-1-kundenanforderungen-analysieren-micro-1 -->


### 2.1 Projektstrukturplan (PSP)

Der PSP gliedert das Projekt in √ºberschaubare Arbeitspakete.

**Struktur:**
\`\`\`
Projekt
‚îú‚îÄ‚îÄ Phase 1: Analyse
‚îÇ   ‚îú‚îÄ‚îÄ Anforderungserhebung
‚îÇ   ‚îú‚îÄ‚îÄ Machbarkeitsstudie
‚îÇ   ‚îî‚îÄ‚îÄ Risikoanalyse
‚îú‚îÄ‚îÄ Phase 2: Design
‚îÇ   ‚îú‚îÄ‚îÄ Architekturentwurf
‚îÇ   ‚îú‚îÄ‚îÄ Datenbankdesign
‚îÇ   ‚îî‚îÄ‚îÄ UI/UX Design
‚îú‚îÄ‚îÄ Phase 3: Implementierung
‚îÇ   ‚îú‚îÄ‚îÄ Backend-Entwicklung
‚îÇ   ‚îú‚îÄ‚îÄ Frontend-Entwicklung
‚îÇ   ‚îî‚îÄ‚îÄ Integration
‚îî‚îÄ‚îÄ Phase 4: Test & Deployment
    ‚îú‚îÄ‚îÄ Testing
    ‚îú‚îÄ‚îÄ Deployment
    ‚îî‚îÄ‚îÄ Schulung
\`\`\`

### 2.2 Zeitplanung

**Gantt-Diagramm:**
- Visualisiert Projektphasen und Abh√§ngigkeiten
- Zeigt kritischen Pfad
- Erm√∂glicht Ressourcenplanung

**Meilensteine:**
- Wichtige Zwischenziele im Projekt
- Beispiele:
  - Anforderungen abgenommen
  - Design freigegeben
  - MVP fertiggestellt
  - Go-Live

### 2.3 Ressourcenplanung

**Personalressourcen:**
- Entwickler (Frontend, Backend, Full-Stack)
- Designer (UI/UX)
- Tester (QA)
- Projektmanager
- Product Owner

**Technische Ressourcen:**
- Entwicklungsumgebungen
- Server und Infrastruktur
- Software-Lizenzen
- Tools und Frameworks

### 2.4 Risikoanalyse

**Risikokategorien:**

1. **Technische Risiken**
   - Neue Technologien
   - Komplexe Integrationen
   - Performance-Probleme

2. **Organisatorische Risiken**
   - Ressourcenengp√§sse
   - Kommunikationsprobleme
   - √Ñnderungen in der Projektleitung

3. **Externe Risiken**
   - √Ñnderungen in Anforderungen
   - Abh√§ngigkeiten von Dritten
   - Rechtliche √Ñnderungen

**Risikobewertung:**
- **Eintrittswahrscheinlichkeit**: Niedrig, Mittel, Hoch
- **Auswirkung**: Gering, Mittel, Kritisch
- **Risikopriorit√§tszahl** = Wahrscheinlichkeit √ó Auswirkung

<!-- micro-quiz:fue-01-planning-2-projektplanung-micro-1 -->
## 3. Wirtschaftlichkeitsberechnung

### 3.1 Kostenarten

**Einmalige Kosten:**
- Entwicklungskosten
- Hardware-Anschaffung
- Software-Lizenzen
- Schulungskosten
- Migrationskosten

**Laufende Kosten:**
- Wartung und Support
- Hosting und Betrieb
- Lizenzgeb√ºhren
- Personalkosten

### 3.2 Nutzenbetrachtung

**Quantifizierbarer Nutzen:**
- Kosteneinsparungen
- Zeitersparnis
- Produktivit√§tssteigerung
- Umsatzsteigerung

**Nicht-quantifizierbarer Nutzen:**
- Verbesserte Kundenzufriedenheit
- Wettbewerbsvorteile
- Imagegewinn
- Mitarbeiterzufriedenheit

### 3.3 Wirtschaftlichkeitskennzahlen

**Return on Investment (ROI):**
\`\`\`
ROI = (Gewinn - Investition) / Investition √ó 100%
\`\`\`

Beispiel:
- Investition: 100.000 ‚Ç¨
- J√§hrlicher Gewinn: 30.000 ‚Ç¨
- ROI = (30.000 - 100.000) / 100.000 = -70% (im ersten Jahr)
- Nach 4 Jahren: ROI = 20%

**Amortisationszeit (Payback Period):**
\`\`\`
Amortisationszeit = Investition / J√§hrlicher Gewinn
\`\`\`

Beispiel:
- Investition: 100.000 ‚Ç¨
- J√§hrlicher Gewinn: 30.000 ‚Ç¨
- Amortisationszeit = 100.000 / 30.000 = 3,33 Jahre

**Kapitalwert (Net Present Value - NPV):**

Ber√ºcksichtigt den Zeitwert des Geldes:
\`\`\`
NPV = Œ£ (Cashflow_t / (1 + i)^t) - Investition
\`\`\`

Wobei:
- t = Jahr
- i = Kalkulationszinssatz

### 3.4 Make-or-Buy-Entscheidung

**Eigenentwicklung (Make):**

**Vorteile:**
- Volle Kontrolle √ºber Funktionen
- Anpassbar an spezifische Anforderungen
- Keine Lizenzgeb√ºhren
- Unabh√§ngigkeit von Anbietern

**Nachteile:**
- Hohe Entwicklungskosten
- L√§ngere Time-to-Market
- Wartungsaufwand
- Risiko von Fehlentwicklungen

**Standardsoftware (Buy):**

**Vorteile:**
- Schnelle Verf√ºgbarkeit
- Geringere Anfangsinvestition
- Bew√§hrte L√∂sung
- Support durch Anbieter

**Nachteile:**
- Lizenzkosten
- Eingeschr√§nkte Anpassbarkeit
- Abh√§ngigkeit vom Anbieter
- M√∂glicherweise √úberangebot an Funktionen

## 4. Projektdokumentation
<!-- micro-quiz:fue-01-planning-3-wirtschaftlichkeitsberechnung-micro-1 -->


### 4.1 Wichtige Dokumente

1. **Projektauftrag**
   - Projektziele
   - Projektumfang
   - Budget und Zeitrahmen
   - Stakeholder

2. **Projektplan**
   - Zeitplan
   - Ressourcenplan
   - Kostenplan
   - Qualit√§tsplan

3. **Statusberichte**
   - Fortschritt
   - Probleme und Risiken
   - N√§chste Schritte

4. **Abschlussbericht**
   - Zielerreichung
   - Lessons Learned
   - Empfehlungen

<!-- micro-quiz:fue-01-planning-4-projektdokumentation-micro-1 -->
## 5. Stakeholder-Management

### 5.1 Stakeholder identifizieren

**Interne Stakeholder:**
- Management
- Entwicklungsteam
- IT-Abteilung
- Fachabteilungen

**Externe Stakeholder:**
- Kunden
- Lieferanten
- Partner
- Beh√∂rden

### 5.2 Stakeholder-Analyse

**Macht-Interesse-Matrix:**

\`\`\`
        Hohe Macht
            |
  Zufrieden |  Eng einbinden
   stellen  |  und managen
------------|-------------
  Beobachten|  Informiert
            |  halten
        Niedriges Interesse ‚Üí Hohes Interesse
\`\`\`

## Pr√ºfungsrelevante Punkte
<!-- micro-quiz:fue-01-planning-5-stakeholder-management-micro-1 -->


‚úì Unterschied zwischen Lastenheft und Pflichtenheft
‚úì Funktionale vs. nicht-funktionale Anforderungen
‚úì Wirtschaftlichkeitsberechnungen (ROI, Amortisation)
‚úì Make-or-Buy-Entscheidung
‚úì Projektstrukturplan und Meilensteine
‚úì Risikoanalyse und -bewertung
‚úì Stakeholder-Management

<!-- micro-quiz:fue-01-planning-prufungsrelevante-punkte-micro-1 -->
## Zusammenfassung

Die Planung eines Softwareproduktes umfasst:
1. Gr√ºndliche Analyse der Kundenanforderungen
2. Strukturierte Projektplanung mit Zeitplan und Ressourcen
3. Wirtschaftlichkeitsbetrachtung und Kostenanalyse
4. Risikomanagement
5. Stakeholder-Einbindung

Eine sorgf√§ltige Planung minimiert Risiken und erh√∂ht die Erfolgswahrscheinlichkeit des Projekts erheblich.

<!-- micro-quiz:demo-mq1 -->

<!-- micro-quiz:demo-mq2 -->



<!-- micro-quiz:fue-01-planning-quiz -->
<!-- micro-quiz:fue-01-planning-zusammenfassung-micro-1 -->
`,Xh=[{language:"markdown",title:"Beispiel: Lastenheft-Struktur",code:`# Lastenheft: Online-Shop System

## 1. Ausgangssituation
Das Unternehmen XY m√∂chte seinen Vertrieb digitalisieren.

## 2. Zielsetzung
- Umsatzsteigerung um 30% in 2 Jahren
- 24/7 Verf√ºgbarkeit
- Reduzierung manueller Bestellprozesse

## 3. Funktionale Anforderungen

### 3.1 Produktverwaltung
- Produkte anlegen, bearbeiten, l√∂schen
- Kategorisierung
- Bildergalerie
- Lagerbestandsverwaltung

### 3.2 Bestellprozess
- Warenkorb-Funktionalit√§t
- Checkout-Prozess
- Zahlungsabwicklung (PayPal, Kreditkarte)
- Bestellbest√§tigung per E-Mail

### 3.3 Benutzerverwaltung
- Registrierung und Login
- Profilmanagement
- Bestellhistorie

## 4. Nicht-funktionale Anforderungen

### 4.1 Performance
- Seitenladezeit < 2 Sekunden
- Unterst√ºtzung von 1000 gleichzeitigen Benutzern

### 4.2 Sicherheit
- SSL-Verschl√ºsselung
- DSGVO-konform
- PCI-DSS-konform f√ºr Zahlungen

### 4.3 Usability
- Responsive Design
- Barrierefreiheit (WCAG 2.1 Level AA)
- Mehrsprachigkeit (DE, EN)

## 5. Rahmenbedingungen
- Budget: 150.000 ‚Ç¨
- Zeitrahmen: 9 Monate
- Go-Live: Q3 2025`,explanation:"Ein Lastenheft beschreibt die Anforderungen aus Kundensicht. Es definiert WAS ben√∂tigt wird, aber nicht WIE es umgesetzt wird."},{language:"markdown",title:"Beispiel: Wirtschaftlichkeitsberechnung",code:`# Wirtschaftlichkeitsberechnung: CRM-System

## Investitionskosten (einmalig)
- Software-Entwicklung: 80.000 ‚Ç¨
- Hardware: 15.000 ‚Ç¨
- Schulung: 5.000 ‚Ç¨
- Migration: 10.000 ‚Ç¨
**Gesamt: 110.000 ‚Ç¨**

## Laufende Kosten (j√§hrlich)
- Wartung: 8.000 ‚Ç¨
- Hosting: 3.000 ‚Ç¨
- Support: 4.000 ‚Ç¨
**Gesamt: 15.000 ‚Ç¨ / Jahr**

## Erwarteter Nutzen (j√§hrlich)
- Zeitersparnis (2 MA √ó 20% √ó 50.000 ‚Ç¨): 20.000 ‚Ç¨
- Reduzierte Fehlerquote: 5.000 ‚Ç¨
- Verbesserte Kundenbindung: 15.000 ‚Ç¨
**Gesamt: 40.000 ‚Ç¨ / Jahr**

## Wirtschaftlichkeitskennzahlen

### Amortisationszeit
Amortisation = 110.000 ‚Ç¨ / (40.000 ‚Ç¨ - 15.000 ‚Ç¨)
Amortisation = 110.000 ‚Ç¨ / 25.000 ‚Ç¨
**Amortisation = 4,4 Jahre**

### ROI nach 5 Jahren
Gesamtnutzen = 5 √ó 40.000 ‚Ç¨ = 200.000 ‚Ç¨
Gesamtkosten = 110.000 ‚Ç¨ + (5 √ó 15.000 ‚Ç¨) = 185.000 ‚Ç¨
ROI = (200.000 ‚Ç¨ - 185.000 ‚Ç¨) / 185.000 ‚Ç¨ √ó 100%
**ROI = 8,1%**

## Empfehlung
Das Projekt ist wirtschaftlich sinnvoll, da:
- Positive Amortisation innerhalb von 5 Jahren
- Kontinuierlicher Nutzen nach Amortisation
- Strategische Vorteile (Kundenbindung, Wettbewerbsf√§higkeit)`,explanation:"Eine Wirtschaftlichkeitsberechnung vergleicht Kosten und Nutzen eines Projekts √ºber einen definierten Zeitraum."}],ep=["fue-01-planning-quiz"],np=["fue-01-planning-einfuhrung-micro-1","fue-01-planning-1-kundenanforderungen-analysieren-micro-1","fue-01-planning-2-projektplanung-micro-1","fue-01-planning-3-wirtschaftlichkeitsberechnung-micro-1","fue-01-planning-4-projektdokumentation-micro-1","fue-01-planning-5-stakeholder-management-micro-1","fue-01-planning-prufungsrelevante-punkte-micro-1","fue-01-planning-quiz","fue-01-planning-zusammenfassung-micro-1"],tp=[{title:"Projektmanagement Grundlagen",url:"https://www.projektmagazin.de",type:"article"},{title:"Requirements Engineering",url:"https://www.ireb.org",type:"documentation"}],ip="2025-01-10T00:00:00Z",rp="1.0",sp=["Du kannst projektplanung erkl√§ren","Du kannst anforderungsanalyse erkl√§ren","Du kannst wirtschaftlichkeit erkl√§ren","Du kannst kundenanforderungen erkl√§ren","Du kannst projektmanagement erkl√§ren"],ap="Umfassende Einf√ºhrung in die Planung von Softwareprodukten: Kundenanforderungen analysieren, Projekte strukturieren und Wirtschaftlichkeit bewerten.",op=[{id:"fu-01-planen-eines-softwareproduktes",title:"F√ú-01: Planen eines Softwareproduktes",summary:"Kernaspekt: F√ú-01: Planen eines Softwareproduktes"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"1-kundenanforderungen-analysieren",title:"1. Kundenanforderungen analysieren",summary:"Kernaspekt: 1. Kundenanforderungen analysieren"},{id:"2-projektplanung",title:"2. Projektplanung",summary:"Kernaspekt: 2. Projektplanung"},{id:"3-wirtschaftlichkeitsberechnung",title:"3. Wirtschaftlichkeitsberechnung",summary:"Kernaspekt: 3. Wirtschaftlichkeitsberechnung"},{id:"4-projektdokumentation",title:"4. Projektdokumentation",summary:"Kernaspekt: 4. Projektdokumentation"},{id:"5-stakeholder-management",title:"5. Stakeholder-Management",summary:"Kernaspekt: 5. Stakeholder-Management"},{id:"prufungsrelevante-punkte",title:"Pr√ºfungsrelevante Punkte",summary:"Kernaspekt: Pr√ºfungsrelevante Punkte"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],lp="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",up="Automatisch erg√§nzt: Review erforderlich",cp={id:xh,title:Vh,description:Fh,category:Kh,subcategory:Wh,difficulty:jh,examRelevance:$h,newIn2025:Gh,removedIn2025:Uh,important:Hh,estimatedTime:Qh,prerequisites:Zh,tags:Jh,content:Yh,codeExamples:Xh,relatedQuizzes:ep,microQuizzes:np,resources:tp,lastUpdated:ip,version:rp,learningObjectives:sp,summary:ap,contentOutline:op,accessibilityNotes:lp,editorNote:up},dp="fue-02-development",mp="F√ú-02: Entwickeln und Bereitstellen von Softwareanwendungen",gp="Kontrollstrukturen mit Aktivit√§tsdiagrammen und Pseudocode, Datenbank-Anomalien und Redundanzen erkennen. Wichtig: Struktogramme und PAP sind ab 2025 nicht mehr pr√ºfungsrelevant.",hp="F√ú-02",pp="Entwickeln und Bereitstellen",fp="intermediate",bp="high",kp=!1,zp=!1,vp=!0,yp=120,Sp=[],wp=["Kontrollstrukturen","Aktivit√§tsdiagramm","Pseudocode","Datenbank-Anomalien","Normalisierung","Redundanzen"],Ap=`# F√ú-02: Entwickeln und Bereitstellen von Softwareanwendungen

## Einf√ºhrung

Dieses Modul behandelt grundlegende Konzepte der Softwareentwicklung, insbesondere Kontrollstrukturen und Datenbankdesign. **Wichtig f√ºr die Pr√ºfung ab 2025**: Struktogramme (Nassi-Shneiderman-Diagramme) und Programmablaufpl√§ne (PAP) sind nicht mehr pr√ºfungsrelevant. Stattdessen werden **Aktivit√§tsdiagramme** und **Pseudocode** verwendet.

<!-- micro-quiz:fue-02-development-einfuhrung-micro-1 -->
## 1. Kontrollstrukturen

### 1.1 Grundlegende Kontrollstrukturen

Es gibt drei grundlegende Kontrollstrukturen in der Programmierung:

1. **Sequenz**: Befehle werden nacheinander ausgef√ºhrt
2. **Selektion (Verzweigung)**: Bedingte Ausf√ºhrung von Code
3. **Iteration (Schleife)**: Wiederholte Ausf√ºhrung von Code

### 1.2 Aktivit√§tsdiagramme (UML)

**NEU AB 2025**: Aktivit√§tsdiagramme sind die bevorzugte Methode zur Darstellung von Kontrollfl√ºssen.

#### Grundelemente eines Aktivit√§tsdiagramms:

- **Startknoten**: Gef√ºllter Kreis (‚óè)
- **Endknoten**: Gef√ºllter Kreis mit Ring (‚óâ)
- **Aktivit√§t**: Abgerundetes Rechteck
- **Entscheidungsknoten**: Raute (‚óá)
- **Merge-Knoten**: Raute (‚óá)
- **Fork/Join**: Horizontaler/vertikaler Balken
- **Kontrollfluss**: Pfeil (‚Üí)

#### Beispiel: Benutzer-Login

\`\`\`
    (‚óè) Start
     |
     v
[Benutzername eingeben]
     |
     v
[Passwort eingeben]
     |
     v
    <‚óá> Korrekt?
   /   \\
 Ja     Nein
 /       \\
v         v
[Dashboard]  [Fehlermeldung]
 |         |
 v         v
(‚óâ)       (‚óâ)
\`\`\`

#### Beispiel: Schleife mit Aktivit√§tsdiagramm

\`\`\`
    (‚óè) Start
     |
     v
[i = 0]
     |
     v
    <‚óá> i < 10?
   /   \\
 Nein   Ja
 /       \\
v         v
(‚óâ)    [Ausgabe i]
         |
         v
       [i++]
         |
         +--‚Üí (zur√ºck zur Bedingung)
\`\`\`

### 1.3 Pseudocode

**NEU AB 2025**: Pseudocode ist eine weitere akzeptierte Methode zur Darstellung von Algorithmen.

Pseudocode ist eine informelle Beschreibung eines Algorithmus in nat√ºrlicher Sprache mit programmiersprachlichen Elementen.

#### Beispiel: Benutzer-Login in Pseudocode

\`\`\`
FUNKTION login(benutzername, passwort)
    WENN benutzername IST LEER ODER passwort IST LEER DANN
        R√úCKGABE "Fehler: Felder d√ºrfen nicht leer sein"
    ENDE WENN
    
    benutzer = findeBenutzer(benutzername)
    
    WENN benutzer NICHT EXISTIERT DANN
        R√úCKGABE "Fehler: Benutzer nicht gefunden"
    ENDE WENN
    
    WENN passwort STIMMT √úBEREIN MIT benutzer.passwort DANN
        erstelleSession(benutzer)
        R√úCKGABE "Erfolg"
    SONST
        R√úCKGABE "Fehler: Falsches Passwort"
    ENDE WENN
ENDE FUNKTION
\`\`\`

#### Beispiel: Bubble Sort in Pseudocode

\`\`\`
FUNKTION bubbleSort(array)
    n = L√ÑNGE(array)
    
    F√úR i VON 0 BIS n-1
        F√úR j VON 0 BIS n-i-2
            WENN array[j] > array[j+1] DANN
                // Tausche Elemente
                temp = array[j]
                array[j] = array[j+1]
                array[j+1] = temp
            ENDE WENN
        ENDE F√úR
    ENDE F√úR
    
    R√úCKGABE array
ENDE FUNKTION
\`\`\`

### 1.4 Veraltete Darstellungsformen (NICHT mehr pr√ºfungsrelevant ab 2025)

‚ö†Ô∏è **WICHTIG**: Die folgenden Darstellungsformen sind ab 2025 NICHT mehr Teil des Pr√ºfungskatalogs:

- **Struktogramm (Nassi-Shneiderman-Diagramm)**
- **Programmablaufplan (PAP / Flussdiagramm)**

Falls Sie diese in √§lteren Unterlagen finden, konzentrieren Sie sich stattdessen auf **Aktivit√§tsdiagramme** und **Pseudocode**.

## 2. Datenbank-Anomalien und Redundanzen
<!-- micro-quiz:fue-02-development-1-kontrollstrukturen-micro-1 -->


**NEU AB 2025**: Erkennen von Anomalien und Redundanzen in Datenbanken ist explizit pr√ºfungsrelevant.

### 2.1 Was sind Anomalien?

Anomalien sind Probleme, die bei schlecht strukturierten Datenbanken auftreten k√∂nnen. Sie entstehen durch Redundanzen und fehlende Normalisierung.

### 2.2 Arten von Anomalien

#### 2.2.1 Einf√ºge-Anomalie (Insert Anomaly)

Ein neuer Datensatz kann nicht eingef√ºgt werden, ohne dass zus√§tzliche, m√∂glicherweise unbekannte Daten eingegeben werden m√ºssen.

**Beispiel:**

\`\`\`
Tabelle: Mitarbeiter_Projekte
+---------------+------------+----------------+------------------+
| MitarbeiterID | Name       | ProjektID      | Projektname      |
+---------------+------------+----------------+------------------+
| 1             | Anna Meyer | P001           | Website Relaunch |
| 2             | Tom M√ºller | P002           | CRM System       |
+---------------+------------+----------------+------------------+
\`\`\`

**Problem**: Ein neues Projekt kann nicht angelegt werden, ohne dass ein Mitarbeiter zugewiesen wird.

#### 2.2.2 √Ñnderungs-Anomalie (Update Anomaly)

Bei √Ñnderung eines Wertes m√ºssen mehrere Datens√§tze aktualisiert werden, sonst entstehen Inkonsistenzen.

**Beispiel:**

\`\`\`
Tabelle: Bestellungen
+-------------+---------------+------------------+
| BestellungID| KundenName    | KundenAdresse    |
+-------------+---------------+------------------+
| 1           | Max Mustermann| Hauptstr. 1      |
| 2           | Max Mustermann| Hauptstr. 1      |
| 3           | Max Mustermann| Hauptstr. 1      |
+-------------+---------------+------------------+
\`\`\`

**Problem**: Wenn Max Mustermann umzieht, m√ºssen alle drei Datens√§tze ge√§ndert werden. Wird einer vergessen, entstehen Inkonsistenzen.

#### 2.2.3 L√∂sch-Anomalie (Delete Anomaly)

Beim L√∂schen eines Datensatzes gehen ungewollt weitere Informationen verloren.

**Beispiel:**

\`\`\`
Tabelle: Mitarbeiter_Abteilungen
+---------------+------------+-------------+------------------+
| MitarbeiterID | Name       | AbteilungID | Abteilungsname   |
+---------------+------------+-------------+------------------+
| 1             | Anna Meyer | A01         | IT               |
| 2             | Tom M√ºller | A02         | Marketing        |
+---------------+------------+-------------+------------------+
\`\`\`

**Problem**: Wenn Tom M√ºller (der einzige Mitarbeiter im Marketing) gel√∂scht wird, geht die Information √ºber die Marketing-Abteilung verloren.

### 2.3 Redundanzen

Redundanz bedeutet, dass dieselbe Information mehrfach in der Datenbank gespeichert wird.

**Beispiel f√ºr Redundanz:**

\`\`\`
Tabelle: Bestellungen
+-------------+---------------+------------------+-------------+
| BestellungID| KundenName    | KundenEmail      | Produkt     |
+-------------+---------------+------------------+-------------+
| 1           | Max Mustermann| max@example.com  | Laptop      |
| 2           | Max Mustermann| max@example.com  | Maus        |
| 3           | Max Mustermann| max@example.com  | Tastatur    |
+-------------+---------------+------------------+-------------+
\`\`\`

**Problem**: Name und E-Mail von Max Mustermann werden dreimal gespeichert.

**Nachteile von Redundanzen:**
- Verschwendung von Speicherplatz
- Erh√∂htes Risiko f√ºr Inkonsistenzen
- H√∂herer Wartungsaufwand
- Langsamere Datenbank-Performance

### 2.4 Normalisierung als L√∂sung

Normalisierung ist der Prozess, Redundanzen zu eliminieren und Anomalien zu vermeiden.

#### Erste Normalform (1NF)

**Regel**: Jedes Attribut muss atomar sein (keine Listen oder Mehrfachwerte).

**Nicht in 1NF:**
\`\`\`
Tabelle: Kunden
+----------+----------------+-------------------------+
| KundenID | Name           | Telefonnummern          |
+----------+----------------+-------------------------+
| 1        | Max Mustermann | 0123-456, 0789-012      |
+----------+----------------+-------------------------+
\`\`\`

**In 1NF:**
\`\`\`
Tabelle: Kunden
+----------+----------------+
| KundenID | Name           |
+----------+----------------+
| 1        | Max Mustermann |
+----------+----------------+

Tabelle: Telefonnummern
+----------+----------------+
| KundenID | Telefonnummer  |
+----------+----------------+
| 1        | 0123-456       |
| 1        | 0789-012       |
+----------+----------------+
\`\`\`

#### Zweite Normalform (2NF)

**Regel**: 1NF + Alle Nicht-Schl√ºssel-Attribute sind voll funktional abh√§ngig vom Prim√§rschl√ºssel.

**Nicht in 2NF:**
\`\`\`
Tabelle: Bestellpositionen
+-------------+----------+---------------+------------+
| BestellungID| ProduktID| Produktname   | Menge      |
+-------------+----------+---------------+------------+
| 1           | 101      | Laptop        | 2          |
+-------------+----------+---------------+------------+
\`\`\`

**Problem**: Produktname h√§ngt nur von ProduktID ab, nicht von der Kombination BestellungID + ProduktID.

**In 2NF:**
\`\`\`
Tabelle: Bestellpositionen
+-------------+----------+------------+
| BestellungID| ProduktID| Menge      |
+-------------+----------+------------+
| 1           | 101      | 2          |
+-------------+----------+------------+

Tabelle: Produkte
+----------+---------------+
| ProduktID| Produktname   |
+----------+---------------+
| 101      | Laptop        |
+----------+---------------+
\`\`\`

#### Dritte Normalform (3NF)

**Regel**: 2NF + Keine transitiven Abh√§ngigkeiten (Nicht-Schl√ºssel-Attribute d√ºrfen nicht von anderen Nicht-Schl√ºssel-Attributen abh√§ngen).

**Nicht in 3NF:**
\`\`\`
Tabelle: Mitarbeiter
+---------------+------------+-------------+------------------+
| MitarbeiterID | Name       | AbteilungID | Abteilungsname   |
+---------------+------------+-------------+------------------+
| 1             | Anna Meyer | A01         | IT               |
+---------------+------------+-------------+------------------+
\`\`\`

**Problem**: Abteilungsname h√§ngt von AbteilungID ab, nicht direkt von MitarbeiterID.

**In 3NF:**
\`\`\`
Tabelle: Mitarbeiter
+---------------+------------+-------------+
| MitarbeiterID | Name       | AbteilungID |
+---------------+------------+-------------+
| 1             | Anna Meyer | A01         |
+---------------+------------+-------------+

Tabelle: Abteilungen
+-------------+------------------+
| AbteilungID | Abteilungsname   |
+-------------+------------------+
| A01         | IT               |
+-------------+------------------+
\`\`\`

### 2.5 Anomalien erkennen - Pr√ºfungstipps

**Checkliste f√ºr die Pr√ºfung:**

1. **Einf√ºge-Anomalie pr√ºfen:**
   - Kann ich einen neuen Datensatz einf√ºgen, ohne unbekannte Daten eingeben zu m√ºssen?

2. **√Ñnderungs-Anomalie pr√ºfen:**
   - Muss ich bei einer √Ñnderung mehrere Datens√§tze aktualisieren?
   - Gibt es redundante Daten?

3. **L√∂sch-Anomalie pr√ºfen:**
   - Gehen beim L√∂schen eines Datensatzes ungewollt andere Informationen verloren?

4. **Redundanzen identifizieren:**
   - Werden dieselben Daten mehrfach gespeichert?
   - K√∂nnen Daten in separate Tabellen ausgelagert werden?

<!-- micro-quiz:fue-02-development-2-datenbank-anomalien-und-redundanzen-micro-1 -->
## 3. Praktische √úbungen

### √úbung 1: Aktivit√§tsdiagramm erstellen

**Aufgabe**: Erstellen Sie ein Aktivit√§tsdiagramm f√ºr den folgenden Prozess:

"Ein Benutzer m√∂chte ein Produkt kaufen. Zuerst pr√ºft das System, ob das Produkt auf Lager ist. Wenn ja, wird der Preis berechnet. Wenn der Benutzer genug Guthaben hat, wird die Bestellung abgeschlossen. Andernfalls wird eine Fehlermeldung angezeigt."

### √úbung 2: Pseudocode schreiben

**Aufgabe**: Schreiben Sie Pseudocode f√ºr eine Funktion, die pr√ºft, ob eine Zahl eine Primzahl ist.

### √úbung 3: Anomalien identifizieren

**Aufgabe**: Analysieren Sie die folgende Tabelle und identifizieren Sie alle Anomalien:

\`\`\`
Tabelle: Kurse
+--------+------------+----------+---------------+------------------+
| KursID | Kursname   | DozentenID| Dozentenname  | Raum             |
+--------+------------+----------+---------------+------------------+
| K01    | Java       | D01      | Dr. Schmidt   | R101             |
| K02    | Python     | D01      | Dr. Schmidt   | R102             |
| K03    | JavaScript | D02      | Prof. M√ºller  | R101             |
+--------+------------+----------+---------------+------------------+
\`\`\`

## Pr√ºfungsrelevante Punkte
<!-- micro-quiz:fue-02-development-3-praktische-ubungen-micro-1 -->


‚úì Aktivit√§tsdiagramme lesen und erstellen k√∂nnen
‚úì Pseudocode schreiben und verstehen
‚úì Einf√ºge-, √Ñnderungs- und L√∂sch-Anomalien erkennen
‚úì Redundanzen in Datenbanken identifizieren
‚úì Normalformen (1NF, 2NF, 3NF) anwenden
‚úì **NICHT mehr relevant**: Struktogramme und PAP

<!-- micro-quiz:fue-02-development-prufungsrelevante-punkte-micro-1 -->
## Zusammenfassung

**Kontrollstrukturen ab 2025:**
- Aktivit√§tsdiagramme (UML) sind die bevorzugte Darstellungsform
- Pseudocode ist eine akzeptierte Alternative
- Struktogramme und PAP sind nicht mehr pr√ºfungsrelevant

**Datenbank-Anomalien:**
- Einf√ºge-Anomalie: Neue Daten k√∂nnen nicht ohne zus√§tzliche Informationen eingef√ºgt werden
- √Ñnderungs-Anomalie: √Ñnderungen m√ºssen an mehreren Stellen durchgef√ºhrt werden
- L√∂sch-Anomalie: Beim L√∂schen gehen ungewollt Informationen verloren
- L√∂sung: Normalisierung (1NF, 2NF, 3NF)



<!-- micro-quiz:fue-02-development-quiz -->
<!-- micro-quiz:fue-02-development-zusammenfassung-micro-1 -->
`,Ep=[{language:"pseudocode",title:"Beispiel: Primzahl-Pr√ºfung in Pseudocode",code:`FUNKTION istPrimzahl(zahl)
    WENN zahl <= 1 DANN
        R√úCKGABE FALSCH
    ENDE WENN
    
    WENN zahl == 2 DANN
        R√úCKGABE WAHR
    ENDE WENN
    
    WENN zahl MODULO 2 == 0 DANN
        R√úCKGABE FALSCH
    ENDE WENN
    
    F√úR i VON 3 BIS WURZEL(zahl) SCHRITT 2
        WENN zahl MODULO i == 0 DANN
            R√úCKGABE FALSCH
        ENDE WENN
    ENDE F√úR
    
    R√úCKGABE WAHR
ENDE FUNKTION`,explanation:"Dieser Pseudocode pr√ºft, ob eine Zahl eine Primzahl ist. Er testet Teilbarkeit durch 2 und dann durch alle ungeraden Zahlen bis zur Wurzel der Zahl."},{language:"sql",title:"Beispiel: Normalisierung - Vorher und Nachher",code:`-- VORHER: Nicht normalisiert (Redundanzen und Anomalien)
CREATE TABLE Bestellungen_Unnormalisiert (
    BestellungID INT PRIMARY KEY,
    KundenName VARCHAR(100),
    KundenEmail VARCHAR(100),
    KundenAdresse VARCHAR(200),
    ProduktName VARCHAR(100),
    ProduktPreis DECIMAL(10,2),
    Menge INT
);

-- NACHHER: Normalisiert (3NF)
CREATE TABLE Kunden (
    KundenID INT PRIMARY KEY,
    Name VARCHAR(100),
    Email VARCHAR(100),
    Adresse VARCHAR(200)
);

CREATE TABLE Produkte (
    ProduktID INT PRIMARY KEY,
    Name VARCHAR(100),
    Preis DECIMAL(10,2)
);

CREATE TABLE Bestellungen (
    BestellungID INT PRIMARY KEY,
    KundenID INT,
    Bestelldatum DATE,
    FOREIGN KEY (KundenID) REFERENCES Kunden(KundenID)
);

CREATE TABLE Bestellpositionen (
    BestellungID INT,
    ProduktID INT,
    Menge INT,
    PRIMARY KEY (BestellungID, ProduktID),
    FOREIGN KEY (BestellungID) REFERENCES Bestellungen(BestellungID),
    FOREIGN KEY (ProduktID) REFERENCES Produkte(ProduktID)
);`,explanation:"Durch Normalisierung werden Redundanzen eliminiert und Anomalien vermieden. Jede Entit√§t hat ihre eigene Tabelle, und Beziehungen werden √ºber Fremdschl√ºssel hergestellt."}],_p=["fue-02-development-quiz"],Dp=[{title:"UML Aktivit√§tsdiagramme",url:"https://www.uml-diagrams.org/activity-diagrams.html",type:"documentation"},{title:"Datenbank-Normalisierung",url:"https://www.datenbanken-verstehen.de/normalisierung",type:"article"}],Pp="2025-01-10T00:00:00Z",Tp="1.0",qp=["Du kannst kontrollstrukturen erkl√§ren","Du kannst aktivit√§tsdiagramm erkl√§ren","Du kannst pseudocode erkl√§ren","Du kannst datenbank-Anomalien erkl√§ren","Du kannst normalisierung erkl√§ren"],Rp="Kontrollstrukturen mit Aktivit√§tsdiagrammen und Pseudocode, Datenbank-Anomalien und Redundanzen erkennen.",Ip=[{id:"fu-02-entwickeln-und-bereitstellen-von-softwareanw",title:"F√ú-02: Entwickeln und Bereitstellen von Softwareanwendungen",summary:"Kernaspekt: F√ú-02: Entwickeln und Bereitstellen von Softwareanwendungen"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"1-kontrollstrukturen",title:"1. Kontrollstrukturen",summary:"Kernaspekt: 1. Kontrollstrukturen"},{id:"2-datenbank-anomalien-und-redundanzen",title:"2. Datenbank-Anomalien und Redundanzen",summary:"Kernaspekt: 2. Datenbank-Anomalien und Redundanzen"},{id:"3-praktische-ubungen",title:"3. Praktische √úbungen",summary:"Kernaspekt: 3. Praktische √úbungen"},{id:"prufungsrelevante-punkte",title:"Pr√ºfungsrelevante Punkte",summary:"Kernaspekt: Pr√ºfungsrelevante Punkte"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],Cp="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",Lp="Automatisch erg√§nzt: Review erforderlich",Mp=["fue-02-development-einfuhrung-micro-1","fue-02-development-1-kontrollstrukturen-micro-1","fue-02-development-2-datenbank-anomalien-und-redundanzen-micro-1","fue-02-development-3-praktische-ubungen-micro-1","fue-02-development-prufungsrelevante-punkte-micro-1","fue-02-development-quiz","fue-02-development-zusammenfassung-micro-1"],Op={id:dp,title:mp,description:gp,category:hp,subcategory:pp,difficulty:fp,examRelevance:bp,newIn2025:kp,removedIn2025:zp,important:vp,estimatedTime:yp,prerequisites:Sp,tags:wp,content:Ap,codeExamples:Ep,relatedQuizzes:_p,resources:Dp,lastUpdated:Pp,version:Tp,learningObjectives:qp,summary:Rp,contentOutline:Ip,accessibilityNotes:Cp,editorNote:Lp,microQuizzes:Mp},Np="fue-02-anomalies-redundancies",Bp="Datenbank-Anomalien und Redundanzen",xp="Verstehe Datenbank-Anomalien (Einf√ºge-, √Ñnderungs-, L√∂sch-Anomalie), Redundanzen und wie Normalisierung diese Probleme l√∂st.",Vp="F√ú-02",Fp="Entwickeln und Bereitstellen von Softwareanwendungen - Datenbankdesign",Kp="intermediate",Wp="high",jp=!0,$p=!1,Gp=!0,Up=50,Hp=["fue-02-development"],Qp=["datenbank","anomalien","redundanzen","normalisierung","normalformen","datenbankdesign"],Zp=`# Datenbank-Anomalien und Redundanzen

## √úbersicht

Bei schlecht designten Datenbanken k√∂nnen **Anomalien** und **Redundanzen** auftreten, die zu Inkonsistenzen, Speicherverschwendung und Wartungsproblemen f√ºhren. Die **Normalisierung** ist der Prozess, diese Probleme zu vermeiden.

<!-- micro-quiz:fue-02-anomalies-redundancies-ubersicht-micro-1 -->
## Was sind Redundanzen?

**Redundanz** bedeutet, dass dieselben Daten mehrfach in der Datenbank gespeichert werden.

### Beispiel: Unnormalisierte Tabelle

\`\`\`
Bestellungen (nicht normalisiert)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Best_ID‚îÇ Kunde_Name   ‚îÇ Kunde_Adresse‚îÇ Produkt_Name ‚îÇ Menge   ‚îÇ Preis    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1      ‚îÇ Max M√ºller   ‚îÇ Berlin      ‚îÇ Laptop       ‚îÇ 1       ‚îÇ 999.00   ‚îÇ
‚îÇ 2      ‚îÇ Max M√ºller   ‚îÇ Berlin      ‚îÇ Maus         ‚îÇ 2       ‚îÇ 19.99    ‚îÇ
‚îÇ 3      ‚îÇ Anna Schmidt ‚îÇ Hamburg     ‚îÇ Laptop       ‚îÇ 1       ‚îÇ 999.00   ‚îÇ
‚îÇ 4      ‚îÇ Max M√ºller   ‚îÇ Berlin      ‚îÇ Tastatur     ‚îÇ 1       ‚îÇ 49.99    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

**Probleme:**
- "Max M√ºller" und "Berlin" werden 3x gespeichert (Redundanz)
- "Laptop" und "999.00" werden 2x gespeichert (Redundanz)
- Speicherverschwendung
- Inkonsistenzgefahr bei √Ñnderungen

### Folgen von Redundanzen

‚ùå **Speicherverschwendung**: Daten werden mehrfach gespeichert
‚ùå **Inkonsistenzen**: √Ñnderungen m√ºssen an mehreren Stellen erfolgen
‚ùå **Wartungsaufwand**: H√∂herer Aufwand bei Updates
‚ùå **Performance**: Gr√∂√üere Tabellen, langsamere Queries

## Datenbank-Anomalien
<!-- micro-quiz:fue-02-anomalies-redundancies-was-sind-redundanzen-micro-1 -->


Anomalien sind **unerw√ºnschte Nebeneffekte** bei Datenoperationen in schlecht designten Datenbanken.

### 1. Einf√ºge-Anomalie (Insert Anomaly)

**Problem**: Daten k√∂nnen nicht eingef√ºgt werden, ohne andere, nicht verf√ºgbare Daten einzuf√ºgen.

#### Beispiel

\`\`\`
Mitarbeiter_Projekte
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID    ‚îÇ MA_Name      ‚îÇ Abteilung‚îÇ Projekt_ID   ‚îÇ Projekt_Name ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1        ‚îÇ Alice        ‚îÇ IT       ‚îÇ P1           ‚îÇ Website      ‚îÇ
‚îÇ 2        ‚îÇ Bob          ‚îÇ IT       ‚îÇ P2           ‚îÇ App          ‚îÇ
‚îÇ 3        ‚îÇ Charlie      ‚îÇ HR       ‚îÇ P1           ‚îÇ Website      ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

**Problem:**
- Neuer Mitarbeiter "David" wird eingestellt, aber noch keinem Projekt zugewiesen
- Kann nicht eingef√ºgt werden, da Projekt_ID und Projekt_Name erforderlich sind
- Workaround: NULL-Werte oder Dummy-Daten ‚Üí Schlechte L√∂sung!

**L√∂sung durch Normalisierung:**
\`\`\`
Mitarbeiter                    Projekte
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID‚îÇ Name   ‚îÇ Abteilung‚îÇ  ‚îÇ Projekt_ID‚îÇ Projekt_Name ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§  ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1    ‚îÇ Alice  ‚îÇ IT       ‚îÇ  ‚îÇ P1       ‚îÇ Website      ‚îÇ
‚îÇ 2    ‚îÇ Bob    ‚îÇ IT       ‚îÇ  ‚îÇ P2       ‚îÇ App          ‚îÇ
‚îÇ 3    ‚îÇ Charlie‚îÇ HR       ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îÇ 4    ‚îÇ David  ‚îÇ IT       ‚îÇ  
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  

Mitarbeiter_Projekte (Zuordnungstabelle)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID‚îÇ Projekt_ID‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1    ‚îÇ P1       ‚îÇ
‚îÇ 2    ‚îÇ P2       ‚îÇ
‚îÇ 3    ‚îÇ P1       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

Jetzt kann David eingef√ºgt werden, ohne einem Projekt zugeordnet zu sein!

### 2. √Ñnderungs-Anomalie (Update Anomaly)

**Problem**: √Ñnderungen m√ºssen an mehreren Stellen durchgef√ºhrt werden, sonst entstehen Inkonsistenzen.

#### Beispiel

\`\`\`
Bestellungen (nicht normalisiert)
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Best_ID‚îÇ Kunde_Name   ‚îÇ Kunde_Adresse‚îÇ Produkt_Name ‚îÇ Menge   ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1      ‚îÇ Max M√ºller   ‚îÇ Berlin      ‚îÇ Laptop       ‚îÇ 1       ‚îÇ
‚îÇ 2      ‚îÇ Max M√ºller   ‚îÇ Berlin      ‚îÇ Maus         ‚îÇ 2       ‚îÇ
‚îÇ 3      ‚îÇ Max M√ºller   ‚îÇ Berlin      ‚îÇ Tastatur     ‚îÇ 1       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

**Problem:**
- Max M√ºller zieht von Berlin nach M√ºnchen
- Adresse muss in **allen 3 Zeilen** ge√§ndert werden
- Wenn eine Zeile vergessen wird ‚Üí **Inkonsistenz**!

\`\`\`sql
-- Fehleranf√§llig: Muss alle Zeilen updaten
UPDATE Bestellungen
SET Kunde_Adresse = 'M√ºnchen'
WHERE Kunde_Name = 'Max M√ºller';
\`\`\`

**L√∂sung durch Normalisierung:**
\`\`\`
Kunden                         Bestellungen
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Kunde_ID‚îÇ Name        ‚îÇ Adresse ‚îÇ  ‚îÇ Best_ID‚îÇ Kunde_ID ‚îÇ Produkt_Name ‚îÇMenge‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§  ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1      ‚îÇ Max M√ºller   ‚îÇ Berlin  ‚îÇ  ‚îÇ 1      ‚îÇ 1        ‚îÇ Laptop       ‚îÇ 1   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ 2      ‚îÇ 1        ‚îÇ Maus         ‚îÇ 2   ‚îÇ
                                      ‚îÇ 3      ‚îÇ 1        ‚îÇ Tastatur     ‚îÇ 1   ‚îÇ
                                      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

\`\`\`sql
-- Einfach: Nur eine Zeile updaten
UPDATE Kunden
SET Adresse = 'M√ºnchen'
WHERE Kunde_ID = 1;
\`\`\`

### 3. L√∂sch-Anomalie (Delete Anomaly)

**Problem**: Beim L√∂schen von Daten gehen ungewollt andere Informationen verloren.

#### Beispiel

\`\`\`
Mitarbeiter_Projekte
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID    ‚îÇ MA_Name      ‚îÇ Abteilung‚îÇ Projekt_ID   ‚îÇ Projekt_Name ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1        ‚îÇ Alice        ‚îÇ IT       ‚îÇ P1           ‚îÇ Website      ‚îÇ
‚îÇ 2        ‚îÇ Bob          ‚îÇ IT       ‚îÇ P2           ‚îÇ App          ‚îÇ
‚îÇ 3        ‚îÇ Charlie      ‚îÇ HR       ‚îÇ P3           ‚îÇ Recruiting   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

**Problem:**
- Charlie verl√§sst das Unternehmen und wird gel√∂scht
- Dabei geht die Information √ºber Projekt P3 "Recruiting" verloren!
- Das Projekt existiert noch, aber die Daten sind weg

\`\`\`sql
-- L√∂scht Mitarbeiter UND Projekt-Info
DELETE FROM Mitarbeiter_Projekte
WHERE MA_ID = 3;
\`\`\`

**L√∂sung durch Normalisierung:**
\`\`\`
Mitarbeiter                    Projekte
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID‚îÇ Name   ‚îÇ Abteilung‚îÇ  ‚îÇ Projekt_ID‚îÇ Projekt_Name ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§  ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1    ‚îÇ Alice  ‚îÇ IT       ‚îÇ  ‚îÇ P1       ‚îÇ Website      ‚îÇ
‚îÇ 2    ‚îÇ Bob    ‚îÇ IT       ‚îÇ  ‚îÇ P2       ‚îÇ App          ‚îÇ
‚îÇ 3    ‚îÇ Charlie‚îÇ HR       ‚îÇ  ‚îÇ P3       ‚îÇ Recruiting   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

Mitarbeiter_Projekte
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID‚îÇ Projekt_ID‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1    ‚îÇ P1       ‚îÇ
‚îÇ 2    ‚îÇ P2       ‚îÇ
‚îÇ 3    ‚îÇ P3       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

\`\`\`sql
-- L√∂scht nur Mitarbeiter, Projekt bleibt erhalten
DELETE FROM Mitarbeiter WHERE MA_ID = 3;
DELETE FROM Mitarbeiter_Projekte WHERE MA_ID = 3;
-- Projekt P3 existiert weiterhin in Projekte-Tabelle!
\`\`\`

<!-- micro-quiz:fue-02-anomalies-redundancies-datenbank-anomalien-micro-1 -->
## Normalisierung

**Normalisierung** ist der Prozess, Datenbanken so zu strukturieren, dass Redundanzen und Anomalien minimiert werden.

### Normalformen - √úbersicht

\`\`\`
Unnormalisiert
    ‚Üì Atomare Werte
1. Normalform (1NF)
    ‚Üì Volle funktionale Abh√§ngigkeit
2. Normalform (2NF)
    ‚Üì Keine transitiven Abh√§ngigkeiten
3. Normalform (3NF)
    ‚Üì Keine mehrwertigen Abh√§ngigkeiten
Boyce-Codd Normalform (BCNF)
    ‚Üì Weitere Normalisierung
4. Normalform (4NF)
    ‚Üì
5. Normalform (5NF)
\`\`\`

### 1. Normalform (1NF)

**Regel**: Alle Attribute m√ºssen **atomar** sein (keine Listen, keine zusammengesetzten Werte).

#### Beispiel: Nicht in 1NF

\`\`\`
Kunden
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Kunde_ID‚îÇ Name        ‚îÇ Telefonnummern          ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1      ‚îÇ Max M√ºller   ‚îÇ 030-123, 0170-456       ‚îÇ  ‚ùå Nicht atomar!
‚îÇ 2      ‚îÇ Anna Schmidt ‚îÇ 040-789                 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

#### L√∂sung: In 1NF

\`\`\`
Kunden                         Telefonnummern
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Kunde_ID‚îÇ Name        ‚îÇ      ‚îÇ Kunde_ID‚îÇ Telefonnummer‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§      ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1      ‚îÇ Max M√ºller   ‚îÇ      ‚îÇ 1      ‚îÇ 030-123      ‚îÇ
‚îÇ 2      ‚îÇ Anna Schmidt ‚îÇ      ‚îÇ 1      ‚îÇ 0170-456     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò      ‚îÇ 2      ‚îÇ 040-789      ‚îÇ
                                ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

### 2. Normalform (2NF)

**Regel**: Muss in 1NF sein + Alle Nicht-Schl√ºssel-Attribute m√ºssen **voll funktional abh√§ngig** vom Prim√§rschl√ºssel sein.

**Gilt nur f√ºr zusammengesetzte Prim√§rschl√ºssel!**

#### Beispiel: Nicht in 2NF

\`\`\`
Bestellpositionen
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Best_ID‚îÇ Produkt_ID‚îÇ Produkt_Name ‚îÇ Menge   ‚îÇ Preis        ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
    Prim√§rschl√ºssel (zusammengesetzt)
\`\`\`

**Problem:**
- \`Produkt_Name\` h√§ngt nur von \`Produkt_ID\` ab, nicht von \`Best_ID\`
- Partielle Abh√§ngigkeit ‚Üí Nicht in 2NF!

#### L√∂sung: In 2NF

\`\`\`
Produkte                       Bestellpositionen
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Produkt_ID‚îÇ Produkt_Name ‚îÇ Preis‚îÇ  ‚îÇ Best_ID‚îÇ Produkt_ID‚îÇ Menge   ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§  ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1        ‚îÇ Laptop       ‚îÇ 999  ‚îÇ  ‚îÇ 1      ‚îÇ 1        ‚îÇ 1       ‚îÇ
‚îÇ 2        ‚îÇ Maus         ‚îÇ 19.99‚îÇ  ‚îÇ 1      ‚îÇ 2        ‚îÇ 2       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

### 3. Normalform (3NF)

**Regel**: Muss in 2NF sein + Keine **transitiven Abh√§ngigkeiten** (Nicht-Schl√ºssel-Attribute d√ºrfen nicht von anderen Nicht-Schl√ºssel-Attributen abh√§ngen).

#### Beispiel: Nicht in 3NF

\`\`\`
Mitarbeiter
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID‚îÇ Name   ‚îÇ Abt_ID   ‚îÇ Abt_Name         ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1    ‚îÇ Alice  ‚îÇ 10       ‚îÇ IT               ‚îÇ
‚îÇ 2    ‚îÇ Bob    ‚îÇ 10       ‚îÇ IT               ‚îÇ
‚îÇ 3    ‚îÇ Charlie‚îÇ 20       ‚îÇ HR               ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

**Problem:**
- \`Abt_Name\` h√§ngt von \`Abt_ID\` ab, nicht direkt von \`MA_ID\`
- Transitive Abh√§ngigkeit: MA_ID ‚Üí Abt_ID ‚Üí Abt_Name
- Nicht in 3NF!

#### L√∂sung: In 3NF

\`\`\`
Mitarbeiter                    Abteilungen
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ MA_ID‚îÇ Name   ‚îÇ Abt_ID   ‚îÇ  ‚îÇ Abt_ID   ‚îÇ Abt_Name ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§  ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ 1    ‚îÇ Alice  ‚îÇ 10       ‚îÇ  ‚îÇ 10       ‚îÇ IT       ‚îÇ
‚îÇ 2    ‚îÇ Bob    ‚îÇ 10       ‚îÇ  ‚îÇ 20       ‚îÇ HR       ‚îÇ
‚îÇ 3    ‚îÇ Charlie‚îÇ 20       ‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

## Vor- und Nachteile der Normalisierung
<!-- micro-quiz:fue-02-anomalies-redundancies-normalisierung-micro-1 -->


### Vorteile

‚úÖ **Keine Redundanzen**: Daten werden nur einmal gespeichert
‚úÖ **Keine Anomalien**: Einf√ºge-, √Ñnderungs- und L√∂sch-Anomalien werden vermieden
‚úÖ **Datenintegrit√§t**: Konsistente Daten
‚úÖ **Wartbarkeit**: Einfachere √Ñnderungen
‚úÖ **Speichereffizienz**: Weniger Speicherplatz

### Nachteile

‚ùå **Komplexere Queries**: Mehr JOINs erforderlich
‚ùå **Performance**: JOINs k√∂nnen langsamer sein
‚ùå **Mehr Tabellen**: Komplexere Datenbankstruktur

<!-- micro-quiz:fue-02-anomalies-redundancies-vor--und-nachteile-der-normalisierung-micro-1 -->
## Denormalisierung

In manchen F√§llen wird bewusst **denormalisiert**, um Performance zu verbessern:

### Wann Denormalisierung?

- **Read-Heavy Anwendungen**: Viele Lesezugriffe, wenige Schreibzugriffe
- **Performance-kritisch**: JOINs zu langsam
- **Data Warehousing**: Analytische Datenbanken
- **Caching**: H√§ufig abgefragte Daten

### Beispiel: Denormalisierung f√ºr Performance

\`\`\`sql
-- Normalisiert (3 JOINs)
SELECT 
    b.Best_ID,
    k.Name AS Kunde_Name,
    p.Produkt_Name,
    bp.Menge,
    p.Preis
FROM Bestellungen b
JOIN Kunden k ON b.Kunde_ID = k.Kunde_ID
JOIN Bestellpositionen bp ON b.Best_ID = bp.Best_ID
JOIN Produkte p ON bp.Produkt_ID = p.Produkt_ID;

-- Denormalisiert (kein JOIN)
SELECT 
    Best_ID,
    Kunde_Name,
    Produkt_Name,
    Menge,
    Preis
FROM Bestellungen_Denormalisiert;
\`\`\`

**Trade-off**: Schnellere Queries, aber Redundanzen und Anomalien!

## Zusammenfassung
<!-- micro-quiz:fue-02-anomalies-redundancies-denormalisierung-micro-1 -->


### Anomalien

1. **Einf√ºge-Anomalie**: Daten k√∂nnen nicht eingef√ºgt werden ohne andere Daten
2. **√Ñnderungs-Anomalie**: √Ñnderungen m√ºssen an mehreren Stellen erfolgen
3. **L√∂sch-Anomalie**: Beim L√∂schen gehen ungewollt andere Daten verloren

### Redundanzen

- Mehrfache Speicherung derselben Daten
- F√ºhrt zu Speicherverschwendung und Inkonsistenzen

### Normalisierung

- **1NF**: Atomare Werte
- **2NF**: Volle funktionale Abh√§ngigkeit vom Prim√§rschl√ºssel
- **3NF**: Keine transitiven Abh√§ngigkeiten

### F√ºr die IHK-Pr√ºfung wichtig:

- Erkenne Anomalien in Beispiel-Tabellen
- Verstehe, wie Normalisierung Probleme l√∂st
- Kenne die ersten drei Normalformen
- Verstehe den Trade-off zwischen Normalisierung und Performance



<!-- micro-quiz:fue-02-anomalies-redundancies-quiz -->
<!-- micro-quiz:fue-02-anomalies-redundancies-zusammenfassung-micro-1 -->
`,Jp=JSON.parse(`[{"language":"sql","title":"Unnormalisierte Tabelle mit Anomalien","code":"-- Unnormalisierte Tabelle (0NF)\\nCREATE TABLE Bestellungen_Unnormalisiert (\\n    Best_ID INT PRIMARY KEY,\\n    Kunde_Name VARCHAR(100),\\n    Kunde_Adresse VARCHAR(200),\\n    Kunde_Telefon VARCHAR(50),\\n    Produkt_Name VARCHAR(100),\\n    Produkt_Kategorie VARCHAR(50),\\n    Menge INT,\\n    Einzelpreis DECIMAL(10,2),\\n    Gesamtpreis DECIMAL(10,2)\\n);\\n\\n-- Beispieldaten mit Redundanzen\\nINSERT INTO Bestellungen_Unnormalisiert VALUES\\n(1, 'Max M√ºller', 'Berlin, Hauptstr. 1', '030-123456', 'Laptop', 'Elektronik', 1, 999.00, 999.00),\\n(2, 'Max M√ºller', 'Berlin, Hauptstr. 1', '030-123456', 'Maus', 'Elektronik', 2, 19.99, 39.98),\\n(3, 'Max M√ºller', 'Berlin, Hauptstr. 1', '030-123456', 'Tastatur', 'Elektronik', 1, 49.99, 49.99),\\n(4, 'Anna Schmidt', 'Hamburg, Seestr. 5', '040-789012', 'Laptop', 'Elektronik', 1, 999.00, 999.00);\\n\\n-- PROBLEM 1: √Ñnderungs-Anomalie\\n-- Max M√ºller zieht um - muss in ALLEN Zeilen ge√§ndert werden!\\nUPDATE Bestellungen_Unnormalisiert\\nSET Kunde_Adresse = 'M√ºnchen, Bergstr. 10'\\nWHERE Kunde_Name = 'Max M√ºller';\\n-- Wenn eine Zeile vergessen wird ‚Üí Inkonsistenz!\\n\\n-- PROBLEM 2: Einf√ºge-Anomalie\\n-- Neuer Kunde ohne Bestellung kann nicht eingef√ºgt werden\\n-- INSERT INTO Bestellungen_Unnormalisiert (Kunde_Name, Kunde_Adresse) \\n-- VALUES ('Peter Klein', 'K√∂ln, Rheinstr. 3');\\n-- ‚ùå Fehler: Produkt_Name, Menge etc. sind erforderlich!\\n\\n-- PROBLEM 3: L√∂sch-Anomalie\\n-- Wenn Anna Schmidt ihre Bestellung storniert, gehen alle Kundendaten verloren\\nDELETE FROM Bestellungen_Unnormalisiert WHERE Best_ID = 4;\\n-- ‚ùå Kundendaten von Anna Schmidt sind komplett weg!","explanation":"Zeigt eine unnormalisierte Tabelle mit allen drei Anomalie-Typen. Demonstriert die Probleme bei Update, Insert und Delete."},{"language":"sql","title":"Normalisierte Datenbank (3NF)","code":"-- Normalisierte Struktur (3NF)\\n\\n-- 1. Kunden-Tabelle\\nCREATE TABLE Kunden (\\n    Kunde_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Name VARCHAR(100) NOT NULL,\\n    Adresse VARCHAR(200),\\n    Telefon VARCHAR(50)\\n);\\n\\n-- 2. Produkt-Kategorien\\nCREATE TABLE Kategorien (\\n    Kategorie_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Kategorie_Name VARCHAR(50) NOT NULL UNIQUE\\n);\\n\\n-- 3. Produkte-Tabelle\\nCREATE TABLE Produkte (\\n    Produkt_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Produkt_Name VARCHAR(100) NOT NULL,\\n    Kategorie_ID INT,\\n    Preis DECIMAL(10,2) NOT NULL,\\n    FOREIGN KEY (Kategorie_ID) REFERENCES Kategorien(Kategorie_ID)\\n);\\n\\n-- 4. Bestellungen-Tabelle\\nCREATE TABLE Bestellungen (\\n    Best_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Kunde_ID INT NOT NULL,\\n    Bestelldatum DATE DEFAULT CURRENT_DATE,\\n    FOREIGN KEY (Kunde_ID) REFERENCES Kunden(Kunde_ID)\\n);\\n\\n-- 5. Bestellpositionen-Tabelle\\nCREATE TABLE Bestellpositionen (\\n    Position_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Best_ID INT NOT NULL,\\n    Produkt_ID INT NOT NULL,\\n    Menge INT NOT NULL CHECK (Menge > 0),\\n    FOREIGN KEY (Best_ID) REFERENCES Bestellungen(Best_ID) ON DELETE CASCADE,\\n    FOREIGN KEY (Produkt_ID) REFERENCES Produkte(Produkt_ID)\\n);\\n\\n-- Daten einf√ºgen\\nINSERT INTO Kunden (Name, Adresse, Telefon) VALUES\\n('Max M√ºller', 'Berlin, Hauptstr. 1', '030-123456'),\\n('Anna Schmidt', 'Hamburg, Seestr. 5', '040-789012'),\\n('Peter Klein', 'K√∂ln, Rheinstr. 3', '0221-345678');  -- ‚úÖ Kunde ohne Bestellung m√∂glich!\\n\\nINSERT INTO Kategorien (Kategorie_Name) VALUES\\n('Elektronik'),\\n('B√ºcher'),\\n('Kleidung');\\n\\nINSERT INTO Produkte (Produkt_Name, Kategorie_ID, Preis) VALUES\\n('Laptop', 1, 999.00),\\n('Maus', 1, 19.99),\\n('Tastatur', 1, 49.99);\\n\\nINSERT INTO Bestellungen (Kunde_ID) VALUES\\n(1),  -- Max M√ºller\\n(2);  -- Anna Schmidt\\n\\nINSERT INTO Bestellpositionen (Best_ID, Produkt_ID, Menge) VALUES\\n(1, 1, 1),  -- Max: 1x Laptop\\n(1, 2, 2),  -- Max: 2x Maus\\n(1, 3, 1),  -- Max: 1x Tastatur\\n(2, 1, 1);  -- Anna: 1x Laptop\\n\\n-- L√ñSUNG 1: √Ñnderungs-Anomalie behoben\\n-- Max M√ºller zieht um - nur EINE Zeile √§ndern!\\nUPDATE Kunden\\nSET Adresse = 'M√ºnchen, Bergstr. 10'\\nWHERE Kunde_ID = 1;\\n-- ‚úÖ Alle Bestellungen zeigen automatisch neue Adresse!\\n\\n-- L√ñSUNG 2: Einf√ºge-Anomalie behoben\\n-- Peter Klein wurde bereits ohne Bestellung eingef√ºgt (siehe oben)\\n-- ‚úÖ Kein Problem!\\n\\n-- L√ñSUNG 3: L√∂sch-Anomalie behoben\\n-- Anna Schmidt storniert Bestellung\\nDELETE FROM Bestellungen WHERE Best_ID = 2;\\n-- ‚úÖ Kundendaten bleiben erhalten!\\nSELECT * FROM Kunden WHERE Kunde_ID = 2;  -- Anna ist noch da!","explanation":"Zeigt die normalisierte Datenbankstruktur (3NF) mit separaten Tabellen. Alle Anomalien sind behoben."},{"language":"sql","title":"Normalisierung Schritt f√ºr Schritt","code":"-- Ausgangstabelle (0NF)\\nCREATE TABLE Mitarbeiter_Projekte_0NF (\\n    MA_ID INT,\\n    MA_Name VARCHAR(100),\\n    MA_Skills VARCHAR(200),  -- ‚ùå Nicht atomar: \\"Java, Python, SQL\\"\\n    Abt_ID INT,\\n    Abt_Name VARCHAR(50),\\n    Projekt_ID INT,\\n    Projekt_Name VARCHAR(100),\\n    Projekt_Budget DECIMAL(10,2)\\n);\\n\\n-- Schritt 1: 1. Normalform (1NF) - Atomare Werte\\n-- Skills in separate Tabelle auslagern\\nCREATE TABLE Mitarbeiter_1NF (\\n    MA_ID INT PRIMARY KEY,\\n    MA_Name VARCHAR(100),\\n    Abt_ID INT,\\n    Abt_Name VARCHAR(50),\\n    Projekt_ID INT,\\n    Projekt_Name VARCHAR(100),\\n    Projekt_Budget DECIMAL(10,2)\\n);\\n\\nCREATE TABLE Mitarbeiter_Skills_1NF (\\n    MA_ID INT,\\n    Skill VARCHAR(50),\\n    PRIMARY KEY (MA_ID, Skill)\\n);\\n-- ‚úÖ Alle Werte sind jetzt atomar\\n\\n-- Schritt 2: 2. Normalform (2NF) - Volle funktionale Abh√§ngigkeit\\n-- Projekt-Daten h√§ngen nur von Projekt_ID ab, nicht von MA_ID\\nCREATE TABLE Mitarbeiter_2NF (\\n    MA_ID INT PRIMARY KEY,\\n    MA_Name VARCHAR(100),\\n    Abt_ID INT,\\n    Abt_Name VARCHAR(50)\\n);\\n\\nCREATE TABLE Projekte_2NF (\\n    Projekt_ID INT PRIMARY KEY,\\n    Projekt_Name VARCHAR(100),\\n    Projekt_Budget DECIMAL(10,2)\\n);\\n\\nCREATE TABLE Mitarbeiter_Projekte_2NF (\\n    MA_ID INT,\\n    Projekt_ID INT,\\n    PRIMARY KEY (MA_ID, Projekt_ID),\\n    FOREIGN KEY (MA_ID) REFERENCES Mitarbeiter_2NF(MA_ID),\\n    FOREIGN KEY (Projekt_ID) REFERENCES Projekte_2NF(Projekt_ID)\\n);\\n-- ‚úÖ Keine partiellen Abh√§ngigkeiten mehr\\n\\n-- Schritt 3: 3. Normalform (3NF) - Keine transitiven Abh√§ngigkeiten\\n-- Abt_Name h√§ngt von Abt_ID ab, nicht direkt von MA_ID\\nCREATE TABLE Mitarbeiter_3NF (\\n    MA_ID INT PRIMARY KEY,\\n    MA_Name VARCHAR(100),\\n    Abt_ID INT,\\n    FOREIGN KEY (Abt_ID) REFERENCES Abteilungen_3NF(Abt_ID)\\n);\\n\\nCREATE TABLE Abteilungen_3NF (\\n    Abt_ID INT PRIMARY KEY,\\n    Abt_Name VARCHAR(50)\\n);\\n\\nCREATE TABLE Projekte_3NF (\\n    Projekt_ID INT PRIMARY KEY,\\n    Projekt_Name VARCHAR(100),\\n    Projekt_Budget DECIMAL(10,2)\\n);\\n\\nCREATE TABLE Mitarbeiter_Projekte_3NF (\\n    MA_ID INT,\\n    Projekt_ID INT,\\n    PRIMARY KEY (MA_ID, Projekt_ID),\\n    FOREIGN KEY (MA_ID) REFERENCES Mitarbeiter_3NF(MA_ID),\\n    FOREIGN KEY (Projekt_ID) REFERENCES Projekte_3NF(Projekt_ID)\\n);\\n\\nCREATE TABLE Mitarbeiter_Skills_3NF (\\n    MA_ID INT,\\n    Skill VARCHAR(50),\\n    PRIMARY KEY (MA_ID, Skill),\\n    FOREIGN KEY (MA_ID) REFERENCES Mitarbeiter_3NF(MA_ID)\\n);\\n-- ‚úÖ Keine transitiven Abh√§ngigkeiten mehr - 3NF erreicht!","explanation":"Zeigt den schrittweisen Normalisierungsprozess von 0NF bis 3NF. Jeder Schritt behebt spezifische Probleme."},{"language":"sql","title":"Anomalien erkennen und beheben","code":"-- Beispiel: Bibliothekssystem mit Anomalien\\nCREATE TABLE Ausleihen_Problematisch (\\n    Ausleihe_ID INT PRIMARY KEY,\\n    Buch_Titel VARCHAR(200),\\n    Buch_ISBN VARCHAR(20),\\n    Buch_Autor VARCHAR(100),\\n    Buch_Verlag VARCHAR(100),\\n    Verlag_Adresse VARCHAR(200),  -- ‚ùå Transitive Abh√§ngigkeit!\\n    Leser_Name VARCHAR(100),\\n    Leser_Email VARCHAR(100),\\n    Ausleihdatum DATE,\\n    R√ºckgabedatum DATE\\n);\\n\\n-- PROBLEM-ANALYSE:\\n-- 1. Buch-Daten (Titel, ISBN, Autor, Verlag) werden bei jeder Ausleihe dupliziert\\n-- 2. Verlag_Adresse h√§ngt von Verlag ab (transitive Abh√§ngigkeit)\\n-- 3. Leser-Daten werden bei jeder Ausleihe dupliziert\\n-- 4. Wenn ein Buch nie ausgeliehen wird, kann es nicht gespeichert werden (Einf√ºge-Anomalie)\\n\\n-- L√ñSUNG: Normalisierte Struktur\\n\\n-- Verlage (separate Tabelle)\\nCREATE TABLE Verlage (\\n    Verlag_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Verlag_Name VARCHAR(100) UNIQUE NOT NULL,\\n    Adresse VARCHAR(200)\\n);\\n\\n-- B√ºcher (mit Referenz auf Verlag)\\nCREATE TABLE Buecher (\\n    Buch_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    ISBN VARCHAR(20) UNIQUE NOT NULL,\\n    Titel VARCHAR(200) NOT NULL,\\n    Autor VARCHAR(100),\\n    Verlag_ID INT,\\n    FOREIGN KEY (Verlag_ID) REFERENCES Verlage(Verlag_ID)\\n);\\n\\n-- Leser (separate Tabelle)\\nCREATE TABLE Leser (\\n    Leser_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Name VARCHAR(100) NOT NULL,\\n    Email VARCHAR(100) UNIQUE\\n);\\n\\n-- Ausleihen (nur Referenzen)\\nCREATE TABLE Ausleihen (\\n    Ausleihe_ID INT PRIMARY KEY AUTO_INCREMENT,\\n    Buch_ID INT NOT NULL,\\n    Leser_ID INT NOT NULL,\\n    Ausleihdatum DATE NOT NULL DEFAULT CURRENT_DATE,\\n    R√ºckgabedatum DATE,\\n    FOREIGN KEY (Buch_ID) REFERENCES Buecher(Buch_ID),\\n    FOREIGN KEY (Leser_ID) REFERENCES Leser(Leser_ID)\\n);\\n\\n-- Vorteile der normalisierten Struktur:\\n\\n-- 1. Buch hinzuf√ºgen ohne Ausleihe (Einf√ºge-Anomalie behoben)\\nINSERT INTO Verlage (Verlag_Name, Adresse) VALUES ('Springer', 'Berlin');\\nINSERT INTO Buecher (ISBN, Titel, Autor, Verlag_ID) \\nVALUES ('978-3-16-148410-0', 'Datenbanken Grundlagen', 'Dr. Schmidt', 1);\\n-- ‚úÖ Buch existiert, auch ohne Ausleihe!\\n\\n-- 2. Verlagsadresse √§ndern (√Ñnderungs-Anomalie behoben)\\nUPDATE Verlage SET Adresse = 'M√ºnchen' WHERE Verlag_ID = 1;\\n-- ‚úÖ Nur eine Zeile √§ndern, betrifft alle B√ºcher des Verlags!\\n\\n-- 3. Ausleihe l√∂schen (L√∂sch-Anomalie behoben)\\nDELETE FROM Ausleihen WHERE Ausleihe_ID = 1;\\n-- ‚úÖ Buch- und Leser-Daten bleiben erhalten!\\n\\n-- Query mit JOINs (Nachteil der Normalisierung)\\nSELECT \\n    a.Ausleihe_ID,\\n    b.Titel,\\n    b.Autor,\\n    v.Verlag_Name,\\n    l.Name AS Leser_Name,\\n    a.Ausleihdatum,\\n    a.R√ºckgabedatum\\nFROM Ausleihen a\\nJOIN Buecher b ON a.Buch_ID = b.Buch_ID\\nJOIN Verlage v ON b.Verlag_ID = v.Verlag_ID\\nJOIN Leser l ON a.Leser_ID = l.Leser_ID\\nWHERE a.R√ºckgabedatum IS NULL;  -- Aktuell ausgeliehene B√ºcher","explanation":"Realistisches Beispiel eines Bibliothekssystems. Zeigt Problemanalyse und vollst√§ndige Normalisierung mit praktischen Queries."}]`),Yp=["fue-02-anomalies-redundancies-quiz"],Xp=[{title:"Database Normalization Explained",url:"https://www.guru99.com/database-normalization.html",type:"article"},{title:"Normal Forms in DBMS",url:"https://www.geeksforgeeks.org/normal-forms-in-dbms/",type:"article"}],ef="2025-01-05T10:00:00Z",nf="1.0",tf=["Du kannst datenbank erkl√§ren","Du kannst anomalien erkl√§ren","Du kannst redundanzen erkl√§ren","Du kannst normalisierung erkl√§ren","Du kannst normalformen erkl√§ren"],rf="Verstehe Datenbank-Anomalien (Einf√ºge-, √Ñnderungs-, L√∂sch-Anomalie), Redundanzen und wie Normalisierung diese Probleme l√∂st.",sf=[{id:"datenbank-anomalien-und-redundanzen",title:"Datenbank-Anomalien und Redundanzen",summary:"Kernaspekt: Datenbank-Anomalien und Redundanzen"},{id:"ubersicht",title:"√úbersicht",summary:"Kernaspekt: √úbersicht"},{id:"was-sind-redundanzen",title:"Was sind Redundanzen?",summary:"Kernaspekt: Was sind Redundanzen?"},{id:"datenbank-anomalien",title:"Datenbank-Anomalien",summary:"Kernaspekt: Datenbank-Anomalien"},{id:"normalisierung",title:"Normalisierung",summary:"Kernaspekt: Normalisierung"},{id:"vor--und-nachteile-der-normalisierung",title:"Vor- und Nachteile der Normalisierung",summary:"Kernaspekt: Vor- und Nachteile der Normalisierung"},{id:"denormalisierung",title:"Denormalisierung",summary:"Kernaspekt: Denormalisierung"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],af="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",of="Automatisch erg√§nzt: Review erforderlich",lf=["fue-02-anomalies-redundancies-ubersicht-micro-1","fue-02-anomalies-redundancies-was-sind-redundanzen-micro-1","fue-02-anomalies-redundancies-datenbank-anomalien-micro-1","fue-02-anomalies-redundancies-normalisierung-micro-1","fue-02-anomalies-redundancies-vor--und-nachteile-der-normalisierung-micro-1","fue-02-anomalies-redundancies-denormalisierung-micro-1","fue-02-anomalies-redundancies-quiz","fue-02-anomalies-redundancies-zusammenfassung-micro-1"],uf={id:Np,title:Bp,description:xp,category:Vp,subcategory:Fp,difficulty:Kp,examRelevance:Wp,newIn2025:jp,removedIn2025:$p,important:Gp,estimatedTime:Up,prerequisites:Hp,tags:Qp,content:Zp,codeExamples:Jp,relatedQuizzes:Yp,resources:Xp,lastUpdated:ef,version:nf,learningObjectives:tf,summary:rf,contentOutline:sf,accessibilityNotes:af,editorNote:of,microQuizzes:lf},cf="fue-02-control-structures",df="Kontrollstrukturen: Aktivit√§tsdiagramme und Pseudocode",mf="Lerne moderne Methoden zur Darstellung von Kontrollstrukturen mit Aktivit√§tsdiagrammen und Pseudocode. Struktogramme und PAP sind veraltet.",gf="F√ú-02",hf="Entwickeln und Bereitstellen von Softwareanwendungen - Algorithmen",pf="beginner",ff="high",bf=!0,kf=!1,zf=!0,vf=45,yf=[],Sf=["kontrollstrukturen","aktivit√§tsdiagramm","pseudocode","algorithmen","uml","sequenz","verzweigung","schleife"],wf=`# Kontrollstrukturen: Aktivit√§tsdiagramme und Pseudocode

## √úbersicht

**Kontrollstrukturen** steuern den Ablauf eines Programms. Zur Darstellung von Algorithmen werden in der IHK-Pr√ºfung ab 2025 **Aktivit√§tsdiagramme** (UML) und **Pseudocode** verwendet.

### ‚ö†Ô∏è Wichtige √Ñnderung ab 2025

**VERALTET (nicht mehr pr√ºfungsrelevant):**
- ‚ùå Struktogramme (Nassi-Shneiderman-Diagramme)
- ‚ùå Programmablaufpl√§ne (PAP/Flussdiagramme)

**NEU (pr√ºfungsrelevant ab 2025):**
- ‚úÖ Aktivit√§tsdiagramme (UML)
- ‚úÖ Pseudocode

<!-- micro-quiz:fue-02-control-structures-ubersicht-micro-1 -->
## Die drei Grundstrukturen

Jeder Algorithmus besteht aus drei Grundstrukturen:

1. **Sequenz**: Befehle werden nacheinander ausgef√ºhrt
2. **Verzweigung (Selektion)**: Bedingte Ausf√ºhrung
3. **Wiederholung (Iteration)**: Schleifen

## Aktivit√§tsdiagramme (UML)
<!-- micro-quiz:fue-02-control-structures-die-drei-grundstrukturen-micro-1 -->


**Aktivit√§tsdiagramme** sind Teil der UML (Unified Modeling Language) und zeigen den Ablauf von Aktivit√§ten.

### Grundelemente

\`\`\`
‚óè Startknoten (gef√ºllter Kreis)
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ   Aktivit√§t     ‚îÇ  Rechteck mit abgerundeten Ecken
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚óÜ Entscheidungsknoten (Raute)
‚Üì
‚óâ Endknoten (gef√ºllter Kreis mit Ring)
\`\`\`

### 1. Sequenz (Nacheinander)

**Aktivit√§tsdiagramm:**
\`\`\`
‚óè
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Wasser kochen   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Tee aufgie√üen   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ 5 Min ziehen    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚óâ
\`\`\`

**Pseudocode:**
\`\`\`
BEGIN
    Wasser kochen
    Tee aufgie√üen
    5 Minuten ziehen lassen
END
\`\`\`

**Java-Code:**
\`\`\`java
public void teeMachen() {
    wasserKochen();
    teeAufgiessen();
    warten(5);
}
\`\`\`

### 2. Verzweigung (If-Then-Else)

**Aktivit√§tsdiagramm:**
\`\`\`
‚óè
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Temperatur      ‚îÇ
‚îÇ messen          ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
      ‚óÜ [Temp > 30¬∞C?]
     / \\
[ja]/   \\[nein]
   /     \\
  ‚Üì       ‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇKlima‚îÇ  ‚îÇHeiz‚îÇ
‚îÇan   ‚îÇ  ‚îÇung ‚îÇ
‚îÇ     ‚îÇ  ‚îÇan  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îò
  ‚Üì       ‚Üì
   \\     /
    \\   /
     ‚Üì ‚Üì
      ‚óè
     ‚Üì
     ‚óâ
\`\`\`

**Pseudocode:**
\`\`\`
BEGIN
    temperatur = messe_temperatur()
    
    IF temperatur > 30 THEN
        klimaanlage_einschalten()
    ELSE
        heizung_einschalten()
    END IF
END
\`\`\`

**Java-Code:**
\`\`\`java
public void temperaturRegeln() {
    double temperatur = messeTemperatur();
    
    if (temperatur > 30) {
        klimaanlageEinschalten();
    } else {
        heizungEinschalten();
    }
}
\`\`\`

### 3. Mehrfachverzweigung (Switch/Case)

**Aktivit√§tsdiagramm:**
\`\`\`
‚óè
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Wochentag       ‚îÇ
‚îÇ ermitteln       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
      ‚óÜ [Wochentag?]
     /‚îÇ\\\\
    / ‚îÇ \\ \\
[Mo][Di][Mi][...]
  ‚Üì  ‚Üì  ‚Üì   ‚Üì
‚îå‚îÄ‚îÄ‚îê‚îå‚îÄ‚îÄ‚îê‚îå‚îÄ‚îÄ‚îê‚îå‚îÄ‚îÄ‚îê
‚îÇA1‚îÇ‚îÇA2‚îÇ‚îÇA3‚îÇ‚îÇA4‚îÇ
‚îî‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îò
  ‚Üì  ‚Üì  ‚Üì   ‚Üì
   \\ ‚îÇ /   /
    \\‚îÇ/   /
     ‚óè   /
      \\ /
       ‚óâ
\`\`\`

**Pseudocode:**
\`\`\`
BEGIN
    tag = ermittle_wochentag()
    
    SWITCH tag
        CASE "Montag":
            aktion_montag()
        CASE "Dienstag":
            aktion_dienstag()
        CASE "Mittwoch":
            aktion_mittwoch()
        DEFAULT:
            aktion_standard()
    END SWITCH
END
\`\`\`

**Java-Code:**
\`\`\`java
public void wochentagAktion(String tag) {
    switch (tag) {
        case "Montag":
            aktionMontag();
            break;
        case "Dienstag":
            aktionDienstag();
            break;
        case "Mittwoch":
            aktionMittwoch();
            break;
        default:
            aktionStandard();
    }
}
\`\`\`

### 4. Wiederholung - While-Schleife (kopfgesteuert)

**Aktivit√§tsdiagramm:**
\`\`\`
‚óè
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ counter = 0     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚óÜ [counter < 10?]
‚îÇ [nein] ‚Üí ‚óâ
‚îÇ
‚îÇ[ja]
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Aktion          ‚îÇ
‚îÇ ausf√ºhren       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ counter = counter‚îÇ
‚îÇ + 1             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îÇ
‚îî‚îÄ‚îÄ‚Üí zur√ºck zu ‚óÜ
\`\`\`

**Pseudocode:**
\`\`\`
BEGIN
    counter = 0
    
    WHILE counter < 10 DO
        aktion_ausfuehren()
        counter = counter + 1
    END WHILE
END
\`\`\`

**Java-Code:**
\`\`\`java
public void whileBeispiel() {
    int counter = 0;
    
    while (counter < 10) {
        aktionAusfuehren();
        counter++;
    }
}
\`\`\`

### 5. Wiederholung - Do-While-Schleife (fu√ügesteuert)

**Aktivit√§tsdiagramm:**
\`\`\`
‚óè
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ counter = 0     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Aktion          ‚îÇ ‚Üê Wird mindestens 1x ausgef√ºhrt!
‚îÇ ausf√ºhren       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ counter = counter‚îÇ
‚îÇ + 1             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚óÜ [counter < 10?]
‚îÇ [nein] ‚Üí ‚óâ
‚îÇ
‚îÇ[ja]
‚îî‚îÄ‚îÄ‚Üí zur√ºck zu "Aktion ausf√ºhren"
\`\`\`

**Pseudocode:**
\`\`\`
BEGIN
    counter = 0
    
    DO
        aktion_ausfuehren()
        counter = counter + 1
    WHILE counter < 10
END
\`\`\`

**Java-Code:**
\`\`\`java
public void doWhileBeispiel() {
    int counter = 0;
    
    do {
        aktionAusfuehren();
        counter++;
    } while (counter < 10);
}
\`\`\`

### 6. Wiederholung - For-Schleife (Z√§hlschleife)

**Aktivit√§tsdiagramm:**
\`\`\`
‚óè
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ i = 0           ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚óÜ [i < 10?]
‚îÇ [nein] ‚Üí ‚óâ
‚îÇ
‚îÇ[ja]
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Aktion mit i    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ i = i + 1       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îÇ
‚îî‚îÄ‚îÄ‚Üí zur√ºck zu ‚óÜ
\`\`\`

**Pseudocode:**
\`\`\`
BEGIN
    FOR i = 0 TO 9 DO
        aktion_mit(i)
    END FOR
END
\`\`\`

**Java-Code:**
\`\`\`java
public void forBeispiel() {
    for (int i = 0; i < 10; i++) {
        aktionMit(i);
    }
}
\`\`\`

<!-- micro-quiz:fue-02-control-structures-aktivitatsdiagramme-uml-micro-1 -->
## Pseudocode-Konventionen

### Grundregeln

1. **Lesbar**: Verst√§ndlich f√ºr Menschen, nicht f√ºr Computer
2. **Strukturiert**: Einr√ºckungen zeigen Hierarchie
3. **Sprachunabh√§ngig**: Keine spezifische Programmiersprache
4. **Schl√ºsselw√∂rter**: GROSSBUCHSTABEN (BEGIN, END, IF, WHILE, etc.)

### H√§ufige Schl√ºsselw√∂rter

\`\`\`
BEGIN / END          - Programmblock
IF / THEN / ELSE     - Verzweigung
WHILE / DO           - Schleife
FOR / TO / DO        - Z√§hlschleife
REPEAT / UNTIL       - Do-While-Schleife
SWITCH / CASE        - Mehrfachverzweigung
FUNCTION / RETURN    - Funktion
INPUT / OUTPUT       - Ein-/Ausgabe
AND / OR / NOT       - Logische Operatoren
\`\`\`

### Beispiel: Komplexer Algorithmus

**Aufgabe**: Finde das Maximum in einem Array

**Pseudocode:**
\`\`\`
FUNCTION finde_maximum(array)
BEGIN
    IF array ist leer THEN
        RETURN null
    END IF
    
    maximum = array[0]
    
    FOR i = 1 TO l√§nge(array) - 1 DO
        IF array[i] > maximum THEN
            maximum = array[i]
        END IF
    END FOR
    
    RETURN maximum
END
\`\`\`

**Aktivit√§tsdiagramm:**
\`\`\`
‚óè
‚Üì
‚óÜ [Array leer?]
‚îÇ [ja] ‚Üí RETURN null ‚Üí ‚óâ
‚îÇ
‚îÇ[nein]
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ max = array[0]  ‚îÇ
‚îÇ i = 1           ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚óÜ [i < l√§nge?]
‚îÇ [nein] ‚Üí RETURN max ‚Üí ‚óâ
‚îÇ
‚îÇ[ja]
‚Üì
‚óÜ [array[i] > max?]
‚îÇ [nein] ‚Üí i++
‚îÇ           ‚Üì
‚îÇ           ‚îî‚îÄ‚îÄ‚Üí zur√ºck zu [i < l√§nge?]
‚îÇ
‚îÇ[ja]
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ max = array[i]  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ i = i + 1       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
‚Üì
‚îî‚îÄ‚îÄ‚Üí zur√ºck zu [i < l√§nge?]
\`\`\`

**Java-Code:**
\`\`\`java
public Integer findeMaximum(int[] array) {
    if (array == null || array.length == 0) {
        return null;
    }
    
    int maximum = array[0];
    
    for (int i = 1; i < array.length; i++) {
        if (array[i] > maximum) {
            maximum = array[i];
        }
    }
    
    return maximum;
}
\`\`\`

## Vergleich: Aktivit√§tsdiagramm vs. Pseudocode
<!-- micro-quiz:fue-02-control-structures-pseudocode-konventionen-micro-1 -->


| Merkmal | Aktivit√§tsdiagramm | Pseudocode |
|---------|-------------------|------------|
| **Visualisierung** | Grafisch | Textuell |
| **√úbersichtlichkeit** | Gut bei einfachen Abl√§ufen | Gut bei komplexen Algorithmen |
| **Detailgrad** | Mittel | Hoch |
| **Erstellung** | Zeitaufw√§ndig | Schnell |
| **Standardisierung** | UML-Standard | Keine feste Norm |
| **Verwendung** | Prozessmodellierung | Algorithmen-Design |

<!-- micro-quiz:fue-02-control-structures-vergleich-aktivitatsdiagramm-vs-pseudocode-micro-1 -->
## Warum Struktogramme und PAP veraltet sind

### Struktogramme (Nassi-Shneiderman)

**Nachteile:**
- ‚ùå Nicht standardisiert (kein UML)
- ‚ùå Schwer zu zeichnen und zu √§ndern
- ‚ùå Un√ºbersichtlich bei komplexen Algorithmen
- ‚ùå Kaum noch in der Praxis verwendet

### Programmablaufpl√§ne (PAP)

**Nachteile:**
- ‚ùå Veraltet (aus den 1960er Jahren)
- ‚ùå Zu detailliert f√ºr moderne Entwicklung
- ‚ùå Unflexibel bei √Ñnderungen
- ‚ùå Aktivit√§tsdiagramme sind moderner und flexibler

### Moderne Alternativen

‚úÖ **Aktivit√§tsdiagramme**: UML-Standard, weit verbreitet
‚úÖ **Pseudocode**: Schnell, flexibel, sprachunabh√§ngig
‚úÖ **Sequenzdiagramme**: F√ºr Interaktionen zwischen Objekten
‚úÖ **Zustandsdiagramme**: F√ºr zustandsbasierte Systeme

## Praktische Beispiele
<!-- micro-quiz:fue-02-control-structures-warum-struktogramme-und-pap-veraltet-sind-micro-1 -->


### Beispiel 1: Login-Prozess

**Pseudocode:**
\`\`\`
FUNCTION login(username, password)
BEGIN
    versuche = 0
    max_versuche = 3
    
    WHILE versuche < max_versuche DO
        IF pruefeCredentials(username, password) THEN
            RETURN "Login erfolgreich"
        ELSE
            versuche = versuche + 1
            OUTPUT "Falsches Passwort. Versuch " + versuche + " von " + max_versuche
        END IF
    END WHILE
    
    RETURN "Account gesperrt"
END
\`\`\`

### Beispiel 2: Bubble Sort

**Pseudocode:**
\`\`\`
FUNCTION bubble_sort(array)
BEGIN
    n = l√§nge(array)
    
    FOR i = 0 TO n - 1 DO
        FOR j = 0 TO n - i - 2 DO
            IF array[j] > array[j + 1] THEN
                // Tauschen
                temp = array[j]
                array[j] = array[j + 1]
                array[j + 1] = temp
            END IF
        END FOR
    END FOR
    
    RETURN array
END
\`\`\`

### Beispiel 3: Fakult√§t berechnen

**Pseudocode (iterativ):**
\`\`\`
FUNCTION fakultaet(n)
BEGIN
    IF n < 0 THEN
        RETURN "Fehler: Negative Zahl"
    END IF
    
    ergebnis = 1
    
    FOR i = 1 TO n DO
        ergebnis = ergebnis * i
    END FOR
    
    RETURN ergebnis
END
\`\`\`

**Pseudocode (rekursiv):**
\`\`\`
FUNCTION fakultaet_rekursiv(n)
BEGIN
    IF n < 0 THEN
        RETURN "Fehler: Negative Zahl"
    END IF
    
    IF n == 0 OR n == 1 THEN
        RETURN 1
    ELSE
        RETURN n * fakultaet_rekursiv(n - 1)
    END IF
END
\`\`\`

<!-- micro-quiz:fue-02-control-structures-praktische-beispiele-micro-1 -->
## Best Practices

### Aktivit√§tsdiagramme

1. **Klar strukturieren**: Von oben nach unten
2. **Beschriftungen**: Bedingungen klar formulieren
3. **Nicht zu detailliert**: Fokus auf Ablauf, nicht Implementation
4. **Parallelit√§t**: Nutze Fork/Join f√ºr parallele Aktivit√§ten

### Pseudocode

1. **Konsistent**: Einheitliche Schl√ºsselw√∂rter
2. **Einr√ºckung**: Zeigt Struktur und Hierarchie
3. **Kommentare**: Erkl√§re komplexe Logik
4. **Verst√§ndlich**: F√ºr andere lesbar
5. **Sprachunabh√§ngig**: Keine spezifische Syntax

## Zusammenfassung
<!-- micro-quiz:fue-02-control-structures-best-practices-micro-1 -->


### Pr√ºfungsrelevant ab 2025

‚úÖ **Aktivit√§tsdiagramme (UML)**:
- Grafische Darstellung von Abl√§ufen
- Standardisiert (UML)
- Gut f√ºr Prozessmodellierung

‚úÖ **Pseudocode**:
- Textuelle Darstellung von Algorithmen
- Sprachunabh√§ngig
- Schnell und flexibel

### Nicht mehr pr√ºfungsrelevant

‚ùå **Struktogramme**: Veraltet, nicht standardisiert
‚ùå **PAP (Programmablaufpl√§ne)**: Veraltet, zu detailliert

### F√ºr die IHK-Pr√ºfung wichtig:

- Verstehe die drei Grundstrukturen (Sequenz, Verzweigung, Schleife)
- Kenne die Symbole von Aktivit√§tsdiagrammen
- Schreibe verst√§ndlichen Pseudocode
- Erkenne den Unterschied zwischen kopf- und fu√ügesteuerten Schleifen
- Wisse, dass Struktogramme und PAP veraltet sind



<!-- micro-quiz:fue-02-control-structures-quiz -->
<!-- micro-quiz:fue-02-control-structures-zusammenfassung-micro-1 -->
`,Af=[{language:"pseudocode",title:"Pseudocode: Zahlenraten-Spiel",code:`FUNCTION zahlenraten_spiel()
BEGIN
    zufallszahl = generiere_zufallszahl(1, 100)
    versuche = 0
    max_versuche = 7
    gewonnen = false
    
    OUTPUT "Errate die Zahl zwischen 1 und 100!"
    OUTPUT "Du hast " + max_versuche + " Versuche."
    
    WHILE versuche < max_versuche AND NOT gewonnen DO
        versuche = versuche + 1
        OUTPUT "Versuch " + versuche + ": "
        eingabe = INPUT
        
        IF eingabe == zufallszahl THEN
            gewonnen = true
            OUTPUT "Richtig! Du hast gewonnen in " + versuche + " Versuchen!"
        ELSE IF eingabe < zufallszahl THEN
            OUTPUT "Zu klein! Versuche eine gr√∂√üere Zahl."
        ELSE
            OUTPUT "Zu gro√ü! Versuche eine kleinere Zahl."
        END IF
    END WHILE
    
    IF NOT gewonnen THEN
        OUTPUT "Leider verloren! Die Zahl war: " + zufallszahl
    END IF
END`,explanation:"Vollst√§ndiges Zahlenraten-Spiel in Pseudocode. Zeigt Schleifen, Verzweigungen und Ein-/Ausgabe."},{language:"java",title:"Java: Primzahl-Pr√ºfung",code:`/**
 * Pr√ºft, ob eine Zahl eine Primzahl ist
 * 
 * Pseudocode:
 * FUNCTION ist_primzahl(n)
 * BEGIN
 *     IF n <= 1 THEN
 *         RETURN false
 *     END IF
 *     
 *     IF n == 2 THEN
 *         RETURN true
 *     END IF
 *     
 *     IF n MOD 2 == 0 THEN
 *         RETURN false
 *     END IF
 *     
 *     FOR i = 3 TO wurzel(n) STEP 2 DO
 *         IF n MOD i == 0 THEN
 *             RETURN false
 *         END IF
 *     END FOR
 *     
 *     RETURN true
 * END
 */
public class PrimzahlPruefer {
    
    public static boolean istPrimzahl(int n) {
        // Zahlen <= 1 sind keine Primzahlen
        if (n <= 1) {
            return false;
        }
        
        // 2 ist die einzige gerade Primzahl
        if (n == 2) {
            return true;
        }
        
        // Alle anderen geraden Zahlen sind keine Primzahlen
        if (n % 2 == 0) {
            return false;
        }
        
        // Pr√ºfe ungerade Teiler bis zur Wurzel von n
        int wurzel = (int) Math.sqrt(n);
        for (int i = 3; i <= wurzel; i += 2) {
            if (n % i == 0) {
                return false;  // Teiler gefunden
            }
        }
        
        return true;  // Keine Teiler gefunden ‚Üí Primzahl
    }
    
    public static void main(String[] args) {
        // Teste Primzahlen von 1 bis 50
        System.out.println("Primzahlen von 1 bis 50:");
        
        for (int i = 1; i <= 50; i++) {
            if (istPrimzahl(i)) {
                System.out.print(i + " ");
            }
        }
        // Ausgabe: 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47
    }
}`,explanation:"Primzahl-Pr√ºfung mit Pseudocode-Kommentar und Java-Implementation. Zeigt optimierten Algorithmus."},{language:"python",title:"Python: Fibonacci-Folge",code:`# Pseudocode:
# FUNCTION fibonacci(n)
# BEGIN
#     IF n <= 0 THEN
#         RETURN []
#     ELSE IF n == 1 THEN
#         RETURN [0]
#     ELSE IF n == 2 THEN
#         RETURN [0, 1]
#     END IF
#     
#     folge = [0, 1]
#     
#     FOR i = 2 TO n - 1 DO
#         naechste = folge[i-1] + folge[i-2]
#         folge.append(naechste)
#     END FOR
#     
#     RETURN folge
# END

def fibonacci(n):
    """Generiert die ersten n Fibonacci-Zahlen"""
    
    # Spezialf√§lle
    if n <= 0:
        return []
    elif n == 1:
        return [0]
    elif n == 2:
        return [0, 1]
    
    # Initialisierung mit ersten zwei Zahlen
    folge = [0, 1]
    
    # Generiere weitere Zahlen
    for i in range(2, n):
        naechste = folge[i-1] + folge[i-2]
        folge.append(naechste)
    
    return folge

# Verwendung
if __name__ == "__main__":
    # Erste 10 Fibonacci-Zahlen
    ergebnis = fibonacci(10)
    print("Fibonacci-Folge:", ergebnis)
    # Ausgabe: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
    
    # Summe der ersten 10 Fibonacci-Zahlen
    summe = sum(ergebnis)
    print(f"Summe: {summe}")  # 88`,explanation:"Fibonacci-Folge mit Pseudocode-Kommentar und Python-Implementation. Zeigt iterativen Ansatz."},{language:"java",title:"Java: Bin√§re Suche",code:`/**
 * Bin√§re Suche in sortiertem Array
 * 
 * Pseudocode:
 * FUNCTION binaere_suche(array, ziel)
 * BEGIN
 *     links = 0
 *     rechts = l√§nge(array) - 1
 *     
 *     WHILE links <= rechts DO
 *         mitte = (links + rechts) / 2
 *         
 *         IF array[mitte] == ziel THEN
 *             RETURN mitte
 *         ELSE IF array[mitte] < ziel THEN
 *             links = mitte + 1
 *         ELSE
 *             rechts = mitte - 1
 *         END IF
 *     END WHILE
 *     
 *     RETURN -1  // Nicht gefunden
 * END
 */
public class BinaereSuche {
    
    public static int binaereSuche(int[] array, int ziel) {
        int links = 0;
        int rechts = array.length - 1;
        
        while (links <= rechts) {
            // Mitte berechnen (verhindert Overflow)
            int mitte = links + (rechts - links) / 2;
            
            if (array[mitte] == ziel) {
                return mitte;  // Gefunden!
            } else if (array[mitte] < ziel) {
                // Ziel ist in rechter H√§lfte
                links = mitte + 1;
            } else {
                // Ziel ist in linker H√§lfte
                rechts = mitte - 1;
            }
        }
        
        return -1;  // Nicht gefunden
    }
    
    public static void main(String[] args) {
        int[] sortierteZahlen = {2, 5, 8, 12, 16, 23, 38, 45, 56, 67, 78};
        
        // Suche nach 23
        int index = binaereSuche(sortierteZahlen, 23);
        if (index != -1) {
            System.out.println("23 gefunden an Index: " + index);  // Index 5
        }
        
        // Suche nach 100 (nicht vorhanden)
        index = binaereSuche(sortierteZahlen, 100);
        if (index == -1) {
            System.out.println("100 nicht gefunden");
        }
    }
}`,explanation:"Bin√§re Suche mit Pseudocode und Java-Code. Zeigt effizienten Suchalgorithmus mit O(log n) Komplexit√§t."},{language:"pseudocode",title:"Pseudocode: Passwort-Validierung",code:`FUNCTION validiere_passwort(passwort)
BEGIN
    min_laenge = 8
    hat_grossbuchstabe = false
    hat_kleinbuchstabe = false
    hat_ziffer = false
    hat_sonderzeichen = false
    
    // L√§nge pr√ºfen
    IF l√§nge(passwort) < min_laenge THEN
        RETURN "Passwort muss mindestens " + min_laenge + " Zeichen lang sein"
    END IF
    
    // Zeichen durchgehen
    FOR EACH zeichen IN passwort DO
        IF zeichen ist Gro√übuchstabe THEN
            hat_grossbuchstabe = true
        ELSE IF zeichen ist Kleinbuchstabe THEN
            hat_kleinbuchstabe = true
        ELSE IF zeichen ist Ziffer THEN
            hat_ziffer = true
        ELSE IF zeichen ist Sonderzeichen THEN
            hat_sonderzeichen = true
        END IF
    END FOR
    
    // Alle Kriterien pr√ºfen
    IF NOT hat_grossbuchstabe THEN
        RETURN "Passwort muss mindestens einen Gro√übuchstaben enthalten"
    END IF
    
    IF NOT hat_kleinbuchstabe THEN
        RETURN "Passwort muss mindestens einen Kleinbuchstaben enthalten"
    END IF
    
    IF NOT hat_ziffer THEN
        RETURN "Passwort muss mindestens eine Ziffer enthalten"
    END IF
    
    IF NOT hat_sonderzeichen THEN
        RETURN "Passwort muss mindestens ein Sonderzeichen enthalten"
    END IF
    
    RETURN "Passwort ist g√ºltig"
END

// Verwendung
BEGIN
    passwort1 = "test"  // Zu kurz
    passwort2 = "TestPasswort"  // Keine Ziffer, kein Sonderzeichen
    passwort3 = "TestPass123!"  // G√ºltig
    
    OUTPUT validiere_passwort(passwort1)
    OUTPUT validiere_passwort(passwort2)
    OUTPUT validiere_passwort(passwort3)
END`,explanation:"Passwort-Validierung in Pseudocode. Zeigt komplexe Bedingungspr√ºfung und String-Verarbeitung."}],Ef=["fue-02-control-structures-quiz"],_f=[{title:"UML Activity Diagrams",url:"https://www.uml-diagrams.org/activity-diagrams.html",type:"documentation"},{title:"Pseudocode Standards",url:"https://www.geeksforgeeks.org/how-to-write-a-pseudo-code/",type:"article"}],Df="2025-01-05T10:00:00Z",Pf="1.0",Tf=["Du kannst kontrollstrukturen erkl√§ren","Du kannst aktivit√§tsdiagramm erkl√§ren","Du kannst pseudocode erkl√§ren","Du kannst algorithmen erkl√§ren","Du kannst uml erkl√§ren"],qf="Lerne moderne Methoden zur Darstellung von Kontrollstrukturen mit Aktivit√§tsdiagrammen und Pseudocode.",Rf=[{id:"kontrollstrukturen-aktivitatsdiagramme-und-pseudoc",title:"Kontrollstrukturen: Aktivit√§tsdiagramme und Pseudocode",summary:"Kernaspekt: Kontrollstrukturen: Aktivit√§tsdiagramme und Pseudocode"},{id:"ubersicht",title:"√úbersicht",summary:"Kernaspekt: √úbersicht"},{id:"die-drei-grundstrukturen",title:"Die drei Grundstrukturen",summary:"Kernaspekt: Die drei Grundstrukturen"},{id:"aktivitatsdiagramme-uml",title:"Aktivit√§tsdiagramme (UML)",summary:"Kernaspekt: Aktivit√§tsdiagramme (UML)"},{id:"pseudocode-konventionen",title:"Pseudocode-Konventionen",summary:"Kernaspekt: Pseudocode-Konventionen"},{id:"vergleich-aktivitatsdiagramm-vs-pseudocode",title:"Vergleich: Aktivit√§tsdiagramm vs. Pseudocode",summary:"Kernaspekt: Vergleich: Aktivit√§tsdiagramm vs. Pseudocode"},{id:"warum-struktogramme-und-pap-veraltet-sind",title:"Warum Struktogramme und PAP veraltet sind",summary:"Kernaspekt: Warum Struktogramme und PAP veraltet sind"},{id:"praktische-beispiele",title:"Praktische Beispiele",summary:"Kernaspekt: Praktische Beispiele"},{id:"best-practices",title:"Best Practices",summary:"Kernaspekt: Best Practices"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],If="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",Cf="Automatisch erg√§nzt: Review erforderlich",Lf=["fue-02-control-structures-ubersicht-micro-1","fue-02-control-structures-die-drei-grundstrukturen-micro-1","fue-02-control-structures-aktivitatsdiagramme-uml-micro-1","fue-02-control-structures-pseudocode-konventionen-micro-1","fue-02-control-structures-vergleich-aktivitatsdiagramm-vs-pseudocode-micro-1","fue-02-control-structures-warum-struktogramme-und-pap-veraltet-sind-micro-1","fue-02-control-structures-praktische-beispiele-micro-1","fue-02-control-structures-best-practices-micro-1","fue-02-control-structures-quiz","fue-02-control-structures-zusammenfassung-micro-1"],Mf={id:cf,title:df,description:mf,category:gf,subcategory:hf,difficulty:pf,examRelevance:ff,newIn2025:bf,removedIn2025:kf,important:zf,estimatedTime:vf,prerequisites:yf,tags:Sf,content:wf,codeExamples:Af,relatedQuizzes:Ef,resources:_f,lastUpdated:Df,version:Pf,learningObjectives:Tf,summary:qf,contentOutline:Rf,accessibilityNotes:If,editorNote:Cf,microQuizzes:Lf},Of="fue-03-quality",Nf="F√ú-03: Durchf√ºhren von qualit√§tssichernden Ma√ünahmen",Bf="Software-Tests (Black Box, White Box, Review, Extremwertetest) und Last-/Performancetests. Qualit√§tssicherung ist essentiell f√ºr erfolgreiche Softwareprojekte.",xf="F√ú-03",Vf="Qualit√§tssichernde Ma√ünahmen",Ff="intermediate",Kf="high",Wf=!1,jf=!1,$f=!0,Gf=100,Uf=[],Hf=["Software-Tests","Black Box","White Box","Review","Extremwertetest","Last-Tests","Performance-Tests","Qualit√§tssicherung"],Qf=`# F√ú-03: Durchf√ºhren von qualit√§tssichernden Ma√ünahmen

## Einf√ºhrung

Qualit√§tssicherung (Quality Assurance, QA) ist ein wesentlicher Bestandteil der Softwareentwicklung. Sie stellt sicher, dass Software die Anforderungen erf√ºllt, fehlerfrei funktioniert und wartbar ist. **NEU AB 2025**: Last- und Performancetests sind explizit im Pr√ºfungskatalog aufgef√ºhrt.

<!-- micro-quiz:fue-03-quality-einfuhrung-micro-1 -->
## 1. Software-Tests

### 1.1 Testziele

- **Fehler finden**: Defekte und Bugs identifizieren
- **Qualit√§t sichern**: Anforderungen werden erf√ºllt
- **Vertrauen schaffen**: Software funktioniert wie erwartet
- **Risiken minimieren**: Fehler vor Produktivbetrieb finden
- **Dokumentation**: Nachweis der Funktionalit√§t

### 1.2 Testprinzipien

1. **Testen zeigt Anwesenheit von Fehlern**: Tests k√∂nnen Fehler finden, aber nicht deren Abwesenheit beweisen
2. **Vollst√§ndiges Testen ist unm√∂glich**: Man kann nicht alle m√∂glichen Eingaben testen
3. **Fr√ºhes Testen**: Je fr√ºher Fehler gefunden werden, desto g√ºnstiger ist die Behebung
4. **Fehler-Clustering**: 80% der Fehler finden sich in 20% der Module
5. **Pestizid-Paradoxon**: Dieselben Tests finden irgendwann keine neuen Fehler mehr
6. **Testen ist kontextabh√§ngig**: Verschiedene Systeme erfordern verschiedene Teststrategien
7. **Trugschluss der Fehlerfreiheit**: Fehlerfreie Software ist nicht automatisch n√ºtzlich

## 2. Black Box Testing
<!-- micro-quiz:fue-03-quality-1-software-tests-micro-1 -->


### 2.1 Definition

Beim Black Box Testing wird die Software ohne Kenntnis der internen Struktur getestet. Der Tester kennt nur die Spezifikation (Eingaben und erwartete Ausgaben).

**Metapher**: Die Software ist eine "schwarze Box" - man sieht nur, was hineingeht und was herauskommt.

### 2.2 Vorteile

- Unabh√§ngig von der Implementierung
- Tester ben√∂tigen keine Programmierkenntnisse
- Tests k√∂nnen fr√ºh (parallel zur Entwicklung) erstellt werden
- Fokus auf Benutzerperspektive
- Findet Fehler in der Spezifikation

### 2.3 Nachteile

- Nicht alle Codepfade werden getestet
- Redundante Tests m√∂glich
- Schwierig, versteckte Fehler zu finden

### 2.4 Black Box Testverfahren

#### √Ñquivalenzklassenbildung

Eingabewerte werden in Klassen gruppiert, die √§hnlich behandelt werden.

**Beispiel: Altersvalidierung (18-65 Jahre)**

\`\`\`
G√ºltige √Ñquivalenzklasse:
- 18 ‚â§ Alter ‚â§ 65
- Testfall: Alter = 30

Ung√ºltige √Ñquivalenzklassen:
- Alter < 18
- Testfall: Alter = 10

- Alter > 65
- Testfall: Alter = 70

- Keine Zahl
- Testfall: Alter = "abc"
\`\`\`

#### Grenzwertanalyse

Tests konzentrieren sich auf die Grenzen von √Ñquivalenzklassen, da dort h√§ufig Fehler auftreten.

**Beispiel: Altersvalidierung (18-65 Jahre)**

\`\`\`
Testf√§lle:
- 17 (ung√ºltig, unter Grenze)
- 18 (g√ºltig, untere Grenze)
- 19 (g√ºltig, √ºber unterer Grenze)
- 64 (g√ºltig, unter oberer Grenze)
- 65 (g√ºltig, obere Grenze)
- 66 (ung√ºltig, √ºber Grenze)
\`\`\`

#### Zustandsbasiertes Testen

Testen von Zustands√ºberg√§ngen in zustandsbasierten Systemen.

**Beispiel: Bestellstatus**

\`\`\`
Zust√§nde:
- Neu
- Bezahlt
- Versendet
- Geliefert
- Storniert

√úberg√§nge testen:
- Neu ‚Üí Bezahlt (g√ºltig)
- Neu ‚Üí Versendet (ung√ºltig)
- Bezahlt ‚Üí Storniert (g√ºltig)
- Geliefert ‚Üí Neu (ung√ºltig)
\`\`\`

### 2.5 Extremwertetest

Extremwertetests pr√ºfen das Verhalten bei extremen Eingabewerten.

**Beispiele:**

\`\`\`
String-L√§nge:
- Leerer String: ""
- Sehr langer String: 10.000 Zeichen
- Maximale L√§nge: Datenbankfeld-Limit

Zahlen:
- Minimum: Integer.MIN_VALUE
- Maximum: Integer.MAX_VALUE
- Null: 0
- Negativ: -1

Listen:
- Leere Liste: []
- Ein Element: [1]
- Viele Elemente: 1.000.000 Eintr√§ge

Datum:
- 01.01.1970 (Unix-Epoch)
- 31.12.9999 (Maximaldatum)
- 29.02.2024 (Schaltjahr)
- 29.02.2023 (kein Schaltjahr)
\`\`\`

<!-- micro-quiz:fue-03-quality-2-black-box-testing-micro-1 -->
## 3. White Box Testing

### 3.1 Definition

Beim White Box Testing wird die Software mit Kenntnis der internen Struktur getestet. Der Tester kennt den Quellcode und die Architektur.

**Metapher**: Die Software ist eine "gl√§serne Box" - man sieht, wie sie intern funktioniert.

### 3.2 Vorteile

- Alle Codepfade k√∂nnen getestet werden
- Findet versteckte Fehler
- Optimierung m√∂glich
- Code-Coverage messbar

### 3.3 Nachteile

- Erfordert Programmierkenntnisse
- Zeitaufwendig
- Kann Spezifikationsfehler √ºbersehen
- Abh√§ngig von der Implementierung

### 3.4 White Box Testverfahren

#### Anweisungs√ºberdeckung (Statement Coverage)

Jede Anweisung im Code wird mindestens einmal ausgef√ºhrt.

**Beispiel:**

\`\`\`java
public int berechneRabatt(int alter, boolean istMitglied) {
    int rabatt = 0;                    // Zeile 1
    if (alter < 18) {                  // Zeile 2
        rabatt = 10;                   // Zeile 3
    }
    if (istMitglied) {                 // Zeile 4
        rabatt += 5;                   // Zeile 5
    }
    return rabatt;                     // Zeile 6
}

// Testfall f√ºr 100% Anweisungs√ºberdeckung:
Test 1: berechneRabatt(15, true)
// F√ºhrt alle Zeilen aus: 1, 2, 3, 4, 5, 6
\`\`\`

#### Zweig√ºberdeckung (Branch Coverage)

Jeder Zweig (if/else) wird mindestens einmal durchlaufen.

**Beispiel:**

\`\`\`java
public String pruefeNote(int punkte) {
    if (punkte >= 50) {                // Zweig A
        return "Bestanden";            // Zweig A-true
    } else {
        return "Nicht bestanden";      // Zweig A-false
    }
}

// Testf√§lle f√ºr 100% Zweig√ºberdeckung:
Test 1: pruefeNote(60)  // Zweig A-true
Test 2: pruefeNote(30)  // Zweig A-false
\`\`\`

#### Pfad√ºberdeckung (Path Coverage)

Alle m√∂glichen Pfade durch den Code werden getestet.

**Beispiel:**

\`\`\`java
public int berechnePreis(boolean istMitglied, boolean istStudent) {
    int preis = 100;
    if (istMitglied) {                 // Bedingung 1
        preis -= 10;
    }
    if (istStudent) {                  // Bedingung 2
        preis -= 20;
    }
    return preis;
}

// Alle Pfade:
Test 1: berechnePreis(false, false) // Pfad: keine Rabatte
Test 2: berechnePreis(true, false)  // Pfad: nur Mitgliederrabatt
Test 3: berechnePreis(false, true)  // Pfad: nur Studentenrabatt
Test 4: berechnePreis(true, true)   // Pfad: beide Rabatte
\`\`\`

## 4. Code Review
<!-- micro-quiz:fue-03-quality-3-white-box-testing-micro-1 -->


### 4.1 Definition

Code Review ist die systematische √úberpr√ºfung von Quellcode durch andere Entwickler.

### 4.2 Arten von Reviews

#### Informelles Review
- Spontane Code-Durchsicht
- Keine formale Struktur
- Schnelles Feedback

#### Walkthrough
- Autor f√ºhrt durch den Code
- Team stellt Fragen
- Fokus auf Verst√§ndnis

#### Technisches Review
- Formaler Prozess
- Fokus auf technische Qualit√§t
- Dokumentierte Ergebnisse

#### Inspektion (Formal Review)
- Sehr formaler Prozess
- Definierte Rollen (Moderator, Autor, Reviewer)
- Checklisten
- Metriken und Berichte

### 4.3 Review-Checkliste

**Funktionalit√§t:**
- ‚úì Erf√ºllt der Code die Anforderungen?
- ‚úì Sind alle Edge Cases behandelt?
- ‚úì Ist die Fehlerbehandlung vollst√§ndig?

**Code-Qualit√§t:**
- ‚úì Ist der Code lesbar und verst√§ndlich?
- ‚úì Sind Variablen sinnvoll benannt?
- ‚úì Gibt es Code-Duplikate?
- ‚úì Ist der Code gut strukturiert?

**Best Practices:**
- ‚úì Werden Coding Standards eingehalten?
- ‚úì Sind Kommentare vorhanden und hilfreich?
- ‚úì Ist der Code testbar?

**Sicherheit:**
- ‚úì Sind Eingaben validiert?
- ‚úì Gibt es SQL-Injection-Risiken?
- ‚úì Sind sensible Daten gesch√ºtzt?

**Performance:**
- ‚úì Gibt es Performance-Probleme?
- ‚úì Sind Algorithmen effizient?
- ‚úì Werden Ressourcen korrekt freigegeben?

<!-- micro-quiz:fue-03-quality-4-code-review-micro-1 -->
## 5. Last- und Performancetests

**NEU AB 2025**: Last- und Performancetests sind explizit pr√ºfungsrelevant.

### 5.1 Performancetest

**Ziel**: Messen der Systemleistung unter normalen Bedingungen.

**Metriken:**
- **Antwortzeit**: Zeit von Anfrage bis Antwort
- **Durchsatz**: Anzahl Transaktionen pro Zeiteinheit
- **Ressourcennutzung**: CPU, RAM, Netzwerk

**Beispiel:**
\`\`\`
Test: Produktsuche
Erwartung: Antwortzeit < 2 Sekunden
Ergebnis: Durchschnitt 1,5 Sekunden
Status: ‚úì Bestanden
\`\`\`

### 5.2 Lasttest (Load Test)

**Ziel**: Verhalten unter erwarteter Last pr√ºfen.

**Vorgehen:**
1. Erwartete Benutzerzahl definieren
2. Realistische Szenarien erstellen
3. Last schrittweise erh√∂hen
4. Metriken √ºberwachen

**Beispiel:**
\`\`\`
Szenario: Online-Shop am Black Friday
- Erwartete Benutzer: 10.000 gleichzeitig
- Dauer: 4 Stunden
- Aktionen: Suchen, Warenkorb, Checkout

Ergebnis:
- Antwortzeit: 2,3 Sekunden (Ziel: < 3s) ‚úì
- Fehlerrate: 0,1% (Ziel: < 1%) ‚úì
- CPU-Auslastung: 75% (Ziel: < 80%) ‚úì
\`\`\`

### 5.3 Stresstest

**Ziel**: Grenzen des Systems finden.

**Vorgehen:**
1. Last kontinuierlich erh√∂hen
2. Bis zum Systemausfall oder Leistungseinbruch
3. Breaking Point identifizieren

**Beispiel:**
\`\`\`
Test: Maximale Benutzerzahl
Start: 1.000 Benutzer
Steigerung: +1.000 alle 5 Minuten

Ergebnis:
- 15.000 Benutzer: System stabil
- 18.000 Benutzer: Antwortzeit steigt auf 10s
- 20.000 Benutzer: System nicht mehr erreichbar

Breaking Point: ~18.000 Benutzer
\`\`\`

### 5.4 Spike Test

**Ziel**: Verhalten bei pl√∂tzlichen Lastspitzen pr√ºfen.

**Beispiel:**
\`\`\`
Szenario: Newsletter-Versand
- Normale Last: 100 Benutzer
- Spike: 5.000 Benutzer innerhalb 1 Minute
- Dauer: 10 Minuten
- R√ºckkehr: Normale Last

Ergebnis:
- System bleibt erreichbar ‚úì
- Antwortzeit steigt kurzzeitig auf 8s
- Erholt sich nach 5 Minuten ‚úì
\`\`\`

### 5.5 Ausdauertest (Soak Test)

**Ziel**: Stabilit√§t √ºber l√§ngeren Zeitraum pr√ºfen.

**Beispiel:**
\`\`\`
Test: 24-Stunden-Betrieb
Last: 5.000 Benutzer konstant
Dauer: 24 Stunden

√úberwachung:
- Memory Leaks
- Datenbankverbindungen
- Log-Dateien
- Ressourcennutzung

Ergebnis:
- Keine Memory Leaks ‚úì
- Stabile Performance ‚úì
- Keine Abst√ºrze ‚úì
\`\`\`

### 5.6 Tools f√ºr Last- und Performancetests

**Beliebte Tools:**
- **Apache JMeter**: Open Source, vielseitig
- **Gatling**: Scala-basiert, gute Reports
- **Locust**: Python-basiert, einfach zu schreiben
- **K6**: JavaScript-basiert, Cloud-Integration
- **LoadRunner**: Kommerziell, umfangreich

## 6. Testpyramide
<!-- micro-quiz:fue-03-quality-5-last--und-performancetests-micro-1 -->


Die Testpyramide zeigt die ideale Verteilung von Tests:

\`\`\`
        /\\
       /  \\     E2E Tests (wenige)
      /    \\    - Langsam
     /------\\   - Teuer
    /        \\  
   / Integr.  \\ Integrationstests (mittel)
  /   Tests    \\
 /--------------\\
/                \\
/   Unit Tests   \\ Unit Tests (viele)
/                 \\ - Schnell
-------------------  - G√ºnstig
\`\`\`

**Empfohlene Verteilung:**
- 70% Unit Tests
- 20% Integrationstests
- 10% End-to-End Tests

<!-- micro-quiz:fue-03-quality-6-testpyramide-micro-1 -->
## 7. Praktische Beispiele

### Beispiel 1: Black Box Test f√ºr Login

\`\`\`
Testfall 1: G√ºltige Anmeldung
Eingabe: 
  - Benutzername: "max@example.com"
  - Passwort: "Sicher123!"
Erwartetes Ergebnis: Erfolgreich angemeldet

Testfall 2: Ung√ºltiges Passwort
Eingabe:
  - Benutzername: "max@example.com"
  - Passwort: "falsch"
Erwartetes Ergebnis: Fehlermeldung "Ung√ºltige Anmeldedaten"

Testfall 3: Leere Felder
Eingabe:
  - Benutzername: ""
  - Passwort: ""
Erwartetes Ergebnis: Fehlermeldung "Felder d√ºrfen nicht leer sein"

Testfall 4: SQL-Injection-Versuch
Eingabe:
  - Benutzername: "admin' OR '1'='1"
  - Passwort: "test"
Erwartetes Ergebnis: Fehlermeldung, kein Zugriff
\`\`\`

### Beispiel 2: White Box Test f√ºr Rabattberechnung

\`\`\`java
public class RabattRechner {
    public double berechneEndpreis(double preis, boolean istMitglied, int alter) {
        double rabatt = 0;
        
        if (istMitglied) {
            rabatt += 0.10; // 10% Mitgliederrabatt
        }
        
        if (alter < 18) {
            rabatt += 0.05; // 5% Jugendrabatt
        } else if (alter >= 65) {
            rabatt += 0.15; // 15% Seniorenrabatt
        }
        
        return preis * (1 - rabatt);
    }
}

// White Box Tests f√ºr alle Pfade:
@Test
public void testKeinRabatt() {
    // Pfad: kein Mitglied, Alter 30
    assertEquals(100.0, rechner.berechneEndpreis(100, false, 30));
}

@Test
public void testNurMitgliederrabatt() {
    // Pfad: Mitglied, Alter 30
    assertEquals(90.0, rechner.berechneEndpreis(100, true, 30));
}

@Test
public void testMitgliedUndJugend() {
    // Pfad: Mitglied, Alter 16
    assertEquals(85.0, rechner.berechneEndpreis(100, true, 16));
}

@Test
public void testMitgliedUndSenior() {
    // Pfad: Mitglied, Alter 70
    assertEquals(75.0, rechner.berechneEndpreis(100, true, 70));
}
\`\`\`

## Pr√ºfungsrelevante Punkte
<!-- micro-quiz:fue-03-quality-7-praktische-beispiele-micro-1 -->


‚úì Unterschied zwischen Black Box und White Box Testing
‚úì √Ñquivalenzklassenbildung und Grenzwertanalyse
‚úì Extremwertetests durchf√ºhren
‚úì Code Coverage (Anweisungs-, Zweig-, Pfad√ºberdeckung)
‚úì Code Review-Prozess und Checklisten
‚úì **NEU 2025**: Last- und Performancetests
‚úì Testpyramide und Testverteilung

<!-- micro-quiz:fue-03-quality-prufungsrelevante-punkte-micro-1 -->
## Zusammenfassung

**Black Box Testing:**
- Testen ohne Kenntnis der internen Struktur
- Fokus auf Spezifikation und Benutzerperspektive
- Methoden: √Ñquivalenzklassen, Grenzwerte, Extremwerte

**White Box Testing:**
- Testen mit Kenntnis der internen Struktur
- Fokus auf Code-Coverage
- Methoden: Anweisungs-, Zweig-, Pfad√ºberdeckung

**Code Review:**
- Systematische √úberpr√ºfung durch andere Entwickler
- Findet Fehler, verbessert Code-Qualit√§t
- Verschiedene Formalit√§tsgrade

**Last- und Performancetests (NEU 2025):**
- Performancetest: Leistung unter normalen Bedingungen
- Lasttest: Verhalten unter erwarteter Last
- Stresstest: Grenzen des Systems finden
- Wichtig f√ºr produktionsreife Software



<!-- micro-quiz:fue-03-quality-quiz -->
<!-- micro-quiz:fue-03-quality-zusammenfassung-micro-1 -->
`,Zf=[{language:"java",title:"Beispiel: Unit Test mit JUnit",code:`import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class TaschenrechnerTest {
    
    private Taschenrechner rechner = new Taschenrechner();
    
    @Test
    public void testAddition() {
        // Arrange
        int a = 5;
        int b = 3;
        
        // Act
        int ergebnis = rechner.addiere(a, b);
        
        // Assert
        assertEquals(8, ergebnis, "5 + 3 sollte 8 ergeben");
    }
    
    @Test
    public void testDivisionDurchNull() {
        // Assert & Act
        assertThrows(ArithmeticException.class, () -> {
            rechner.dividiere(10, 0);
        }, "Division durch Null sollte Exception werfen");
    }
    
    @Test
    public void testGrenzwerte() {
        // Test mit Integer.MAX_VALUE
        assertEquals(Integer.MAX_VALUE, 
                     rechner.addiere(Integer.MAX_VALUE, 0));
        
        // Test mit negativen Zahlen
        assertEquals(-5, rechner.addiere(-2, -3));
    }
}`,explanation:"Unit Tests pr√ºfen einzelne Funktionen isoliert. Das AAA-Pattern (Arrange-Act-Assert) strukturiert Tests klar und verst√§ndlich."},{language:"javascript",title:"Beispiel: Lasttest mit K6",code:`import http from 'k6/http';
import { check, sleep } from 'k6';

// Testkonfiguration
export let options = {
  stages: [
    { duration: '2m', target: 100 },  // Hochfahren auf 100 Benutzer
    { duration: '5m', target: 100 },  // 5 Minuten bei 100 Benutzern
    { duration: '2m', target: 200 },  // Hochfahren auf 200 Benutzer
    { duration: '5m', target: 200 },  // 5 Minuten bei 200 Benutzern
    { duration: '2m', target: 0 },    // Herunterfahren
  ],
  thresholds: {
    http_req_duration: ['p(95)<500'], // 95% der Requests < 500ms
    http_req_failed: ['rate<0.01'],   // Fehlerrate < 1%
  },
};

export default function () {
  // Produktsuche simulieren
  let searchResponse = http.get('https://api.example.com/products?q=laptop');
  
  check(searchResponse, {
    'Status ist 200': (r) => r.status === 200,
    'Antwortzeit < 500ms': (r) => r.timings.duration < 500,
    'Ergebnisse vorhanden': (r) => JSON.parse(r.body).results.length > 0,
  });
  
  sleep(1); // 1 Sekunde Pause zwischen Requests
  
  // Produktdetails abrufen
  let productId = JSON.parse(searchResponse.body).results[0].id;
  let detailResponse = http.get(\`https://api.example.com/products/\${productId}\`);
  
  check(detailResponse, {
    'Status ist 200': (r) => r.status === 200,
    'Produktname vorhanden': (r) => JSON.parse(r.body).name !== undefined,
  });
  
  sleep(2);
}`,explanation:"Lasttests simulieren viele gleichzeitige Benutzer und messen die Systemleistung. K6 erm√∂glicht realistische Lastszenarien mit JavaScript."}],Jf=["fue-03-quality-quiz"],Yf=[{title:"ISTQB Foundation Level",url:"https://www.istqb.org",type:"documentation"},{title:"K6 Load Testing",url:"https://k6.io/docs",type:"documentation"}],Xf="2025-01-10T00:00:00Z",eb="1.0",nb=["Du kannst software-Tests erkl√§ren","Du kannst black Box erkl√§ren","Du kannst white Box erkl√§ren","Du kannst review erkl√§ren","Du kannst extremwertetest erkl√§ren"],tb="Software-Tests (Black Box, White Box, Review, Extremwertetest) und Last-/Performancetests.",ib=[{id:"fu-03-durchfuhren-von-qualitatssichernden-manahmen",title:"F√ú-03: Durchf√ºhren von qualit√§tssichernden Ma√ünahmen",summary:"Kernaspekt: F√ú-03: Durchf√ºhren von qualit√§tssichernden Ma√ünahmen"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"1-software-tests",title:"1. Software-Tests",summary:"Kernaspekt: 1. Software-Tests"},{id:"2-black-box-testing",title:"2. Black Box Testing",summary:"Kernaspekt: 2. Black Box Testing"},{id:"3-white-box-testing",title:"3. White Box Testing",summary:"Kernaspekt: 3. White Box Testing"},{id:"4-code-review",title:"4. Code Review",summary:"Kernaspekt: 4. Code Review"},{id:"5-last--und-performancetests",title:"5. Last- und Performancetests",summary:"Kernaspekt: 5. Last- und Performancetests"},{id:"6-testpyramide",title:"6. Testpyramide",summary:"Kernaspekt: 6. Testpyramide"},{id:"7-praktische-beispiele",title:"7. Praktische Beispiele",summary:"Kernaspekt: 7. Praktische Beispiele"},{id:"prufungsrelevante-punkte",title:"Pr√ºfungsrelevante Punkte",summary:"Kernaspekt: Pr√ºfungsrelevante Punkte"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],rb="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",sb="Automatisch erg√§nzt: Review erforderlich",ab=["fue-03-quality-einfuhrung-micro-1","fue-03-quality-1-software-tests-micro-1","fue-03-quality-2-black-box-testing-micro-1","fue-03-quality-3-white-box-testing-micro-1","fue-03-quality-4-code-review-micro-1","fue-03-quality-5-last--und-performancetests-micro-1","fue-03-quality-6-testpyramide-micro-1","fue-03-quality-7-praktische-beispiele-micro-1","fue-03-quality-prufungsrelevante-punkte-micro-1","fue-03-quality-quiz","fue-03-quality-zusammenfassung-micro-1"],ob={id:Of,title:Nf,description:Bf,category:xf,subcategory:Vf,difficulty:Ff,examRelevance:Kf,newIn2025:Wf,removedIn2025:jf,important:$f,estimatedTime:Gf,prerequisites:Uf,tags:Hf,content:Qf,codeExamples:Zf,relatedQuizzes:Jf,resources:Yf,lastUpdated:Xf,version:eb,learningObjectives:nb,summary:tb,contentOutline:ib,accessibilityNotes:rb,editorNote:sb,microQuizzes:ab},lb="fue-03-load-performance-tests",ub="Last-, Performance- und Stresstests",cb="Verstehe die Unterschiede zwischen Last-, Performance- und Stresstests, lerne wichtige Metriken und Tools kennen.",db="F√ú-03",mb="Durchf√ºhren von qualit√§tssichernden Ma√ünahmen - Performance-Testing",gb="intermediate",hb="high",pb=!0,fb=!1,bb=!0,kb=50,zb=["fue-03-quality"],vb=["lasttest","performancetest","stresstest","testing","qualit√§tssicherung","metriken","tools"],yb=`# Last-, Performance- und Stresstests

## √úbersicht

**Performance-Testing** ist ein Oberbegriff f√ºr verschiedene Testarten, die das Verhalten eines Systems unter Last untersuchen. Ab 2025 sind Last- und Performancetests explizit im IHK-Pr√ºfungskatalog aufgef√ºhrt.

### Warum Performance-Testing?

- ‚úÖ Identifiziere Engp√§sse vor Produktivbetrieb
- ‚úÖ Stelle sicher, dass SLAs (Service Level Agreements) eingehalten werden
- ‚úÖ Optimiere Ressourcennutzung
- ‚úÖ Verhindere Systemausf√§lle unter Last
- ‚úÖ Verbessere Benutzererfahrung

<!-- micro-quiz:fue-03-load-performance-tests-ubersicht-micro-1 -->
## Arten von Performance-Tests

### 1. Lasttest (Load Test)

**Definition**: Testet das System unter **erwarteter normaler Last**.

**Ziel**: √úberpr√ºfen, ob das System die erwartete Anzahl gleichzeitiger Benutzer bew√§ltigen kann.

**Beispiel-Szenario:**
\`\`\`
E-Commerce-Website:
- Normale Last: 1.000 gleichzeitige Benutzer
- Testdauer: 1 Stunde
- Erwartung: Antwortzeit < 2 Sekunden
\`\`\`

**Grafische Darstellung:**
\`\`\`
Benutzer
  ‚Üë
  ‚îÇ     ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
  ‚îÇ     ‚îÇ  Normale Last   ‚îÇ
  ‚îÇ     ‚îÇ                 ‚îÇ
  ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò                 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  ‚îÇ
  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Üí Zeit
\`\`\`

**Wann durchf√ºhren:**
- Vor jedem Release
- Nach Performance-Optimierungen
- Bei Infrastruktur-√Ñnderungen

### 2. Performancetest (Performance Test)

**Definition**: Misst **Geschwindigkeit, Reaktionszeit und Stabilit√§t** unter verschiedenen Lastbedingungen.

**Ziel**: Identifiziere Performance-Probleme und Engp√§sse.

**Gemessene Metriken:**
- Antwortzeit (Response Time)
- Durchsatz (Throughput)
- Ressourcennutzung (CPU, RAM, Disk I/O)
- Fehlerrate

**Beispiel-Szenario:**
\`\`\`
API-Endpunkt:
- Teste mit 10, 50, 100, 500, 1000 Requests/Sekunde
- Messe Antwortzeit bei jeder Last
- Identifiziere, ab wann Antwortzeit steigt
\`\`\`

**Grafische Darstellung:**
\`\`\`
Antwortzeit (ms)
  ‚Üë
  ‚îÇ                    ‚ï±
  ‚îÇ                  ‚ï±
  ‚îÇ                ‚ï±
  ‚îÇ              ‚ï±
  ‚îÇ            ‚ï±
  ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ï±
  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Üí Last (Benutzer)
       Akzeptabel ‚îÇ Kritisch
\`\`\`

### 3. Stresstest (Stress Test)

**Definition**: Testet das System unter **extremer Last**, die √ºber normale Erwartungen hinausgeht.

**Ziel**: Finde die **Belastungsgrenze** des Systems und teste Verhalten bei √úberlastung.

**Beispiel-Szenario:**
\`\`\`
Webserver:
- Normale Last: 1.000 Benutzer
- Stresstest: Erh√∂he auf 5.000, 10.000, 20.000 Benutzer
- Frage: Wann bricht das System zusammen?
- Frage: Erholt sich das System nach Lastspitze?
\`\`\`

**Grafische Darstellung:**
\`\`\`
Benutzer
  ‚Üë
  ‚îÇ           ‚ï±‚ï≤
  ‚îÇ          ‚ï±  ‚ï≤
  ‚îÇ         ‚ï±    ‚ï≤
  ‚îÇ        ‚ï±      ‚ï≤
  ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ï±        ‚ï≤‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  ‚îÇ
  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Üí Zeit
       Ramp-up  ‚îÇ  Ramp-down
\`\`\`

**Wann durchf√ºhren:**
- Vor gro√üen Events (Black Friday, Produktlaunch)
- Nach Architektur-√Ñnderungen
- F√ºr Disaster-Recovery-Planung

### 4. Weitere Test-Typen

#### Spike Test
**Definition**: Pl√∂tzliche, extreme Lastspitzen.

\`\`\`
Benutzer
  ‚Üë
  ‚îÇ        ‚îÇ‚îÇ
  ‚îÇ        ‚îÇ‚îÇ
  ‚îÇ        ‚îÇ‚îÇ
  ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÇ‚îÇ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Üí Zeit
\`\`\`

**Beispiel**: Ticket-Verkauf f√ºr Konzert startet

#### Soak Test (Dauertest)
**Definition**: System √ºber **lange Zeit** unter normaler Last testen.

\`\`\`
Benutzer
  ‚Üë
  ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
  ‚îÇ  ‚îÇ   Konstante Last       ‚îÇ
  ‚îÇ‚îÄ‚îÄ‚îò                        ‚îî‚îÄ‚îÄ
  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚Üí Zeit
       24h - 72h
\`\`\`

**Ziel**: Memory Leaks, Ressourcen-Ersch√∂pfung finden

#### Scalability Test
**Definition**: Testet, wie gut das System **skaliert**.

**Fragen:**
- Verdoppelt sich Durchsatz bei doppelter Hardware?
- Wie verh√§lt sich das System bei horizontaler Skalierung?

## Wichtige Metriken
<!-- micro-quiz:fue-03-load-performance-tests-arten-von-performance-tests-micro-1 -->


### 1. Antwortzeit (Response Time)

**Definition**: Zeit von Request bis Response.

**Komponenten:**
\`\`\`
Gesamte Antwortzeit = Netzwerk + Server-Verarbeitung + Datenbank + Netzwerk
\`\`\`

**Typische Werte:**
- **Exzellent**: < 100 ms
- **Gut**: 100-300 ms
- **Akzeptabel**: 300-1000 ms
- **Langsam**: 1-3 Sekunden
- **Inakzeptabel**: > 3 Sekunden

### 2. Durchsatz (Throughput)

**Definition**: Anzahl verarbeiteter Requests pro Zeiteinheit.

**Einheiten:**
- Requests/Sekunde (RPS)
- Transaktionen/Sekunde (TPS)
- MB/Sekunde (Datendurchsatz)

**Beispiel:**
\`\`\`
API-Endpunkt:
- 1000 Requests in 10 Sekunden
- Durchsatz = 100 RPS
\`\`\`

### 3. Fehlerrate (Error Rate)

**Definition**: Prozentsatz fehlgeschlagener Requests.

**Berechnung:**
\`\`\`
Fehlerrate = (Fehlerhafte Requests / Gesamt Requests) √ó 100%
\`\`\`

**Akzeptable Werte:**
- **Exzellent**: < 0.1%
- **Gut**: 0.1-1%
- **Kritisch**: > 1%

### 4. Ressourcennutzung

**CPU-Auslastung:**
- **Normal**: < 70%
- **Hoch**: 70-90%
- **Kritisch**: > 90%

**RAM-Auslastung:**
- **Normal**: < 80%
- **Kritisch**: > 90%

**Disk I/O:**
- Lese-/Schreibgeschwindigkeit
- Queue-L√§nge

**Netzwerk:**
- Bandbreite-Nutzung
- Latenz
- Packet Loss

### 5. Concurrent Users (Gleichzeitige Benutzer)

**Definition**: Anzahl Benutzer, die gleichzeitig aktiv sind.

**Unterschied zu Total Users:**
\`\`\`
Total Users: 10.000 registrierte Benutzer
Concurrent Users: 500 gleichzeitig online
\`\`\`

### 6. Percentiles (Perzentile)

**Definition**: Statistische Verteilung der Antwortzeiten.

**Wichtige Percentiles:**
- **P50 (Median)**: 50% der Requests sind schneller
- **P90**: 90% der Requests sind schneller
- **P95**: 95% der Requests sind schneller
- **P99**: 99% der Requests sind schneller

**Beispiel:**
\`\`\`
Antwortzeiten:
P50 = 200 ms  (Median)
P90 = 500 ms  (90% unter 500ms)
P95 = 800 ms
P99 = 2000 ms (1% sind sehr langsam)
\`\`\`

**Warum wichtig?**
- Durchschnitt kann t√§uschen (wenige sehr langsame Requests)
- P95/P99 zeigen Worst-Case-Szenarien

<!-- micro-quiz:fue-03-load-performance-tests-wichtige-metriken-micro-1 -->
## Performance-Testing-Tools

### 1. Apache JMeter

**Typ**: Open Source, Java-basiert

**Features:**
- ‚úÖ GUI f√ºr Test-Erstellung
- ‚úÖ HTTP, HTTPS, FTP, JDBC, SOAP, REST
- ‚úÖ Verteiltes Testen
- ‚úÖ Umfangreiche Reporting

**Verwendung:**
\`\`\`bash
# JMeter im GUI-Modus starten
jmeter

# JMeter im CLI-Modus (f√ºr CI/CD)
jmeter -n -t testplan.jmx -l results.jtl -e -o report/
\`\`\`

**Vorteile:**
- Kostenlos
- Gro√üe Community
- Viele Plugins

**Nachteile:**
- Ressourcen-intensiv
- Steile Lernkurve

### 2. Gatling

**Typ**: Open Source, Scala-basiert

**Features:**
- ‚úÖ Code-basierte Tests (Scala DSL)
- ‚úÖ Hohe Performance
- ‚úÖ Sch√∂ne HTML-Reports
- ‚úÖ CI/CD-Integration

**Beispiel:**
\`\`\`scala
import io.gatling.core.Predef._
import io.gatling.http.Predef._

class BasicSimulation extends Simulation {
  val httpProtocol = http
    .baseUrl("https://api.example.com")
    
  val scn = scenario("Basic Load Test")
    .exec(http("Get Users")
      .get("/users")
      .check(status.is(200)))
    
  setUp(
    scn.inject(rampUsers(1000) during (60 seconds))
  ).protocols(httpProtocol)
}
\`\`\`

### 3. Locust

**Typ**: Open Source, Python-basiert

**Features:**
- ‚úÖ Python-Code f√ºr Tests
- ‚úÖ Web-UI f√ºr Monitoring
- ‚úÖ Verteiltes Testen
- ‚úÖ Einfach zu lernen

**Beispiel:**
\`\`\`python
from locust import HttpUser, task, between

class WebsiteUser(HttpUser):
    wait_time = between(1, 5)
    
    @task
    def load_homepage(self):
        self.client.get("/")
    
    @task(3)  # 3x h√§ufiger als homepage
    def load_products(self):
        self.client.get("/products")
\`\`\`

### 4. k6

**Typ**: Open Source, Go-basiert

**Features:**
- ‚úÖ JavaScript f√ºr Tests
- ‚úÖ CLI-fokussiert
- ‚úÖ Cloud-Integration
- ‚úÖ Moderne Metriken

**Beispiel:**
\`\`\`javascript
import http from 'k6/http';
import { check, sleep } from 'k6';

export let options = {
  stages: [
    { duration: '2m', target: 100 },  // Ramp-up
    { duration: '5m', target: 100 },  // Stay
    { duration: '2m', target: 0 },    // Ramp-down
  ],
};

export default function () {
  let response = http.get('https://api.example.com/users');
  check(response, {
    'status is 200': (r) => r.status === 200,
    'response time < 500ms': (r) => r.timings.duration < 500,
  });
  sleep(1);
}
\`\`\`

### 5. Kommerzielle Tools

#### LoadRunner (Micro Focus)
- Enterprise-Level
- Sehr teuer
- Umfangreiche Features

#### BlazeMeter
- Cloud-basiert
- JMeter-kompatibel
- Skalierbar

#### New Relic / Datadog
- Application Performance Monitoring (APM)
- Real User Monitoring (RUM)
- Produktiv-Monitoring

## Test-Strategie
<!-- micro-quiz:fue-03-load-performance-tests-performance-testing-tools-micro-1 -->


### 1. Testplanung

**Fragen kl√§ren:**
- Was sind die Performance-Ziele? (SLAs)
- Wie viele Benutzer werden erwartet?
- Welche Szenarien sind kritisch?
- Welche Metriken sind wichtig?

**Beispiel-SLA:**
\`\`\`
E-Commerce-Website:
- 95% der Requests < 2 Sekunden
- 99% der Requests < 5 Sekunden
- Fehlerrate < 0.1%
- Verf√ºgbarkeit > 99.9%
\`\`\`

### 2. Test-Szenarien definieren

**Realistische Benutzer-Szenarien:**
\`\`\`
Szenario 1: Produktsuche (40% der Benutzer)
  1. Homepage aufrufen
  2. Suchbegriff eingeben
  3. Suchergebnisse anzeigen
  4. Produkt ausw√§hlen

Szenario 2: Checkout (20% der Benutzer)
  1. Produkt in Warenkorb
  2. Zur Kasse
  3. Adresse eingeben
  4. Zahlung abschlie√üen

Szenario 3: Browsen (40% der Benutzer)
  1. Homepage
  2. Kategorie ausw√§hlen
  3. Produkte durchbl√§ttern
\`\`\`

### 3. Testumgebung

**Anforderungen:**
- ‚úÖ Produktions√§hnlich (Hardware, Netzwerk)
- ‚úÖ Isoliert (keine anderen Tests parallel)
- ‚úÖ Reproduzierbar (gleiche Daten, Konfiguration)
- ‚úÖ Monitoring aktiviert

### 4. Test-Durchf√ºhrung

**Phasen:**
\`\`\`
1. Baseline-Test
   - Einzelner Benutzer
   - Misst Basis-Performance

2. Ramp-up
   - Langsam Last erh√∂hen
   - Beobachte Verhalten

3. Steady State
   - Konstante Last
   - L√§ngere Dauer (30-60 Min)

4. Ramp-down
   - Last reduzieren
   - Pr√ºfe Erholung

5. Spike-Test
   - Pl√∂tzliche Lastspitze
   - Pr√ºfe Stabilit√§t
\`\`\`

### 5. Analyse und Reporting

**Zu analysierende Daten:**
- Antwortzeiten (P50, P95, P99)
- Durchsatz
- Fehlerrate
- Ressourcennutzung
- Bottlenecks

**Report-Struktur:**
\`\`\`
1. Executive Summary
   - Ziele erreicht?
   - Kritische Probleme

2. Test-Konfiguration
   - Szenarien
   - Last-Profile
   - Umgebung

3. Ergebnisse
   - Metriken
   - Grafiken
   - Vergleich mit SLAs

4. Bottlenecks
   - Identifizierte Probleme
   - Ursachen

5. Empfehlungen
   - Optimierungen
   - N√§chste Schritte
\`\`\`

<!-- micro-quiz:fue-03-load-performance-tests-test-strategie-micro-1 -->
## H√§ufige Bottlenecks

### 1. Datenbank

**Symptome:**
- Langsame Queries
- Hohe DB-CPU
- Connection Pool ersch√∂pft

**L√∂sungen:**
- Indizes optimieren
- Query-Optimierung
- Caching
- Read Replicas

### 2. Application Server

**Symptome:**
- Hohe CPU-Last
- Langsame Business-Logik
- Memory Leaks

**L√∂sungen:**
- Code-Optimierung
- Profiling
- Horizontale Skalierung
- Caching

### 3. Netzwerk

**Symptome:**
- Hohe Latenz
- Bandbreiten-Limit
- Packet Loss

**L√∂sungen:**
- CDN verwenden
- Kompression
- HTTP/2 oder HTTP/3
- Geografische Verteilung

### 4. Frontend

**Symptome:**
- Langsames Rendering
- Gro√üe Bundle-Gr√∂√üen
- Viele HTTP-Requests

**L√∂sungen:**
- Code-Splitting
- Lazy Loading
- Minification
- Image-Optimierung

## Best Practices
<!-- micro-quiz:fue-03-load-performance-tests-haufige-bottlenecks-micro-1 -->


### 1. Fr√ºh testen
- Performance-Tests in CI/CD integrieren
- Nicht erst vor Release testen

### 2. Realistische Daten
- Produktions√§hnliche Datenmengen
- Realistische Benutzer-Szenarien

### 3. Monitoring
- Detailliertes Monitoring w√§hrend Tests
- APM-Tools verwenden

### 4. Iterativ optimieren
- Bottleneck finden ‚Üí Optimieren ‚Üí Erneut testen
- Dokumentiere √Ñnderungen

### 5. Automatisierung
- Tests automatisieren
- Regelm√§√üig ausf√ºhren
- Trend-Analyse

<!-- micro-quiz:fue-03-load-performance-tests-best-practices-micro-1 -->
## Zusammenfassung

### Test-Typen

| Test-Typ | Ziel | Last | Dauer |
|----------|------|------|-------|
| **Lasttest** | Normale Last bew√§ltigen | Erwartet | Mittel (1-2h) |
| **Performancetest** | Engp√§sse finden | Variabel | Kurz-Mittel |
| **Stresstest** | Belastungsgrenze finden | Extrem | Kurz |
| **Spike Test** | Lastspitzen bew√§ltigen | Pl√∂tzlich hoch | Sehr kurz |
| **Soak Test** | Stabilit√§t √ºber Zeit | Normal | Lang (24-72h) |

### Wichtige Metriken

- **Antwortzeit**: P50, P95, P99
- **Durchsatz**: Requests/Sekunde
- **Fehlerrate**: < 0.1%
- **Ressourcen**: CPU, RAM, Disk, Netzwerk

### Tools

- **JMeter**: Vielseitig, GUI
- **Gatling**: Code-basiert, performant
- **Locust**: Python, einfach
- **k6**: Modern, CLI

### F√ºr die IHK-Pr√ºfung wichtig:

- Verstehe Unterschiede zwischen Last-, Performance- und Stresstest
- Kenne wichtige Metriken (Antwortzeit, Durchsatz, Fehlerrate)
- Verstehe Percentiles (P95, P99)
- Kenne g√§ngige Tools (JMeter, Gatling, Locust)
- Erkenne typische Bottlenecks (DB, Server, Netzwerk)



<!-- micro-quiz:fue-03-load-performance-tests-quiz -->
<!-- micro-quiz:fue-03-load-performance-tests-zusammenfassung-micro-1 -->
`,Sb=JSON.parse(`[{"language":"python","title":"Locust: Einfacher Lasttest","code":"from locust import HttpUser, task, between\\nimport random\\n\\nclass ECommerceUser(HttpUser):\\n    \\"\\"\\"Simuliert E-Commerce-Benutzer\\"\\"\\"\\n    \\n    # Wartezeit zwischen Tasks (1-5 Sekunden)\\n    wait_time = between(1, 5)\\n    \\n    def on_start(self):\\n        \\"\\"\\"Wird beim Start jedes Benutzers ausgef√ºhrt\\"\\"\\"\\n        # Login\\n        self.client.post(\\"/login\\", json={\\n            \\"username\\": f\\"user{random.randint(1, 1000)}\\",\\n            \\"password\\": \\"test123\\"\\n        })\\n    \\n    @task(3)  # 3x h√§ufiger als andere Tasks\\n    def browse_products(self):\\n        \\"\\"\\"Produkte durchsuchen\\"\\"\\"\\n        # Homepage\\n        self.client.get(\\"/\\")\\n        \\n        # Kategorie ausw√§hlen\\n        categories = [\\"electronics\\", \\"books\\", \\"clothing\\"]\\n        category = random.choice(categories)\\n        self.client.get(f\\"/category/{category}\\")\\n        \\n        # Produkt anzeigen\\n        product_id = random.randint(1, 100)\\n        self.client.get(f\\"/product/{product_id}\\")\\n    \\n    @task(2)\\n    def search_products(self):\\n        \\"\\"\\"Produktsuche\\"\\"\\"\\n        search_terms = [\\"laptop\\", \\"phone\\", \\"book\\", \\"shirt\\"]\\n        term = random.choice(search_terms)\\n        \\n        self.client.get(f\\"/search?q={term}\\")\\n    \\n    @task(1)  # Seltener als andere Tasks\\n    def add_to_cart(self):\\n        \\"\\"\\"Produkt in Warenkorb\\"\\"\\"\\n        product_id = random.randint(1, 100)\\n        \\n        response = self.client.post(\\"/cart/add\\", json={\\n            \\"product_id\\": product_id,\\n            \\"quantity\\": random.randint(1, 3)\\n        })\\n        \\n        # Pr√ºfe Antwort\\n        if response.status_code == 200:\\n            print(f\\"Produkt {product_id} zum Warenkorb hinzugef√ºgt\\")\\n    \\n    @task(1)\\n    def view_cart(self):\\n        \\"\\"\\"Warenkorb anzeigen\\"\\"\\"\\n        self.client.get(\\"/cart\\")\\n\\n# Ausf√ºhren:\\n# locust -f loadtest.py --host=https://example.com\\n# Dann Browser √∂ffnen: http://localhost:8089","explanation":"Vollst√§ndiger Locust-Lasttest f√ºr E-Commerce-Website. Simuliert realistische Benutzer-Szenarien mit verschiedenen Gewichtungen."},{"language":"javascript","title":"k6: Performance-Test mit Thresholds","code":"import http from 'k6/http';\\nimport { check, sleep } from 'k6';\\nimport { Rate } from 'k6/metrics';\\n\\n// Custom Metric f√ºr Fehlerrate\\nlet errorRate = new Rate('errors');\\n\\n// Test-Konfiguration\\nexport let options = {\\n  // Last-Profile\\n  stages: [\\n    { duration: '1m', target: 50 },   // Ramp-up zu 50 Benutzern\\n    { duration: '3m', target: 50 },   // Bleibe bei 50 Benutzern\\n    { duration: '1m', target: 100 },  // Erh√∂he auf 100 Benutzer\\n    { duration: '3m', target: 100 },  // Bleibe bei 100 Benutzern\\n    { duration: '1m', target: 0 },    // Ramp-down\\n  ],\\n  \\n  // Thresholds (Test schl√§gt fehl, wenn nicht erf√ºllt)\\n  thresholds: {\\n    'http_req_duration': ['p(95)<500', 'p(99)<1000'],  // 95% < 500ms, 99% < 1s\\n    'http_req_failed': ['rate<0.01'],                   // Fehlerrate < 1%\\n    'errors': ['rate<0.05'],                            // Custom Error Rate < 5%\\n  },\\n};\\n\\nexport default function () {\\n  // Test-Szenario: API-Endpunkte testen\\n  \\n  // 1. Get Users\\n  let usersResponse = http.get('https://api.example.com/users');\\n  let usersCheck = check(usersResponse, {\\n    'users status is 200': (r) => r.status === 200,\\n    'users response time < 500ms': (r) => r.timings.duration < 500,\\n    'users has data': (r) => r.json().length > 0,\\n  });\\n  errorRate.add(!usersCheck);\\n  \\n  sleep(1);\\n  \\n  // 2. Get specific user\\n  let userId = Math.floor(Math.random() * 100) + 1;\\n  let userResponse = http.get(\`https://api.example.com/users/\${userId}\`);\\n  let userCheck = check(userResponse, {\\n    'user status is 200': (r) => r.status === 200,\\n    'user has id': (r) => r.json().id !== undefined,\\n  });\\n  errorRate.add(!userCheck);\\n  \\n  sleep(1);\\n  \\n  // 3. Create post\\n  let postPayload = JSON.stringify({\\n    title: 'Test Post',\\n    body: 'This is a test post',\\n    userId: userId,\\n  });\\n  \\n  let postResponse = http.post('https://api.example.com/posts', postPayload, {\\n    headers: { 'Content-Type': 'application/json' },\\n  });\\n  \\n  let postCheck = check(postResponse, {\\n    'post status is 201': (r) => r.status === 201,\\n    'post created': (r) => r.json().id !== undefined,\\n  });\\n  errorRate.add(!postCheck);\\n  \\n  sleep(2);\\n}\\n\\n// Ausf√ºhren:\\n// k6 run loadtest.js\\n\\n// Mit Cloud-Reporting:\\n// k6 run --out cloud loadtest.js","explanation":"k6-Performance-Test mit Thresholds und Custom Metrics. Zeigt realistische API-Tests mit Validierung."},{"language":"java","title":"JMeter: Programmatischer Test","code":"import org.apache.jmeter.control.LoopController;\\nimport org.apache.jmeter.engine.StandardJMeterEngine;\\nimport org.apache.jmeter.protocol.http.sampler.HTTPSampler;\\nimport org.apache.jmeter.reporters.ResultCollector;\\nimport org.apache.jmeter.reporters.Summariser;\\nimport org.apache.jmeter.testelement.TestPlan;\\nimport org.apache.jmeter.threads.ThreadGroup;\\nimport org.apache.jmeter.util.JMeterUtils;\\nimport org.apache.jorphan.collections.HashTree;\\n\\nimport java.io.File;\\n\\npublic class JMeterLoadTest {\\n    \\n    public static void main(String[] args) throws Exception {\\n        // JMeter initialisieren\\n        String jmeterHome = \\"/path/to/jmeter\\";\\n        JMeterUtils.setJMeterHome(jmeterHome);\\n        JMeterUtils.loadJMeterProperties(jmeterHome + \\"/bin/jmeter.properties\\");\\n        JMeterUtils.initLocale();\\n        \\n        // Test-Plan erstellen\\n        TestPlan testPlan = new TestPlan(\\"API Load Test\\");\\n        testPlan.setProperty(TestPlan.FUNCTIONAL_MODE, false);\\n        testPlan.setProperty(TestPlan.SERIALIZE_THREADGROUPS, false);\\n        \\n        // Thread Group (Benutzer-Simulation)\\n        ThreadGroup threadGroup = new ThreadGroup();\\n        threadGroup.setName(\\"API Users\\");\\n        threadGroup.setNumThreads(100);  // 100 gleichzeitige Benutzer\\n        threadGroup.setRampUp(60);       // Ramp-up √ºber 60 Sekunden\\n        \\n        // Loop Controller\\n        LoopController loopController = new LoopController();\\n        loopController.setLoops(10);  // Jeder Benutzer f√ºhrt 10 Iterationen aus\\n        loopController.setFirst(true);\\n        loopController.initialize();\\n        threadGroup.setSamplerController(loopController);\\n        \\n        // HTTP Sampler (Request)\\n        HTTPSampler httpSampler = new HTTPSampler();\\n        httpSampler.setDomain(\\"api.example.com\\");\\n        httpSampler.setPort(443);\\n        httpSampler.setProtocol(\\"https\\");\\n        httpSampler.setPath(\\"/users\\");\\n        httpSampler.setMethod(\\"GET\\");\\n        httpSampler.setName(\\"Get Users Request\\");\\n        httpSampler.setFollowRedirects(true);\\n        \\n        // Assertions hinzuf√ºgen (optional)\\n        // ResponseAssertion assertion = new ResponseAssertion();\\n        // assertion.setTestFieldResponseCode();\\n        // assertion.addTestString(\\"200\\");\\n        \\n        // Summariser f√ºr Console-Output\\n        Summariser summer = null;\\n        String summariserName = JMeterUtils.getPropDefault(\\"summariser.name\\", \\"summary\\");\\n        if (summariserName.length() > 0) {\\n            summer = new Summariser(summariserName);\\n        }\\n        \\n        // Result Collector (Ergebnisse speichern)\\n        ResultCollector logger = new ResultCollector(summer);\\n        logger.setFilename(\\"results.jtl\\");\\n        \\n        // Test-Hierarchie aufbauen\\n        HashTree testPlanTree = new HashTree();\\n        HashTree threadGroupHashTree = testPlanTree.add(testPlan, threadGroup);\\n        threadGroupHashTree.add(httpSampler);\\n        testPlanTree.add(testPlanTree.getArray()[0], logger);\\n        \\n        // JMeter Engine\\n        StandardJMeterEngine jmeter = new StandardJMeterEngine();\\n        jmeter.configure(testPlanTree);\\n        \\n        // Test starten\\n        System.out.println(\\"Starting Load Test...\\");\\n        jmeter.run();\\n        \\n        System.out.println(\\"Load Test completed. Results saved to results.jtl\\");\\n    }\\n}","explanation":"Programmatische JMeter-Test-Erstellung in Java. Zeigt, wie Tests ohne GUI erstellt und ausgef√ºhrt werden k√∂nnen."},{"language":"python","title":"Performance-Metriken analysieren","code":"import statistics\\nimport json\\nfrom datetime import datetime\\n\\nclass PerformanceAnalyzer:\\n    \\"\\"\\"Analysiert Performance-Test-Ergebnisse\\"\\"\\"\\n    \\n    def __init__(self, results_file):\\n        \\"\\"\\"L√§dt Testergebnisse aus JSON-Datei\\"\\"\\"\\n        with open(results_file, 'r') as f:\\n            self.results = json.load(f)\\n    \\n    def calculate_percentiles(self, response_times):\\n        \\"\\"\\"Berechnet Percentiles\\"\\"\\"\\n        sorted_times = sorted(response_times)\\n        n = len(sorted_times)\\n        \\n        return {\\n            'p50': sorted_times[int(n * 0.50)],\\n            'p75': sorted_times[int(n * 0.75)],\\n            'p90': sorted_times[int(n * 0.90)],\\n            'p95': sorted_times[int(n * 0.95)],\\n            'p99': sorted_times[int(n * 0.99)],\\n        }\\n    \\n    def analyze_response_times(self):\\n        \\"\\"\\"Analysiert Antwortzeiten\\"\\"\\"\\n        response_times = [r['response_time'] for r in self.results]\\n        \\n        percentiles = self.calculate_percentiles(response_times)\\n        \\n        return {\\n            'count': len(response_times),\\n            'min': min(response_times),\\n            'max': max(response_times),\\n            'mean': statistics.mean(response_times),\\n            'median': statistics.median(response_times),\\n            'stdev': statistics.stdev(response_times) if len(response_times) > 1 else 0,\\n            'percentiles': percentiles\\n        }\\n    \\n    def calculate_throughput(self):\\n        \\"\\"\\"Berechnet Durchsatz (Requests/Sekunde)\\"\\"\\"\\n        timestamps = [datetime.fromisoformat(r['timestamp']) for r in self.results]\\n        \\n        if len(timestamps) < 2:\\n            return 0\\n        \\n        duration = (max(timestamps) - min(timestamps)).total_seconds()\\n        return len(self.results) / duration if duration > 0 else 0\\n    \\n    def calculate_error_rate(self):\\n        \\"\\"\\"Berechnet Fehlerrate\\"\\"\\"\\n        total = len(self.results)\\n        errors = sum(1 for r in self.results if r['status_code'] >= 400)\\n        \\n        return (errors / total * 100) if total > 0 else 0\\n    \\n    def check_sla_compliance(self, sla_config):\\n        \\"\\"\\"Pr√ºft SLA-Einhaltung\\"\\"\\"\\n        response_analysis = self.analyze_response_times()\\n        error_rate = self.calculate_error_rate()\\n        \\n        compliance = {\\n            'p95_response_time': {\\n                'actual': response_analysis['percentiles']['p95'],\\n                'target': sla_config['p95_max_ms'],\\n                'passed': response_analysis['percentiles']['p95'] <= sla_config['p95_max_ms']\\n            },\\n            'p99_response_time': {\\n                'actual': response_analysis['percentiles']['p99'],\\n                'target': sla_config['p99_max_ms'],\\n                'passed': response_analysis['percentiles']['p99'] <= sla_config['p99_max_ms']\\n            },\\n            'error_rate': {\\n                'actual': error_rate,\\n                'target': sla_config['max_error_rate_percent'],\\n                'passed': error_rate <= sla_config['max_error_rate_percent']\\n            }\\n        }\\n        \\n        return compliance\\n    \\n    def generate_report(self, sla_config=None):\\n        \\"\\"\\"Generiert Performance-Report\\"\\"\\"\\n        print(\\"\\\\n\\" + \\"=\\"*60)\\n        print(\\"PERFORMANCE TEST REPORT\\")\\n        print(\\"=\\"*60)\\n        \\n        # Response Times\\n        print(\\"\\\\n--- Response Times ---\\")\\n        response_analysis = self.analyze_response_times()\\n        print(f\\"Total Requests: {response_analysis['count']}\\")\\n        print(f\\"Min: {response_analysis['min']:.2f} ms\\")\\n        print(f\\"Max: {response_analysis['max']:.2f} ms\\")\\n        print(f\\"Mean: {response_analysis['mean']:.2f} ms\\")\\n        print(f\\"Median (P50): {response_analysis['median']:.2f} ms\\")\\n        print(f\\"Std Dev: {response_analysis['stdev']:.2f} ms\\")\\n        print(\\"\\\\nPercentiles:\\")\\n        for p, value in response_analysis['percentiles'].items():\\n            print(f\\"  {p.upper()}: {value:.2f} ms\\")\\n        \\n        # Throughput\\n        print(\\"\\\\n--- Throughput ---\\")\\n        throughput = self.calculate_throughput()\\n        print(f\\"Requests/Second: {throughput:.2f}\\")\\n        \\n        # Error Rate\\n        print(\\"\\\\n--- Error Rate ---\\")\\n        error_rate = self.calculate_error_rate()\\n        print(f\\"Error Rate: {error_rate:.2f}%\\")\\n        \\n        # SLA Compliance\\n        if sla_config:\\n            print(\\"\\\\n--- SLA Compliance ---\\")\\n            compliance = self.check_sla_compliance(sla_config)\\n            \\n            for metric, data in compliance.items():\\n                status = \\"‚úì PASS\\" if data['passed'] else \\"‚úó FAIL\\"\\n                print(f\\"{metric}: {data['actual']:.2f} (target: {data['target']}) {status}\\")\\n            \\n            all_passed = all(data['passed'] for data in compliance.values())\\n            print(f\\"\\\\nOverall SLA Compliance: {'‚úì PASSED' if all_passed else '‚úó FAILED'}\\")\\n        \\n        print(\\"\\\\n\\" + \\"=\\"*60 + \\"\\\\n\\")\\n\\n# Verwendung\\nif __name__ == \\"__main__\\":\\n    # SLA-Konfiguration\\n    sla = {\\n        'p95_max_ms': 500,\\n        'p99_max_ms': 1000,\\n        'max_error_rate_percent': 1.0\\n    }\\n    \\n    # Analyse durchf√ºhren\\n    analyzer = PerformanceAnalyzer('test_results.json')\\n    analyzer.generate_report(sla_config=sla)","explanation":"Python-Tool zur Analyse von Performance-Test-Ergebnissen. Berechnet Percentiles, Durchsatz, Fehlerrate und pr√ºft SLA-Compliance."}]`),wb=["fue-03-load-performance-tests-quiz"],Ab=[{title:"Apache JMeter Documentation",url:"https://jmeter.apache.org/usermanual/index.html",type:"documentation"},{title:"Gatling Documentation",url:"https://gatling.io/docs/",type:"documentation"},{title:"Locust Documentation",url:"https://docs.locust.io/",type:"documentation"},{title:"k6 Documentation",url:"https://k6.io/docs/",type:"documentation"}],Eb="2025-01-05T10:00:00Z",_b="1.0",Db=["Du kannst lasttest erkl√§ren","Du kannst performancetest erkl√§ren","Du kannst stresstest erkl√§ren","Du kannst testing erkl√§ren","Du kannst qualit√§tssicherung erkl√§ren"],Pb="Verstehe die Unterschiede zwischen Last-, Performance- und Stresstests, lerne wichtige Metriken und Tools kennen.",Tb=[{id:"last--performance--und-stresstests",title:"Last-, Performance- und Stresstests",summary:"Kernaspekt: Last-, Performance- und Stresstests"},{id:"ubersicht",title:"√úbersicht",summary:"Kernaspekt: √úbersicht"},{id:"arten-von-performance-tests",title:"Arten von Performance-Tests",summary:"Kernaspekt: Arten von Performance-Tests"},{id:"wichtige-metriken",title:"Wichtige Metriken",summary:"Kernaspekt: Wichtige Metriken"},{id:"performance-testing-tools",title:"Performance-Testing-Tools",summary:"Kernaspekt: Performance-Testing-Tools"},{id:"jmeter-im-gui-modus-starten",title:"JMeter im GUI-Modus starten",summary:"Kernaspekt: JMeter im GUI-Modus starten"},{id:"jmeter-im-cli-modus-fur-cicd",title:"JMeter im CLI-Modus (f√ºr CI/CD)",summary:"Kernaspekt: JMeter im CLI-Modus (f√ºr CI/CD)"},{id:"test-strategie",title:"Test-Strategie",summary:"Kernaspekt: Test-Strategie"},{id:"haufige-bottlenecks",title:"H√§ufige Bottlenecks",summary:"Kernaspekt: H√§ufige Bottlenecks"},{id:"best-practices",title:"Best Practices",summary:"Kernaspekt: Best Practices"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],qb="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",Rb="Automatisch erg√§nzt: Review erforderlich",Ib=["fue-03-load-performance-tests-ubersicht-micro-1","fue-03-load-performance-tests-arten-von-performance-tests-micro-1","fue-03-load-performance-tests-wichtige-metriken-micro-1","fue-03-load-performance-tests-performance-testing-tools-micro-1","fue-03-load-performance-tests-test-strategie-micro-1","fue-03-load-performance-tests-haufige-bottlenecks-micro-1","fue-03-load-performance-tests-best-practices-micro-1","fue-03-load-performance-tests-quiz","fue-03-load-performance-tests-zusammenfassung-micro-1"],Cb={id:lb,title:ub,description:cb,category:db,subcategory:mb,difficulty:gb,examRelevance:hb,newIn2025:pb,removedIn2025:fb,important:bb,estimatedTime:kb,prerequisites:zb,tags:vb,content:yb,codeExamples:Sb,relatedQuizzes:wb,resources:Ab,lastUpdated:Eb,version:_b,learningObjectives:Db,summary:Pb,contentOutline:Tb,accessibilityNotes:qb,editorNote:Rb,microQuizzes:Ib},Lb="fue-04-security",Mb="F√ú-04: Sicherstellen der Informationssicherheit",Ob="Technisch-Organisatorische Ma√ünahmen (TOM), Datenschutz, Datensicherheit und Sicherheitsbedrohungen. Essentielles Wissen f√ºr den Schutz von Daten und Systemen.",Nb="F√ú-04",Bb="Informationssicherheit",xb="intermediate",Vb="high",Fb=!1,Kb=!1,Wb=!0,jb=110,$b=["fue-04-security-threats"],Gb=["Informationssicherheit","TOM","Datenschutz","DSGVO","Datensicherheit","IT-Sicherheit"],Ub=`# F√ú-04: Sicherstellen der Informationssicherheit\\n\\n## Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der IT. Sie umfasst den Schutz von Daten vor unbefugtem Zugriff, Verlust und Manipulation. Dieses Modul behandelt Technisch-Organisatorische Ma√ünahmen (TOM), Datenschutz nach DSGVO und praktische Sicherheitskonzepte.\\n\\n**Hinweis**: Dieses Modul erg√§nzt das Modul \\"Sicherheitsbedrohungen\\" (Man-in-the-Middle, SQL-Injection, DDoS), das separat behandelt wird.\\n\\n## 1. Schutzziele der Informationssicherheit\\n\\nDie drei klassischen Schutzziele (CIA-Triade):\\n\\n### 1.1 Vertraulichkeit (Confidentiality)\\n\\n**Definition**: Nur autorisierte Personen d√ºrfen auf Informationen zugreifen.\\n\\n**Ma√ünahmen:**\\n- Verschl√ºsselung\\n- Zugriffskontrollen\\n- Authentifizierung\\n- Autorisierung\\n\\n### 1.2 Integrit√§t (Integrity)\\n\\n**Definition**: Daten d√ºrfen nicht unbemerkt ver√§ndert werden.\\n\\n**Ma√ünahmen:**\\n- Checksummen und Hashes\\n- Digitale Signaturen\\n- Versionskontrolle\\n- Audit-Logs\\n\\n### 1.3 Verf√ºgbarkeit (Availability)\\n\\n**Definition**: Systeme und Daten m√ºssen bei Bedarf verf√ºgbar sein.\\n\\n**Ma√ünahmen:**\\n- Redundanz\\n- Backups\\n- Hochverf√ºgbarkeits-Architekturen\\n- DDoS-Schutz\\n\\n## 2. Datenschutz und DSGVO\\n\\nDie **Datenschutz-Grundverordnung (DSGVO)** regelt den Umgang mit personenbezogenen Daten in der EU.\\n\\n**Personenbezogene Daten:** Name, Adresse, E-Mail, Geburtsdatum, IP-Adressen, Standortdaten, Gesundheitsdaten, Biometrische Daten\\n\\n### 2.1 Grundprinzipien der DSGVO\\n\\n1. **Rechtm√§√üigkeit und Transparenz**: Datenverarbeitung muss rechtm√§√üig sein, Betroffene m√ºssen informiert werden\\n2. **Zweckbindung**: Daten nur f√ºr festgelegte Zwecke erheben\\n3. **Datenminimierung**: Nur notwendige Daten erheben\\n4. **Richtigkeit**: Daten m√ºssen korrekt und aktuell sein\\n5. **Speicherbegrenzung**: Daten nur so lange speichern wie n√∂tig\\n6. **Integrit√§t und Vertraulichkeit**: Angemessene Sicherheitsma√ünahmen\\n7. **Rechenschaftspflicht**: Nachweis der Einhaltung\\n\\n### 2.2 Rechte der Betroffenen\\n\\n- **Auskunftsrecht (Art. 15)**: Auskunft √ºber gespeicherte Daten\\n- **Recht auf Berichtigung (Art. 16)**: Korrektur falscher Daten\\n- **Recht auf L√∂schung (Art. 17)**: \\"Recht auf Vergessenwerden\\"\\n- **Recht auf Daten√ºbertragbarkeit (Art. 20)**: Daten in maschinenlesbarem Format\\n- **Widerspruchsrecht (Art. 21)**: Widerspruch gegen Datenverarbeitung\\n\\n## 3. Technisch-Organisatorische Ma√ünahmen (TOM)\\n\\nTOM sind konkrete Ma√ünahmen zum Schutz personenbezogener Daten gem√§√ü Art. 32 DSGVO.\\n\\n### 3.1 Zutrittskontrolle\\n**Ziel**: Unbefugten physischen Zugang verhindern\\n**Ma√ünahmen**: Zugangskontrollen (Schl√ºssel, Chipkarten), Alarmanlagen, Video√ºberwachung, Besucherregistrierung\\n\\n### 3.2 Zugangskontrolle\\n**Ziel**: Unbefugte Systemnutzung verhindern\\n**Ma√ünahmen**: Benutzer-Authentifizierung, Starke Passw√∂rter, Multi-Faktor-Authentifizierung (MFA), Automatische Abmeldung\\n\\n### 3.3 Zugriffskontrolle\\n**Ziel**: Nur autorisierte Zugriffe auf Daten\\n**Ma√ünahmen**: Rollenbasierte Zugriffskontrolle (RBAC), Least-Privilege-Prinzip, Need-to-Know-Prinzip\\n\\n### 3.4 Weitergabekontrolle\\n**Ziel**: Schutz bei √úbertragung und Transport\\n**Ma√ünahmen**: Verschl√ºsselung (TLS/SSL), VPN f√ºr Remote-Zugriff, Sichere Datei√ºbertragung (SFTP), E-Mail-Verschl√ºsselung\\n\\n### 3.5 Eingabekontrolle\\n**Ziel**: Nachvollziehbarkeit von Daten√§nderungen\\n**Ma√ünahmen**: Logging und Audit-Trails, Versionierung, Zeitstempel, Benutzer-Identifikation\\n\\n### 3.6 Verf√ºgbarkeitskontrolle\\n**Ziel**: Schutz vor Datenverlust\\n**Ma√ünahmen**: Backup-Strategie (3-2-1-Regel), Redundante Systeme, USV, Disaster Recovery Plan\\n\\n**3-2-1-Backup-Regel:**\\n- 3 Kopien der Daten\\n- 2 verschiedene Medientypen\\n- 1 Kopie extern/offsite\\n\\n### 3.7 Trennungskontrolle\\n**Ziel**: Getrennte Verarbeitung verschiedener Zwecke\\n**Ma√ünahmen**: Mandantenf√§higkeit, Separate Datenbanken, Verschiedene Umgebungen (Dev, Test, Prod)\\n\\n## 4. Verschl√ºsselung\\n\\n### 4.1 Symmetrische Verschl√ºsselung\\n**Prinzip**: Ein Schl√ºssel f√ºr Ver- und Entschl√ºsselung\\n**Algorithmen**: AES, ChaCha20\\n**Vorteile**: Schnell, effizient f√ºr gro√üe Datenmengen\\n**Nachteile**: Schl√ºsselaustausch-Problem\\n\\n### 4.2 Asymmetrische Verschl√ºsselung\\n**Prinzip**: Schl√ºsselpaar (√∂ffentlich/privat)\\n**Algorithmen**: RSA, ECC\\n**Vorteile**: Kein Schl√ºsselaustausch-Problem, Digitale Signaturen m√∂glich\\n**Nachteile**: Langsamer als symmetrisch\\n\\n### 4.3 Hybride Verschl√ºsselung\\n**Prinzip**: Kombination aus symmetrisch und asymmetrisch\\n**Beispiel**: HTTPS/TLS verwendet hybride Verschl√ºsselung\\n\\n### 4.4 Hashing\\n**Prinzip**: Einweg-Funktion, nicht umkehrbar\\n**Algorithmen**: SHA-256, bcrypt (f√ºr Passw√∂rter), Argon2\\n**Anwendungen**: Passwort-Speicherung, Integrit√§tspr√ºfung, Digitale Signaturen\\n\\n## 5. Authentifizierung und Autorisierung\\n\\n### 5.1 Authentifizierungsfaktoren\\n\\n1. **Wissen** (Something you know): Passwort, PIN\\n2. **Besitz** (Something you have): Smartphone, Hardware-Token\\n3. **Biometrie** (Something you are): Fingerabdruck, Gesichtserkennung\\n\\n**Multi-Faktor-Authentifizierung (MFA)**: Kombination aus mindestens zwei verschiedenen Faktoren\\n\\n### 5.2 Autorisierung\\n\\n**Role-Based Access Control (RBAC)**: Benutzer werden Rollen zugewiesen, Rollen haben Berechtigungen\\n\\n**Attribute-Based Access Control (ABAC)**: Regeln basierend auf Attributen (Abteilung, Position, Standort)\\n\\n## 6. Backup und Disaster Recovery\\n\\n### 6.1 Backup-Strategien\\n\\n**Vollbackup**: Alle Daten werden gesichert\\n**Inkrementelles Backup**: Nur √Ñnderungen seit letztem Backup\\n**Differentielles Backup**: √Ñnderungen seit letztem Vollbackup\\n\\n### 6.2 Disaster Recovery\\n\\n**Recovery Time Objective (RTO)**: Maximale Ausfallzeit\\n**Recovery Point Objective (RPO)**: Maximaler Datenverlust\\n\\n## Pr√ºfungsrelevante Punkte\\n\\n√¢≈ì‚Äú CIA-Triade (Vertraulichkeit, Integrit√§t, Verf√ºgbarkeit)\\n√¢≈ì‚Äú DSGVO-Grundprinzipien und Betroffenenrechte\\n√¢≈ì‚Äú Technisch-Organisatorische Ma√ünahmen (TOM)\\n√¢≈ì‚Äú Verschl√ºsselungsverfahren (symmetrisch, asymmetrisch, hybrid)\\n√¢≈ì‚Äú Authentifizierung und Multi-Faktor-Authentifizierung\\n√¢≈ì‚Äú Backup-Strategien und Disaster Recovery\\n√¢≈ì‚Äú Zusammenhang mit Sicherheitsbedrohungen\\n\\n## Zusammenfassung\\n\\n**Schutzziele**: Vertraulichkeit, Integrit√§t, Verf√ºgbarkeit (CIA)\\n\\n**DSGVO**: Regelt Umgang mit personenbezogenen Daten, Rechte der Betroffenen (Auskunft, L√∂schung, etc.)\\n\\n**TOM**: Technische Ma√ünahmen (Zutritts-, Zugangs-, Zugriffskontrolle) und Organisatorische Ma√ünahmen (Schulung, Incident Response)\\n\\n**Verschl√ºsselung**: Symmetrisch (schnell, ein Schl√ºssel), Asymmetrisch (Schl√ºsselpaar), Hybrid (Best of both)\\n\\n**Backup**: 3-2-1-Regel, RTO und RPO definieren, regelm√§√üig testen



<!-- micro-quiz:fue-04-security-quiz -->`,Hb=[{language:"java",title:"Beispiel: Passwort-Hashing mit bcrypt",code:'import org.mindrot.jbcrypt.BCrypt;\\n\\npublic class PasswordService {\\n    \\n    public String hashPassword(String plainPassword) {\\n        return BCrypt.hashpw(plainPassword, BCrypt.gensalt(12));\\n    }\\n    \\n    public boolean verifyPassword(String plainPassword, String hashedPassword) {\\n        return BCrypt.checkpw(plainPassword, hashedPassword);\\n    }\\n    \\n    public static void main(String[] args) {\\n        PasswordService service = new PasswordService();\\n        String password = \\"Sicher123!\\";\\n        String hash = service.hashPassword(password);\\n        System.out.println(\\"Hash: \\" + hash);\\n        \\n        boolean isValid = service.verifyPassword(password, hash);\\n        System.out.println(\\"Passwort korrekt: \\" + isValid);\\n    }\\n}',explanation:"Passw√∂rter d√ºrfen niemals im Klartext gespeichert werden. bcrypt ist ein sicherer Hashing-Algorithmus mit automatischem Salt."},{language:"javascript",title:"Beispiel: RBAC-Implementierung",code:"class AccessControl {\\n  constructor() {\\n    this.roles = {\\n      admin: ['read', 'write', 'delete', 'manage_users'],\\n      editor: ['read', 'write'],\\n      viewer: ['read']\\n    };\\n    this.userRoles = new Map();\\n  }\\n  \\n  assignRole(userId, role) {\\n    if (!this.roles[role]) {\\n      throw new Error(`Rolle ${role} existiert nicht`);\\n    }\\n    this.userRoles.set(userId, role);\\n  }\\n  \\n  hasPermission(userId, permission) {\\n    const role = this.userRoles.get(userId);\\n    if (!role) return false;\\n    return this.roles[role].includes(permission);\\n  }\\n}\\n\\nconst ac = new AccessControl();\\nac.assignRole('user123', 'editor');\\nconsole.log(ac.hasPermission('user123', 'read'));   // true\\nconsole.log(ac.hasPermission('user123', 'delete')); // false",explanation:"Role-Based Access Control (RBAC) weist Benutzern Rollen zu, die bestimmte Berechtigungen haben."}],Qb=["fue-04-security-quiz"],Zb=[{title:"DSGVO-Gesetzestext",url:"https://dsgvo-gesetz.de",type:"documentation"},{title:"BSI IT-Grundschutz",url:"https://www.bsi.bund.de/grundschutz",type:"documentation"}],Jb="2025-01-10T00:00:00Z",Yb="1.0",Xb=["Du kannst informationssicherheit erkl√§ren","Du kannst tOM erkl√§ren","Du kannst datenschutz erkl√§ren","Du kannst dSGVO erkl√§ren","Du kannst datensicherheit erkl√§ren"],ek="Technisch-Organisatorische Ma√ünahmen (TOM), Datenschutz, Datensicherheit und Sicherheitsbedrohungen.",nk=[{id:"fu-04-sicherstellen-der-informationssicherheitnn-e",title:"F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ",summary:"Kernaspekt: F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der "}],tk="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",ik="Automatisch erg√§nzt: Review erforderlich",rk=[{id:"fue-04-security-q1",title:"Kernidee: F√ú-04: Sicherstellen der Informationssicherheit\\n\\",type:"mcq",difficulty:2,estimatedTimeSeconds:50,placement:{afterSection:"fu-04-sicherstellen-der-informationssicherheitnn-e"},question:"Worum geht es haupts√§chlich im Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der '?",options:[{id:"o1",text:"Kernaussage zu 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der '"},{id:"o2",text:"Allgemeine Randnotiz"},{id:"o3",text:"Allgemeine Randnotiz"}],correctAnswer:"o1",feedback:{onCorrect:"Richtig ‚Äì der Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' fokussiert genau darauf.",onIncorrect:"Nicht ganz ‚Äì lies Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' nochmal konzentriert.",hint:"Schau dir die Kernaussage von 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' an."},attemptsAllowed:2,scoreWeight:.15,explanation:"Der Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' legt begriffliche Grundlage f√ºr sp√§tere Teile."}],sk=[{id:"fue-04-security-q1",title:"Kernidee: F√ú-04: Sicherstellen der Informationssicherheit\\n\\",type:"mcq",difficulty:2,estimatedTimeSeconds:50,placement:{afterSection:"fu-04-sicherstellen-der-informationssicherheitnn-e"},question:"Worum geht es haupts√§chlich im Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der '?",options:[{id:"o1",text:"Kernaussage zu 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der '"},{id:"o2",text:"Allgemeine Randnotiz"},{id:"o3",text:"Allgemeine Randnotiz"}],correctAnswer:"o1",feedback:{onCorrect:"Richtig ‚Äì der Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' fokussiert genau darauf.",onIncorrect:"Nicht ganz ‚Äì lies Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' nochmal konzentriert.",hint:"Schau dir die Kernaussage von 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' an."},attemptsAllowed:2,scoreWeight:.15,explanation:"Der Abschnitt 'F√ú-04: Sicherstellen der Informationssicherheit\\n\\n Einf√ºhrung\\n\\nInformationssicherheit ist ein zentrales Thema in der ' legt begriffliche Grundlage f√ºr sp√§tere Teile."}],ak={id:Lb,title:Mb,description:Ob,category:Nb,subcategory:Bb,difficulty:xb,examRelevance:Vb,newIn2025:Fb,removedIn2025:Kb,important:Wb,estimatedTime:jb,prerequisites:$b,tags:Gb,content:Ub,codeExamples:Hb,relatedQuizzes:Qb,resources:Zb,lastUpdated:Jb,version:Yb,learningObjectives:Xb,summary:ek,contentOutline:nk,accessibilityNotes:tk,editorNote:ik,microquizzes:rk,microQuizzes:sk},ok="fue-04-security-threats",lk="Sicherheitsbedrohungen",uk="Lerne die wichtigsten Sicherheitsbedrohungen und Angriffsvektoren kennen.",ck="F√ú-04",dk="IT-Sicherheit",mk="advanced",gk="high",hk=!0,pk=!1,fk=!0,bk=45,kk=[],zk=["Sicherheit","Security","Threats","Angriffe","Neu 2025"],vk=`# Sicherheitsbedrohungen

## Einf√ºhrung

Sicherheitsbedrohungen sind potenzielle Risiken f√ºr IT-Systeme.

<!-- micro-quiz:fue-04-security-threats-einfuhrung-micro-1 -->
## H√§ufige Bedrohungen

### SQL Injection

Angreifer f√ºgen sch√§dlichen SQL-Code in Eingabefelder ein.

### Cross-Site Scripting (XSS)

Angreifer injizieren sch√§dliche Skripte in Webseiten.


<!-- micro-quiz:fue-04-security-threats-haufige-bedrohungen-micro-1 -->`,yk=[],Sk=[],wk=[],Ak="2025-01-10T00:00:00Z",Ek="1.0",_k=["Du kannst sicherheit erkl√§ren","Du kannst security erkl√§ren","Du kannst threats erkl√§ren","Du kannst angriffe erkl√§ren","Du kannst neu 2025 erkl√§ren"],Dk="Lerne die wichtigsten Sicherheitsbedrohungen und Angriffsvektoren kennen.",Pk=[{id:"sicherheitsbedrohungen",title:"Sicherheitsbedrohungen",summary:"Kernaspekt: Sicherheitsbedrohungen"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"haufige-bedrohungen",title:"H√§ufige Bedrohungen",summary:"Kernaspekt: H√§ufige Bedrohungen"}],Tk="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",qk="Automatisch erg√§nzt: Review erforderlich",Rk=["fue-04-security-threats-einfuhrung-micro-1","fue-04-security-threats-haufige-bedrohungen-micro-1"],Ik={id:ok,title:lk,description:uk,category:ck,subcategory:dk,difficulty:mk,examRelevance:gk,newIn2025:hk,removedIn2025:pk,important:fk,estimatedTime:bk,prerequisites:kk,tags:zk,content:vk,codeExamples:yk,relatedQuizzes:Sk,resources:wk,lastUpdated:Ak,version:Ek,learningObjectives:_k,summary:Dk,contentOutline:Pk,accessibilityNotes:Tk,editorNote:qk,microQuizzes:Rk},Ck=JSON.parse('[{"id":"bp-01-networks-basics","title":"Netzwerktopologien und Grundlagen","description":"Grundlegende Netzwerkkonzepte, Topologien und deren Anwendungsf√§lle","category":"BP-01","subcategory":"Netzwerke und Protokolle","difficulty":"beginner","examRelevance":"high","newIn2025":false,"removedIn2025":false,"important":true,"estimatedTime":45,"prerequisites":[],"tags":["Netzwerk","Topologie","LAN","WAN","Grundlagen"],"content":"# Netzwerktopologien und Grundlagen\\n\\n## Einf√ºhrung\\n\\nNetzwerktopologien beschreiben die physische oder logische Anordnung von Netzwerkkomponenten. Die Wahl der richtigen Topologie beeinflusst Leistung, Skalierbarkeit und Ausfallsicherheit eines Netzwerks.\\n\\n## Wichtige Netzwerktopologien\\n\\n### 1. Stern-Topologie (Star)\\n\\n**Merkmale:**\\n- Alle Ger√§te sind mit einem zentralen Knotenpunkt (Switch/Hub) verbunden\\n- H√§ufigste Topologie in modernen LANs\\n- Einfache Fehlersuche\\n\\n**Vorteile:**\\n- Ausfall eines Endger√§ts betrifft nicht das gesamte Netzwerk\\n- Einfache Erweiterung\\n- Zentrale Verwaltung\\n\\n**Nachteile:**\\n- Single Point of Failure (zentraler Switch)\\n- H√∂herer Kabelaufwand\\n\\n### 2. Bus-Topologie\\n\\n**Merkmale:**\\n- Alle Ger√§te sind an ein gemeinsames √úbertragungsmedium angeschlossen\\n- Fr√ºher bei Ethernet (10Base2, 10Base5) verwendet\\n\\n**Vorteile:**\\n- Geringer Kabelaufwand\\n- Einfache Installation\\n\\n**Nachteile:**\\n- Kabelbruch betrifft gesamtes Netzwerk\\n- Schwierige Fehlersuche\\n- Begrenzte Skalierbarkeit\\n\\n### 3. Ring-Topologie\\n\\n**Merkmale:**\\n- Ger√§te sind in einem geschlossenen Ring verbunden\\n- Daten flie√üen in eine Richtung (oder bidirektional)\\n- Verwendet bei Token Ring, FDDI\\n\\n**Vorteile:**\\n- Gleichm√§√üige Daten√ºbertragung\\n- Keine Kollisionen\\n\\n**Nachteile:**\\n- Ausfall eines Ger√§ts kann Netzwerk unterbrechen\\n- Komplexe Fehlersuche\\n\\n### 4. Vermaschte Topologie (Mesh)\\n\\n**Merkmale:**\\n- Jedes Ger√§t ist mit mehreren anderen verbunden\\n- Vollvermascht: Jedes Ger√§t mit jedem verbunden\\n- Teilvermascht: Nur kritische Verbindungen redundant\\n\\n**Vorteile:**\\n- Hohe Ausfallsicherheit\\n- Mehrere √úbertragungswege\\n- Lastverteilung m√∂glich\\n\\n**Nachteile:**\\n- Hoher Kabel- und Konfigurationsaufwand\\n- Teuer\\n\\n## Netzwerktypen\\n\\n### LAN (Local Area Network)\\n- Lokales Netzwerk (Geb√§ude, Campus)\\n- Hohe √úbertragungsraten (1-100 Gbps)\\n- Geringe Latenz\\n\\n### WAN (Wide Area Network)\\n- Weitverkehrsnetz (St√§dte, L√§nder)\\n- Niedrigere √úbertragungsraten\\n- H√∂here Latenz\\n\\n### MAN (Metropolitan Area Network)\\n- St√§dtisches Netzwerk\\n- Zwischen LAN und WAN\\n\\n### WLAN (Wireless LAN)\\n- Drahtloses lokales Netzwerk\\n- IEEE 802.11 Standards (WiFi)\\n\\n## Pr√ºfungsrelevante Aspekte\\n\\n- Topologien erkennen und zuordnen k√∂nnen\\n- Vor- und Nachteile benennen\\n- Anwendungsf√§lle identifizieren\\n- Netzwerktypen unterscheiden","codeExamples":[],"relatedQuizzes":[],"resources":[{"title":"IEEE 802 Standards","url":"https://www.ieee802.org/","type":"documentation"}],"lastUpdated":"2025-01-10T00:00:00Z","version":"1.0"},{"id":"bp-01-network-protocols","title":"Netzwerkprotokolle (TCP/IP, HTTP, DNS)","description":"Wichtige Netzwerkprotokolle und ihre Funktionsweise im OSI-Modell","category":"BP-01","subcategory":"Netzwerke und Protokolle","difficulty":"intermediate","examRelevance":"high","newIn2025":false,"removedIn2025":false,"important":true,"estimatedTime":60,"prerequisites":["bp-01-networks-basics"],"tags":["Protokolle","TCP/IP","HTTP","DNS","OSI-Modell"],"content":"# Netzwerkprotokolle\\n\\n## OSI-Modell und TCP/IP-Modell\\n\\n### OSI-Modell (7 Schichten)\\n\\n1. **Anwendungsschicht (Application Layer)**: HTTP, FTP, SMTP, DNS\\n2. **Darstellungsschicht (Presentation Layer)**: Datenkodierung, Verschl√ºsselung\\n3. **Sitzungsschicht (Session Layer)**: Sitzungsverwaltung\\n4. **Transportschicht (Transport Layer)**: TCP, UDP\\n5. **Vermittlungsschicht (Network Layer)**: IP, ICMP, Routing\\n6. **Sicherungsschicht (Data Link Layer)**: Ethernet, MAC-Adressen\\n7. **Bit√ºbertragungsschicht (Physical Layer)**: Kabel, Signale\\n\\n### TCP/IP-Modell (4 Schichten)\\n\\n1. **Anwendungsschicht**: HTTP, FTP, SMTP, DNS\\n2. **Transportschicht**: TCP, UDP\\n3. **Internetschicht**: IP, ICMP\\n4. **Netzzugangsschicht**: Ethernet, WiFi\\n\\n## Wichtige Protokolle\\n\\n### TCP (Transmission Control Protocol)\\n\\n**Eigenschaften:**\\n- Verbindungsorientiert\\n- Zuverl√§ssig (Best√§tigung, Neu√ºbertragung)\\n- Reihenfolge garantiert\\n- Flusskontrolle\\n\\n**Verwendung:**\\n- HTTP/HTTPS\\n- FTP\\n- SMTP\\n- SSH\\n\\n**Three-Way-Handshake:**\\n``\\nClient -> Server: SYN\\nServer -> Client: SYN-ACK\\nClient -> Server: ACK\\n``\\n\\n### UDP (User Datagram Protocol)\\n\\n**Eigenschaften:**\\n- Verbindungslos\\n- Unzuverl√§ssig (keine Best√§tigung)\\n- Keine Reihenfolgegarantie\\n- Geringer Overhead\\n\\n**Verwendung:**\\n- DNS\\n- DHCP\\n- Streaming (Video, Audio)\\n- Online-Gaming\\n\\n### IP (Internet Protocol)\\n\\n**IPv4:**\\n- 32-Bit-Adressen (z.B. 192.168.1.1)\\n- Adressknappheit\\n- NAT zur Adresserweiterung\\n\\n**IPv6:**\\n- 128-Bit-Adressen (z.B. 2001:0db8:85a3::8a2e:0370:7334)\\n- Praktisch unbegrenzte Adressen\\n- Vereinfachter Header\\n\\n### HTTP/HTTPS (Hypertext Transfer Protocol)\\n\\n**HTTP-Methoden:**\\n- GET: Daten abrufen\\n- POST: Daten senden\\n- PUT: Daten aktualisieren\\n- DELETE: Daten l√∂schen\\n- PATCH: Teilweise aktualisieren\\n\\n**Status-Codes:**\\n- 2xx: Erfolg (200 OK, 201 Created)\\n- 3xx: Umleitung (301 Moved Permanently, 302 Found)\\n- 4xx: Client-Fehler (400 Bad Request, 404 Not Found)\\n- 5xx: Server-Fehler (500 Internal Server Error)\\n\\n**HTTPS:**\\n- HTTP √ºber TLS/SSL\\n- Verschl√ºsselte √úbertragung\\n- Authentifizierung\\n\\n### DNS (Domain Name System)\\n\\n**Funktion:**\\n- Aufl√∂sung von Domainnamen zu IP-Adressen\\n- Hierarchisches System\\n\\n**DNS-Record-Typen:**\\n- A: IPv4-Adresse\\n- AAAA: IPv6-Adresse\\n- CNAME: Alias\\n- MX: Mail-Server\\n- TXT: Textinformationen\\n\\n**DNS-Abfrage:**\\n``\\n1. Client fragt lokalen DNS-Server\\n2. Rekursive Abfrage durch DNS-Hierarchie\\n3. Root-Server -> TLD-Server -> Autoritativer Server\\n4. Antwort wird gecacht\\n``\\n\\n### DHCP (Dynamic Host Configuration Protocol)\\n\\n**Funktion:**\\n- Automatische IP-Adressvergabe\\n- Konfiguration von Netzwerkparametern\\n\\n**DHCP-Prozess:**\\n``\\n1. DHCP Discover (Client sucht Server)\\n2. DHCP Offer (Server bietet Konfiguration)\\n3. DHCP Request (Client akzeptiert)\\n4. DHCP Acknowledge (Server best√§tigt)\\n``\\n\\n## Ports\\n\\n**Well-Known Ports (0-1023):**\\n- 20/21: FTP\\n- 22: SSH\\n- 23: Telnet\\n- 25: SMTP\\n- 53: DNS\\n- 80: HTTP\\n- 443: HTTPS\\n- 3306: MySQL\\n- 5432: PostgreSQL\\n\\n## Pr√ºfungsrelevante Aspekte\\n\\n- OSI-Modell und TCP/IP-Modell kennen\\n- Protokolle den Schichten zuordnen\\n- TCP vs. UDP unterscheiden\\n- HTTP-Methoden und Status-Codes kennen\\n- DNS-Funktionsweise verstehen\\n- Standard-Ports kennen","codeExamples":[],"relatedQuizzes":[],"resources":[{"title":"RFC 791 - Internet Protocol","url":"https://tools.ietf.org/html/rfc791","type":"documentation"},{"title":"RFC 793 - TCP","url":"https://tools.ietf.org/html/rfc793","type":"documentation"}],"lastUpdated":"2025-01-10T00:00:00Z","version":"1.0"},{"id":"bp-01-kerberos","title":"Kerberos - Authentifizierung und Zugriffskontrolle","description":"Kerberos-Protokoll f√ºr sichere Authentifizierung in Netzwerken (Neu ab 2025)","category":"BP-01","subcategory":"Zugriffskontrolle","difficulty":"advanced","examRelevance":"high","newIn2025":true,"removedIn2025":false,"important":true,"estimatedTime":50,"prerequisites":["bp-01-network-protocols"],"tags":["Kerberos","Authentifizierung","Sicherheit","Active Directory","Neu 2025"],"content":"# Kerberos - Authentifizierung und Zugriffskontrolle\\n\\n## Einf√ºhrung\\n\\nKerberos ist ein Netzwerk-Authentifizierungsprotokoll, das entwickelt wurde, um sichere Authentifizierung √ºber unsichere Netzwerke zu erm√∂glichen. Es wird h√§ufig in Windows Active Directory und Unix/Linux-Umgebungen eingesetzt.\\n\\n**Neu ab 2025**: Kerberos ist explizit im neuen Pr√ºfungskatalog aufgef√ºhrt.\\n\\n## Grundkonzepte\\n\\n### Komponenten\\n\\n1. **Client**: Benutzer oder Dienst, der Zugriff ben√∂tigt\\n2. **Server**: Ressource, auf die zugegriffen werden soll\\n3. **KDC (Key Distribution Center)**:\\n   - **AS (Authentication Server)**: Authentifiziert Clients\\n   - **TGS (Ticket Granting Server)**: Stellt Service-Tickets aus\\n\\n### Tickets\\n\\n- **TGT (Ticket Granting Ticket)**: Berechtigung zum Anfordern von Service-Tickets\\n- **Service Ticket**: Berechtigung zum Zugriff auf einen bestimmten Dienst\\n\\n## Kerberos-Authentifizierungsprozess\\n\\n### Schritt 1: Initiale Authentifizierung (AS-REQ/AS-REP)\\n\\n```\\n1. Client -> AS: Authentifizierungsanfrage\\n   - Benutzername\\n   - Zeitstempel (verschl√ºsselt mit Benutzerpasswort)\\n\\n2. AS -> Client: TGT + Session Key\\n   - TGT (verschl√ºsselt mit TGS-Schl√ºssel)\\n   - Session Key (verschl√ºsselt mit Benutzerpasswort)\\n```\\n\\n### Schritt 2: Service-Ticket-Anfrage (TGS-REQ/TGS-REP)\\n\\n```\\n3. Client -> TGS: Service-Ticket-Anfrage\\n   - TGT\\n   - Service-Name\\n   - Authenticator (verschl√ºsselt mit Session Key)\\n\\n4. TGS -> Client: Service Ticket\\n   - Service Ticket (verschl√ºsselt mit Service-Schl√ºssel)\\n   - Service Session Key (verschl√ºsselt mit Client Session Key)\\n```\\n\\n### Schritt 3: Service-Zugriff (AP-REQ/AP-REP)\\n\\n```\\n5. Client -> Server: Service-Anfrage\\n   - Service Ticket\\n   - Authenticator (verschl√ºsselt mit Service Session Key)\\n\\n6. Server -> Client: Best√§tigung (optional)\\n   - Zeitstempel (verschl√ºsselt mit Service Session Key)\\n```\\n\\n## Sicherheitsmerkmale\\n\\n### 1. Gegenseitige Authentifizierung\\n- Sowohl Client als auch Server authentifizieren sich\\n- Schutz vor Man-in-the-Middle-Angriffen\\n\\n### 2. Single Sign-On (SSO)\\n- Einmalige Anmeldung f√ºr Zugriff auf mehrere Dienste\\n- TGT wird f√ºr mehrere Service-Tickets verwendet\\n\\n### 3. Zeitbasierte Sicherheit\\n- Tickets haben begrenzte G√ºltigkeit (typisch 8-10 Stunden)\\n- Zeitstempel verhindern Replay-Angriffe\\n- Uhren m√ºssen synchronisiert sein (max. 5 Min. Abweichung)\\n\\n### 4. Keine Passwort√ºbertragung\\n- Passw√∂rter werden nie √ºber das Netzwerk gesendet\\n- Nur verschl√ºsselte Tickets und Authenticators\\n\\n## Kerberos in der Praxis\\n\\n### Windows Active Directory\\n\\n```\\n- Domain Controller = KDC\\n- Benutzer authentifiziert sich beim Anmelden\\n- TGT wird f√ºr Zugriff auf Dateiserver, Drucker, etc. verwendet\\n- Kerberos-Realm = Active Directory Domain\\n```\\n\\n### Linux/Unix\\n\\n```bash\\n# Kerberos-Ticket anfordern\\nkinit username@REALM\\n\\n# Tickets anzeigen\\nklist\\n\\n# Ticket l√∂schen\\nkdestroy\\n```\\n\\n## Vorteile\\n\\n- **Sicherheit**: Starke Verschl√ºsselung, keine Passwort√ºbertragung\\n- **Skalierbarkeit**: Zentrale Authentifizierung f√ºr viele Dienste\\n- **Single Sign-On**: Benutzerfreundlichkeit\\n- **Gegenseitige Authentifizierung**: Schutz vor Spoofing\\n\\n## Nachteile\\n\\n- **Zeitsynchronisation erforderlich**: Uhren m√ºssen synchron sein\\n- **Single Point of Failure**: KDC muss verf√ºgbar sein\\n- **Komplexit√§t**: Konfiguration und Verwaltung aufwendig\\n- **Keine Passwort√§nderung**: Passwort√§nderung erfordert neue Tickets\\n\\n## Angriffsvektoren und Schutzma√ünahmen\\n\\n### Pass-the-Ticket-Angriff\\n- Angreifer stiehlt TGT oder Service Ticket\\n- **Schutz**: Ticket-Verschl√ºsselung, kurze G√ºltigkeitsdauer\\n\\n### Kerberoasting\\n- Angreifer fordert Service-Tickets an und versucht Offline-Brute-Force\\n- **Schutz**: Starke Service-Account-Passw√∂rter, Monitoring\\n\\n### Golden Ticket\\n- Angreifer erstellt gef√§lschtes TGT mit gestohlenem KRBTGT-Hash\\n- **Schutz**: KRBTGT-Passwort regelm√§√üig √§ndern, Monitoring\\n\\n## Pr√ºfungsrelevante Aspekte\\n\\n- Kerberos-Komponenten (KDC, AS, TGS) kennen\\n- Authentifizierungsprozess verstehen\\n- Tickets (TGT, Service Ticket) unterscheiden\\n- Sicherheitsmerkmale benennen\\n- Anwendungsf√§lle (Active Directory) kennen\\n- Vorteile und Nachteile nennen","codeExamples":[{"language":"bash","code":"# Kerberos-Ticket anfordern\\nkinit user@EXAMPLE.COM\\n\\n# Tickets anzeigen\\nklist\\n# Output:\\n# Ticket cache: FILE:/tmp/krb5cc_1000\\n# Default principal: user@EXAMPLE.COM\\n#\\n# Valid starting     Expires            Service principal\\n# 01/10/25 10:00:00  01/10/25 20:00:00  krbtgt/EXAMPLE.COM@EXAMPLE.COM\\n\\n# Service-Ticket f√ºr SSH anfordern\\nkvno host/server.example.com\\n\\n# Alle Tickets l√∂schen\\nkdestroy","explanation":"Grundlegende Kerberos-Befehle unter Linux/Unix","title":"Kerberos CLI-Befehle"}],"relatedQuizzes":[],"resources":[{"title":"RFC 4120 - Kerberos V5","url":"https://tools.ietf.org/html/rfc4120","type":"documentation"},{"title":"MIT Kerberos Documentation","url":"https://web.mit.edu/kerberos/","type":"documentation"}],"lastUpdated":"2025-01-10T00:00:00Z","version":"1.0"}]'),Lk={modules:Ck},Mk="bp-01-documentation",Ok="Programm- und Konfigurationsdokumentation",Nk="Best Practices f√ºr technische Dokumentation von Software und Konfigurationen (Neu ab 2025)",Bk="BP-01",xk="Dokumentation",Vk="intermediate",Fk="high",Kk=!0,Wk=!1,jk=!0,$k=45,Gk=[],Uk=["Dokumentation","Code-Kommentare","API-Docs","README","Neu 2025"],Hk=`# Programm- und Konfigurationsdokumentation

## Einf√ºhrung

Gute Dokumentation ist essentiell f√ºr Wartbarkeit, Zusammenarbeit und Wissenstransfer in Softwareprojekten. Sie hilft Entwicklern, Code zu verstehen, und Nutzern, Software effektiv einzusetzen.

**Neu ab 2025**: Programm- und Konfigurationsdokumentation ist explizit im neuen Pr√ºfungskatalog aufgef√ºhrt.

<!-- micro-quiz:bp-01-documentation-einfuhrung-micro-1 -->
## Arten der Dokumentation

### 1. Code-Dokumentation

**Inline-Kommentare:**
\`\`\`java
// Berechnet die Fakult√§t einer Zahl rekursiv
public int factorial(int n) {
    // Basisfall: 0! = 1
    if (n == 0) return 1;
    
    // Rekursiver Fall: n! = n * (n-1)!
    return n * factorial(n - 1);
}
\`\`\`

**Dokumentationskommentare (JavaDoc):**
\`\`\`java
/**
 * Berechnet die Fakult√§t einer nicht-negativen Ganzzahl.
 * 
 * @param n Die Zahl, deren Fakult√§t berechnet werden soll (n >= 0)
 * @return Die Fakult√§t von n
 * @throws IllegalArgumentException wenn n negativ ist
 * @example
 * factorial(5) // returns 120
 * factorial(0) // returns 1
 */
public int factorial(int n) {
    if (n < 0) {
        throw new IllegalArgumentException("n must be non-negative");
    }
    if (n == 0) return 1;
    return n * factorial(n - 1);
}
\`\`\`

### 2. API-Dokumentation

**REST API Beispiel:**
\`\`\`markdown
## GET /api/users/{id}
<!-- micro-quiz:bp-01-documentation-arten-der-dokumentation-micro-1 -->


Ruft einen Benutzer anhand seiner ID ab.

### Parameter
- \`id\` (path, required): Benutzer-ID (integer)

### Response
**Status 200 OK:**
\`\`\`json
{
  "id": 123,
  "name": "Max Mustermann",
  "email": "max@example.com",
  "created_at": "2025-01-10T10:00:00Z"
}
\`\`\`

**Status 404 Not Found:**
\`\`\`json
{
  "error": "User not found"
}
\`\`\`

### Beispiel
\`\`\`bash
curl -X GET https://api.example.com/api/users/123 \\
  -H "Authorization: Bearer TOKEN"
\`\`\`
\`\`\`

### 3. README-Dokumentation

**Struktur:**
\`\`\`markdown
# Projektname

Kurze Beschreibung des Projekts

<!-- micro-quiz:bp-01-documentation-get-apiusersid-micro-1 -->
## Features
- Feature 1
- Feature 2

## Installation
<!-- micro-quiz:bp-01-documentation-features-micro-1 -->

\`\`\`bash
npm install
\`\`\`

<!-- micro-quiz:bp-01-documentation-installation-micro-1 -->
## Verwendung
\`\`\`bash
npm start
\`\`\`

## Konfiguration
<!-- micro-quiz:bp-01-documentation-verwendung-micro-1 -->

Umgebungsvariablen:
- \`DATABASE_URL\`: Datenbank-Verbindungsstring
- \`API_KEY\`: API-Schl√ºssel

<!-- micro-quiz:bp-01-documentation-konfiguration-micro-1 -->
## Tests
\`\`\`bash
npm test
\`\`\`

## Lizenz
<!-- micro-quiz:bp-01-documentation-tests-micro-1 -->

MIT
\`\`\`

### 4. Konfigurationsdokumentation

**Beispiel: application.yml**
\`\`\`yaml
# Datenbankverbindung
database:
  # Hostname des Datenbankservers
  host: localhost
  # Port (Standard: 5432 f√ºr PostgreSQL)
  port: 5432
  # Datenbankname
  name: myapp_production
  # Verbindungspool-Gr√∂√üe (min: 5, max: 50)
  pool_size: 20

# Logging-Konfiguration
logging:
  # Log-Level: DEBUG, INFO, WARN, ERROR
  level: INFO
  # Log-Datei-Pfad
  file: /var/log/myapp/app.log
  # Maximale Dateigr√∂√üe vor Rotation (in MB)
  max_size: 100
\`\`\`

<!-- micro-quiz:bp-01-documentation-lizenz-micro-1 -->
## Dokumentations-Standards

### JavaDoc (Java)

**Tags:**
- \`@param\`: Parameter-Beschreibung
- \`@return\`: R√ºckgabewert
- \`@throws\`: Exceptions
- \`@deprecated\`: Veraltete Methoden
- \`@see\`: Verweis auf andere Klassen/Methoden
- \`@since\`: Version, seit der verf√ºgbar
- \`@author\`: Autor

### JSDoc (JavaScript)

\`\`\`javascript
/**
 * Addiert zwei Zahlen.
 * @param {number} a - Erste Zahl
 * @param {number} b - Zweite Zahl
 * @returns {number} Die Summe von a und b
 * @example
 * add(2, 3) // returns 5
 */
function add(a, b) {
    return a + b;
}
\`\`\`

### Python Docstrings

\`\`\`python
def calculate_average(numbers):
    """
    Berechnet den Durchschnitt einer Liste von Zahlen.
    
    Args:
        numbers (list): Liste von Zahlen (int oder float)
    
    Returns:
        float: Durchschnittswert
    
    Raises:
        ValueError: Wenn die Liste leer ist
    
    Example:
        >>> calculate_average([1, 2, 3, 4, 5])
        3.0
    """
    if not numbers:
        raise ValueError("Liste darf nicht leer sein")
    return sum(numbers) / len(numbers)
\`\`\`

## Best Practices
<!-- micro-quiz:bp-01-documentation-dokumentations-standards-micro-1 -->


### 1. Code-Kommentare

**DO:**
\`\`\`java
// Verwende Binary Search f√ºr bessere Performance bei gro√üen Arrays
int index = Arrays.binarySearch(sortedArray, target);
\`\`\`

**DON'T:**
\`\`\`java
// Inkrementiere i um 1
i++;
\`\`\`

**Regel**: Erkl√§re das "Warum", nicht das "Was"

### 2. Selbstdokumentierender Code

**Schlecht:**
\`\`\`java
int d; // Anzahl Tage
\`\`\`

**Gut:**
\`\`\`java
int daysUntilDeadline;
\`\`\`

### 3. Aktualit√§t

- Dokumentation bei Code-√Ñnderungen aktualisieren
- Veraltete Kommentare entfernen
- Versionierung der Dokumentation

### 4. Zielgruppenorientierung

**F√ºr Entwickler:**
- Technische Details
- Code-Beispiele
- Architektur-Diagramme

**F√ºr Endnutzer:**
- Einfache Sprache
- Screenshots
- Schritt-f√ºr-Schritt-Anleitungen

<!-- micro-quiz:bp-01-documentation-best-practices-micro-1 -->
## Dokumentations-Tools

### Swagger/OpenAPI (REST APIs)

\`\`\`yaml
openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
paths:
  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
\`\`\`

### Sphinx (Python)

\`\`\`python
# conf.py
extensions = ['sphinx.ext.autodoc', 'sphinx.ext.napoleon']

# Generiert HTML-Dokumentation aus Docstrings
\`\`\`

### Doxygen (C/C++)

\`\`\`cpp
/**
 * @brief Berechnet die Summe zweier Zahlen
 * @param a Erste Zahl
 * @param b Zweite Zahl
 * @return Summe von a und b
 */
int add(int a, int b) {
    return a + b;
}
\`\`\`

### MkDocs (Markdown)

\`\`\`yaml
# mkdocs.yml
site_name: My Project
nav:
  - Home: index.md
  - Installation: installation.md
  - API Reference: api.md
theme: material
\`\`\`

## Architektur-Dokumentation
<!-- micro-quiz:bp-01-documentation-dokumentations-tools-micro-1 -->


### C4-Modell

**Level 1: System Context**
\`\`\`
[Benutzer] -> [System] -> [Datenbank]
\`\`\`

**Level 2: Container**
\`\`\`
[Web App] -> [API] -> [Datenbank]
           -> [Cache]
\`\`\`

**Level 3: Component**
\`\`\`
[Controller] -> [Service] -> [Repository]
\`\`\`

### UML-Diagramme

- **Klassendiagramm**: Struktur
- **Sequenzdiagramm**: Ablauf
- **Komponentendiagramm**: Architektur

<!-- micro-quiz:bp-01-documentation-architektur-dokumentation-micro-1 -->
## Changelog

\`\`\`markdown
# Changelog

## [1.2.0] - 2025-01-10
<!-- micro-quiz:bp-01-documentation-changelog-micro-1 -->

### Added
- Neue Funktion: Benutzer-Export
- API-Endpoint: GET /api/users/export

### Changed
- Performance-Verbesserung bei Datenbankabfragen
- UI-Update f√ºr Dashboard

### Fixed
- Bug #123: Login-Fehler bei Sonderzeichen
- Bug #124: Speicherleck in Cache

### Deprecated
- API v1 wird ab 2025-06-01 nicht mehr unterst√ºtzt

<!-- micro-quiz:bp-01-documentation-120---2025-01-10-micro-1 -->
## [1.1.0] - 2024-12-15
...
\`\`\`

## Deployment-Dokumentation
<!-- micro-quiz:bp-01-documentation-110---2024-12-15-micro-1 -->


\`\`\`markdown
# Deployment-Anleitung

<!-- micro-quiz:bp-01-documentation-deployment-dokumentation-micro-1 -->
## Voraussetzungen
- Node.js 18+
- PostgreSQL 14+
- Redis 6+

## Umgebungsvariablen
<!-- micro-quiz:bp-01-documentation-voraussetzungen-micro-1 -->

\`\`\`bash
DATABASE_URL=postgresql://user:pass@localhost:5432/mydb
REDIS_URL=redis://localhost:6379
API_KEY=your-secret-key
\`\`\`

<!-- micro-quiz:bp-01-documentation-umgebungsvariablen-micro-1 -->
## Installation
\`\`\`bash
# Dependencies installieren
npm install

# Datenbank migrieren
npm run migrate

# Build erstellen
npm run build
\`\`\`

## Start
\`\`\`bash
# Production
npm start

# Development
npm run dev
\`\`\`

## Monitoring
<!-- micro-quiz:bp-01-documentation-start-micro-1 -->

- Logs: \`/var/log/myapp/\`
- Metrics: \`http://localhost:9090/metrics\`
- Health Check: \`http://localhost:3000/health\`
\`\`\`

<!-- micro-quiz:bp-01-documentation-monitoring-micro-1 -->
## Pr√ºfungsrelevante Aspekte

- Arten der Dokumentation kennen
- Dokumentations-Standards (JavaDoc, JSDoc, Docstrings) verstehen
- Best Practices f√ºr Code-Kommentare kennen
- API-Dokumentation erstellen k√∂nnen
- README-Struktur kennen
- Konfigurationsdokumentation schreiben
- Dokumentations-Tools kennen
- Changelog-Format verstehen


<!-- micro-quiz:bp-01-documentation-prufungsrelevante-aspekte-micro-1 -->`,Qk=[{language:"java",code:`/**
 * Service f√ºr Benutzerverwaltung.
 * 
 * Diese Klasse bietet Methoden zum Erstellen, Lesen, Aktualisieren
 * und L√∂schen von Benutzern.
 * 
 * @author Max Mustermann
 * @version 1.0
 * @since 2025-01-10
 */
public class UserService {
    
    /**
     * Erstellt einen neuen Benutzer.
     * 
     * @param username Benutzername (3-20 Zeichen, alphanumerisch)
     * @param email E-Mail-Adresse (muss g√ºltig sein)
     * @param password Passwort (min. 8 Zeichen)
     * @return Der erstellte Benutzer mit generierter ID
     * @throws IllegalArgumentException wenn Parameter ung√ºltig sind
     * @throws DuplicateUserException wenn Benutzername bereits existiert
     */
    public User createUser(String username, String email, String password) {
        // Validierung
        if (username == null || username.length() < 3) {
            throw new IllegalArgumentException("Username zu kurz");
        }
        
        // Pr√ºfe auf Duplikate
        if (userRepository.existsByUsername(username)) {
            throw new DuplicateUserException("Username bereits vergeben");
        }
        
        // Erstelle Benutzer
        User user = new User(username, email, hashPassword(password));
        return userRepository.save(user);
    }
}`,explanation:"Vollst√§ndig dokumentierte Java-Klasse mit JavaDoc",title:"JavaDoc Beispiel"}],Zk=[],Jk=[{title:"Oracle JavaDoc Guide",url:"https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html",type:"documentation"},{title:"Swagger/OpenAPI Specification",url:"https://swagger.io/specification/",type:"documentation"}],Yk="2025-01-10T00:00:00Z",Xk="1.0",ez=["Du kannst dokumentation erkl√§ren","Du kannst code-Kommentare erkl√§ren","Du kannst aPI-Docs erkl√§ren","Du kannst rEADME erkl√§ren","Du kannst neu 2025 erkl√§ren"],nz="Best Practices f√ºr technische Dokumentation von Software und Konfigurationen (Neu ab 2025)",tz=[{id:"programm--und-konfigurationsdokumentation",title:"Programm- und Konfigurationsdokumentation",summary:"Kernaspekt: Programm- und Konfigurationsdokumentation"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"arten-der-dokumentation",title:"Arten der Dokumentation",summary:"Kernaspekt: Arten der Dokumentation"},{id:"get-apiusersid",title:"GET /api/users/{id}",summary:"Kernaspekt: GET /api/users/{id}"},{id:"projektname",title:"Projektname",summary:"Kernaspekt: Projektname"},{id:"features",title:"Features",summary:"Kernaspekt: Features"},{id:"installation",title:"Installation",summary:"Kernaspekt: Installation"},{id:"verwendung",title:"Verwendung",summary:"Kernaspekt: Verwendung"},{id:"konfiguration",title:"Konfiguration",summary:"Kernaspekt: Konfiguration"},{id:"tests",title:"Tests",summary:"Kernaspekt: Tests"},{id:"lizenz",title:"Lizenz",summary:"Kernaspekt: Lizenz"},{id:"datenbankverbindung",title:"Datenbankverbindung",summary:"Kernaspekt: Datenbankverbindung"},{id:"logging-konfiguration",title:"Logging-Konfiguration",summary:"Kernaspekt: Logging-Konfiguration"},{id:"dokumentations-standards",title:"Dokumentations-Standards",summary:"Kernaspekt: Dokumentations-Standards"},{id:"best-practices",title:"Best Practices",summary:"Kernaspekt: Best Practices"},{id:"dokumentations-tools",title:"Dokumentations-Tools",summary:"Kernaspekt: Dokumentations-Tools"},{id:"confpy",title:"conf.py",summary:"Kernaspekt: conf.py"},{id:"generiert-html-dokumentation-aus-docstrings",title:"Generiert HTML-Dokumentation aus Docstrings",summary:"Kernaspekt: Generiert HTML-Dokumentation aus Docstrings"},{id:"mkdocsyml",title:"mkdocs.yml",summary:"Kernaspekt: mkdocs.yml"},{id:"architektur-dokumentation",title:"Architektur-Dokumentation",summary:"Kernaspekt: Architektur-Dokumentation"},{id:"changelog",title:"Changelog",summary:"Kernaspekt: Changelog"},{id:"120---2025-01-10",title:"[1.2.0] - 2025-01-10",summary:"Kernaspekt: [1.2.0] - 2025-01-10"},{id:"110---2024-12-15",title:"[1.1.0] - 2024-12-15",summary:"Kernaspekt: [1.1.0] - 2024-12-15"},{id:"deployment-dokumentation",title:"Deployment-Dokumentation",summary:"Kernaspekt: Deployment-Dokumentation"},{id:"deployment-anleitung",title:"Deployment-Anleitung",summary:"Kernaspekt: Deployment-Anleitung"},{id:"voraussetzungen",title:"Voraussetzungen",summary:"Kernaspekt: Voraussetzungen"},{id:"umgebungsvariablen",title:"Umgebungsvariablen",summary:"Kernaspekt: Umgebungsvariablen"},{id:"dependencies-installieren",title:"Dependencies installieren",summary:"Kernaspekt: Dependencies installieren"},{id:"datenbank-migrieren",title:"Datenbank migrieren",summary:"Kernaspekt: Datenbank migrieren"},{id:"build-erstellen",title:"Build erstellen",summary:"Kernaspekt: Build erstellen"}],iz="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",rz="Automatisch erg√§nzt: Review erforderlich",sz=["bp-01-documentation-einfuhrung-micro-1","bp-01-documentation-arten-der-dokumentation-micro-1","bp-01-documentation-get-apiusersid-micro-1","bp-01-documentation-features-micro-1","bp-01-documentation-installation-micro-1","bp-01-documentation-verwendung-micro-1","bp-01-documentation-konfiguration-micro-1","bp-01-documentation-tests-micro-1","bp-01-documentation-lizenz-micro-1","bp-01-documentation-dokumentations-standards-micro-1","bp-01-documentation-best-practices-micro-1","bp-01-documentation-dokumentations-tools-micro-1","bp-01-documentation-architektur-dokumentation-micro-1","bp-01-documentation-changelog-micro-1","bp-01-documentation-120---2025-01-10-micro-1","bp-01-documentation-110---2024-12-15-micro-1","bp-01-documentation-deployment-dokumentation-micro-1","bp-01-documentation-voraussetzungen-micro-1","bp-01-documentation-umgebungsvariablen-micro-1","bp-01-documentation-start-micro-1","bp-01-documentation-monitoring-micro-1","bp-01-documentation-prufungsrelevante-aspekte-micro-1"],az={id:Mk,title:Ok,description:Nk,category:Bk,subcategory:xk,difficulty:Vk,examRelevance:Fk,newIn2025:Kk,removedIn2025:Wk,important:jk,estimatedTime:$k,prerequisites:Gk,tags:Uk,content:Hk,codeExamples:Qk,relatedQuizzes:Zk,resources:Jk,lastUpdated:Yk,version:Xk,learningObjectives:ez,summary:nz,contentOutline:tz,accessibilityNotes:iz,editorNote:rz,microQuizzes:sz},oz="bp-01-kerberos",lz="Kerberos-Authentifizierung und Zugriffskontrolle",uz="Verstehe das Kerberos-Protokoll f√ºr sichere Authentifizierung in Netzwerken und lerne, wie Tickets, KDC und Principals zusammenarbeiten.",cz="BP-01",dz="Konzipieren und Umsetzen von kundenspezifischen Softwareanwendungen - Zugriffskontrolle",mz="intermediate",gz="high",hz=!0,pz=!1,fz=!0,bz=45,kz=["fue-04-security"],zz=["kerberos","authentifizierung","sicherheit","tickets","kdc","principals","zugriffskontrolle","netzwerksicherheit"],vz=`# Kerberos-Authentifizierung und Zugriffskontrolle

## Was ist Kerberos?

Kerberos ist ein Netzwerk-Authentifizierungsprotokoll, das entwickelt wurde, um sichere Authentifizierung √ºber unsichere Netzwerke zu erm√∂glichen. Es basiert auf dem Prinzip der **Ticket-basierten Authentifizierung** und verwendet symmetrische Kryptographie.

### Hauptmerkmale

- **Mutual Authentication**: Sowohl Client als auch Server authentifizieren sich gegenseitig
- **Single Sign-On (SSO)**: Einmalige Anmeldung f√ºr Zugriff auf mehrere Dienste
- **Ticket-basiert**: Verwendet zeitlich begrenzte Tickets statt Passw√∂rter
- **Zentrale Verwaltung**: Key Distribution Center (KDC) als zentrale Instanz

<!-- micro-quiz:bp-01-kerberos-was-ist-kerberos-micro-1 -->
## Kernkomponenten von Kerberos

### 1. Key Distribution Center (KDC)

Das KDC ist die zentrale Vertrauensinstanz in Kerberos und besteht aus zwei Teilen:

#### Authentication Server (AS)
- Verifiziert die Identit√§t des Benutzers
- Stellt **Ticket Granting Tickets (TGT)** aus
- Erster Kontaktpunkt bei der Anmeldung

#### Ticket Granting Server (TGS)
- Stellt **Service Tickets** f√ºr spezifische Dienste aus
- Validiert TGTs
- Vermittelt zwischen Client und Service

### 2. Principals

Ein **Principal** ist eine eindeutige Identit√§t in Kerberos:

\`\`\`
username@REALM.EXAMPLE.COM
service/hostname@REALM.EXAMPLE.COM
\`\`\`

**Typen von Principals:**
- **User Principal**: Repr√§sentiert einen Benutzer (z.B. \`alice@COMPANY.COM\`)
- **Service Principal**: Repr√§sentiert einen Dienst (z.B. \`http/webserver.company.com@COMPANY.COM\`)

### 3. Tickets

Tickets sind verschl√ºsselte Datenpakete, die Authentifizierungsinformationen enthalten:

#### Ticket Granting Ticket (TGT)
- Wird nach erfolgreicher Anmeldung ausgestellt
- G√ºltig f√ºr eine Session (typisch 8-10 Stunden)
- Wird verwendet, um Service Tickets anzufordern
- Verschl√ºsselt mit dem Secret Key des TGS

#### Service Ticket (ST)
- Berechtigt zum Zugriff auf einen spezifischen Dienst
- K√ºrzere G√ºltigkeitsdauer (typisch 5 Minuten bis 1 Stunde)
- Verschl√ºsselt mit dem Secret Key des Zieldienstes

### 4. Realm

Ein **Realm** ist eine administrative Dom√§ne in Kerberos:
- Definiert den G√ºltigkeitsbereich von Principals
- Wird in GROSSBUCHSTABEN geschrieben (z.B. \`COMPANY.COM\`)
- Kann mit anderen Realms vertrauensbeziehungen haben

## Kerberos-Authentifizierungsprozess
<!-- micro-quiz:bp-01-kerberos-kernkomponenten-von-kerberos-micro-1 -->


### Schritt 1: Initial Authentication (AS Exchange)

\`\`\`mermaid
sequenceDiagram
    participant Client
    participant AS (KDC)
    
    Client->>AS: 1. Authentication Request (Username)
    AS->>AS: 2. Verifiziert Benutzer in Datenbank
    AS->>Client: 3. TGT + Session Key (verschl√ºsselt)
    Client->>Client: 4. Entschl√ºsselt mit Passwort-Hash
\`\`\`

**Was passiert:**
1. Client sendet Benutzernamen an AS
2. AS pr√ºft, ob Benutzer existiert
3. AS sendet TGT (verschl√ºsselt mit TGS-Key) und Session Key (verschl√ºsselt mit User-Password-Hash)
4. Client entschl√ºsselt Session Key mit seinem Passwort

### Schritt 2: Service Ticket Request (TGS Exchange)

\`\`\`mermaid
sequenceDiagram
    participant Client
    participant TGS (KDC)
    
    Client->>TGS: 1. TGT + Service Request + Authenticator
    TGS->>TGS: 2. Validiert TGT und Authenticator
    TGS->>Client: 3. Service Ticket + Service Session Key
    Client->>Client: 4. Speichert Service Ticket
\`\`\`

**Was passiert:**
1. Client sendet TGT, gew√ºnschten Service und Authenticator (Zeitstempel)
2. TGS validiert TGT und pr√ºft Zeitstempel
3. TGS sendet Service Ticket und Service Session Key
4. Client speichert Ticket f√ºr Zugriff auf Service

### Schritt 3: Service Access (Client-Server Exchange)

\`\`\`mermaid
sequenceDiagram
    participant Client
    participant Service
    
    Client->>Service: 1. Service Ticket + Authenticator
    Service->>Service: 2. Entschl√ºsselt und validiert Ticket
    Service->>Client: 3. Service Authenticator (optional)
    Service->>Client: 4. Gew√§hrt Zugriff
\`\`\`

**Was passiert:**
1. Client sendet Service Ticket und neuen Authenticator
2. Service entschl√ºsselt Ticket mit seinem Secret Key
3. Service sendet optional eigenen Authenticator (Mutual Authentication)
4. Service gew√§hrt Zugriff auf angeforderte Ressource

<!-- micro-quiz:bp-01-kerberos-kerberos-authentifizierungsprozess-micro-1 -->
## Sicherheitsmechanismen

### 1. Zeitstempel und Replay-Schutz

- Alle Nachrichten enthalten Zeitstempel
- Zeitfenster (typisch 5 Minuten) verhindert Replay-Attacken
- Erfordert synchronisierte Uhren (NTP)

### 2. Verschl√ºsselung

- **Symmetrische Verschl√ºsselung**: AES, DES, 3DES
- Jeder Principal hat einen Secret Key
- Session Keys werden f√ºr jede Session neu generiert

### 3. Ticket-Lebensdauer

- TGT: Lange G√ºltigkeitsdauer (8-10 Stunden)
- Service Tickets: Kurze G√ºltigkeitsdauer (5-60 Minuten)
- Renewable Tickets: K√∂nnen verl√§ngert werden ohne erneute Anmeldung

## Vorteile von Kerberos
<!-- micro-quiz:bp-01-kerberos-sicherheitsmechanismen-micro-1 -->


‚úÖ **Single Sign-On**: Einmalige Anmeldung f√ºr alle Dienste
‚úÖ **Mutual Authentication**: Beide Seiten authentifizieren sich
‚úÖ **Keine Passwort-√úbertragung**: Passw√∂rter werden nie √ºber Netzwerk gesendet
‚úÖ **Zentrale Verwaltung**: Einfache Administration √ºber KDC
‚úÖ **Skalierbar**: Funktioniert in gro√üen Netzwerken
‚úÖ **Standardisiert**: RFC 4120, weit verbreitet

<!-- micro-quiz:bp-01-kerberos-vorteile-von-kerberos-micro-1 -->
## Nachteile und Herausforderungen

‚ùå **Single Point of Failure**: KDC muss hochverf√ºgbar sein
‚ùå **Zeitsynchronisation**: Erfordert synchronisierte Uhren
‚ùå **Komplexit√§t**: Konfiguration und Troubleshooting k√∂nnen komplex sein
‚ùå **Initial Authentication**: Kompromittierung des KDC gef√§hrdet gesamtes System
‚ùå **Keine Passwort-√Ñnderung**: Passwort√§nderung erfordert neue Tickets

## Praktische Anwendungsf√§lle
<!-- micro-quiz:bp-01-kerberos-nachteile-und-herausforderungen-micro-1 -->


### 1. Active Directory (Windows)

Microsoft Active Directory verwendet Kerberos als prim√§res Authentifizierungsprotokol:

\`\`\`
User meldet sich an Windows-PC an
  ‚Üì
Windows kontaktiert Domain Controller (KDC)
  ‚Üì
Erh√§lt TGT f√ºr die Domain
  ‚Üì
Zugriff auf Fileserver, Drucker, Webservices ohne erneute Anmeldung
\`\`\`

### 2. Linux/Unix mit Kerberos

\`\`\`bash
# Kerberos-Ticket anfordern
kinit username@REALM.COM

# Aktuelle Tickets anzeigen
klist

# Ticket l√∂schen (Logout)
kdestroy

# SSH mit Kerberos
ssh -K server.example.com
\`\`\`

### 3. Web-Anwendungen

**SPNEGO (Simple and Protected GSSAPI Negotiation Mechanism)**:
- Browser-basierte Kerberos-Authentifizierung
- Transparent f√ºr Benutzer (SSO)
- Verwendet in Intranet-Anwendungen

<!-- micro-quiz:bp-01-kerberos-praktische-anwendungsfalle-micro-1 -->
## Kerberos vs. andere Authentifizierungsmethoden

| Merkmal | Kerberos | LDAP | OAuth 2.0 | SAML |
|---------|----------|------|-----------|------|
| **Typ** | Ticket-basiert | Directory-basiert | Token-basiert | Assertion-basiert |
| **Hauptzweck** | Netzwerk-Auth | Verzeichnisdienst | API-Zugriff | Web-SSO |
| **Verschl√ºsselung** | Symmetrisch | Optional | Asymmetrisch | Asymmetrisch |
| **SSO** | Ja | Nein | Ja | Ja |
| **Mutual Auth** | Ja | Nein | Nein | Optional |
| **Komplexit√§t** | Hoch | Mittel | Mittel | Hoch |

## Konfigurationsbeispiel
<!-- micro-quiz:bp-01-kerberos-kerberos-vs-andere-authentifizierungsmethoden-micro-1 -->


### krb5.conf (Client-Konfiguration)

\`\`\`ini
[libdefaults]
    default_realm = COMPANY.COM
    dns_lookup_realm = false
    dns_lookup_kdc = true
    ticket_lifetime = 24h
    renew_lifetime = 7d
    forwardable = true

[realms]
    COMPANY.COM = {
        kdc = kdc1.company.com
        kdc = kdc2.company.com
        admin_server = kdc1.company.com
    }

[domain_realm]
    .company.com = COMPANY.COM
    company.com = COMPANY.COM
\`\`\`

### Service Principal erstellen

\`\`\`bash
# Auf dem KDC
kadmin.local

# Principal f√ºr Webserver erstellen
addprinc -randkey HTTP/webserver.company.com@COMPANY.COM

# Keytab-Datei exportieren
ktadd -k /etc/krb5.keytab HTTP/webserver.company.com@COMPANY.COM
\`\`\`

<!-- micro-quiz:bp-01-kerberos-konfigurationsbeispiel-micro-1 -->
## Troubleshooting

### H√§ufige Probleme

**1. Clock Skew Error**
\`\`\`
kinit: Clock skew too great while getting initial credentials
\`\`\`
**L√∂sung**: Uhren synchronisieren mit NTP

**2. Cannot find KDC**
\`\`\`
kinit: Cannot find KDC for realm
\`\`\`
**L√∂sung**: DNS-Eintr√§ge oder krb5.conf pr√ºfen

**3. Ticket Expired**
\`\`\`
Server not found in Kerberos database
\`\`\`
**L√∂sung**: Neues Ticket mit \`kinit\` anfordern

## Best Practices
<!-- micro-quiz:bp-01-kerberos-troubleshooting-micro-1 -->


1. **Hochverf√ºgbarkeit**: Mehrere KDCs f√ºr Redundanz
2. **Zeitsynchronisation**: NTP auf allen Systemen
3. **Sichere Passw√∂rter**: Starke Passwort-Policies
4. **Regelm√§√üige Key-Rotation**: Service-Keys regelm√§√üig √§ndern
5. **Monitoring**: KDC-Logs √ºberwachen
6. **Backup**: Kerberos-Datenbank regelm√§√üig sichern
7. **Netzwerksicherheit**: KDC-Traffic verschl√ºsseln

<!-- micro-quiz:bp-01-kerberos-best-practices-micro-1 -->
## Zusammenfassung

Kerberos ist ein robustes Authentifizierungsprotokoll, das:
- **Ticket-basierte Authentifizierung** f√ºr sichere Netzwerkzugriffe bietet
- **Single Sign-On** erm√∂glicht
- **Mutual Authentication** zwischen Client und Server gew√§hrleistet
- In vielen Enterprise-Umgebungen (Active Directory) eingesetzt wird
- Zeitsynchronisation und zentrale KDC-Verwaltung erfordert

F√ºr die IHK-Pr√ºfung wichtig:
- Verstehe die drei Authentifizierungsschritte (AS, TGS, Service)
- Kenne die Komponenten (KDC, Principals, Tickets, Realm)
- Verstehe Vor- und Nachteile
- Kenne praktische Anwendungsf√§lle (Active Directory)



<!-- micro-quiz:kerberos-quiz -->
<!-- micro-quiz:bp-01-kerberos-zusammenfassung-micro-1 -->
`,yz=[{language:"bash",title:"Kerberos-Tickets verwalten (Linux/Unix)",code:`# Ticket anfordern (Login)
kinit alice@COMPANY.COM
# Passwort wird abgefragt

# Aktuelle Tickets anzeigen
klist
# Ausgabe:
# Ticket cache: FILE:/tmp/krb5cc_1000
# Default principal: alice@COMPANY.COM
#
# Valid starting     Expires            Service principal
# 01/05/25 10:00:00  01/05/25 20:00:00  krbtgt/COMPANY.COM@COMPANY.COM

# Ticket erneuern (ohne Passwort)
kinit -R

# Ticket f√ºr spezifischen Service anfordern
kvno HTTP/webserver.company.com@COMPANY.COM

# Alle Tickets l√∂schen (Logout)
kdestroy

# Ticket mit l√§ngerer G√ºltigkeitsdauer
kinit -l 24h alice@COMPANY.COM`,explanation:"Grundlegende Kerberos-Befehle f√ºr die Ticket-Verwaltung. kinit fordert ein TGT an, klist zeigt aktive Tickets, kdestroy l√∂scht alle Tickets."},{language:"python",title:"Kerberos-Authentifizierung in Python",code:`import kerberos
import requests
from requests_kerberos import HTTPKerberosAuth, OPTIONAL

# Beispiel 1: HTTP-Request mit Kerberos-Auth
def access_protected_resource():
    url = 'https://webserver.company.com/api/data'
    
    # Kerberos-Authentifizierung verwenden
    kerberos_auth = HTTPKerberosAuth(mutual_authentication=OPTIONAL)
    
    response = requests.get(url, auth=kerberos_auth)
    
    if response.status_code == 200:
        print("Zugriff erfolgreich")
        return response.json()
    else:
        print(f"Fehler: {response.status_code}")
        return None

# Beispiel 2: Service Principal validieren
def validate_service_principal(service, hostname):
    try:
        # Service Principal Name erstellen
        service_principal = f"{service}@{hostname}"
        
        # Kerberos-Context initialisieren
        result, context = kerberos.authGSSClientInit(service_principal)
        
        if result == kerberos.AUTH_GSS_COMPLETE:
            print(f"Service Principal {service_principal} ist g√ºltig")
            return True
        else:
            print(f"Service Principal {service_principal} ist ung√ºltig")
            return False
            
    except kerberos.GSSError as e:
        print(f"Kerberos-Fehler: {e}")
        return False

# Beispiel 3: Ticket-Informationen abrufen
def get_ticket_info():
    import subprocess
    
    # klist-Befehl ausf√ºhren
    result = subprocess.run(['klist'], capture_output=True, text=True)
    
    if result.returncode == 0:
        print("Aktive Kerberos-Tickets:")
        print(result.stdout)
    else:
        print("Keine aktiven Tickets gefunden")

# Verwendung
if __name__ == "__main__":
    # Ticket-Info anzeigen
    get_ticket_info()
    
    # Service validieren
    validate_service_principal("HTTP", "webserver.company.com")
    
    # Gesch√ºtzte Ressource abrufen
    data = access_protected_resource()`,explanation:"Python-Beispiele f√ºr Kerberos-Integration. Zeigt HTTP-Requests mit Kerberos-Auth, Service-Principal-Validierung und Ticket-Abfrage."},{language:"java",title:"Kerberos-Authentifizierung in Java",code:`import javax.security.auth.Subject;
import javax.security.auth.login.LoginContext;
import javax.security.auth.login.LoginException;
import org.ietf.jgss.*;
import java.security.PrivilegedAction;

public class KerberosAuthExample {
    
    // Beispiel 1: Kerberos-Login
    public static Subject kerberosLogin(String username, String password) {
        try {
            // LoginContext mit JAAS-Konfiguration erstellen
            LoginContext loginContext = new LoginContext("KerberosLogin",
                new UsernamePasswordCallbackHandler(username, password));
            
            // Login durchf√ºhren
            loginContext.login();
            
            // Subject mit Credentials zur√ºckgeben
            Subject subject = loginContext.getSubject();
            System.out.println("Kerberos-Login erfolgreich f√ºr: " + username);
            
            return subject;
            
        } catch (LoginException e) {
            System.err.println("Kerberos-Login fehlgeschlagen: " + e.getMessage());
            return null;
        }
    }
    
    // Beispiel 2: Service Ticket anfordern
    public static byte[] getServiceTicket(Subject subject, String servicePrincipal) {
        return Subject.doAs(subject, new PrivilegedAction<byte[]>() {
            public byte[] run() {
                try {
                    // GSSManager erstellen
                    GSSManager manager = GSSManager.getInstance();
                    
                    // Service Principal Name erstellen
                    GSSName serverName = manager.createName(
                        servicePrincipal,
                        GSSName.NT_HOSTBASED_SERVICE
                    );
                    
                    // Kerberos OID
                    Oid krb5Oid = new Oid("1.2.840.113554.1.2.2");
                    
                    // GSS-Context erstellen
                    GSSContext context = manager.createContext(
                        serverName,
                        krb5Oid,
                        null,
                        GSSContext.DEFAULT_LIFETIME
                    );
                    
                    // Mutual Authentication aktivieren
                    context.requestMutualAuth(true);
                    
                    // Service Ticket generieren
                    byte[] token = context.initSecContext(new byte[0], 0, 0);
                    
                    System.out.println("Service Ticket erstellt f√ºr: " + servicePrincipal);
                    
                    return token;
                    
                } catch (GSSException e) {
                    System.err.println("Fehler beim Erstellen des Service Tickets: " 
                        + e.getMessage());
                    return null;
                }
            }
        });
    }
    
    // Beispiel 3: Service-seitige Ticket-Validierung
    public static boolean validateServiceTicket(byte[] ticket, String servicePrincipal) {
        try {
            GSSManager manager = GSSManager.getInstance();
            
            // Service Credentials laden (aus Keytab)
            GSSName serviceName = manager.createName(
                servicePrincipal,
                GSSName.NT_HOSTBASED_SERVICE
            );
            
            Oid krb5Oid = new Oid("1.2.840.113554.1.2.2");
            
            GSSCredential serverCreds = manager.createCredential(
                serviceName,
                GSSCredential.INDEFINITE_LIFETIME,
                krb5Oid,
                GSSCredential.ACCEPT_ONLY
            );
            
            // Context f√ºr Ticket-Validierung erstellen
            GSSContext context = manager.createContext(serverCreds);
            
            // Ticket validieren
            context.acceptSecContext(ticket, 0, ticket.length);
            
            // Client-Principal abrufen
            GSSName clientName = context.getSrcName();
            System.out.println("Ticket validiert f√ºr Client: " + clientName);
            
            return true;
            
        } catch (GSSException e) {
            System.err.println("Ticket-Validierung fehlgeschlagen: " + e.getMessage());
            return false;
        }
    }
    
    public static void main(String[] args) {
        // Login durchf√ºhren
        Subject subject = kerberosLogin("alice@COMPANY.COM", "password123");
        
        if (subject != null) {
            // Service Ticket anfordern
            byte[] ticket = getServiceTicket(subject, "HTTP@webserver.company.com");
            
            if (ticket != null) {
                // Ticket validieren (Service-Seite)
                boolean valid = validateServiceTicket(ticket, "HTTP@webserver.company.com");
                System.out.println("Ticket g√ºltig: " + valid);
            }
        }
    }
}`,explanation:"Java-Implementierung f√ºr Kerberos-Authentifizierung mit JAAS und GSS-API. Zeigt Login, Service-Ticket-Anforderung und Ticket-Validierung."}],Sz=["kerberos-quiz"],wz=[{title:"RFC 4120 - The Kerberos Network Authentication Service (V5)",url:"https://tools.ietf.org/html/rfc4120",type:"documentation"},{title:"MIT Kerberos Documentation",url:"https://web.mit.edu/kerberos/",type:"documentation"},{title:"Microsoft Active Directory and Kerberos",url:"https://docs.microsoft.com/en-us/windows-server/security/kerberos/kerberos-authentication-overview",type:"documentation"}],Az="2025-01-05T10:00:00Z",Ez="1.0",_z=["Du kannst kerberos erkl√§ren","Du kannst authentifizierung erkl√§ren","Du kannst sicherheit erkl√§ren","Du kannst tickets erkl√§ren","Du kannst kdc erkl√§ren"],Dz="Verstehe das Kerberos-Protokoll f√ºr sichere Authentifizierung in Netzwerken und lerne, wie Tickets, KDC und Principals zusammenarbeiten.",Pz=[{id:"kerberos-authentifizierung-und-zugriffskontrolle",title:"Kerberos-Authentifizierung und Zugriffskontrolle",summary:"Kernaspekt: Kerberos-Authentifizierung und Zugriffskontrolle"},{id:"was-ist-kerberos",title:"Was ist Kerberos?",summary:"Kernaspekt: Was ist Kerberos?"},{id:"kernkomponenten-von-kerberos",title:"Kernkomponenten von Kerberos",summary:"Kernaspekt: Kernkomponenten von Kerberos"},{id:"kerberos-authentifizierungsprozess",title:"Kerberos-Authentifizierungsprozess",summary:"Kernaspekt: Kerberos-Authentifizierungsprozess"},{id:"sicherheitsmechanismen",title:"Sicherheitsmechanismen",summary:"Kernaspekt: Sicherheitsmechanismen"},{id:"vorteile-von-kerberos",title:"Vorteile von Kerberos",summary:"Kernaspekt: Vorteile von Kerberos"},{id:"nachteile-und-herausforderungen",title:"Nachteile und Herausforderungen",summary:"Kernaspekt: Nachteile und Herausforderungen"},{id:"praktische-anwendungsfalle",title:"Praktische Anwendungsf√§lle",summary:"Kernaspekt: Praktische Anwendungsf√§lle"},{id:"kerberos-ticket-anfordern",title:"Kerberos-Ticket anfordern",summary:"Kernaspekt: Kerberos-Ticket anfordern"},{id:"aktuelle-tickets-anzeigen",title:"Aktuelle Tickets anzeigen",summary:"Kernaspekt: Aktuelle Tickets anzeigen"},{id:"ticket-loschen-logout",title:"Ticket l√∂schen (Logout)",summary:"Kernaspekt: Ticket l√∂schen (Logout)"},{id:"ssh-mit-kerberos",title:"SSH mit Kerberos",summary:"Kernaspekt: SSH mit Kerberos"},{id:"kerberos-vs-andere-authentifizierungsmethoden",title:"Kerberos vs. andere Authentifizierungsmethoden",summary:"Kernaspekt: Kerberos vs. andere Authentifizierungsmethoden"},{id:"konfigurationsbeispiel",title:"Konfigurationsbeispiel",summary:"Kernaspekt: Konfigurationsbeispiel"},{id:"auf-dem-kdc",title:"Auf dem KDC",summary:"Kernaspekt: Auf dem KDC"},{id:"principal-fur-webserver-erstellen",title:"Principal f√ºr Webserver erstellen",summary:"Kernaspekt: Principal f√ºr Webserver erstellen"},{id:"keytab-datei-exportieren",title:"Keytab-Datei exportieren",summary:"Kernaspekt: Keytab-Datei exportieren"},{id:"troubleshooting",title:"Troubleshooting",summary:"Kernaspekt: Troubleshooting"},{id:"best-practices",title:"Best Practices",summary:"Kernaspekt: Best Practices"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],Tz="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",qz="Automatisch erg√§nzt: Review erforderlich",Rz=["bp-01-kerberos-was-ist-kerberos-micro-1","bp-01-kerberos-kernkomponenten-von-kerberos-micro-1","bp-01-kerberos-kerberos-authentifizierungsprozess-micro-1","bp-01-kerberos-sicherheitsmechanismen-micro-1","bp-01-kerberos-vorteile-von-kerberos-micro-1","bp-01-kerberos-nachteile-und-herausforderungen-micro-1","bp-01-kerberos-praktische-anwendungsfalle-micro-1","bp-01-kerberos-kerberos-vs-andere-authentifizierungsmethoden-micro-1","bp-01-kerberos-konfigurationsbeispiel-micro-1","bp-01-kerberos-troubleshooting-micro-1","bp-01-kerberos-best-practices-micro-1","bp-01-kerberos-zusammenfassung-micro-1"],Iz={id:oz,title:lz,description:uz,category:cz,subcategory:dz,difficulty:mz,examRelevance:gz,newIn2025:hz,removedIn2025:pz,important:fz,estimatedTime:bz,prerequisites:kz,tags:zz,content:vz,codeExamples:yz,relatedQuizzes:Sz,resources:wz,lastUpdated:Az,version:Ez,learningObjectives:_z,summary:Dz,contentOutline:Pz,accessibilityNotes:Tz,editorNote:qz,microQuizzes:Rz},Cz="bp-01-monitoring",Lz="System-Monitoring und √úberwachung",Mz="Monitoring von Systemen, Anwendungen und Infrastruktur (Neu ab 2025)",Oz="BP-01",Nz="Monitoring",Bz="intermediate",xz="high",Vz=!0,Fz=!1,Kz=!0,Wz=50,jz=[],$z=["Monitoring","Logging","Metriken","Alerting","Neu 2025"],Gz=`# System-Monitoring und √úberwachung

## Einf√ºhrung

Monitoring ist die kontinuierliche √úberwachung von IT-Systemen, Anwendungen und Infrastruktur, um Verf√ºgbarkeit, Performance und Sicherheit sicherzustellen.

**Neu ab 2025**: Monitoring ist explizit im neuen Pr√ºfungskatalog aufgef√ºhrt.

<!-- micro-quiz:bp-01-monitoring-einfuhrung-micro-1 -->
## Monitoring-Bereiche

### 1. Infrastruktur-Monitoring

**Hardware:**
- CPU-Auslastung
- RAM-Nutzung
- Festplattenspeicher
- Netzwerkbandbreite
- Temperatur

**Netzwerk:**
- Latenz
- Paketverlust
- Bandbreitennutzung
- Verbindungsstatus

### 2. Anwendungs-Monitoring

**Performance:**
- Response Time
- Throughput (Anfragen/Sekunde)
- Error Rate
- Verf√ºgbarkeit (Uptime)

**Ressourcen:**
- Speichernutzung
- Datenbankverbindungen
- Thread-Pools
- Cache-Hit-Rate

### 3. Log-Monitoring

**Log-Typen:**
- Application Logs
- System Logs
- Security Logs
- Access Logs

**Log-Levels:**
- ERROR: Fehler
- WARN: Warnungen
- INFO: Informationen
- DEBUG: Debug-Informationen

## Monitoring-Metriken
<!-- micro-quiz:bp-01-monitoring-monitoring-bereiche-micro-1 -->


### Golden Signals (Google SRE)

1. **Latency**: Wie lange dauern Anfragen?
2. **Traffic**: Wie viele Anfragen gibt es?
3. **Errors**: Wie viele Anfragen schlagen fehl?
4. **Saturation**: Wie ausgelastet sind Ressourcen?

### RED-Methode (f√ºr Services)

1. **Rate**: Anfragen pro Sekunde
2. **Errors**: Fehlerrate
3. **Duration**: Antwortzeit

### USE-Methode (f√ºr Ressourcen)

1. **Utilization**: Auslastung
2. **Saturation**: Warteschlangenl√§nge
3. **Errors**: Fehleranzahl

<!-- micro-quiz:bp-01-monitoring-monitoring-metriken-micro-1 -->
## Monitoring-Tools

### Prometheus

**Eigenschaften:**
- Open Source
- Time-Series-Datenbank
- Pull-basiert
- PromQL Query Language

**Beispiel-Metrik:**
\`\`\`prometheus
# CPU-Auslastung
node_cpu_seconds_total{mode="idle"}

# HTTP-Requests
http_requests_total{method="GET", status="200"}

# Query: Requests pro Sekunde
rate(http_requests_total[5m])
\`\`\`

### Grafana

**Eigenschaften:**
- Visualisierung
- Dashboards
- Alerting
- Unterst√ºtzt viele Datenquellen

### ELK-Stack (Elasticsearch, Logstash, Kibana)

**Komponenten:**
- **Elasticsearch**: Speicherung und Suche
- **Logstash**: Log-Verarbeitung
- **Kibana**: Visualisierung

**Log-Pipeline:**
\`\`\`
Anwendung -> Logstash -> Elasticsearch -> Kibana
\`\`\`

### Nagios

**Eigenschaften:**
- Klassisches Monitoring-Tool
- Plugin-basiert
- Host- und Service-Checks

### Zabbix

**Eigenschaften:**
- Enterprise-Monitoring
- Agent-basiert
- Auto-Discovery
- Trigger und Actions

## Alerting
<!-- micro-quiz:bp-01-monitoring-monitoring-tools-micro-1 -->


### Alert-Regeln

\`\`\`yaml
# Prometheus Alert
alert: HighCPUUsage
expr: node_cpu_usage > 80
for: 5m
labels:
  severity: warning
annotations:
  summary: "CPU-Auslastung √ºber 80%"
  description: "Server {{ $labels.instance }} hat {{ $value }}% CPU-Auslastung"
\`\`\`

### Alert-Kan√§le

- **E-Mail**: Benachrichtigung per Mail
- **SMS**: Kritische Alerts
- **Slack/Teams**: Team-Benachrichtigungen
- **PagerDuty**: On-Call-Management
- **Webhook**: Integration mit anderen Systemen

### Alert-Severity

1. **Critical**: Sofortige Aktion erforderlich
2. **Warning**: Beobachtung erforderlich
3. **Info**: Informativ

<!-- micro-quiz:bp-01-monitoring-alerting-micro-1 -->
## Health Checks

### Liveness Probe

\`\`\`python
# Flask Beispiel
@app.route('/health/live')
def liveness():
    return {'status': 'alive'}, 200
\`\`\`

**Zweck**: Ist die Anwendung am Leben?

### Readiness Probe

\`\`\`python
@app.route('/health/ready')
def readiness():
    # Pr√ºfe Datenbankverbindung
    if database.is_connected():
        return {'status': 'ready'}, 200
    else:
        return {'status': 'not ready'}, 503
\`\`\`

**Zweck**: Ist die Anwendung bereit, Anfragen zu verarbeiten?

## Metriken sammeln
<!-- micro-quiz:bp-01-monitoring-health-checks-micro-1 -->


### Application Metrics (Python)

\`\`\`python
from prometheus_client import Counter, Histogram, Gauge
import time

# Counter: Z√§hlt Ereignisse
request_count = Counter(
    'http_requests_total',
    'Total HTTP Requests',
    ['method', 'endpoint', 'status']
)

# Histogram: Misst Verteilung
request_duration = Histogram(
    'http_request_duration_seconds',
    'HTTP Request Duration'
)

# Gauge: Aktueller Wert
active_users = Gauge(
    'active_users',
    'Number of active users'
)

# Verwendung
@app.route('/api/users')
def get_users():
    start = time.time()
    
    # Business Logic
    users = fetch_users()
    
    # Metriken aktualisieren
    duration = time.time() - start
    request_count.labels(
        method='GET',
        endpoint='/api/users',
        status=200
    ).inc()
    request_duration.observe(duration)
    
    return users
\`\`\`

### System Metrics (Node Exporter)

\`\`\`bash
# CPU-Auslastung
node_cpu_seconds_total

# Speicher
node_memory_MemAvailable_bytes
node_memory_MemTotal_bytes

# Festplatte
node_filesystem_avail_bytes
node_filesystem_size_bytes

# Netzwerk
node_network_receive_bytes_total
node_network_transmit_bytes_total
\`\`\`

<!-- micro-quiz:bp-01-monitoring-metriken-sammeln-micro-1 -->
## Logging Best Practices

### Strukturiertes Logging

\`\`\`python
import logging
import json

logger = logging.getLogger(__name__)

# Strukturiertes Log
logger.info(json.dumps({
    'event': 'user_login',
    'user_id': 12345,
    'ip': '192.168.1.100',
    'timestamp': '2025-01-10T10:30:00Z',
    'success': True
}))
\`\`\`

### Log-Aggregation

\`\`\`
Server 1 -> Logs -> Zentraler Log-Server
Server 2 -> Logs -> Zentraler Log-Server
Server 3 -> Logs -> Zentraler Log-Server
                         |
                         v
                    Elasticsearch
                         |
                         v
                      Kibana
\`\`\`

## Dashboards
<!-- micro-quiz:bp-01-monitoring-logging-best-practices-micro-1 -->


### Wichtige Metriken f√ºr Dashboards

**System-Dashboard:**
- CPU-Auslastung (Zeitreihe)
- RAM-Nutzung (Gauge)
- Festplattenspeicher (Gauge)
- Netzwerk-Traffic (Zeitreihe)

**Anwendungs-Dashboard:**
- Requests/Sekunde (Zeitreihe)
- Response Time (Histogram)
- Error Rate (Zeitreihe)
- Active Users (Gauge)

**Business-Dashboard:**
- Transaktionen/Stunde
- Umsatz
- Conversion Rate

<!-- micro-quiz:bp-01-monitoring-dashboards-micro-1 -->
## SLA und SLO

### SLA (Service Level Agreement)
- Vertragliche Vereinbarung
- Beispiel: 99.9% Verf√ºgbarkeit

### SLO (Service Level Objective)
- Internes Ziel
- Beispiel: 99.95% Verf√ºgbarkeit

### SLI (Service Level Indicator)
- Messbare Metrik
- Beispiel: Uptime, Response Time

**Berechnung:**
\`\`\`
Verf√ºgbarkeit = (Gesamtzeit - Ausfallzeit) / Gesamtzeit * 100

99.9% = 43.2 Minuten Ausfall pro Monat
99.99% = 4.32 Minuten Ausfall pro Monat
\`\`\`

## Pr√ºfungsrelevante Aspekte
<!-- micro-quiz:bp-01-monitoring-sla-und-slo-micro-1 -->


- Monitoring-Bereiche kennen
- Wichtige Metriken (Golden Signals, RED, USE) verstehen
- Monitoring-Tools (Prometheus, Grafana, ELK) kennen
- Alerting-Konzepte verstehen
- Health Checks (Liveness, Readiness) unterscheiden
- Logging Best Practices kennen
- SLA/SLO/SLI unterscheiden


<!-- micro-quiz:bp-01-monitoring-prufungsrelevante-aspekte-micro-1 -->`,Uz=[{language:"python",code:`from prometheus_client import start_http_server, Counter, Histogram
import time
import random

# Metriken definieren
request_counter = Counter(
    'app_requests_total',
    'Total requests',
    ['method', 'endpoint']
)

request_duration = Histogram(
    'app_request_duration_seconds',
    'Request duration'
)

# Metrics-Server starten (Port 8000)
start_http_server(8000)

# Anwendungslogik mit Monitoring
def process_request(method, endpoint):
    start = time.time()
    
    # Simuliere Verarbeitung
    time.sleep(random.uniform(0.1, 0.5))
    
    # Metriken aktualisieren
    duration = time.time() - start
    request_counter.labels(method=method, endpoint=endpoint).inc()
    request_duration.observe(duration)
    
    return f"Processed {method} {endpoint} in {duration:.2f}s"

# Beispielaufrufe
while True:
    process_request('GET', '/api/users')
    time.sleep(1)`,explanation:"Prometheus-Metriken in Python-Anwendung integrieren",title:"Prometheus Monitoring Beispiel"}],Hz=[],Qz=[{title:"Prometheus Documentation",url:"https://prometheus.io/docs/",type:"documentation"},{title:"Google SRE Book",url:"https://sre.google/books/",type:"article"}],Zz="2025-01-10T00:00:00Z",Jz="1.0",Yz=["Du kannst monitoring erkl√§ren","Du kannst logging erkl√§ren","Du kannst metriken erkl√§ren","Du kannst alerting erkl√§ren","Du kannst neu 2025 erkl√§ren"],Xz="Monitoring von Systemen, Anwendungen und Infrastruktur (Neu ab 2025)",ev=[{id:"system-monitoring-und-uberwachung",title:"System-Monitoring und √úberwachung",summary:"Kernaspekt: System-Monitoring und √úberwachung"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"monitoring-bereiche",title:"Monitoring-Bereiche",summary:"Kernaspekt: Monitoring-Bereiche"},{id:"monitoring-metriken",title:"Monitoring-Metriken",summary:"Kernaspekt: Monitoring-Metriken"},{id:"monitoring-tools",title:"Monitoring-Tools",summary:"Kernaspekt: Monitoring-Tools"},{id:"cpu-auslastung",title:"CPU-Auslastung",summary:"Kernaspekt: CPU-Auslastung"},{id:"http-requests",title:"HTTP-Requests",summary:"Kernaspekt: HTTP-Requests"},{id:"query-requests-pro-sekunde",title:"Query: Requests pro Sekunde",summary:"Kernaspekt: Query: Requests pro Sekunde"},{id:"alerting",title:"Alerting",summary:"Kernaspekt: Alerting"},{id:"prometheus-alert",title:"Prometheus Alert",summary:"Kernaspekt: Prometheus Alert"},{id:"health-checks",title:"Health Checks",summary:"Kernaspekt: Health Checks"},{id:"flask-beispiel",title:"Flask Beispiel",summary:"Kernaspekt: Flask Beispiel"},{id:"metriken-sammeln",title:"Metriken sammeln",summary:"Kernaspekt: Metriken sammeln"},{id:"counter-zahlt-ereignisse",title:"Counter: Z√§hlt Ereignisse",summary:"Kernaspekt: Counter: Z√§hlt Ereignisse"},{id:"histogram-misst-verteilung",title:"Histogram: Misst Verteilung",summary:"Kernaspekt: Histogram: Misst Verteilung"},{id:"gauge-aktueller-wert",title:"Gauge: Aktueller Wert",summary:"Kernaspekt: Gauge: Aktueller Wert"},{id:"verwendung",title:"Verwendung",summary:"Kernaspekt: Verwendung"},{id:"speicher",title:"Speicher",summary:"Kernaspekt: Speicher"},{id:"festplatte",title:"Festplatte",summary:"Kernaspekt: Festplatte"},{id:"netzwerk",title:"Netzwerk",summary:"Kernaspekt: Netzwerk"},{id:"logging-best-practices",title:"Logging Best Practices",summary:"Kernaspekt: Logging Best Practices"},{id:"strukturiertes-log",title:"Strukturiertes Log",summary:"Kernaspekt: Strukturiertes Log"},{id:"dashboards",title:"Dashboards",summary:"Kernaspekt: Dashboards"},{id:"sla-und-slo",title:"SLA und SLO",summary:"Kernaspekt: SLA und SLO"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],nv="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",tv="Automatisch erg√§nzt: Review erforderlich",iv=["bp-01-monitoring-einfuhrung-micro-1","bp-01-monitoring-monitoring-bereiche-micro-1","bp-01-monitoring-monitoring-metriken-micro-1","bp-01-monitoring-monitoring-tools-micro-1","bp-01-monitoring-alerting-micro-1","bp-01-monitoring-health-checks-micro-1","bp-01-monitoring-metriken-sammeln-micro-1","bp-01-monitoring-logging-best-practices-micro-1","bp-01-monitoring-dashboards-micro-1","bp-01-monitoring-sla-und-slo-micro-1","bp-01-monitoring-prufungsrelevante-aspekte-micro-1"],rv={id:Cz,title:Lz,description:Mz,category:Oz,subcategory:Nz,difficulty:Bz,examRelevance:xz,newIn2025:Vz,removedIn2025:Fz,important:Kz,estimatedTime:Wz,prerequisites:jz,tags:$z,content:Gz,codeExamples:Uz,relatedQuizzes:Hz,resources:Qz,lastUpdated:Zz,version:Jz,learningObjectives:Yz,summary:Xz,contentOutline:ev,accessibilityNotes:nv,editorNote:tv,microQuizzes:iv},sv="bp-02-cloud-models",av="Cloud-Modelle (SaaS, IaaS, PaaS)",ov="Cloud Computing Service-Modelle und ihre Anwendungsf√§lle",lv="BP-02",uv="Cloud Computing",cv="intermediate",dv="high",mv=!1,gv=!1,hv=!0,pv=45,fv=[],bv=["Cloud","SaaS","IaaS","PaaS","AWS","Azure"],kv=`# Cloud-Modelle (SaaS, IaaS, PaaS)

## Einf√ºhrung

Cloud Computing bietet IT-Ressourcen √ºber das Internet als Service an. Die drei Hauptmodelle sind IaaS, PaaS und SaaS, die sich im Grad der Abstraktion und Verwaltung unterscheiden.

<!-- micro-quiz:bp-02-cloud-models-einfuhrung-micro-1 -->
## Cloud Service-Modelle

### Verantwortlichkeiten

\`\`\`
On-Premises:  [Anwendung][Daten][Runtime][Middleware][OS][Virtualisierung][Server][Storage][Netzwerk]
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Kunde verwaltet ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

IaaS:         [Anwendung][Daten][Runtime][Middleware][OS]
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Kunde ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Provider ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

PaaS:         [Anwendung][Daten]
              ‚îî‚îÄ Kunde ‚îÄ‚îò‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Provider ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

SaaS:         
              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Provider ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

## IaaS (Infrastructure as a Service)
<!-- micro-quiz:bp-02-cloud-models-cloud-service-modelle-micro-1 -->


### Definition

Bereitstellung von virtualisierter Computing-Infrastruktur √ºber das Internet.

### Komponenten

- **Virtuelle Maschinen (VMs)**: Compute-Ressourcen
- **Storage**: Speicherplatz
- **Netzwerk**: Virtuelle Netzwerke, Load Balancer
- **Betriebssystem**: Vom Kunden installiert und verwaltet

### Beispiele

**AWS (Amazon Web Services):**
- EC2 (Elastic Compute Cloud): VMs
- S3 (Simple Storage Service): Object Storage
- VPC (Virtual Private Cloud): Netzwerk

**Microsoft Azure:**
- Azure Virtual Machines
- Azure Blob Storage
- Azure Virtual Network

**Google Cloud Platform:**
- Compute Engine
- Cloud Storage
- Virtual Private Cloud

### Anwendungsf√§lle

- Hosting von Webanwendungen
- Entwicklungs- und Testumgebungen
- Big Data Analytics
- Disaster Recovery
- Skalierbare Infrastruktur

### Vorteile

- **Skalierbarkeit**: Ressourcen nach Bedarf
- **Kosteneffizienz**: Pay-as-you-go
- **Flexibilit√§t**: Volle Kontrolle √ºber OS und Software
- **Keine Hardware-Investition**: Kein Kauf von Servern

### Nachteile

- **Verwaltungsaufwand**: OS, Updates, Sicherheit
- **Komplexit√§t**: Konfiguration und Wartung
- **Vendor Lock-in**: Abh√§ngigkeit vom Anbieter

### Beispiel: AWS EC2 Instance starten

\`\`\`bash
# AWS CLI
aws ec2 run-instances \\
  --image-id ami-0c55b159cbfafe1f0 \\
  --instance-type t2.micro \\
  --key-name my-key-pair \\
  --security-group-ids sg-12345678 \\
  --subnet-id subnet-12345678
\`\`\`

<!-- micro-quiz:bp-02-cloud-models-iaas-infrastructure-as-a-service-micro-1 -->
## PaaS (Platform as a Service)

### Definition

Bereitstellung einer Plattform f√ºr Entwicklung, Ausf√ºhrung und Verwaltung von Anwendungen.

### Komponenten

- **Runtime-Umgebung**: Java, Python, Node.js
- **Datenbanken**: Managed Databases
- **Middleware**: Message Queues, Caching
- **Entwicklungstools**: CI/CD, Monitoring

### Beispiele

**Heroku:**
- Einfaches Deployment
- Unterst√ºtzt viele Sprachen
- Add-ons f√ºr Datenbanken, Caching

**Google App Engine:**
- Automatische Skalierung
- Managed Services
- Integriertes Monitoring

**AWS Elastic Beanstalk:**
- Deployment von Web-Apps
- Automatische Skalierung
- Load Balancing

**Azure App Service:**
- Web Apps, Mobile Apps
- Continuous Deployment
- Auto-Scaling

### Anwendungsf√§lle

- Web-Anwendungen
- Mobile Backends
- API-Entwicklung
- Microservices
- Rapid Prototyping

### Vorteile

- **Schnelles Deployment**: Fokus auf Code
- **Automatische Skalierung**: Keine manuelle Konfiguration
- **Managed Services**: Datenbanken, Caching automatisch verwaltet
- **Entwicklerfreundlich**: Integrierte Tools

### Nachteile

- **Weniger Kontrolle**: Eingeschr√§nkte Konfiguration
- **Vendor Lock-in**: Plattformabh√§ngig
- **Kosten**: Kann teurer sein als IaaS

### Beispiel: Heroku Deployment

\`\`\`bash
# Heroku CLI
heroku create my-app
git push heroku main
heroku ps:scale web=1
heroku open
\`\`\`

## SaaS (Software as a Service)
<!-- micro-quiz:bp-02-cloud-models-paas-platform-as-a-service-micro-1 -->


### Definition

Bereitstellung von vollst√§ndigen Softwareanwendungen √ºber das Internet.

### Eigenschaften

- **Sofort nutzbar**: Keine Installation
- **Webbasiert**: Zugriff √ºber Browser
- **Multi-Tenant**: Mehrere Kunden auf gleicher Infrastruktur
- **Automatische Updates**: Vom Anbieter verwaltet

### Beispiele

**Produktivit√§t:**
- Microsoft 365 (Word, Excel, Outlook)
- Google Workspace (Docs, Sheets, Gmail)
- Slack (Team-Kommunikation)

**CRM:**
- Salesforce
- HubSpot

**Projektmanagement:**
- Jira
- Trello
- Asana

**Entwicklung:**
- GitHub
- GitLab
- Figma

### Anwendungsf√§lle

- E-Mail und Collaboration
- CRM und ERP
- Projektmanagement
- Buchhaltung
- HR-Management

### Vorteile

- **Keine Installation**: Sofort nutzbar
- **Keine Wartung**: Updates automatisch
- **Zugriff √ºberall**: Nur Internet erforderlich
- **Skalierbar**: Lizenzen nach Bedarf

### Nachteile

- **Keine Kontrolle**: Keine Anpassungen
- **Datenhoheit**: Daten beim Anbieter
- **Internetabh√§ngig**: Offline nicht nutzbar
- **Kosten**: Laufende Abonnements

<!-- micro-quiz:bp-02-cloud-models-saas-software-as-a-service-micro-1 -->
## Weitere Cloud-Modelle

### FaaS (Function as a Service) / Serverless

**Eigenschaften:**
- Code-Ausf√ºhrung ohne Server-Verwaltung
- Event-getrieben
- Pay-per-execution

**Beispiele:**
- AWS Lambda
- Azure Functions
- Google Cloud Functions

**Beispiel: AWS Lambda**
\`\`\`python
def lambda_handler(event, context):
    name = event.get('name', 'World')
    return {
        'statusCode': 200,
        'body': f'Hello {name}!'
    }
\`\`\`

### CaaS (Container as a Service)

**Eigenschaften:**
- Container-Orchestrierung
- Docker-basiert
- Kubernetes-kompatibel

**Beispiele:**
- AWS ECS/EKS
- Azure Kubernetes Service (AKS)
- Google Kubernetes Engine (GKE)

## Deployment-Modelle
<!-- micro-quiz:bp-02-cloud-models-weitere-cloud-modelle-micro-1 -->


### Public Cloud
- √ñffentlich verf√ºgbar
- Shared Infrastructure
- Beispiele: AWS, Azure, GCP

### Private Cloud
- Dedizierte Infrastruktur
- F√ºr eine Organisation
- On-Premises oder gehostet

### Hybrid Cloud
- Kombination aus Public und Private
- Daten-Synchronisierung
- Flexibilit√§t

### Multi-Cloud
- Mehrere Cloud-Anbieter
- Vermeidung von Vendor Lock-in
- Best-of-Breed-Ansatz

<!-- micro-quiz:bp-02-cloud-models-deployment-modelle-micro-1 -->
## Kostenmodelle

### Pay-as-you-go
- Bezahlung nach Nutzung
- Keine Vorabkosten
- Flexibel

### Reserved Instances
- Langfristige Verpflichtung (1-3 Jahre)
- Rabatte (bis zu 75%)
- Planbare Kosten

### Spot Instances
- Ungenutzte Kapazit√§t
- Sehr g√ºnstig (bis zu 90% Rabatt)
- Kann jederzeit beendet werden

## Sicherheit in der Cloud
<!-- micro-quiz:bp-02-cloud-models-kostenmodelle-micro-1 -->


### Shared Responsibility Model

**Provider verantwortlich f√ºr:**
- Physische Sicherheit
- Netzwerk-Infrastruktur
- Hypervisor

**Kunde verantwortlich f√ºr:**
- Daten
- Zugriffskontrolle
- Anwendungssicherheit
- Verschl√ºsselung

### Best Practices

- **Verschl√ºsselung**: Daten in Transit und at Rest
- **IAM**: Identity and Access Management
- **MFA**: Multi-Factor Authentication
- **Monitoring**: Logging und Alerting
- **Backups**: Regelm√§√üige Sicherungen

<!-- micro-quiz:bp-02-cloud-models-sicherheit-in-der-cloud-micro-1 -->
## Vergleich der Service-Modelle

| Merkmal | IaaS | PaaS | SaaS |
|---------|------|------|------|
| Kontrolle | Hoch | Mittel | Niedrig |
| Verwaltung | Kunde | Geteilt | Provider |
| Flexibilit√§t | Sehr hoch | Mittel | Niedrig |
| Komplexit√§t | Hoch | Mittel | Niedrig |
| Time-to-Market | Langsam | Schnell | Sofort |
| Kosten | Variabel | Mittel | Vorhersagbar |
| Beispiel | AWS EC2 | Heroku | Salesforce |

## Pr√ºfungsrelevante Aspekte
<!-- micro-quiz:bp-02-cloud-models-vergleich-der-service-modelle-micro-1 -->


- Service-Modelle (IaaS, PaaS, SaaS) unterscheiden
- Verantwortlichkeiten kennen
- Beispiele f√ºr jeden Service-Typ nennen
- Anwendungsf√§lle zuordnen
- Vor- und Nachteile benennen
- Deployment-Modelle (Public, Private, Hybrid) kennen
- Shared Responsibility Model verstehen


<!-- micro-quiz:bp-02-cloud-models-prufungsrelevante-aspekte-micro-1 -->`,zv=[{language:"python",code:`# AWS Lambda Function (FaaS/Serverless)
import json

def lambda_handler(event, context):
    """
    Beispiel f√ºr eine serverless Function.
    Wird nur bei Bedarf ausgef√ºhrt, keine Server-Verwaltung.
    """
    # Event-Daten verarbeiten
    user_id = event.get('user_id')
    action = event.get('action')
    
    # Business Logic
    result = process_action(user_id, action)
    
    # Response
    return {
        'statusCode': 200,
        'headers': {
            'Content-Type': 'application/json'
        },
        'body': json.dumps({
            'message': 'Success',
            'result': result
        })
    }

def process_action(user_id, action):
    # Simulierte Verarbeitung
    return f"User {user_id} performed {action}"`,explanation:"Beispiel f√ºr eine serverless Function (FaaS) in AWS Lambda",title:"AWS Lambda Function"}],vv=[],yv=[{title:"AWS Documentation",url:"https://docs.aws.amazon.com/",type:"documentation"},{title:"Microsoft Azure Documentation",url:"https://docs.microsoft.com/azure/",type:"documentation"}],Sv="2025-01-10T00:00:00Z",wv="1.0",Av=["Du kannst cloud erkl√§ren","Du kannst saaS erkl√§ren","Du kannst iaaS erkl√§ren","Du kannst paaS erkl√§ren","Du kannst aWS erkl√§ren"],Ev="Cloud Computing Service-Modelle und ihre Anwendungsf√§lle",_v=[{id:"cloud-modelle-saas-iaas-paas",title:"Cloud-Modelle (SaaS, IaaS, PaaS)",summary:"Kernaspekt: Cloud-Modelle (SaaS, IaaS, PaaS)"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"cloud-service-modelle",title:"Cloud Service-Modelle",summary:"Kernaspekt: Cloud Service-Modelle"},{id:"iaas-infrastructure-as-a-service",title:"IaaS (Infrastructure as a Service)",summary:"Kernaspekt: IaaS (Infrastructure as a Service)"},{id:"aws-cli",title:"AWS CLI",summary:"Kernaspekt: AWS CLI"},{id:"paas-platform-as-a-service",title:"PaaS (Platform as a Service)",summary:"Kernaspekt: PaaS (Platform as a Service)"},{id:"heroku-cli",title:"Heroku CLI",summary:"Kernaspekt: Heroku CLI"},{id:"saas-software-as-a-service",title:"SaaS (Software as a Service)",summary:"Kernaspekt: SaaS (Software as a Service)"},{id:"weitere-cloud-modelle",title:"Weitere Cloud-Modelle",summary:"Kernaspekt: Weitere Cloud-Modelle"},{id:"deployment-modelle",title:"Deployment-Modelle",summary:"Kernaspekt: Deployment-Modelle"},{id:"kostenmodelle",title:"Kostenmodelle",summary:"Kernaspekt: Kostenmodelle"},{id:"sicherheit-in-der-cloud",title:"Sicherheit in der Cloud",summary:"Kernaspekt: Sicherheit in der Cloud"},{id:"vergleich-der-service-modelle",title:"Vergleich der Service-Modelle",summary:"Kernaspekt: Vergleich der Service-Modelle"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],Dv="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",Pv="Automatisch erg√§nzt: Review erforderlich",Tv=["bp-02-cloud-models-einfuhrung-micro-1","bp-02-cloud-models-cloud-service-modelle-micro-1","bp-02-cloud-models-iaas-infrastructure-as-a-service-micro-1","bp-02-cloud-models-paas-platform-as-a-service-micro-1","bp-02-cloud-models-saas-software-as-a-service-micro-1","bp-02-cloud-models-weitere-cloud-modelle-micro-1","bp-02-cloud-models-deployment-modelle-micro-1","bp-02-cloud-models-kostenmodelle-micro-1","bp-02-cloud-models-sicherheit-in-der-cloud-micro-1","bp-02-cloud-models-vergleich-der-service-modelle-micro-1","bp-02-cloud-models-prufungsrelevante-aspekte-micro-1"],qv={id:sv,title:av,description:ov,category:lv,subcategory:uv,difficulty:cv,examRelevance:dv,newIn2025:mv,removedIn2025:gv,important:hv,estimatedTime:pv,prerequisites:fv,tags:bv,content:kv,codeExamples:zv,relatedQuizzes:vv,resources:yv,lastUpdated:Sv,version:wv,learningObjectives:Av,summary:Ev,contentOutline:_v,accessibilityNotes:Dv,editorNote:Pv,microQuizzes:Tv},Rv="bp-02-data-formats",Iv="Datenaustauschformate (XML, JSON, CSV)",Cv="Strukturierte Datenformate f√ºr Datenaustausch zwischen Systemen",Lv="BP-02",Mv="Datenaustausch",Ov="intermediate",Nv="high",Bv=!1,xv=!1,Vv=!0,Fv=50,Kv=[],Wv=["XML","JSON","CSV","Datenaustausch","API"],jv=`# Datenaustauschformate

## Einf√ºhrung

Datenaustauschformate erm√∂glichen die strukturierte √úbertragung von Daten zwischen verschiedenen Systemen, Anwendungen und Plattformen. Die wichtigsten Formate sind XML, JSON und CSV.

<!-- micro-quiz:bp-02-data-formats-einfuhrung-micro-1 -->
## JSON (JavaScript Object Notation)

### Eigenschaften

- **Leichtgewichtig**: Kompakt und einfach
- **Menschenlesbar**: Gut lesbar
- **Sprachunabh√§ngig**: Wird von allen modernen Sprachen unterst√ºtzt
- **Standard f√ºr REST APIs**: De-facto-Standard

### Syntax

\`\`\`json
{
  "user": {
    "id": 123,
    "name": "Max Mustermann",
    "email": "max@example.com",
    "active": true,
    "roles": ["admin", "user"],
    "address": {
      "street": "Hauptstra√üe 1",
      "city": "Berlin",
      "zip": "10115"
    },
    "created_at": "2025-01-10T10:00:00Z"
  }
}
\`\`\`

### Datentypen

- **String**: \`"text"\`
- **Number**: \`123\`, \`45.67\`
- **Boolean**: \`true\`, \`false\`
- **Null**: \`null\`
- **Array**: \`[1, 2, 3]\`
- **Object**: \`{"key": "value"}\`

### JSON in verschiedenen Sprachen

**JavaScript:**
\`\`\`javascript
// JSON parsen
const obj = JSON.parse('{"name": "Max"}');

// JSON erstellen
const json = JSON.stringify({name: "Max"});
\`\`\`

**Python:**
\`\`\`python
import json

# JSON parsen
obj = json.loads('{"name": "Max"}')

# JSON erstellen
json_str = json.dumps({"name": "Max"})
\`\`\`

**Java:**
\`\`\`java
import com.fasterxml.jackson.databind.ObjectMapper;

ObjectMapper mapper = new ObjectMapper();

// JSON parsen
User user = mapper.readValue(jsonString, User.class);

// JSON erstellen
String json = mapper.writeValueAsString(user);
\`\`\`

### Vorteile

- Kompakt und effizient
- Einfach zu parsen
- Native Unterst√ºtzung in JavaScript
- Gut f√ºr APIs geeignet

### Nachteile

- Keine Kommentare m√∂glich
- Keine Schema-Validierung (ohne zus√§tzliche Tools)
- Keine Namespaces

## XML (Extensible Markup Language)
<!-- micro-quiz:bp-02-data-formats-json-javascript-object-notation-micro-1 -->


### Eigenschaften

- **Erweiterbar**: Eigene Tags definierbar
- **Selbstbeschreibend**: Tags beschreiben Daten
- **Validierbar**: Mit DTD oder XML Schema
- **Namespaces**: Vermeidung von Namenskonflikten

### Syntax

\`\`\`xml
<?xml version="1.0" encoding="UTF-8"?>
<user>
  <id>123</id>
  <name>Max Mustermann</name>
  <email>max@example.com</email>
  <active>true</active>
  <roles>
    <role>admin</role>
    <role>user</role>
  </roles>
  <address>
    <street>Hauptstra√üe 1</street>
    <city>Berlin</city>
    <zip>10115</zip>
  </address>
  <created_at>2025-01-10T10:00:00Z</created_at>
</user>
\`\`\`

### Attribute vs. Elemente

\`\`\`xml
<!-- Attribute -->
<user id="123" name="Max" />

<!-- Elemente -->
<user>
  <id>123</id>
  <name>Max</name>
</user>
\`\`\`

### XML Schema (XSD)

\`\`\`xml
<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="user">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="id" type="xs:integer"/>
        <xs:element name="name" type="xs:string"/>
        <xs:element name="email" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>
\`\`\`

### XML in verschiedenen Sprachen

**Python:**
\`\`\`python
import xml.etree.ElementTree as ET

# XML parsen
tree = ET.parse('user.xml')
root = tree.getroot()

# Elemente finden
name = root.find('name').text

# XML erstellen
root = ET.Element('user')
ET.SubElement(root, 'name').text = 'Max'
tree = ET.ElementTree(root)
tree.write('output.xml')
\`\`\`

**Java:**
\`\`\`java
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

// XML parsen
DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
DocumentBuilder builder = factory.newDocumentBuilder();
Document doc = builder.parse(new File("user.xml"));

// Element lesen
String name = doc.getElementsByTagName("name").item(0).getTextContent();
\`\`\`

### Vorteile

- Schema-Validierung (XSD)
- Namespaces
- Kommentare m√∂glich
- Gut f√ºr komplexe Datenstrukturen
- XSLT f√ºr Transformationen

### Nachteile

- Verbose (viel Overhead)
- Komplexer zu parsen
- Gr√∂√üere Dateien

<!-- micro-quiz:bp-02-data-formats-xml-extensible-markup-language-micro-1 -->
## CSV (Comma-Separated Values)

### Eigenschaften

- **Einfach**: Nur Text mit Trennzeichen
- **Kompakt**: Sehr kleine Dateien
- **Tabellarisch**: F√ºr tabellarische Daten
- **Excel-kompatibel**: Einfacher Import/Export

### Syntax

\`\`\`csv
id,name,email,active
123,Max Mustermann,max@example.com,true
124,Anna Schmidt,anna@example.com,false
125,Tom M√ºller,tom@example.com,true
\`\`\`

### Varianten

**Semikolon-getrennt:**
\`\`\`csv
id;name;email
123;Max Mustermann;max@example.com
\`\`\`

**Tab-getrennt (TSV):**
\`\`\`csv
id	name	email
123	Max Mustermann	max@example.com
\`\`\`

### CSV in verschiedenen Sprachen

**Python:**
\`\`\`python
import csv

# CSV lesen
with open('users.csv', 'r') as file:
    reader = csv.DictReader(file)
    for row in reader:
        print(row['name'], row['email'])

# CSV schreiben
with open('output.csv', 'w', newline='') as file:
    writer = csv.DictWriter(file, fieldnames=['id', 'name', 'email'])
    writer.writeheader()
    writer.writerow({'id': 123, 'name': 'Max', 'email': 'max@example.com'})
\`\`\`

**Java:**
\`\`\`java
import java.io.*;

// CSV lesen
BufferedReader br = new BufferedReader(new FileReader("users.csv"));
String line;
while ((line = br.readLine()) != null) {
    String[] values = line.split(",");
    System.out.println(values[1]); // Name
}
br.close();
\`\`\`

### Sonderzeichen und Escaping

\`\`\`csv
id,name,description
123,"Mustermann, Max","Er sagte: ""Hallo"""
\`\`\`

- Kommas in Werten: Anf√ºhrungszeichen verwenden
- Anf√ºhrungszeichen in Werten: Verdoppeln

### Vorteile

- Sehr einfach
- Kompakt
- Excel-kompatibel
- Schnell zu verarbeiten

### Nachteile

- Nur tabellarische Daten
- Keine Hierarchien
- Keine Datentypen
- Probleme mit Sonderzeichen

## Format-Vergleich
<!-- micro-quiz:bp-02-data-formats-csv-comma-separated-values-micro-1 -->


| Merkmal | JSON | XML | CSV |
|---------|------|-----|-----|
| Lesbarkeit | Gut | Mittel | Sehr gut |
| Gr√∂√üe | Klein | Gro√ü | Sehr klein |
| Hierarchie | Ja | Ja | Nein |
| Schema | JSON Schema | XSD | Nein |
| Kommentare | Nein | Ja | Nein |
| Datentypen | Ja | Nein | Nein |
| API-Standard | Ja | Nein | Nein |
| Excel | Nein | Nein | Ja |

<!-- micro-quiz:bp-02-data-formats-format-vergleich-micro-1 -->
## Anwendungsf√§lle

### JSON
- REST APIs
- Web-Anwendungen
- Konfigurationsdateien
- NoSQL-Datenbanken

### XML
- SOAP Web Services
- Konfigurationsdateien (Maven, Spring)
- Dokumentenaustausch
- RSS/Atom Feeds

### CSV
- Datenexport/-import
- Excel-Integration
- Log-Dateien
- Einfache Datens√§tze

## Konvertierung
<!-- micro-quiz:bp-02-data-formats-anwendungsfalle-micro-1 -->


### JSON zu CSV (Python)

\`\`\`python
import json
import csv

# JSON laden
with open('users.json', 'r') as f:
    data = json.load(f)

# CSV schreiben
with open('users.csv', 'w', newline='') as f:
    writer = csv.DictWriter(f, fieldnames=['id', 'name', 'email'])
    writer.writeheader()
    for user in data['users']:
        writer.writerow(user)
\`\`\`

### XML zu JSON (Python)

\`\`\`python
import xml.etree.ElementTree as ET
import json

# XML parsen
tree = ET.parse('users.xml')
root = tree.getroot()

# In Dictionary konvertieren
users = []
for user in root.findall('user'):
    users.append({
        'id': int(user.find('id').text),
        'name': user.find('name').text,
        'email': user.find('email').text
    })

# JSON schreiben
with open('users.json', 'w') as f:
    json.dump({'users': users}, f, indent=2)
\`\`\`

<!-- micro-quiz:bp-02-data-formats-konvertierung-micro-1 -->
## Pr√ºfungsrelevante Aspekte

- Formate (JSON, XML, CSV) kennen und unterscheiden
- Syntax der Formate verstehen
- Vor- und Nachteile benennen
- Anwendungsf√§lle zuordnen
- Grundlegende Verarbeitung in Programmiersprachen
- Konvertierung zwischen Formaten


<!-- micro-quiz:bp-02-data-formats-prufungsrelevante-aspekte-micro-1 -->`,$v=[{language:"python",code:`import json
import csv

# Beispieldaten
users = [
    {"id": 1, "name": "Max", "email": "max@example.com"},
    {"id": 2, "name": "Anna", "email": "anna@example.com"}
]

# JSON schreiben
with open('users.json', 'w') as f:
    json.dump(users, f, indent=2)

# CSV schreiben
with open('users.csv', 'w', newline='') as f:
    writer = csv.DictWriter(f, fieldnames=['id', 'name', 'email'])
    writer.writeheader()
    writer.writerows(users)

print("Daten in JSON und CSV exportiert")`,explanation:"Beispiel f√ºr Export von Daten in JSON und CSV",title:"Datenexport in verschiedene Formate"}],Gv=[],Uv=[{title:"JSON Specification",url:"https://www.json.org/",type:"documentation"},{title:"W3C XML Specification",url:"https://www.w3.org/XML/",type:"documentation"}],Hv="2025-01-10T00:00:00Z",Qv="1.0",Zv=["Du kannst xML erkl√§ren","Du kannst jSON erkl√§ren","Du kannst cSV erkl√§ren","Du kannst datenaustausch erkl√§ren","Du kannst aPI erkl√§ren"],Jv="Strukturierte Datenformate f√ºr Datenaustausch zwischen Systemen",Yv=[{id:"datenaustauschformate",title:"Datenaustauschformate",summary:"Kernaspekt: Datenaustauschformate"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"json-javascript-object-notation",title:"JSON (JavaScript Object Notation)",summary:"Kernaspekt: JSON (JavaScript Object Notation)"},{id:"json-parsen",title:"JSON parsen",summary:"Kernaspekt: JSON parsen"},{id:"json-erstellen",title:"JSON erstellen",summary:"Kernaspekt: JSON erstellen"},{id:"xml-extensible-markup-language",title:"XML (Extensible Markup Language)",summary:"Kernaspekt: XML (Extensible Markup Language)"},{id:"xml-parsen",title:"XML parsen",summary:"Kernaspekt: XML parsen"},{id:"elemente-finden",title:"Elemente finden",summary:"Kernaspekt: Elemente finden"},{id:"xml-erstellen",title:"XML erstellen",summary:"Kernaspekt: XML erstellen"},{id:"csv-comma-separated-values",title:"CSV (Comma-Separated Values)",summary:"Kernaspekt: CSV (Comma-Separated Values)"},{id:"csv-lesen",title:"CSV lesen",summary:"Kernaspekt: CSV lesen"},{id:"csv-schreiben",title:"CSV schreiben",summary:"Kernaspekt: CSV schreiben"},{id:"format-vergleich",title:"Format-Vergleich",summary:"Kernaspekt: Format-Vergleich"},{id:"anwendungsfalle",title:"Anwendungsf√§lle",summary:"Kernaspekt: Anwendungsf√§lle"},{id:"konvertierung",title:"Konvertierung",summary:"Kernaspekt: Konvertierung"},{id:"json-laden",title:"JSON laden",summary:"Kernaspekt: JSON laden"},{id:"in-dictionary-konvertieren",title:"In Dictionary konvertieren",summary:"Kernaspekt: In Dictionary konvertieren"},{id:"json-schreiben",title:"JSON schreiben",summary:"Kernaspekt: JSON schreiben"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],Xv="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",ey="Automatisch erg√§nzt: Review erforderlich",ny=["bp-02-data-formats-einfuhrung-micro-1","bp-02-data-formats-json-javascript-object-notation-micro-1","bp-02-data-formats-xml-extensible-markup-language-micro-1","bp-02-data-formats-csv-comma-separated-values-micro-1","bp-02-data-formats-format-vergleich-micro-1","bp-02-data-formats-anwendungsfalle-micro-1","bp-02-data-formats-konvertierung-micro-1","bp-02-data-formats-prufungsrelevante-aspekte-micro-1"],ty={id:Rv,title:Iv,description:Cv,category:Lv,subcategory:Mv,difficulty:Ov,examRelevance:Nv,newIn2025:Bv,removedIn2025:xv,important:Vv,estimatedTime:Fv,prerequisites:Kv,tags:Wv,content:jv,codeExamples:$v,relatedQuizzes:Gv,resources:Uv,lastUpdated:Hv,version:Qv,learningObjectives:Zv,summary:Jv,contentOutline:Yv,accessibilityNotes:Xv,editorNote:ey,microQuizzes:ny},iy="bp-02-nas-san",ry="Network Attached Storage (NAS) und Storage Area Network (SAN)",sy="Verstehe die Unterschiede zwischen NAS und SAN, lerne ihre Anwendungsf√§lle, Protokolle und Architektur kennen.",ay="BP-02",oy="Sicherstellen der Qualit√§t von Softwareanwendungen - Speicherl√∂sungen",ly="intermediate",uy="high",cy=!0,dy=!1,my=!0,gy=40,hy=[],py=["nas","san","storage","netzwerkspeicher","iscsi","nfs","smb","fibre channel"],fy=`# Network Attached Storage (NAS) und Storage Area Network (SAN)

## √úbersicht

NAS und SAN sind zwei verschiedene Ans√§tze f√ºr Netzwerkspeicher in Unternehmensumgebungen. Beide erm√∂glichen zentralisierte Datenspeicherung, unterscheiden sich aber grundlegend in Architektur, Protokollen und Anwendungsf√§llen.

<!-- micro-quiz:bp-02-nas-san-ubersicht-micro-1 -->
## Network Attached Storage (NAS)

### Was ist NAS?

NAS ist ein dediziertes Speicherger√§t, das √ºber ein Standard-Netzwerk (Ethernet) verbunden ist und **dateibasierten** Zugriff bietet.

### Hauptmerkmale

- **File-Level Storage**: Zugriff auf Dateiebene
- **Ethernet-basiert**: Verwendet Standard-Netzwerkinfrastruktur
- **Einfache Einrichtung**: Plug-and-Play, webbasierte Verwaltung
- **Protokolle**: NFS, SMB/CIFS, AFP, FTP
- **Betriebssystem**: Eigenes OS (oft Linux-basiert)

### NAS-Architektur

\`\`\`
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ         Clients (Windows, Mac, Linux)   ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
               ‚îÇ Ethernet (TCP/IP)
               ‚îÇ SMB/NFS/AFP
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ           NAS-Ger√§t                     ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê   ‚îÇ
‚îÇ  ‚îÇ  NAS-Betriebssystem             ‚îÇ   ‚îÇ
‚îÇ  ‚îÇ  (File System Management)       ‚îÇ   ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò   ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê   ‚îÇ
‚îÇ  ‚îÇ  RAID-Controller                ‚îÇ   ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò   ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚îê             ‚îÇ
‚îÇ  ‚îÇHDD‚îÇ ‚îÇHDD‚îÇ ‚îÇHDD‚îÇ ‚îÇHDD‚îÇ             ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îò             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

### NAS-Protokolle

#### 1. NFS (Network File System)
- **Entwickelt von**: Sun Microsystems
- **Prim√§r f√ºr**: Unix/Linux-Systeme
- **Vorteile**: Hohe Performance, native Linux-Integration
- **Port**: 2049 (NFSv4)

#### 2. SMB/CIFS (Server Message Block)
- **Entwickelt von**: Microsoft
- **Prim√§r f√ºr**: Windows-Systeme
- **Versionen**: SMB 1.0, 2.0, 3.0, 3.1.1
- **Port**: 445
- **Features**: Verschl√ºsselung (SMB 3.0+), Multichannel

#### 3. AFP (Apple Filing Protocol)
- **Entwickelt von**: Apple
- **Prim√§r f√ºr**: macOS
- **Status**: Veraltet, ersetzt durch SMB

### Vorteile von NAS

‚úÖ **Einfache Einrichtung**: Schnelle Installation und Konfiguration
‚úÖ **Kosteng√ºnstig**: Niedrigere Anschaffungskosten als SAN
‚úÖ **Flexibel**: Unterst√ºtzt verschiedene Betriebssysteme
‚úÖ **File Sharing**: Ideal f√ºr gemeinsamen Dateizugriff
‚úÖ **Skalierbar**: Einfache Kapazit√§tserweiterung
‚úÖ **Zusatzfunktionen**: Backup, Snapshots, Replikation

### Nachteile von NAS

‚ùå **Performance**: Langsamer als SAN bei hohen I/O-Anforderungen
‚ùå **Netzwerk-Overhead**: Abh√§ngig von Netzwerkbandbreite
‚ùå **Latenz**: H√∂here Latenz als DAS oder SAN
‚ùå **Protokoll-Overhead**: File-Level-Protokolle haben mehr Overhead

## Storage Area Network (SAN)
<!-- micro-quiz:bp-02-nas-san-network-attached-storage-nas-micro-1 -->


### Was ist SAN?

SAN ist ein dediziertes Hochgeschwindigkeitsnetzwerk, das **blockbasierten** Zugriff auf Speicher bietet.

### Hauptmerkmale

- **Block-Level Storage**: Zugriff auf Blockebene
- **Dediziertes Netzwerk**: Separates Storage-Netzwerk
- **Hohe Performance**: Niedrige Latenz, hoher Durchsatz
- **Protokolle**: Fibre Channel, iSCSI, FCoE
- **Erscheint als lokale Disk**: Server sieht SAN-LUN als lokales Laufwerk

### SAN-Architektur

\`\`\`
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Server 1 ‚îÇ  ‚îÇ Server 2 ‚îÇ  ‚îÇ Server 3 ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
     ‚îÇ HBA        ‚îÇ HBA        ‚îÇ HBA
     ‚îÇ            ‚îÇ            ‚îÇ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ      Fibre Channel Switch          ‚îÇ
‚îÇ      (SAN Fabric)                  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
     ‚îÇ            ‚îÇ            ‚îÇ
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Storage  ‚îÇ ‚îÇ Storage  ‚îÇ ‚îÇ Storage  ‚îÇ
‚îÇ Array 1  ‚îÇ ‚îÇ Array 2  ‚îÇ ‚îÇ Array 3  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

### SAN-Protokolle

#### 1. Fibre Channel (FC)
- **Geschwindigkeit**: 8, 16, 32, 64 Gbit/s
- **Topologie**: Point-to-Point, Arbitrated Loop, Switched Fabric
- **Vorteile**: Sehr hohe Performance, niedrige Latenz
- **Nachteile**: Teuer, spezielle Hardware erforderlich
- **Komponenten**: HBA (Host Bus Adapter), FC-Switches

#### 2. iSCSI (Internet Small Computer System Interface)
- **Basis**: SCSI √ºber TCP/IP
- **Geschwindigkeit**: 1, 10, 25, 40 Gbit/s Ethernet
- **Vorteile**: Kosteng√ºnstiger als FC, Standard-Ethernet
- **Nachteile**: H√∂here CPU-Last, h√∂here Latenz als FC
- **Port**: 3260

#### 3. FCoE (Fibre Channel over Ethernet)
- **Basis**: Fibre Channel √ºber Ethernet
- **Geschwindigkeit**: 10, 40, 100 Gbit/s
- **Vorteile**: Konvergenz von LAN und SAN
- **Nachteile**: Spezielle Switches erforderlich

### Vorteile von SAN

‚úÖ **Hohe Performance**: Sehr niedrige Latenz, hoher Durchsatz
‚úÖ **Skalierbarkeit**: Gro√üe Speicherkapazit√§ten
‚úÖ **Zentralisierung**: Zentrale Speicherverwaltung
‚úÖ **Flexibilit√§t**: Dynamische Zuweisung von Storage
‚úÖ **Hochverf√ºgbarkeit**: Redundante Pfade, Failover
‚úÖ **Snapshots und Replikation**: Enterprise-Features

### Nachteile von SAN

‚ùå **Kosten**: Hohe Anschaffungs- und Betriebskosten
‚ùå **Komplexit√§t**: Erfordert spezialisiertes Know-how
‚ùå **Hardware**: Spezielle HBAs und Switches erforderlich
‚ùå **Wartung**: Aufw√§ndige Administration

<!-- micro-quiz:bp-02-nas-san-storage-area-network-san-micro-1 -->
## NAS vs. SAN - Detaillierter Vergleich

| Merkmal | NAS | SAN |
|---------|-----|-----|
| **Zugriff** | File-Level | Block-Level |
| **Protokolle** | NFS, SMB/CIFS, AFP | FC, iSCSI, FCoE |
| **Netzwerk** | Standard Ethernet | Dediziertes Storage-Netzwerk |
| **Performance** | Gut f√ºr File Sharing | Exzellent f√ºr Datenbanken |
| **Latenz** | H√∂her (ms) | Sehr niedrig (Œºs) |
| **Kosten** | Niedrig bis mittel | Hoch |
| **Komplexit√§t** | Einfach | Komplex |
| **Skalierbarkeit** | Gut | Exzellent |
| **Anwendungsf√§lle** | File Sharing, Backup | Datenbanken, VMs |
| **Verwaltung** | Einfach | Komplex |
| **Erscheint als** | Netzlaufwerk | Lokale Disk |

## Anwendungsf√§lle
<!-- micro-quiz:bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1 -->


### Wann NAS verwenden?

1. **File Sharing**: Gemeinsamer Zugriff auf Dokumente
2. **Home Directories**: Benutzer-Home-Verzeichnisse
3. **Backup-Ziel**: Zentrale Backup-L√∂sung
4. **Media Streaming**: Video/Audio-Streaming
5. **Kleine bis mittlere Unternehmen**: Kosteng√ºnstige L√∂sung
6. **Abteilungs-Storage**: Abteilungsspezifische Dateiablage

**Beispiel-Szenario**:
\`\`\`
Marketing-Abteilung ben√∂tigt gemeinsamen Zugriff auf:
- Pr√§sentationen
- Bilder und Videos
- Kampagnen-Dokumente
‚Üí NAS ist ideal
\`\`\`

### Wann SAN verwenden?

1. **Datenbanken**: SQL Server, Oracle, MySQL
2. **Virtualisierung**: VMware, Hyper-V, KVM
3. **High-Performance Computing**: Wissenschaftliche Anwendungen
4. **Transaktionssysteme**: ERP, CRM
5. **Email-Server**: Exchange, Lotus Notes
6. **Boot from SAN**: Diskless Servers

**Beispiel-Szenario**:
\`\`\`
Unternehmen betreibt:
- 50 virtuelle Maschinen
- SQL-Datenbank mit hohem I/O
- 24/7 Verf√ºgbarkeit erforderlich
‚Üí SAN ist erforderlich
\`\`\`

<!-- micro-quiz:bp-02-nas-san-anwendungsfalle-micro-1 -->
## Hybrid-Ans√§tze

### Unified Storage

Moderne Storage-Systeme bieten oft **beide** Zugriffsmethoden:
- NAS-Protokolle (NFS, SMB) f√ºr File Sharing
- SAN-Protokolle (iSCSI, FC) f√ºr Block Storage
- Gemeinsame Verwaltung

### Beispiel: NetApp, Dell EMC, HPE

\`\`\`
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ    Unified Storage System           ‚îÇ
‚îÇ                                     ‚îÇ
‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê      ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê   ‚îÇ
‚îÇ  ‚îÇ   NAS    ‚îÇ      ‚îÇ   SAN    ‚îÇ   ‚îÇ
‚îÇ  ‚îÇ (Files)  ‚îÇ      ‚îÇ (Blocks) ‚îÇ   ‚îÇ
‚îÇ  ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò      ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò   ‚îÇ
‚îÇ         ‚îÇ                ‚îÇ         ‚îÇ
‚îÇ         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò         ‚îÇ
‚îÇ                  ‚îÇ                 ‚îÇ
‚îÇ         ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê        ‚îÇ
‚îÇ         ‚îÇ  Storage Pool   ‚îÇ        ‚îÇ
‚îÇ         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò        ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

## Performance-Vergleich
<!-- micro-quiz:bp-02-nas-san-hybrid-ansatze-micro-1 -->


### Durchsatz

| Technologie | Typischer Durchsatz |
|-------------|--------------------|
| **NAS (1 GbE)** | ~100-120 MB/s |
| **NAS (10 GbE)** | ~1000-1200 MB/s |
| **iSCSI (10 GbE)** | ~1000-1200 MB/s |
| **Fibre Channel (16 Gbit/s)** | ~1600 MB/s |
| **Fibre Channel (32 Gbit/s)** | ~3200 MB/s |

### Latenz

| Technologie | Typische Latenz |
|-------------|----------------|
| **NAS** | 1-5 ms |
| **iSCSI** | 0.5-2 ms |
| **Fibre Channel** | 0.1-0.5 ms |
| **Lokale SSD** | 0.05-0.1 ms |

<!-- micro-quiz:bp-02-nas-san-performance-vergleich-micro-1 -->
## Konfigurationsbeispiele

### NAS-Konfiguration (Linux NFS-Server)

\`\`\`bash
# NFS-Server installieren
sudo apt-get install nfs-kernel-server

# Export-Verzeichnis erstellen
sudo mkdir -p /export/data
sudo chown nobody:nogroup /export/data

# /etc/exports konfigurieren
echo "/export/data 192.168.1.0/24(rw,sync,no_subtree_check)" | sudo tee -a /etc/exports

# NFS-Server neu starten
sudo systemctl restart nfs-kernel-server

# Client-seitig mounten
sudo mount -t nfs 192.168.1.100:/export/data /mnt/nas
\`\`\`

### iSCSI-Konfiguration (Linux)

\`\`\`bash
# iSCSI-Target (Server-Seite)
sudo apt-get install tgt

# Target erstellen
sudo tgtadm --lld iscsi --op new --mode target --tid 1 \\
  -T iqn.2025-01.com.company:storage.target1

# LUN hinzuf√ºgen
sudo tgtadm --lld iscsi --op new --mode logicalunit --tid 1 \\
  --lun 1 -b /dev/sdb

# Zugriff erlauben
sudo tgtadm --lld iscsi --op bind --mode target --tid 1 \\
  -I 192.168.1.0/24

# iSCSI-Initiator (Client-Seite)
sudo apt-get install open-iscsi

# Target entdecken
sudo iscsiadm -m discovery -t st -p 192.168.1.100

# Mit Target verbinden
sudo iscsiadm -m node --targetname iqn.2025-01.com.company:storage.target1 \\
  --portal 192.168.1.100 --login

# Disk ist nun als /dev/sdX verf√ºgbar
lsblk
\`\`\`

## Best Practices
<!-- micro-quiz:bp-02-nas-san-konfigurationsbeispiele-micro-1 -->


### NAS Best Practices

1. **RAID verwenden**: RAID 5, 6 oder 10 f√ºr Redundanz
2. **Regelm√§√üige Backups**: 3-2-1 Backup-Regel
3. **Snapshots**: Regelm√§√üige Snapshots f√ºr schnelle Wiederherstellung
4. **Netzwerk-Segmentierung**: Separates VLAN f√ºr Storage-Traffic
5. **Monitoring**: √úberwachung von Kapazit√§t und Performance
6. **Updates**: Regelm√§√üige Firmware-Updates

### SAN Best Practices

1. **Redundante Pfade**: Multipathing f√ºr Hochverf√ºgbarkeit
2. **Zoning**: FC-Zoning f√ºr Sicherheit und Performance
3. **LUN Masking**: Zugriffskontrolle auf LUN-Ebene
4. **Performance-Monitoring**: Latenz und IOPS √ºberwachen
5. **Kapazit√§tsplanung**: Proaktive Kapazit√§tsverwaltung
6. **Disaster Recovery**: Replikation zu zweitem Standort

<!-- micro-quiz:bp-02-nas-san-best-practices-micro-1 -->
## Zusammenfassung

**NAS (Network Attached Storage)**:
- File-Level Storage √ºber Ethernet
- Protokolle: NFS, SMB/CIFS
- Ideal f√ºr: File Sharing, Backup, kleine/mittlere Unternehmen
- Vorteile: Einfach, kosteng√ºnstig, flexibel

**SAN (Storage Area Network)**:
- Block-Level Storage √ºber dediziertes Netzwerk
- Protokolle: Fibre Channel, iSCSI, FCoE
- Ideal f√ºr: Datenbanken, Virtualisierung, High-Performance
- Vorteile: Sehr hohe Performance, Skalierbarkeit, Enterprise-Features

**Entscheidungskriterien**:
- **Performance-Anforderungen**: SAN f√ºr hohe I/O, NAS f√ºr File Sharing
- **Budget**: NAS kosteng√ºnstiger
- **Komplexit√§t**: NAS einfacher zu verwalten
- **Anwendungsfall**: Datenbanken ‚Üí SAN, Dokumente ‚Üí NAS

F√ºr die IHK-Pr√ºfung wichtig:
- Verstehe den Unterschied zwischen File-Level (NAS) und Block-Level (SAN)
- Kenne die Protokolle (NFS, SMB f√ºr NAS; FC, iSCSI f√ºr SAN)
- Verstehe Anwendungsf√§lle und Vor-/Nachteile
- Kenne Performance-Unterschiede



<!-- micro-quiz:bp-02-nas-san-quiz -->
<!-- micro-quiz:bp-02-nas-san-zusammenfassung-micro-1 -->
`,by=[{language:"bash",title:"NFS-Server einrichten (Linux)",code:`# NFS-Server installieren
sudo apt-get update
sudo apt-get install nfs-kernel-server

# Export-Verzeichnis erstellen
sudo mkdir -p /export/shared
sudo mkdir -p /export/backup

# Berechtigungen setzen
sudo chown nobody:nogroup /export/shared
sudo chmod 755 /export/shared

# /etc/exports konfigurieren
sudo nano /etc/exports
# Inhalt:
# /export/shared 192.168.1.0/24(rw,sync,no_subtree_check,no_root_squash)
# /export/backup 192.168.1.50(rw,sync,no_subtree_check)

# Exports aktivieren
sudo exportfs -a

# NFS-Server neu starten
sudo systemctl restart nfs-kernel-server

# Status pr√ºfen
sudo systemctl status nfs-kernel-server
sudo exportfs -v

# Client-seitig mounten
sudo apt-get install nfs-common
sudo mkdir -p /mnt/shared
sudo mount -t nfs 192.168.1.100:/export/shared /mnt/shared

# Permanent mounten (/etc/fstab)
echo "192.168.1.100:/export/shared /mnt/shared nfs defaults 0 0" | sudo tee -a /etc/fstab`,explanation:"Komplette NFS-Server-Einrichtung unter Linux. Zeigt Installation, Konfiguration, Export-Freigabe und Client-Mount."},{language:"bash",title:"iSCSI-Target und Initiator konfigurieren",code:`# === iSCSI-Target (Server) ===

# TGT installieren
sudo apt-get install tgt

# Target erstellen
sudo tgtadm --lld iscsi --op new --mode target --tid 1 \\
  -T iqn.2025-01.com.company:storage.lun1

# Backing Store (LUN) hinzuf√ºgen
# Option 1: Blockdevice verwenden
sudo tgtadm --lld iscsi --op new --mode logicalunit --tid 1 \\
  --lun 1 -b /dev/sdb

# Option 2: Image-Datei verwenden
sudo dd if=/dev/zero of=/storage/lun1.img bs=1M count=10240  # 10GB
sudo tgtadm --lld iscsi --op new --mode logicalunit --tid 1 \\
  --lun 1 -b /storage/lun1.img

# Zugriff f√ºr Initiator erlauben
sudo tgtadm --lld iscsi --op bind --mode target --tid 1 \\
  -I 192.168.1.0/24

# CHAP-Authentifizierung (optional)
sudo tgtadm --lld iscsi --op bind --mode account --tid 1 \\
  --user username --password secretpassword

# Konfiguration anzeigen
sudo tgtadm --lld iscsi --op show --mode target

# === iSCSI-Initiator (Client) ===

# Open-iSCSI installieren
sudo apt-get install open-iscsi

# Initiator-Name setzen (optional)
sudo nano /etc/iscsi/initiatorname.iscsi
# InitiatorName=iqn.2025-01.com.company:client1

# Target entdecken
sudo iscsiadm -m discovery -t sendtargets -p 192.168.1.100

# Mit Target verbinden
sudo iscsiadm -m node --targetname iqn.2025-01.com.company:storage.lun1 \\
  --portal 192.168.1.100:3260 --login

# Verbundene Sessions anzeigen
sudo iscsiadm -m session

# Neue Disk finden
lsblk
sudo fdisk -l

# Disk formatieren und mounten
sudo mkfs.ext4 /dev/sdc
sudo mkdir -p /mnt/iscsi
sudo mount /dev/sdc /mnt/iscsi

# Automatisch beim Boot verbinden
sudo iscsiadm -m node --targetname iqn.2025-01.com.company:storage.lun1 \\
  --portal 192.168.1.100:3260 --op update -n node.startup -v automatic`,explanation:"Vollst√§ndige iSCSI-Konfiguration f√ºr Target (Server) und Initiator (Client). Zeigt LUN-Erstellung, Zugriffskontrolle und Client-Verbindung."},{language:"python",title:"NAS-Performance-Monitoring",code:`import os
import time
import psutil
from datetime import datetime

class NASMonitor:
    def __init__(self, mount_point):
        self.mount_point = mount_point
        
    def get_storage_info(self):
        """Speicherinformationen abrufen"""
        usage = psutil.disk_usage(self.mount_point)
        
        return {
            'total_gb': usage.total / (1024**3),
            'used_gb': usage.used / (1024**3),
            'free_gb': usage.free / (1024**3),
            'percent_used': usage.percent
        }
    
    def measure_read_performance(self, file_size_mb=100):
        """Lese-Performance messen"""
        test_file = os.path.join(self.mount_point, 'perf_test_read.dat')
        
        # Testdatei erstellen
        data = os.urandom(file_size_mb * 1024 * 1024)
        with open(test_file, 'wb') as f:
            f.write(data)
        
        # Lese-Performance messen
        start_time = time.time()
        with open(test_file, 'rb') as f:
            _ = f.read()
        end_time = time.time()
        
        # Aufr√§umen
        os.remove(test_file)
        
        duration = end_time - start_time
        throughput_mbps = file_size_mb / duration
        
        return {
            'duration_seconds': duration,
            'throughput_mbps': throughput_mbps,
            'file_size_mb': file_size_mb
        }
    
    def measure_write_performance(self, file_size_mb=100):
        """Schreib-Performance messen"""
        test_file = os.path.join(self.mount_point, 'perf_test_write.dat')
        data = os.urandom(file_size_mb * 1024 * 1024)
        
        start_time = time.time()
        with open(test_file, 'wb') as f:
            f.write(data)
            f.flush()
            os.fsync(f.fileno())  # Sicherstellen, dass Daten geschrieben wurden
        end_time = time.time()
        
        # Aufr√§umen
        os.remove(test_file)
        
        duration = end_time - start_time
        throughput_mbps = file_size_mb / duration
        
        return {
            'duration_seconds': duration,
            'throughput_mbps': throughput_mbps,
            'file_size_mb': file_size_mb
        }
    
    def measure_latency(self, iterations=100):
        """Latenz messen (kleine Dateizugriffe)"""
        test_file = os.path.join(self.mount_point, 'latency_test.dat')
        latencies = []
        
        for i in range(iterations):
            # Kleine Datei schreiben
            start = time.time()
            with open(test_file, 'w') as f:
                f.write('test')
                f.flush()
                os.fsync(f.fileno())
            latency = (time.time() - start) * 1000  # ms
            latencies.append(latency)
        
        # Aufr√§umen
        if os.path.exists(test_file):
            os.remove(test_file)
        
        return {
            'avg_latency_ms': sum(latencies) / len(latencies),
            'min_latency_ms': min(latencies),
            'max_latency_ms': max(latencies),
            'iterations': iterations
        }
    
    def generate_report(self):
        """Vollst√§ndigen Performance-Report erstellen"""
        print(f"\\n=== NAS Performance Report ===")
        print(f"Mount Point: {self.mount_point}")
        print(f"Timestamp: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"\\n--- Storage Info ---")
        
        storage = self.get_storage_info()
        print(f"Total: {storage['total_gb']:.2f} GB")
        print(f"Used: {storage['used_gb']:.2f} GB ({storage['percent_used']:.1f}%)")
        print(f"Free: {storage['free_gb']:.2f} GB")
        
        print(f"\\n--- Read Performance ---")
        read_perf = self.measure_read_performance(100)
        print(f"Throughput: {read_perf['throughput_mbps']:.2f} MB/s")
        print(f"Duration: {read_perf['duration_seconds']:.2f} seconds")
        
        print(f"\\n--- Write Performance ---")
        write_perf = self.measure_write_performance(100)
        print(f"Throughput: {write_perf['throughput_mbps']:.2f} MB/s")
        print(f"Duration: {write_perf['duration_seconds']:.2f} seconds")
        
        print(f"\\n--- Latency ---")
        latency = self.measure_latency(50)
        print(f"Average: {latency['avg_latency_ms']:.2f} ms")
        print(f"Min: {latency['min_latency_ms']:.2f} ms")
        print(f"Max: {latency['max_latency_ms']:.2f} ms")
        
        print(f"\\n=== End of Report ===\\n")

# Verwendung
if __name__ == "__main__":
    # NAS-Mount-Point
    nas_path = "/mnt/nas"
    
    if os.path.exists(nas_path):
        monitor = NASMonitor(nas_path)
        monitor.generate_report()
    else:
        print(f"Mount point {nas_path} nicht gefunden!")`,explanation:"Python-Tool zur NAS-Performance-√úberwachung. Misst Durchsatz, Latenz und Speicherauslastung."}],ky=["bp-02-nas-san-quiz"],zy=[{title:"NFS Protocol Specification (RFC 5661)",url:"https://tools.ietf.org/html/rfc5661",type:"documentation"},{title:"iSCSI Protocol Specification (RFC 7143)",url:"https://tools.ietf.org/html/rfc7143",type:"documentation"},{title:"Fibre Channel Standards",url:"https://www.fibrechannel.org/",type:"documentation"}],vy="2025-01-05T10:00:00Z",yy="1.0",Sy=["Du kannst nas erkl√§ren","Du kannst san erkl√§ren","Du kannst storage erkl√§ren","Du kannst netzwerkspeicher erkl√§ren","Du kannst iscsi erkl√§ren"],wy="Verstehe die Unterschiede zwischen NAS und SAN, lerne ihre Anwendungsf√§lle, Protokolle und Architektur kennen.",Ay=[{id:"network-attached-storage-nas-und-storage-area-netw",title:"Network Attached Storage (NAS) und Storage Area Network (SAN)",summary:"Kernaspekt: Network Attached Storage (NAS) und Storage Area Network (SAN)"},{id:"ubersicht",title:"√úbersicht",summary:"Kernaspekt: √úbersicht"},{id:"network-attached-storage-nas",title:"Network Attached Storage (NAS)",summary:"Kernaspekt: Network Attached Storage (NAS)"},{id:"storage-area-network-san",title:"Storage Area Network (SAN)",summary:"Kernaspekt: Storage Area Network (SAN)"},{id:"nas-vs-san---detaillierter-vergleich",title:"NAS vs. SAN - Detaillierter Vergleich",summary:"Kernaspekt: NAS vs. SAN - Detaillierter Vergleich"},{id:"anwendungsfalle",title:"Anwendungsf√§lle",summary:"Kernaspekt: Anwendungsf√§lle"},{id:"hybrid-ansatze",title:"Hybrid-Ans√§tze",summary:"Kernaspekt: Hybrid-Ans√§tze"},{id:"performance-vergleich",title:"Performance-Vergleich",summary:"Kernaspekt: Performance-Vergleich"},{id:"konfigurationsbeispiele",title:"Konfigurationsbeispiele",summary:"Kernaspekt: Konfigurationsbeispiele"},{id:"nfs-server-installieren",title:"NFS-Server installieren",summary:"Kernaspekt: NFS-Server installieren"},{id:"export-verzeichnis-erstellen",title:"Export-Verzeichnis erstellen",summary:"Kernaspekt: Export-Verzeichnis erstellen"},{id:"etcexports-konfigurieren",title:"/etc/exports konfigurieren",summary:"Kernaspekt: /etc/exports konfigurieren"},{id:"nfs-server-neu-starten",title:"NFS-Server neu starten",summary:"Kernaspekt: NFS-Server neu starten"},{id:"client-seitig-mounten",title:"Client-seitig mounten",summary:"Kernaspekt: Client-seitig mounten"},{id:"iscsi-target-server-seite",title:"iSCSI-Target (Server-Seite)",summary:"Kernaspekt: iSCSI-Target (Server-Seite)"},{id:"target-erstellen",title:"Target erstellen",summary:"Kernaspekt: Target erstellen"},{id:"lun-hinzufugen",title:"LUN hinzuf√ºgen",summary:"Kernaspekt: LUN hinzuf√ºgen"},{id:"zugriff-erlauben",title:"Zugriff erlauben",summary:"Kernaspekt: Zugriff erlauben"},{id:"iscsi-initiator-client-seite",title:"iSCSI-Initiator (Client-Seite)",summary:"Kernaspekt: iSCSI-Initiator (Client-Seite)"},{id:"target-entdecken",title:"Target entdecken",summary:"Kernaspekt: Target entdecken"},{id:"mit-target-verbinden",title:"Mit Target verbinden",summary:"Kernaspekt: Mit Target verbinden"},{id:"disk-ist-nun-als-devsdx-verfugbar",title:"Disk ist nun als /dev/sdX verf√ºgbar",summary:"Kernaspekt: Disk ist nun als /dev/sdX verf√ºgbar"},{id:"best-practices",title:"Best Practices",summary:"Kernaspekt: Best Practices"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],Ey="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",_y="Automatisch erg√§nzt: Review erforderlich",Dy=["bp-02-nas-san-ubersicht-micro-1","bp-02-nas-san-network-attached-storage-nas-micro-1","bp-02-nas-san-storage-area-network-san-micro-1","bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1","bp-02-nas-san-anwendungsfalle-micro-1","bp-02-nas-san-hybrid-ansatze-micro-1","bp-02-nas-san-performance-vergleich-micro-1","bp-02-nas-san-konfigurationsbeispiele-micro-1","bp-02-nas-san-best-practices-micro-1","bp-02-nas-san-quiz","bp-02-nas-san-zusammenfassung-micro-1"],Py={id:iy,title:ry,description:sy,category:ay,subcategory:oy,difficulty:ly,examRelevance:uy,newIn2025:cy,removedIn2025:dy,important:my,estimatedTime:gy,prerequisites:hy,tags:py,content:fy,codeExamples:by,relatedQuizzes:ky,resources:zy,lastUpdated:vy,version:yy,learningObjectives:Sy,summary:wy,contentOutline:Ay,accessibilityNotes:Ey,editorNote:_y,microQuizzes:Dy},Ty="bp-03-cps",qy="Cyber-physische Systeme (CPS)",Ry="Verstehe cyber-physische Systeme, ihre Komponenten (Sensoren, Aktoren) und wie sie in der Softwareentwicklung eingesetzt werden.",Iy="BP-03",Cy="Entwickeln von Softwareanwendungen",Ly="intermediate",My="high",Oy=!0,Ny=!1,By=!0,xy=40,Vy=[],Fy=["CPS","Cyber-physische Systeme","Sensoren","Aktoren","IoT","Embedded Systems","Neu 2025"],Ky=`# Cyber-physische Systeme (CPS)

## Was sind Cyber-physische Systeme?

Cyber-physische Systeme (CPS) sind **Systeme, die physische Prozesse mit digitaler Steuerung verbinden**. Sie bestehen aus mechanischen und elektronischen Komponenten, die √ºber Netzwerke kommunizieren und durch Software gesteuert werden.

### Definition

> Ein cyber-physisches System ist ein Verbund informatischer, softwaretechnischer Komponenten mit mechanischen und elektronischen Teilen, die √ºber eine Dateninfrastruktur kommunizieren.

### Kernmerkmale

- **Eingebettete Systeme:** Software l√§uft auf spezialisierter Hardware
- **Sensoren:** Erfassen physische Daten aus der Umgebung
- **Aktoren:** F√ºhren physische Aktionen aus
- **Vernetzung:** Kommunikation √ºber Netzwerke
- **Echtzeitverarbeitung:** Schnelle Reaktion auf Ereignisse

<!-- micro-quiz:bp-03-cps-was-sind-cyber-physische-systeme-micro-1 -->
## Komponenten von CPS

### 1. Sensoren

Sensoren **erfassen physische Gr√∂√üen** und wandeln sie in digitale Signale um.

**H√§ufige Sensortypen:**

| Sensor | Misst | Beispiel-Anwendung |
|--------|-------|--------------------|
| **Temperatursensor** | Temperatur | Klimaanlage, K√ºhlschrank |
| **Drucksensor** | Druck | Reifendruckkontrolle |
| **Bewegungssensor** | Bewegung/Position | Alarmanlagen, Smartphones |
| **Lichtsensor** | Helligkeit | Automatische Bildschirmhelligkeit |
| **Abstandssensor** | Entfernung | Einparkhilfe, Roboter |
| **Beschleunigungssensor** | Beschleunigung | Airbag-Ausl√∂sung |
| **GPS-Sensor** | Position | Navigation |
| **Feuchtigkeitssensor** | Luftfeuchtigkeit | Wetterstation |

### 2. Aktoren

Aktoren **f√ºhren physische Aktionen aus** basierend auf digitalen Befehlen.

**H√§ufige Aktortypen:**

| Aktor | Aktion | Beispiel-Anwendung |
|-------|--------|--------------------|
| **Motor** | Drehbewegung | Roboterarm, Ventilator |
| **Servo** | Pr√§zise Positionierung | Drohnen, Modellbau |
| **LED** | Licht ausgeben | Anzeigen, Beleuchtung |
| **Relais** | Schalten von Stromkreisen | Heizungssteuerung |
| **Ventil** | Fl√ºssigkeits-/Gassteuerung | Bew√§sserung |
| **Lautsprecher** | Ton ausgeben | Alarme, Sprachausgabe |
| **Display** | Informationen anzeigen | Statusanzeigen |

### 3. Steuerungseinheit (Controller)

Die **Steuerungseinheit** verarbeitet Sensordaten und steuert Aktoren.

**Beispiele:**
- Mikrocontroller (Arduino, ESP32, Raspberry Pi)
- Embedded Systems
- Industriesteuerungen (SPS)

### 4. Kommunikationsschnittstellen

**Verbindungstechnologien:**
- **Kabelgebunden:** USB, Ethernet, I2C, SPI
- **Drahtlos:** WLAN, Bluetooth, Zigbee, LoRaWAN

## CPS-Architektur
<!-- micro-quiz:bp-03-cps-komponenten-von-cps-micro-1 -->


\`\`\`
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ         Cloud / Backend Server          ‚îÇ
‚îÇ    (Datenanalyse, KI, Speicherung)     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
               ‚îÇ Internet
               ‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ      Steuerungseinheit (Controller)     ‚îÇ
‚îÇ         (Mikrocontroller, SPS)          ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
       ‚îÇ                          ‚îÇ
       ‚Üì                          ‚Üì
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê          ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  Sensoren   ‚îÇ          ‚îÇ   Aktoren   ‚îÇ
‚îÇ (Eingabe)   ‚îÇ          ‚îÇ  (Ausgabe)  ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò          ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
       ‚Üì                          ‚Üë
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ        Physische Umgebung/Prozess       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
\`\`\`

<!-- micro-quiz:bp-03-cps-cps-architektur-micro-1 -->
## Beispiele f√ºr CPS

### 1. Smart Home
- **Sensoren:** Temperatur, Bewegung, T√ºr-/Fensterkontakte
- **Aktoren:** Heizung, Beleuchtung, Jalousien
- **Steuerung:** Zentrale Smart-Home-Steuerung
- **Vernetzung:** WLAN, Zigbee

### 2. Autonome Fahrzeuge
- **Sensoren:** Kameras, Lidar, Radar, GPS
- **Aktoren:** Lenkung, Bremsen, Beschleunigung
- **Steuerung:** Fahrzeugcomputer mit KI
- **Vernetzung:** 5G, V2X-Kommunikation

### 3. Industrielle Fertigung (Industrie 4.0)
- **Sensoren:** Qualit√§tssensoren, Positionssensoren
- **Aktoren:** Roboter, F√∂rderb√§nder
- **Steuerung:** SPS, MES-Systeme
- **Vernetzung:** Industrial Ethernet

### 4. Medizintechnik
- **Sensoren:** Herzfrequenz, Blutzucker, EKG
- **Aktoren:** Insulinpumpen, Defibrillatoren
- **Steuerung:** Medizinische Ger√§testeuerung
- **Vernetzung:** Bluetooth, Krankenhaus-Netzwerk

## Bibliotheken und Frameworks f√ºr CPS
<!-- micro-quiz:bp-03-cps-beispiele-fur-cps-micro-1 -->


### Python

**RPi.GPIO** - Raspberry Pi GPIO-Steuerung
\`\`\`python
import RPi.GPIO as GPIO
\`\`\`

**gpiozero** - Vereinfachte Hardware-Steuerung
\`\`\`python
from gpiozero import LED, Button
\`\`\`

**pySerial** - Serielle Kommunikation
\`\`\`python
import serial
\`\`\`

### Java

**Pi4J** - Raspberry Pi I/O f√ºr Java
\`\`\`java
import com.pi4j.io.gpio.*;
\`\`\`

### C/C++

**Arduino Framework** - Mikrocontroller-Programmierung
\`\`\`cpp
#include <Arduino.h>
\`\`\`

**WiringPi** - GPIO f√ºr Raspberry Pi
\`\`\`c
#include <wiringPi.h>
\`\`\`

### JavaScript/Node.js

**Johnny-Five** - Robotik und IoT
\`\`\`javascript
const five = require('johnny-five');
\`\`\`

**onoff** - GPIO-Zugriff
\`\`\`javascript
const Gpio = require('onoff').Gpio;
\`\`\`

<!-- micro-quiz:bp-03-cps-bibliotheken-und-frameworks-fur-cps-micro-1 -->
## Abfragerhythmus planen

Die **Polling-Frequenz** bestimmt, wie oft Sensoren abgefragt werden.

### Faktoren f√ºr die Frequenzwahl

1. **Prozessgeschwindigkeit:** Wie schnell √§ndert sich der Wert?
2. **Reaktionszeit:** Wie schnell muss reagiert werden?
3. **Ressourcen:** CPU, Speicher, Energie
4. **Datenvolumen:** Netzwerk-Bandbreite

### Beispiele

| Anwendung | Frequenz | Begr√ºndung |
|-----------|----------|------------|
| Temperatur√ºberwachung | 1x/Minute | Langsame √Ñnderungen |
| Bewegungserkennung | 10x/Sekunde | Schnelle Reaktion n√∂tig |
| Vibrationssensor | 1000x/Sekunde | Hochfrequente Ereignisse |
| GPS-Tracking | 1x/Sekunde | Balance zwischen Genauigkeit und Energie |

### Polling vs. Interrupt

**Polling:** Regelm√§√üige Abfrage
- ‚úÖ Einfach zu implementieren
- ‚ùå Verschwendet Ressourcen

**Interrupt:** Ereignisgesteuert
- ‚úÖ Effizient
- ‚úÖ Schnelle Reaktion
- ‚ùå Komplexere Implementierung

## Herausforderungen bei CPS
<!-- micro-quiz:bp-03-cps-abfragerhythmus-planen-micro-1 -->


### 1. Echtzeitanforderungen
- Systeme m√ºssen in definierten Zeitfenstern reagieren
- Kritisch bei Sicherheitssystemen (Airbag, Bremsen)

### 2. Zuverl√§ssigkeit
- Hohe Verf√ºgbarkeit erforderlich
- Fehlertoleranz wichtig

### 3. Sicherheit (Security)
- Schutz vor Cyberangriffen
- Verschl√ºsselte Kommunikation

### 4. Energieeffizienz
- Batteriebetriebene Ger√§te
- Optimierung des Energieverbrauchs

### 5. Skalierbarkeit
- Viele Ger√§te im Netzwerk
- Datenmanagement

<!-- micro-quiz:bp-03-cps-herausforderungen-bei-cps-micro-1 -->
## Praktische Anwendungsf√§lle

### Anwendungsfall 1: Automatische Bew√§sserung

**Komponenten:**
- Feuchtigkeitssensor im Boden
- Wasserventil (Aktor)
- Mikrocontroller (ESP32)
- WLAN-Verbindung

**Ablauf:**
1. Sensor misst Bodenfeuchtigkeit alle 10 Minuten
2. Wenn Feuchtigkeit < 30%: Ventil √∂ffnen
3. Bew√§ssern f√ºr 5 Minuten
4. Ventil schlie√üen
5. Daten an Cloud senden f√ºr Analyse

### Anwendungsfall 2: Einbruchsalarm

**Komponenten:**
- Bewegungssensoren
- T√ºr-/Fensterkontakte
- Sirene (Aktor)
- Smartphone-App

**Ablauf:**
1. System scharf schalten via App
2. Sensoren √ºberwachen kontinuierlich
3. Bei Bewegung: Alarm ausl√∂sen
4. Push-Benachrichtigung an Smartphone
5. Sirene aktivieren

### Anwendungsfall 3: Temperaturregelung

**Komponenten:**
- Temperatursensor
- Heizung (Aktor)
- Thermostat-Controller

**Ablauf:**
1. Sensor misst Raumtemperatur
2. Vergleich mit Solltemperatur
3. Wenn zu kalt: Heizung einschalten
4. Wenn Solltemperatur erreicht: Heizung ausschalten
5. PID-Regelung f√ºr pr√§zise Steuerung

## √úbungsaufgaben
<!-- micro-quiz:bp-03-cps-praktische-anwendungsfalle-micro-1 -->


### Aufgabe 1: Komponenten zuordnen

Ordne zu, ob es sich um einen Sensor oder Aktor handelt:
- LED
- Temperatursensor
- Motor
- GPS-Modul
- Lautsprecher
- Lichtsensor

### Aufgabe 2: Anwendungsfall entwerfen

Entwirf ein CPS f√ºr eine automatische Garagentorsteuerung:
- Welche Sensoren werden ben√∂tigt?
- Welche Aktoren?
- Wie ist der Ablauf?

### Aufgabe 3: Abfragefrequenz bestimmen

Welche Abfragefrequenz ist sinnvoll f√ºr:
a) Rauchmelder
b) Fitness-Tracker (Schritte z√§hlen)
c) Parkplatzsensor

### Aufgabe 4: Bibliothek w√§hlen

Du m√∂chtest mit Python einen Raspberry Pi programmieren, um LEDs zu steuern. Welche Bibliothek w√ºrdest du verwenden?

<!-- micro-quiz:bp-03-cps-ubungsaufgaben-micro-1 -->
## Zusammenfassung

Cyber-physische Systeme verbinden die digitale mit der physischen Welt durch Sensoren (Eingabe), Aktoren (Ausgabe) und intelligente Steuerung. Sie sind die Grundlage f√ºr IoT, Smart Home, Industrie 4.0 und autonome Systeme. Die Wahl der richtigen Bibliotheken und die Planung des Abfragerhythmus sind entscheidend f√ºr effiziente und zuverl√§ssige CPS.


<!-- micro-quiz:bp-03-cps-zusammenfassung-micro-1 -->`,Wy=[{language:"python",title:"Raspberry Pi: LED mit Button steuern (gpiozero)",code:`from gpiozero import LED, Button
from signal import pause

# Hardware-Setup
led = LED(17)  # LED an GPIO Pin 17
button = Button(2)  # Button an GPIO Pin 2

# Event-Handler
def button_pressed():
    print("Button gedr√ºckt - LED an")
    led.on()

def button_released():
    print("Button losgelassen - LED aus")
    led.off()

# Events registrieren
button.when_pressed = button_pressed
button.when_released = button_released

print("System l√§uft. Dr√ºcke Ctrl+C zum Beenden.")
pause()  # Programm l√§uft weiter und wartet auf Events`,explanation:"Dieses Beispiel zeigt die ereignisgesteuerte Programmierung mit gpiozero. Die LED wird durch einen Button gesteuert, ohne dass kontinuierlich gepollt werden muss."},{language:"python",title:"Temperatursensor auslesen und L√ºfter steuern",code:`import time
import board
import adafruit_dht
from gpiozero import OutputDevice

# Hardware-Setup
dht_sensor = adafruit_dht.DHT22(board.D4)  # Temperatursensor
fan = OutputDevice(17)  # L√ºfter an GPIO 17

# Konfiguration
TARGET_TEMP = 25.0  # Zieltemperatur in ¬∞C
POLLING_INTERVAL = 5  # Abfrage alle 5 Sekunden

def read_temperature():
    """Liest Temperatur vom Sensor"""
    try:
        temperature = dht_sensor.temperature
        humidity = dht_sensor.humidity
        return temperature, humidity
    except RuntimeError as e:
        print(f"Fehler beim Auslesen: {e}")
        return None, None

def control_fan(temperature):
    """Steuert L√ºfter basierend auf Temperatur"""
    if temperature is None:
        return
    
    if temperature > TARGET_TEMP:
        if not fan.is_active:
            print(f"Temperatur {temperature}¬∞C > {TARGET_TEMP}¬∞C - L√ºfter AN")
            fan.on()
    else:
        if fan.is_active:
            print(f"Temperatur {temperature}¬∞C <= {TARGET_TEMP}¬∞C - L√ºfter AUS")
            fan.off()

# Hauptschleife
print("Temperaturregelung gestartet...")
try:
    while True:
        temp, humidity = read_temperature()
        
        if temp is not None:
            print(f"Temperatur: {temp:.1f}¬∞C, Luftfeuchtigkeit: {humidity:.1f}%")
            control_fan(temp)
        
        time.sleep(POLLING_INTERVAL)
        
except KeyboardInterrupt:
    print("\\nProgramm beendet")
    fan.off()
    dht_sensor.exit()`,explanation:"Ein praktisches Beispiel f√ºr ein CPS: Ein Temperatursensor steuert einen L√ºfter. Das System pollt den Sensor alle 5 Sekunden und schaltet den L√ºfter basierend auf der Temperatur."},{language:"java",title:"Arduino: Abstandssensor mit Servo (C++)",code:`#include <Servo.h>

// Hardware-Pins
const int TRIG_PIN = 9;
const int ECHO_PIN = 10;
const int SERVO_PIN = 11;

// Konfiguration
const int SAFE_DISTANCE = 20;  // cm

Servo myServo;

void setup() {
  Serial.begin(9600);
  
  // Ultraschallsensor
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  
  // Servo
  myServo.attach(SERVO_PIN);
  myServo.write(0);  // Startposition
  
  Serial.println("Abstandssensor-System gestartet");
}

float measureDistance() {
  // Trigger-Impuls senden
  digitalWrite(TRIG_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG_PIN, LOW);
  
  // Echo-Zeit messen
  long duration = pulseIn(ECHO_PIN, HIGH);
  
  // Entfernung berechnen (Schallgeschwindigkeit: 343 m/s)
  float distance = duration * 0.034 / 2;
  
  return distance;
}

void controlServo(float distance) {
  if (distance < SAFE_DISTANCE) {
    // Objekt zu nah - Servo auf 90¬∞
    myServo.write(90);
    Serial.print("WARNUNG: Objekt bei ");
    Serial.print(distance);
    Serial.println(" cm - Servo aktiviert");
  } else {
    // Sicherer Abstand - Servo auf 0¬∞
    myServo.write(0);
    Serial.print("OK: Abstand ");
    Serial.print(distance);
    Serial.println(" cm");
  }
}

void loop() {
  float distance = measureDistance();
  controlServo(distance);
  
  delay(100);  // 10 Hz Abfragerate
}`,explanation:"Arduino-Beispiel f√ºr ein CPS: Ein Ultraschallsensor misst den Abstand und steuert einen Servo-Motor. Bei zu geringem Abstand wird der Servo aktiviert (z.B. f√ºr eine Barriere)."},{language:"javascript",title:"Node.js: Bewegungsmelder mit Benachrichtigung",code:`const Gpio = require('onoff').Gpio;
const nodemailer = require('nodemailer');

// Hardware-Setup
const motionSensor = new Gpio(4, 'in', 'both');
const alarmLED = new Gpio(17, 'out');

// System-Status
let systemArmed = true;
let lastMotionTime = 0;
const COOLDOWN_PERIOD = 30000;  // 30 Sekunden

// E-Mail-Konfiguration
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: 'your-email@gmail.com',
    pass: 'your-password'
  }
});

function sendAlert() {
  const mailOptions = {
    from: 'your-email@gmail.com',
    to: 'alert-recipient@gmail.com',
    subject: 'üö® Bewegung erkannt!',
    text: \`Bewegung wurde um \${new Date().toLocaleString()} erkannt.\`
  };
  
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      console.log('E-Mail-Fehler:', error);
    } else {
      console.log('Alarm-E-Mail gesendet:', info.response);
    }
  });
}

function handleMotion(err, value) {
  if (err) {
    console.error('Sensor-Fehler:', err);
    return;
  }
  
  const now = Date.now();
  
  // Bewegung erkannt (HIGH) und System scharf
  if (value === 1 && systemArmed) {
    // Cooldown-Periode pr√ºfen
    if (now - lastMotionTime > COOLDOWN_PERIOD) {
      console.log('üö® BEWEGUNG ERKANNT!');
      
      // LED einschalten
      alarmLED.writeSync(1);
      
      // Benachrichtigung senden
      sendAlert();
      
      lastMotionTime = now;
      
      // LED nach 5 Sekunden ausschalten
      setTimeout(() => {
        alarmLED.writeSync(0);
      }, 5000);
    }
  }
}

// Event-Handler registrieren (Interrupt-basiert)
motionSensor.watch(handleMotion);

console.log('Bewegungsmelder-System aktiv');
console.log('System scharf:', systemArmed);

// Graceful Shutdown
process.on('SIGINT', () => {
  console.log('\\nSystem wird heruntergefahren...');
  alarmLED.writeSync(0);
  motionSensor.unexport();
  alarmLED.unexport();
  process.exit();
});`,explanation:"Ein vollst√§ndiges CPS-Beispiel mit Node.js: Ein Bewegungsmelder l√∂st einen Alarm aus, schaltet eine LED und sendet eine E-Mail-Benachrichtigung. Das System verwendet Interrupts f√ºr effiziente Ereignisverarbeitung."}],jy=[],$y=[{title:"Raspberry Pi GPIO Dokumentation",url:"https://www.raspberrypi.com/documentation/computers/raspberry-pi.html",type:"documentation"},{title:"Arduino Reference",url:"https://www.arduino.cc/reference/en/",type:"documentation"},{title:"gpiozero Documentation",url:"https://gpiozero.readthedocs.io/",type:"documentation"}],Gy="2025-01-10T00:00:00Z",Uy="1.0",Hy=["Du kannst cPS erkl√§ren","Du kannst cyber-physische Systeme erkl√§ren","Du kannst sensoren erkl√§ren","Du kannst aktoren erkl√§ren","Du kannst ioT erkl√§ren"],Qy="Verstehe cyber-physische Systeme, ihre Komponenten (Sensoren, Aktoren) und wie sie in der Softwareentwicklung eingesetzt werden.",Zy=[{id:"cyber-physische-systeme-cps",title:"Cyber-physische Systeme (CPS)",summary:"Kernaspekt: Cyber-physische Systeme (CPS)"},{id:"was-sind-cyber-physische-systeme",title:"Was sind Cyber-physische Systeme?",summary:"Kernaspekt: Was sind Cyber-physische Systeme?"},{id:"komponenten-von-cps",title:"Komponenten von CPS",summary:"Kernaspekt: Komponenten von CPS"},{id:"cps-architektur",title:"CPS-Architektur",summary:"Kernaspekt: CPS-Architektur"},{id:"beispiele-fur-cps",title:"Beispiele f√ºr CPS",summary:"Kernaspekt: Beispiele f√ºr CPS"},{id:"bibliotheken-und-frameworks-fur-cps",title:"Bibliotheken und Frameworks f√ºr CPS",summary:"Kernaspekt: Bibliotheken und Frameworks f√ºr CPS"},{id:"abfragerhythmus-planen",title:"Abfragerhythmus planen",summary:"Kernaspekt: Abfragerhythmus planen"},{id:"herausforderungen-bei-cps",title:"Herausforderungen bei CPS",summary:"Kernaspekt: Herausforderungen bei CPS"},{id:"praktische-anwendungsfalle",title:"Praktische Anwendungsf√§lle",summary:"Kernaspekt: Praktische Anwendungsf√§lle"},{id:"ubungsaufgaben",title:"√úbungsaufgaben",summary:"Kernaspekt: √úbungsaufgaben"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],Jy="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",Yy="Automatisch erg√§nzt: Review erforderlich",Xy=["bp-03-cps-was-sind-cyber-physische-systeme-micro-1","bp-03-cps-komponenten-von-cps-micro-1","bp-03-cps-cps-architektur-micro-1","bp-03-cps-beispiele-fur-cps-micro-1","bp-03-cps-bibliotheken-und-frameworks-fur-cps-micro-1","bp-03-cps-abfragerhythmus-planen-micro-1","bp-03-cps-herausforderungen-bei-cps-micro-1","bp-03-cps-praktische-anwendungsfalle-micro-1","bp-03-cps-ubungsaufgaben-micro-1","bp-03-cps-zusammenfassung-micro-1"],eS={id:Ty,title:qy,description:Ry,category:Iy,subcategory:Cy,difficulty:Ly,examRelevance:My,newIn2025:Oy,removedIn2025:Ny,important:By,estimatedTime:xy,prerequisites:Vy,tags:Fy,content:Ky,codeExamples:Wy,relatedQuizzes:jy,resources:$y,lastUpdated:Gy,version:Uy,learningObjectives:Hy,summary:Qy,contentOutline:Zy,accessibilityNotes:Jy,editorNote:Yy,microQuizzes:Xy},nS="bp-03-rest-api",tS="REST API-Entwicklung",iS="Entwicklung von RESTful Web Services und APIs",rS="BP-03",sS="API-Entwicklung",aS="intermediate",oS="high",lS=!1,uS=!1,cS=!0,dS=60,mS=[],gS=["REST","API","HTTP","Web Services"],hS=`# REST API-Entwicklung

## Einf√ºhrung

REST (Representational State Transfer) ist ein Architekturstil f√ºr verteilte Systeme, insbesondere f√ºr Web Services. RESTful APIs sind der Standard f√ºr moderne Web-Anwendungen.

<!-- micro-quiz:bp-03-rest-api-einfuhrung-micro-1 -->
## REST-Prinzipien

### 1. Client-Server-Architektur

- Trennung von Client und Server
- Unabh√§ngige Entwicklung
- Skalierbarkeit

### 2. Stateless (Zustandslos)

- Jede Anfrage enth√§lt alle notwendigen Informationen
- Server speichert keinen Client-Zustand
- Skalierbarkeit und Zuverl√§ssigkeit

\`\`\`python
# Stateless: Jede Anfrage enth√§lt Token
headers = {
    'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
}
response = requests.get('https://api.example.com/users', headers=headers)
\`\`\`

### 3. Cacheable (Cachef√§hig)

- Antworten k√∂nnen gecacht werden
- Performance-Verbesserung
- Cache-Control-Header

\`\`\`http
HTTP/1.1 200 OK
Cache-Control: max-age=3600
ETag: "33a64df551425fcc55e4d42a148795d9f25f89d4"
\`\`\`

### 4. Uniform Interface (Einheitliche Schnittstelle)

- Standardisierte Kommunikation
- HTTP-Methoden
- Ressourcen-basiert

### 5. Layered System (Schichtenarchitektur)

- Zwischenschichten m√∂glich (Load Balancer, Cache, Gateway)
- Client kennt nur direkte Schicht

### 6. Code on Demand (Optional)

- Server kann ausf√ºhrbaren Code senden
- Beispiel: JavaScript f√ºr Browser

## HTTP-Methoden
<!-- micro-quiz:bp-03-rest-api-rest-prinzipien-micro-1 -->


### GET - Ressourcen abrufen

\`\`\`http
GET /api/users HTTP/1.1
Host: api.example.com

Response:
200 OK
[
  {"id": 1, "name": "Max"},
  {"id": 2, "name": "Anna"}
]
\`\`\`

**Eigenschaften:**
- Idempotent (mehrfache Ausf√ºhrung = gleiches Ergebnis)
- Safe (keine √Ñnderungen)
- Cacheable

### POST - Ressourcen erstellen

\`\`\`http
POST /api/users HTTP/1.1
Host: api.example.com
Content-Type: application/json

{
  "name": "Tom",
  "email": "tom@example.com"
}

Response:
201 Created
Location: /api/users/3
{
  "id": 3,
  "name": "Tom",
  "email": "tom@example.com"
}
\`\`\`

**Eigenschaften:**
- Nicht idempotent
- Nicht safe
- Nicht cacheable

### PUT - Ressourcen aktualisieren (vollst√§ndig)

\`\`\`http
PUT /api/users/3 HTTP/1.1
Host: api.example.com
Content-Type: application/json

{
  "name": "Tom M√ºller",
  "email": "tom.mueller@example.com"
}

Response:
200 OK
{
  "id": 3,
  "name": "Tom M√ºller",
  "email": "tom.mueller@example.com"
}
\`\`\`

**Eigenschaften:**
- Idempotent
- Nicht safe
- Ersetzt gesamte Ressource

### PATCH - Ressourcen aktualisieren (teilweise)

\`\`\`http
PATCH /api/users/3 HTTP/1.1
Host: api.example.com
Content-Type: application/json

{
  "email": "newemail@example.com"
}

Response:
200 OK
{
  "id": 3,
  "name": "Tom M√ºller",
  "email": "newemail@example.com"
}
\`\`\`

**Eigenschaften:**
- Idempotent (meist)
- Nicht safe
- Aktualisiert nur angegebene Felder

### DELETE - Ressourcen l√∂schen

\`\`\`http
DELETE /api/users/3 HTTP/1.1
Host: api.example.com

Response:
204 No Content
\`\`\`

**Eigenschaften:**
- Idempotent
- Nicht safe

<!-- micro-quiz:bp-03-rest-api-http-methoden-micro-1 -->
## HTTP-Status-Codes

### 2xx - Erfolg

- **200 OK**: Erfolgreiche Anfrage
- **201 Created**: Ressource erstellt
- **204 No Content**: Erfolg ohne Inhalt

### 3xx - Umleitung

- **301 Moved Permanently**: Permanente Umleitung
- **302 Found**: Tempor√§re Umleitung
- **304 Not Modified**: Ressource nicht ge√§ndert (Cache)

### 4xx - Client-Fehler

- **400 Bad Request**: Ung√ºltige Anfrage
- **401 Unauthorized**: Authentifizierung erforderlich
- **403 Forbidden**: Zugriff verweigert
- **404 Not Found**: Ressource nicht gefunden
- **409 Conflict**: Konflikt (z.B. Duplikat)
- **422 Unprocessable Entity**: Validierungsfehler
- **429 Too Many Requests**: Rate Limit √ºberschritten

### 5xx - Server-Fehler

- **500 Internal Server Error**: Serverfehler
- **502 Bad Gateway**: Gateway-Fehler
- **503 Service Unavailable**: Service nicht verf√ºgbar

## URL-Design
<!-- micro-quiz:bp-03-rest-api-http-status-codes-micro-1 -->


### Best Practices

**Ressourcen-basiert (Nomen, nicht Verben):**
\`\`\`
‚úì GET /api/users
‚úì POST /api/users
‚úó GET /api/getUsers
‚úó POST /api/createUser
\`\`\`

**Plural f√ºr Kollektionen:**
\`\`\`
‚úì GET /api/users
‚úì GET /api/users/123
‚úó GET /api/user
‚úó GET /api/user/123
\`\`\`

**Hierarchische Struktur:**
\`\`\`
GET /api/users/123/orders
GET /api/users/123/orders/456
\`\`\`

**Query-Parameter f√ºr Filterung:**
\`\`\`
GET /api/users?role=admin&active=true
GET /api/products?category=electronics&price_max=1000
\`\`\`

**Versionierung:**
\`\`\`
GET /api/v1/users
GET /api/v2/users
\`\`\`

<!-- micro-quiz:bp-03-rest-api-url-design-micro-1 -->
## Request/Response-Format

### JSON (Standard)

\`\`\`json
{
  "data": {
    "id": 123,
    "type": "user",
    "attributes": {
      "name": "Max Mustermann",
      "email": "max@example.com"
    }
  },
  "meta": {
    "timestamp": "2025-01-10T10:00:00Z"
  }
}
\`\`\`

### Fehler-Format

\`\`\`json
{
  "error": {
    "code": "VALIDATION_ERROR",
    "message": "Validation failed",
    "details": [
      {
        "field": "email",
        "message": "Invalid email format"
      }
    ]
  }
}
\`\`\`

## Authentifizierung
<!-- micro-quiz:bp-03-rest-api-requestresponse-format-micro-1 -->


### Bearer Token (JWT)

\`\`\`http
GET /api/users HTTP/1.1
Host: api.example.com
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
\`\`\`

### API Key

\`\`\`http
GET /api/users HTTP/1.1
Host: api.example.com
X-API-Key: your-api-key-here
\`\`\`

### OAuth 2.0

\`\`\`python
# OAuth 2.0 Flow
# 1. Authorization Request
auth_url = 'https://auth.example.com/oauth/authorize'
params = {
    'client_id': 'your-client-id',
    'redirect_uri': 'https://yourapp.com/callback',
    'response_type': 'code',
    'scope': 'read write'
}

# 2. Token Exchange
token_url = 'https://auth.example.com/oauth/token'
data = {
    'grant_type': 'authorization_code',
    'code': 'authorization-code',
    'client_id': 'your-client-id',
    'client_secret': 'your-client-secret'
}
\`\`\`

<!-- micro-quiz:bp-03-rest-api-authentifizierung-micro-1 -->
## Pagination

### Offset-based

\`\`\`http
GET /api/users?limit=20&offset=40

Response:
{
  "data": [...],
  "pagination": {
    "total": 150,
    "limit": 20,
    "offset": 40,
    "has_more": true
  }
}
\`\`\`

### Cursor-based

\`\`\`http
GET /api/users?limit=20&cursor=eyJpZCI6MTIzfQ

Response:
{
  "data": [...],
  "pagination": {
    "next_cursor": "eyJpZCI6MTQzfQ",
    "has_more": true
  }
}
\`\`\`

## Rate Limiting
<!-- micro-quiz:bp-03-rest-api-pagination-micro-1 -->


\`\`\`http
HTTP/1.1 200 OK
X-RateLimit-Limit: 1000
X-RateLimit-Remaining: 999
X-RateLimit-Reset: 1641816000

HTTP/1.1 429 Too Many Requests
Retry-After: 3600
\`\`\`

<!-- micro-quiz:bp-03-rest-api-rate-limiting-micro-1 -->
## CORS (Cross-Origin Resource Sharing)

\`\`\`http
HTTP/1.1 200 OK
Access-Control-Allow-Origin: https://example.com
Access-Control-Allow-Methods: GET, POST, PUT, DELETE
Access-Control-Allow-Headers: Content-Type, Authorization
Access-Control-Max-Age: 86400
\`\`\`

## REST API Beispiel (Python Flask)
<!-- micro-quiz:bp-03-rest-api-cors-cross-origin-resource-sharing-micro-1 -->


\`\`\`python
from flask import Flask, jsonify, request

app = Flask(__name__)

users = [
    {"id": 1, "name": "Max", "email": "max@example.com"},
    {"id": 2, "name": "Anna", "email": "anna@example.com"}
]

@app.route('/api/users', methods=['GET'])
def get_users():
    """Liste aller Benutzer"""
    return jsonify(users), 200

@app.route('/api/users/<int:user_id>', methods=['GET'])
def get_user(user_id):
    """Einzelner Benutzer"""
    user = next((u for u in users if u['id'] == user_id), None)
    if user:
        return jsonify(user), 200
    return jsonify({"error": "User not found"}), 404

@app.route('/api/users', methods=['POST'])
def create_user():
    """Benutzer erstellen"""
    data = request.get_json()
    
    # Validierung
    if not data.get('name') or not data.get('email'):
        return jsonify({"error": "Name and email required"}), 400
    
    # Erstellen
    new_user = {
        "id": len(users) + 1,
        "name": data['name'],
        "email": data['email']
    }
    users.append(new_user)
    
    return jsonify(new_user), 201

@app.route('/api/users/<int:user_id>', methods=['PUT'])
def update_user(user_id):
    """Benutzer aktualisieren"""
    user = next((u for u in users if u['id'] == user_id), None)
    if not user:
        return jsonify({"error": "User not found"}), 404
    
    data = request.get_json()
    user['name'] = data.get('name', user['name'])
    user['email'] = data.get('email', user['email'])
    
    return jsonify(user), 200

@app.route('/api/users/<int:user_id>', methods=['DELETE'])
def delete_user(user_id):
    """Benutzer l√∂schen"""
    global users
    users = [u for u in users if u['id'] != user_id]
    return '', 204

if __name__ == '__main__':
    app.run(debug=True)
\`\`\`

<!-- micro-quiz:bp-03-rest-api-rest-api-beispiel-python-flask-micro-1 -->
## Pr√ºfungsrelevante Aspekte

- REST-Prinzipien kennen
- HTTP-Methoden und ihre Eigenschaften verstehen
- HTTP-Status-Codes kennen
- URL-Design Best Practices
- Authentifizierungsmethoden kennen
- Pagination und Rate Limiting verstehen
- CORS-Konzept verstehen


<!-- micro-quiz:bp-03-rest-api-prufungsrelevante-aspekte-micro-1 -->`,pS=[{language:"python",code:`from flask import Flask, jsonify, request
from functools import wraps

app = Flask(__name__)

# Authentifizierungs-Decorator
def require_auth(f):
    @wraps(f)
    def decorated(*args, **kwargs):
        token = request.headers.get('Authorization')
        if not token or not token.startswith('Bearer '):
            return jsonify({"error": "Unauthorized"}), 401
        # Token-Validierung hier
        return f(*args, **kwargs)
    return decorated

# Gesch√ºtzte Route
@app.route('/api/users', methods=['GET'])
@require_auth
def get_users():
    # Pagination
    page = request.args.get('page', 1, type=int)
    per_page = request.args.get('per_page', 20, type=int)
    
    # Filterung
    role = request.args.get('role')
    
    # Daten abrufen (simuliert)
    users = get_users_from_db(page, per_page, role)
    total = get_total_users(role)
    
    return jsonify({
        "data": users,
        "pagination": {
            "page": page,
            "per_page": per_page,
            "total": total,
            "pages": (total + per_page - 1) // per_page
        }
    }), 200`,explanation:"Vollst√§ndiges REST API Beispiel mit Authentifizierung und Pagination",title:"REST API mit Best Practices"}],fS=[],bS=[{title:"REST API Tutorial",url:"https://restfulapi.net/",type:"article"},{title:"HTTP Status Codes",url:"https://httpstatuses.com/",type:"documentation"}],kS="2025-01-10T00:00:00Z",zS="1.0",vS=["Du kannst rEST erkl√§ren","Du kannst aPI erkl√§ren","Du kannst hTTP erkl√§ren","Du kannst web Services erkl√§ren"],yS="Entwicklung von RESTful Web Services und APIs",SS=[{id:"rest-api-entwicklung",title:"REST API-Entwicklung",summary:"Kernaspekt: REST API-Entwicklung"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"rest-prinzipien",title:"REST-Prinzipien",summary:"Kernaspekt: REST-Prinzipien"},{id:"stateless-jede-anfrage-enthalt-token",title:"Stateless: Jede Anfrage enth√§lt Token",summary:"Kernaspekt: Stateless: Jede Anfrage enth√§lt Token"},{id:"http-methoden",title:"HTTP-Methoden",summary:"Kernaspekt: HTTP-Methoden"},{id:"http-status-codes",title:"HTTP-Status-Codes",summary:"Kernaspekt: HTTP-Status-Codes"},{id:"url-design",title:"URL-Design",summary:"Kernaspekt: URL-Design"},{id:"requestresponse-format",title:"Request/Response-Format",summary:"Kernaspekt: Request/Response-Format"},{id:"authentifizierung",title:"Authentifizierung",summary:"Kernaspekt: Authentifizierung"},{id:"oauth-20-flow",title:"OAuth 2.0 Flow",summary:"Kernaspekt: OAuth 2.0 Flow"},{id:"1-authorization-request",title:"1. Authorization Request",summary:"Kernaspekt: 1. Authorization Request"},{id:"2-token-exchange",title:"2. Token Exchange",summary:"Kernaspekt: 2. Token Exchange"},{id:"pagination",title:"Pagination",summary:"Kernaspekt: Pagination"},{id:"rate-limiting",title:"Rate Limiting",summary:"Kernaspekt: Rate Limiting"},{id:"cors-cross-origin-resource-sharing",title:"CORS (Cross-Origin Resource Sharing)",summary:"Kernaspekt: CORS (Cross-Origin Resource Sharing)"},{id:"rest-api-beispiel-python-flask",title:"REST API Beispiel (Python Flask)",summary:"Kernaspekt: REST API Beispiel (Python Flask)"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],wS="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",AS="Automatisch erg√§nzt: Review erforderlich",ES=["bp-03-rest-api-einfuhrung-micro-1","bp-03-rest-api-rest-prinzipien-micro-1","bp-03-rest-api-http-methoden-micro-1","bp-03-rest-api-http-status-codes-micro-1","bp-03-rest-api-url-design-micro-1","bp-03-rest-api-requestresponse-format-micro-1","bp-03-rest-api-authentifizierung-micro-1","bp-03-rest-api-pagination-micro-1","bp-03-rest-api-rate-limiting-micro-1","bp-03-rest-api-cors-cross-origin-resource-sharing-micro-1","bp-03-rest-api-rest-api-beispiel-python-flask-micro-1","bp-03-rest-api-prufungsrelevante-aspekte-micro-1"],_S={id:nS,title:tS,description:iS,category:rS,subcategory:sS,difficulty:aS,examRelevance:oS,newIn2025:lS,removedIn2025:uS,important:cS,estimatedTime:dS,prerequisites:mS,tags:gS,content:hS,codeExamples:pS,relatedQuizzes:fS,resources:bS,lastUpdated:kS,version:zS,learningObjectives:vS,summary:yS,contentOutline:SS,accessibilityNotes:wS,editorNote:AS,microQuizzes:ES},DS="bp-03-software-quality",PS="Softwarequalit√§tsmerkmale (ISO 25010)",TS="Qualit√§tsmerkmale f√ºr Software nach ISO/IEC 25010 Standard (Neu ab 2025)",qS="BP-03",RS="Softwarequalit√§t",IS="intermediate",CS="high",LS=!0,MS=!1,OS=!0,NS=50,BS=[],xS=["Qualit√§t","ISO 25010","Software Engineering","Neu 2025"],VS=`# Softwarequalit√§tsmerkmale (ISO 25010)

## Einf√ºhrung

ISO/IEC 25010 (fr√ºher ISO 9126) definiert ein Qualit√§tsmodell f√ºr Software-Produkte. Es beschreibt acht Hauptmerkmale, die die Qualit√§t von Software bestimmen.

**Neu ab 2025**: Softwarequalit√§tsmerkmale nach ISO 25010 sind explizit im neuen Pr√ºfungskatalog aufgef√ºhrt.

<!-- micro-quiz:bp-03-software-quality-einfuhrung-micro-1 -->
## Die 8 Qualit√§tsmerkmale

### 1. Functional Suitability (Funktionale Eignung)

**Definition**: Grad, in dem ein Produkt Funktionen bereitstellt, die festgelegte und implizierte Anforderungen erf√ºllen.

**Untermerkmale:**

**Functional Completeness (Vollst√§ndigkeit):**
- Alle erforderlichen Funktionen vorhanden
- Beispiel: E-Commerce-System mit Warenkorb, Bezahlung, Bestellverfolgung

**Functional Correctness (Korrektheit):**
- Funktionen liefern korrekte Ergebnisse
- Beispiel: Taschenrechner berechnet 2+2=4, nicht 5

**Functional Appropriateness (Angemessenheit):**
- Funktionen sind f√ºr Aufgaben geeignet
- Beispiel: Drag-and-Drop f√ºr Datei-Upload statt komplexer Dialog

### 2. Performance Efficiency (Leistungseffizienz)

**Definition**: Leistung in Relation zu den eingesetzten Ressourcen.

**Untermerkmale:**

**Time Behaviour (Zeitverhalten):**
- Antwortzeiten, Durchsatz
- Beispiel: Webseite l√§dt in < 2 Sekunden

**Resource Utilization (Ressourcennutzung):**
- CPU, RAM, Speicher, Netzwerk
- Beispiel: App nutzt < 100 MB RAM

**Capacity (Kapazit√§t):**
- Maximale Anzahl gleichzeitiger Benutzer
- Beispiel: System unterst√ºtzt 10.000 gleichzeitige Nutzer

**Beispiel:**
\`\`\`python
import time

# Schlechte Performance
def slow_search(items, target):
    for item in items:
        time.sleep(0.001)  # Simuliert langsame Operation
        if item == target:
            return True
    return False

# Gute Performance
def fast_search(items, target):
    return target in set(items)  # O(1) statt O(n)
\`\`\`

### 3. Compatibility (Kompatibilit√§t)

**Definition**: Grad, in dem ein Produkt mit anderen Produkten Informationen austauschen und/oder Funktionen nutzen kann.

**Untermerkmale:**

**Co-existence (Koexistenz):**
- Funktioniert mit anderer Software auf gleichem System
- Beispiel: App l√§uft parallel zu anderen Apps ohne Konflikte

**Interoperability (Interoperabilit√§t):**
- Datenaustausch mit anderen Systemen
- Beispiel: Export/Import von Daten in Standardformaten (JSON, XML)

**Beispiel:**
\`\`\`python
# Interoperabilit√§t durch Standard-APIs
import json

def export_data(users):
    """Exportiert Daten in Standard-JSON-Format"""
    return json.dumps(users, indent=2)

def import_data(json_string):
    """Importiert Daten aus Standard-JSON-Format"""
    return json.loads(json_string)
\`\`\`

### 4. Usability (Benutzerfreundlichkeit)

**Definition**: Grad, in dem ein Produkt von bestimmten Benutzern effektiv, effizient und zufriedenstellend genutzt werden kann.

**Untermerkmale:**

**Appropriateness Recognizability (Erkennbarkeit):**
- Benutzer erkennen, ob Software f√ºr ihre Bed√ºrfnisse geeignet ist
- Beispiel: Klare Beschreibung der Funktionen

**Learnability (Erlernbarkeit):**
- Wie schnell k√∂nnen Benutzer die Software lernen?
- Beispiel: Intuitive Benutzeroberfl√§che, Tutorials

**Operability (Bedienbarkeit):**
- Einfache Bedienung und Kontrolle
- Beispiel: Klare Navigation, konsistente UI

**User Error Protection (Fehlerschutz):**
- Schutz vor Bedienfehlern
- Beispiel: Best√§tigungsdialog vor L√∂schen

**User Interface Aesthetics (√Ñsthetik):**
- Ansprechendes Design
- Beispiel: Modernes, konsistentes Design

**Accessibility (Barrierefreiheit):**
- Nutzbar f√ºr Menschen mit Einschr√§nkungen
- Beispiel: Screen-Reader-Unterst√ºtzung, Tastaturnavigation

### 5. Reliability (Zuverl√§ssigkeit)

**Definition**: Grad, in dem ein System unter festgelegten Bedingungen zuverl√§ssig funktioniert.

**Untermerkmale:**

**Maturity (Reife):**
- Geringe Fehlerrate im Normalbetrieb
- Beispiel: Stabile Software ohne h√§ufige Abst√ºrze

**Availability (Verf√ºgbarkeit):**
- System ist verf√ºgbar, wenn ben√∂tigt
- Beispiel: 99.9% Uptime (43 Min. Ausfall/Monat)

**Fault Tolerance (Fehlertoleranz):**
- System funktioniert trotz Fehlern
- Beispiel: Graceful Degradation bei Datenbankausfall

**Recoverability (Wiederherstellbarkeit):**
- Schnelle Wiederherstellung nach Ausfall
- Beispiel: Automatisches Backup und Recovery

**Beispiel:**
\`\`\`python
import logging

def fetch_user_data(user_id):
    """Fehlertolerante Funktion mit Fallback"""
    try:
        # Prim√§re Datenquelle
        return database.get_user(user_id)
    except DatabaseError:
        logging.warning("Database unavailable, using cache")
        # Fallback auf Cache
        return cache.get_user(user_id)
    except Exception as e:
        logging.error(f"Error fetching user: {e}")
        # Graceful Degradation
        return {"id": user_id, "name": "Unknown"}
\`\`\`

### 6. Security (Sicherheit)

**Definition**: Grad, in dem ein Produkt Informationen und Daten sch√ºtzt.

**Untermerkmale:**

**Confidentiality (Vertraulichkeit):**
- Nur autorisierte Zugriffe
- Beispiel: Verschl√ºsselung sensibler Daten

**Integrity (Integrit√§t):**
- Daten k√∂nnen nicht unbefugt ge√§ndert werden
- Beispiel: Checksums, digitale Signaturen

**Non-repudiation (Nicht-Abstreitbarkeit):**
- Aktionen k√∂nnen nachgewiesen werden
- Beispiel: Audit-Logs, digitale Signaturen

**Accountability (Verantwortlichkeit):**
- Aktionen k√∂nnen Entit√§ten zugeordnet werden
- Beispiel: Benutzer-Logs, Authentifizierung

**Authenticity (Authentizit√§t):**
- Identit√§t kann nachgewiesen werden
- Beispiel: Multi-Factor Authentication

**Beispiel:**
\`\`\`python
import hashlib
import secrets

def hash_password(password):
    """Sicheres Password-Hashing"""
    salt = secrets.token_hex(16)
    pwd_hash = hashlib.pbkdf2_hmac(
        'sha256',
        password.encode('utf-8'),
        salt.encode('utf-8'),
        100000
    )
    return f"{salt}\${pwd_hash.hex()}"

def verify_password(password, stored_hash):
    """Passwort-Verifikation"""
    salt, pwd_hash = stored_hash.split('$')
    new_hash = hashlib.pbkdf2_hmac(
        'sha256',
        password.encode('utf-8'),
        salt.encode('utf-8'),
        100000
    )
    return new_hash.hex() == pwd_hash
\`\`\`

### 7. Maintainability (Wartbarkeit)

**Definition**: Grad, in dem ein Produkt effektiv und effizient modifiziert werden kann.

**Untermerkmale:**

**Modularity (Modularit√§t):**
- System aus unabh√§ngigen Komponenten
- Beispiel: Microservices, Module

**Reusability (Wiederverwendbarkeit):**
- Komponenten k√∂nnen wiederverwendet werden
- Beispiel: Bibliotheken, Frameworks

**Analysability (Analysierbarkeit):**
- Fehlerursachen k√∂nnen identifiziert werden
- Beispiel: Logging, Debugging-Tools

**Modifiability (Modifizierbarkeit):**
- √Ñnderungen k√∂nnen einfach durchgef√ºhrt werden
- Beispiel: Klare Architektur, geringe Kopplung

**Testability (Testbarkeit):**
- Tests k√∂nnen einfach durchgef√ºhrt werden
- Beispiel: Unit-Tests, Mocking

**Beispiel:**
\`\`\`python
# Gute Wartbarkeit durch Modularit√§t
class UserService:
    """Klar definierte Verantwortlichkeit"""
    
    def __init__(self, repository, validator):
        self.repository = repository
        self.validator = validator
    
    def create_user(self, user_data):
        # Validierung (wiederverwendbar)
        if not self.validator.validate(user_data):
            raise ValueError("Invalid user data")
        
        # Speicherung (austauschbar)
        return self.repository.save(user_data)
\`\`\`

### 8. Portability (√úbertragbarkeit)

**Definition**: Grad, in dem ein System von einer Umgebung in eine andere √ºbertragen werden kann.

**Untermerkmale:**

**Adaptability (Anpassbarkeit):**
- Anpassung an verschiedene Umgebungen
- Beispiel: Konfigurierbare Einstellungen

**Installability (Installierbarkeit):**
- Einfache Installation
- Beispiel: One-Click-Installation, Docker

**Replaceability (Austauschbarkeit):**
- Kann andere Software ersetzen
- Beispiel: Kompatible APIs, Datenformate

**Beispiel:**
\`\`\`python
# Portabilit√§t durch Konfiguration
import os

class DatabaseConfig:
    """Anpassbar an verschiedene Umgebungen"""
    
    def __init__(self):
        self.host = os.getenv('DB_HOST', 'localhost')
        self.port = int(os.getenv('DB_PORT', '5432'))
        self.database = os.getenv('DB_NAME', 'myapp')
        self.user = os.getenv('DB_USER', 'admin')
        self.password = os.getenv('DB_PASSWORD', '')
\`\`\`

## Qualit√§tssicherung
<!-- micro-quiz:bp-03-software-quality-die-8-qualitatsmerkmale-micro-1 -->


### Ma√ünahmen

**Code Reviews:**
- Peer-Reviews
- Pull Requests

**Testing:**
- Unit Tests
- Integration Tests
- Performance Tests
- Security Tests

**Monitoring:**
- Performance-Monitoring
- Error-Tracking
- User Analytics

**Documentation:**
- Code-Dokumentation
- API-Dokumentation
- Benutzerhandb√ºcher

<!-- micro-quiz:bp-03-software-quality-qualitatssicherung-micro-1 -->
## Pr√ºfungsrelevante Aspekte

- 8 Qualit√§tsmerkmale nach ISO 25010 kennen
- Untermerkmale zuordnen
- Beispiele f√ºr jedes Merkmal nennen
- Qualit√§tsma√ünahmen verstehen
- Trade-offs zwischen Merkmalen erkennen
- Qualit√§tsmerkmale in Anforderungen umsetzen


<!-- micro-quiz:bp-03-software-quality-prufungsrelevante-aspekte-micro-1 -->`,FS=[{language:"python",code:`# Beispiel: Mehrere Qualit√§tsmerkmale kombiniert

class PaymentService:
    """Zahlungsservice mit hoher Qualit√§t"""
    
    def __init__(self, logger, metrics):
        self.logger = logger  # Maintainability: Analysierbarkeit
        self.metrics = metrics  # Performance: Monitoring
    
    def process_payment(self, amount, user_id):
        """
        Verarbeitet Zahlung mit Fokus auf:
        - Reliability: Fehlertoleranz
        - Security: Logging f√ºr Accountability
        - Performance: Timeout
        """
        start_time = time.time()
        
        try:
            # Security: Validierung
            if amount <= 0:
                raise ValueError("Amount must be positive")
            
            # Functional Suitability: Korrekte Verarbeitung
            result = self._charge_payment(amount, user_id)
            
            # Security: Audit-Log
            self.logger.info(f"Payment processed: {user_id}, {amount}")
            
            # Performance: Metrik
            duration = time.time() - start_time
            self.metrics.record('payment_duration', duration)
            
            return result
            
        except Exception as e:
            # Reliability: Fehlerbehandlung
            self.logger.error(f"Payment failed: {e}")
            # Usability: Benutzerfreundliche Fehlermeldung
            raise PaymentError("Zahlung konnte nicht verarbeitet werden")
    
    def _charge_payment(self, amount, user_id):
        # Implementierung...
        pass`,explanation:"Beispiel f√ºr Code, der mehrere Qualit√§tsmerkmale ber√ºcksichtigt",title:"Qualit√§tsmerkmale in der Praxis"}],KS=[],WS=[{title:"ISO/IEC 25010:2011",url:"https://www.iso.org/standard/35733.html",type:"documentation"}],jS="2025-01-10T00:00:00Z",$S="1.0",GS=["Du kannst qualit√§t erkl√§ren","Du kannst iSO 25010 erkl√§ren","Du kannst software Engineering erkl√§ren","Du kannst neu 2025 erkl√§ren"],US="Qualit√§tsmerkmale f√ºr Software nach ISO/IEC 25010 Standard (Neu ab 2025)",HS=[{id:"softwarequalitatsmerkmale-iso-25010",title:"Softwarequalit√§tsmerkmale (ISO 25010)",summary:"Kernaspekt: Softwarequalit√§tsmerkmale (ISO 25010)"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"die-8-qualitatsmerkmale",title:"Die 8 Qualit√§tsmerkmale",summary:"Kernaspekt: Die 8 Qualit√§tsmerkmale"},{id:"schlechte-performance",title:"Schlechte Performance",summary:"Kernaspekt: Schlechte Performance"},{id:"gute-performance",title:"Gute Performance",summary:"Kernaspekt: Gute Performance"},{id:"interoperabilitat-durch-standard-apis",title:"Interoperabilit√§t durch Standard-APIs",summary:"Kernaspekt: Interoperabilit√§t durch Standard-APIs"},{id:"gute-wartbarkeit-durch-modularitat",title:"Gute Wartbarkeit durch Modularit√§t",summary:"Kernaspekt: Gute Wartbarkeit durch Modularit√§t"},{id:"portabilitat-durch-konfiguration",title:"Portabilit√§t durch Konfiguration",summary:"Kernaspekt: Portabilit√§t durch Konfiguration"},{id:"qualitatssicherung",title:"Qualit√§tssicherung",summary:"Kernaspekt: Qualit√§tssicherung"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],QS="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",ZS="Automatisch erg√§nzt: Review erforderlich",JS=["bp-03-software-quality-einfuhrung-micro-1","bp-03-software-quality-die-8-qualitatsmerkmale-micro-1","bp-03-software-quality-qualitatssicherung-micro-1","bp-03-software-quality-prufungsrelevante-aspekte-micro-1"],YS={id:DS,title:PS,description:TS,category:qS,subcategory:RS,difficulty:IS,examRelevance:CS,newIn2025:LS,removedIn2025:MS,important:OS,estimatedTime:NS,prerequisites:BS,tags:xS,content:VS,codeExamples:FS,relatedQuizzes:KS,resources:WS,lastUpdated:jS,version:$S,learningObjectives:GS,summary:US,contentOutline:HS,accessibilityNotes:QS,editorNote:ZS,microQuizzes:JS},XS="bp-03-tdd",ew="Test Driven Development (TDD)",nw="Lerne das TDD-Konzept, den Red-Green-Refactor Zyklus und wie du qualitativ hochwertigen Code durch testgetriebene Entwicklung schreibst.",tw="BP-03",iw="Entwickeln von Softwareanwendungen",rw="intermediate",sw="high",aw=!0,ow=!1,lw=!0,uw=45,cw=[],dw=["TDD","Testing","Unit Tests","Red-Green-Refactor","Softwarequalit√§t","Neu 2025"],mw=`# Test Driven Development (TDD)

## Was ist Test Driven Development?

Test Driven Development (TDD) ist eine Softwareentwicklungsmethode, bei der **Tests vor dem eigentlichen Code** geschrieben werden. Dieser Ansatz f√ºhrt zu besser strukturiertem, wartbarem und fehlerfreiem Code.

### Kernprinzipien von TDD

1. **Test First**: Schreibe zuerst einen Test f√ºr die gew√ºnschte Funktionalit√§t
2. **Minimal Implementation**: Implementiere nur so viel Code, wie n√∂tig ist, um den Test zu bestehen
3. **Refactoring**: Verbessere den Code, w√§hrend alle Tests weiterhin bestehen

<!-- micro-quiz:bp-03-tdd-was-ist-test-driven-development-micro-1 -->
## Der Red-Green-Refactor Zyklus

TDD folgt einem iterativen Zyklus mit drei Phasen:

### üî¥ Red (Rot) - Test schreiben, der fehlschl√§gt

- Schreibe einen Test f√ºr eine neue Funktionalit√§t
- Der Test schl√§gt fehl, weil die Funktionalit√§t noch nicht existiert
- Dies best√§tigt, dass der Test tats√§chlich etwas pr√ºft

### üü¢ Green (Gr√ºn) - Minimalen Code schreiben

- Implementiere gerade genug Code, um den Test zu bestehen
- Fokus liegt auf Funktionalit√§t, nicht auf Perfektion
- Der Test sollte nun erfolgreich durchlaufen

### üîµ Refactor (Refaktorieren) - Code verbessern

- Verbessere die Code-Qualit√§t ohne das Verhalten zu √§ndern
- Entferne Duplikate und optimiere die Struktur
- Alle Tests m√ºssen weiterhin bestehen

**Dann beginnt der Zyklus von vorne f√ºr die n√§chste Funktionalit√§t!**

## Vorteile von TDD
<!-- micro-quiz:bp-03-tdd-der-red-green-refactor-zyklus-micro-1 -->


‚úÖ **Bessere Code-Qualit√§t**: Code ist testbar und modular aufgebaut

‚úÖ **Weniger Bugs**: Fehler werden fr√ºh erkannt und behoben

‚úÖ **Lebende Dokumentation**: Tests dokumentieren das erwartete Verhalten

‚úÖ **Refactoring-Sicherheit**: √Ñnderungen k√∂nnen sicher durchgef√ºhrt werden

‚úÖ **Klares Design**: Zwingt zu durchdachtem API-Design

<!-- micro-quiz:bp-03-tdd-vorteile-von-tdd-micro-1 -->
## Nachteile von TDD

‚ùå **Zeitaufwand**: Initial mehr Zeit f√ºr Test-Erstellung

‚ùå **Lernkurve**: Erfordert Umdenken und √úbung

‚ùå **Overhead**: Nicht f√ºr alle Projekte gleich sinnvoll

## TDD in der Praxis
<!-- micro-quiz:bp-03-tdd-nachteile-von-tdd-micro-1 -->


### Wann sollte TDD eingesetzt werden?

- Bei komplexer Business-Logik
- Bei kritischen Systemkomponenten
- Bei langlebigen Projekten
- Wenn hohe Code-Qualit√§t gefordert ist

### Wann ist TDD weniger geeignet?

- Bei Prototypen und Proof-of-Concepts
- Bei UI-Design und Experimenten
- Bei sehr einfachen CRUD-Operationen

<!-- micro-quiz:bp-03-tdd-tdd-in-der-praxis-micro-1 -->
## Best Practices

1. **Kleine Schritte**: Schreibe kleine, fokussierte Tests
2. **Ein Test, eine Assertion**: Halte Tests einfach und klar
3. **Aussagekr√§ftige Namen**: Test-Namen sollten das Verhalten beschreiben
4. **Unabh√§ngige Tests**: Tests sollten isoliert und in beliebiger Reihenfolge laufen
5. **Schnelle Tests**: Tests sollten schnell ausf√ºhrbar sein

## √úbungsaufgaben
<!-- micro-quiz:bp-03-tdd-best-practices-micro-1 -->


### Aufgabe 1: TDD-Zyklus verstehen

Ordne die folgenden Schritte dem richtigen TDD-Zyklus zu:
- Code optimieren und Duplikate entfernen
- Test schreiben, der fehlschl√§gt
- Minimalen Code implementieren, um Test zu bestehen

### Aufgabe 2: TDD anwenden

Implementiere eine \`Calculator\`-Klasse mit TDD:
1. Schreibe einen Test f√ºr Addition
2. Implementiere die Addition
3. Refaktoriere wenn n√∂tig
4. Wiederhole f√ºr Subtraktion

### Aufgabe 3: Vorteile erkennen

Nenne drei konkrete Vorteile, die TDD f√ºr die Wartbarkeit von Software bietet.

<!-- micro-quiz:bp-03-tdd-ubungsaufgaben-micro-1 -->
## Zusammenfassung

TDD ist eine bew√§hrte Methode zur Entwicklung qualitativ hochwertiger Software. Der Red-Green-Refactor Zyklus stellt sicher, dass Code testbar, wartbar und fehlerfrei ist. Obwohl TDD initial mehr Zeit erfordert, zahlt sich die Investition durch weniger Bugs und bessere Wartbarkeit aus.



<!-- micro-quiz:tdd-quiz-2025 -->
<!-- micro-quiz:bp-03-tdd-zusammenfassung-micro-1 -->
`,gw=[{language:"java",title:"TDD Beispiel: Calculator-Klasse (Java mit JUnit)",code:`// 1. RED: Test schreiben (schl√§gt fehl)
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class CalculatorTest {
    @Test
    void testAddition() {
        Calculator calc = new Calculator();
        int result = calc.add(2, 3);
        assertEquals(5, result, "2 + 3 sollte 5 ergeben");
    }
}

// 2. GREEN: Minimale Implementierung
class Calculator {
    public int add(int a, int b) {
        return a + b;
    }
}

// 3. REFACTOR: Code ist bereits sauber, kein Refactoring n√∂tig

// N√§chster Zyklus: Subtraktion
@Test
void testSubtraction() {
    Calculator calc = new Calculator();
    int result = calc.subtract(5, 3);
    assertEquals(2, result, "5 - 3 sollte 2 ergeben");
}

// Implementierung
public int subtract(int a, int b) {
    return a - b;
}`,explanation:"Dieses Beispiel zeigt den kompletten TDD-Zyklus: Zuerst wird ein Test geschrieben, der fehlschl√§gt (RED), dann wird die minimale Implementierung hinzugef√ºgt (GREEN), und schlie√ülich wird der Code bei Bedarf refaktoriert (REFACTOR)."},{language:"python",title:"TDD Beispiel: String-Validator (Python mit pytest)",code:`# 1. RED: Test schreiben
import pytest

def test_email_validator_valid_email():
    validator = EmailValidator()
    assert validator.is_valid("test@example.com") == True

def test_email_validator_invalid_email():
    validator = EmailValidator()
    assert validator.is_valid("invalid-email") == False

# 2. GREEN: Minimale Implementierung
import re

class EmailValidator:
    def is_valid(self, email):
        pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'
        return bool(re.match(pattern, email))

# 3. REFACTOR: Regex-Pattern als Konstante auslagern
class EmailValidator:
    EMAIL_PATTERN = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'
    
    def is_valid(self, email):
        if not email or not isinstance(email, str):
            return False
        return bool(re.match(self.EMAIL_PATTERN, email))`,explanation:"Dieses Python-Beispiel demonstriert TDD mit pytest. Nach der minimalen Implementierung wird der Code refaktoriert, um die Regex als Konstante zu definieren und zus√§tzliche Validierung hinzuzuf√ºgen."},{language:"java",title:"TDD Beispiel: BankAccount mit Gesch√§ftslogik",code:`// RED: Test f√ºr Kontostand-Abfrage
@Test
void testInitialBalance() {
    BankAccount account = new BankAccount(100.0);
    assertEquals(100.0, account.getBalance());
}

// GREEN: Implementierung
class BankAccount {
    private double balance;
    
    public BankAccount(double initialBalance) {
        this.balance = initialBalance;
    }
    
    public double getBalance() {
        return balance;
    }
}

// RED: Test f√ºr Einzahlung
@Test
void testDeposit() {
    BankAccount account = new BankAccount(100.0);
    account.deposit(50.0);
    assertEquals(150.0, account.getBalance());
}

// GREEN: Implementierung
public void deposit(double amount) {
    balance += amount;
}

// RED: Test f√ºr ung√ºltige Einzahlung
@Test
void testDepositNegativeAmount() {
    BankAccount account = new BankAccount(100.0);
    assertThrows(IllegalArgumentException.class, () -> {
        account.deposit(-50.0);
    });
}

// REFACTOR: Validierung hinzuf√ºgen
public void deposit(double amount) {
    if (amount <= 0) {
        throw new IllegalArgumentException("Betrag muss positiv sein");
    }
    balance += amount;
}`,explanation:"Dieses erweiterte Beispiel zeigt, wie TDD bei komplexerer Gesch√§ftslogik angewendet wird. Jede neue Anforderung (Einzahlung, Validierung) wird durch einen Test definiert, bevor der Code implementiert wird."}],hw=["tdd-quiz-2025"],pw=[{title:"Test Driven Development by Example (Kent Beck)",url:"https://www.oreilly.com/library/view/test-driven-development/0321146530/",type:"article"},{title:"JUnit 5 Dokumentation",url:"https://junit.org/junit5/docs/current/user-guide/",type:"documentation"},{title:"pytest Dokumentation",url:"https://docs.pytest.org/",type:"documentation"}],fw="2025-01-10T00:00:00Z",bw="1.0",kw=["Du kannst tDD erkl√§ren","Du kannst testing erkl√§ren","Du kannst unit Tests erkl√§ren","Du kannst red-Green-Refactor erkl√§ren","Du kannst softwarequalit√§t erkl√§ren"],zw="Lerne das TDD-Konzept, den Red-Green-Refactor Zyklus und wie du qualitativ hochwertigen Code durch testgetriebene Entwicklung schreibst.",vw=[{id:"test-driven-development-tdd",title:"Test Driven Development (TDD)",summary:"Kernaspekt: Test Driven Development (TDD)"},{id:"was-ist-test-driven-development",title:"Was ist Test Driven Development?",summary:"Kernaspekt: Was ist Test Driven Development?"},{id:"der-red-green-refactor-zyklus",title:"Der Red-Green-Refactor Zyklus",summary:"Kernaspekt: Der Red-Green-Refactor Zyklus"},{id:"vorteile-von-tdd",title:"Vorteile von TDD",summary:"Kernaspekt: Vorteile von TDD"},{id:"nachteile-von-tdd",title:"Nachteile von TDD",summary:"Kernaspekt: Nachteile von TDD"},{id:"tdd-in-der-praxis",title:"TDD in der Praxis",summary:"Kernaspekt: TDD in der Praxis"},{id:"best-practices",title:"Best Practices",summary:"Kernaspekt: Best Practices"},{id:"ubungsaufgaben",title:"√úbungsaufgaben",summary:"Kernaspekt: √úbungsaufgaben"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],yw="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",Sw="Automatisch erg√§nzt: Review erforderlich",ww=["bp-03-tdd-was-ist-test-driven-development-micro-1","bp-03-tdd-der-red-green-refactor-zyklus-micro-1","bp-03-tdd-vorteile-von-tdd-micro-1","bp-03-tdd-nachteile-von-tdd-micro-1","bp-03-tdd-tdd-in-der-praxis-micro-1","bp-03-tdd-best-practices-micro-1","bp-03-tdd-ubungsaufgaben-micro-1","bp-03-tdd-zusammenfassung-micro-1"],Aw={id:XS,title:ew,description:nw,category:tw,subcategory:iw,difficulty:rw,examRelevance:sw,newIn2025:aw,removedIn2025:ow,important:lw,estimatedTime:uw,prerequisites:cw,tags:dw,content:mw,codeExamples:gw,relatedQuizzes:hw,resources:pw,lastUpdated:fw,version:bw,learningObjectives:kw,summary:zw,contentOutline:vw,accessibilityNotes:yw,editorNote:Sw,microQuizzes:ww},Ew="bp-04-architecture-patterns",_w="Architektur-Pattern",Dw="Verstehe wichtige Software-Architektur-Pattern wie MVC, Layered Architecture und Microservices f√ºr strukturierte Softwareentwicklung.",Pw="BP-04",Tw="Projektmanagement und Softwareentwicklungsmethoden",qw="advanced",Rw="high",Iw=!0,Cw=!1,Lw=!0,Mw=55,Ow=[],Nw=["Architektur","MVC","Layered Architecture","Microservices","Design Patterns","Software-Design","Neu 2025"],Bw=`# Architektur-Pattern

## Einf√ºhrung

Architektur-Pattern sind bew√§hrte L√∂sungen f√ºr die Strukturierung von Software-Systemen.

<!-- micro-quiz:bp-04-architecture-patterns-einfuhrung-micro-1 -->
## 1. Model-View-Controller (MVC)

MVC trennt eine Anwendung in drei Hauptkomponenten: Model, View und Controller.

## 2. Layered Architecture
<!-- micro-quiz:bp-04-architecture-patterns-1-model-view-controller-mvc-micro-1 -->


Die Anwendung wird in horizontale Schichten aufgeteilt.

<!-- micro-quiz:bp-04-architecture-patterns-2-layered-architecture-micro-1 -->
## 3. Microservices Architecture

Die Anwendung wird in kleine, unabh√§ngige Services aufgeteilt.


<!-- micro-quiz:bp-04-architecture-patterns-3-microservices-architecture-micro-1 -->`,xw=[],Vw=[],Fw=[],Kw="2025-01-10T00:00:00Z",Ww="1.0",jw=["Du kannst architektur erkl√§ren","Du kannst mVC erkl√§ren","Du kannst layered Architecture erkl√§ren","Du kannst microservices erkl√§ren","Du kannst design Patterns erkl√§ren"],$w="Verstehe wichtige Software-Architektur-Pattern wie MVC, Layered Architecture und Microservices f√ºr strukturierte Softwareentwicklung.",Gw=[{id:"architektur-pattern",title:"Architektur-Pattern",summary:"Kernaspekt: Architektur-Pattern"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"1-model-view-controller-mvc",title:"1. Model-View-Controller (MVC)",summary:"Kernaspekt: 1. Model-View-Controller (MVC)"},{id:"2-layered-architecture",title:"2. Layered Architecture",summary:"Kernaspekt: 2. Layered Architecture"},{id:"3-microservices-architecture",title:"3. Microservices Architecture",summary:"Kernaspekt: 3. Microservices Architecture"}],Uw="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",Hw="Automatisch erg√§nzt: Review erforderlich",Qw=["bp-04-architecture-patterns-einfuhrung-micro-1","bp-04-architecture-patterns-1-model-view-controller-mvc-micro-1","bp-04-architecture-patterns-2-layered-architecture-micro-1","bp-04-architecture-patterns-3-microservices-architecture-micro-1"],Zw={id:Ew,title:_w,description:Dw,category:Pw,subcategory:Tw,difficulty:qw,examRelevance:Rw,newIn2025:Iw,removedIn2025:Cw,important:Lw,estimatedTime:Mw,prerequisites:Ow,tags:Nw,content:Bw,codeExamples:xw,relatedQuizzes:Vw,resources:Fw,lastUpdated:Kw,version:Ww,learningObjectives:jw,summary:$w,contentOutline:Gw,accessibilityNotes:Uw,editorNote:Hw,microQuizzes:Qw},Jw="bp-04-design-patterns",Yw="Design Patterns (Entwurfsmuster)",Xw="Bew√§hrte L√∂sungsmuster f√ºr wiederkehrende Softwaredesign-Probleme",eA="BP-04",nA="Software-Design",tA="advanced",iA="high",rA=!1,sA=!1,aA=!0,oA=60,lA=["bp-05-encapsulation"],uA=["Design Patterns","OOP","Software-Design","Gang of Four"],cA=`# Design Patterns (Entwurfsmuster)

## Einf√ºhrung

Design Patterns sind bew√§hrte L√∂sungsschablonen f√ºr wiederkehrende Entwurfsprobleme in der Softwareentwicklung. Sie wurden von der "Gang of Four" (GoF) in ihrem Buch "Design Patterns: Elements of Reusable Object-Oriented Software" (1994) systematisiert.

<!-- micro-quiz:bp-04-design-patterns-einfuhrung-micro-1 -->
## Kategorien

### 1. Creational Patterns (Erzeugungsmuster)
Betreffen die Objekterzeugung

### 2. Structural Patterns (Strukturmuster)
Betreffen die Komposition von Klassen und Objekten

### 3. Behavioral Patterns (Verhaltensmuster)
Betreffen die Interaktion und Verantwortlichkeiten zwischen Objekten

## Creational Patterns
<!-- micro-quiz:bp-04-design-patterns-kategorien-micro-1 -->


### Singleton

**Problem**: Nur eine Instanz einer Klasse soll existieren.

**L√∂sung**: Private Constructor, statische Methode f√ºr Zugriff.

\`\`\`java
public class Database {
    private static Database instance;
    
    // Private Constructor
    private Database() {
        // Initialisierung
    }
    
    // Statische Methode f√ºr Zugriff
    public static Database getInstance() {
        if (instance == null) {
            instance = new Database();
        }
        return instance;
    }
    
    public void query(String sql) {
        // Datenbankabfrage
    }
}

// Verwendung
Database db = Database.getInstance();
db.query("SELECT * FROM users");
\`\`\`

**Anwendungsf√§lle:**
- Datenbankverbindungen
- Logger
- Konfigurationsmanager

### Factory Method

**Problem**: Objekterzeugung soll flexibel sein, ohne konkrete Klassen zu kennen.

**L√∂sung**: Interface f√ºr Objekterzeugung, Subklassen entscheiden √ºber konkrete Klasse.

\`\`\`java
// Produkt-Interface
interface Vehicle {
    void drive();
}

// Konkrete Produkte
class Car implements Vehicle {
    public void drive() {
        System.out.println("Driving a car");
    }
}

class Bike implements Vehicle {
    public void drive() {
        System.out.println("Riding a bike");
    }
}

// Factory
abstract class VehicleFactory {
    abstract Vehicle createVehicle();
    
    public void deliverVehicle() {
        Vehicle vehicle = createVehicle();
        vehicle.drive();
    }
}

class CarFactory extends VehicleFactory {
    Vehicle createVehicle() {
        return new Car();
    }
}

class BikeFactory extends VehicleFactory {
    Vehicle createVehicle() {
        return new Bike();
    }
}

// Verwendung
VehicleFactory factory = new CarFactory();
factory.deliverVehicle();
\`\`\`

### Builder

**Problem**: Komplexe Objekte mit vielen optionalen Parametern erstellen.

**L√∂sung**: Schrittweise Konstruktion mit Builder-Klasse.

\`\`\`java
public class User {
    private final String name;  // required
    private final String email; // required
    private final int age;      // optional
    private final String phone; // optional
    
    private User(Builder builder) {
        this.name = builder.name;
        this.email = builder.email;
        this.age = builder.age;
        this.phone = builder.phone;
    }
    
    public static class Builder {
        private final String name;
        private final String email;
        private int age = 0;
        private String phone = "";
        
        public Builder(String name, String email) {
            this.name = name;
            this.email = email;
        }
        
        public Builder age(int age) {
            this.age = age;
            return this;
        }
        
        public Builder phone(String phone) {
            this.phone = phone;
            return this;
        }
        
        public User build() {
            return new User(this);
        }
    }
}

// Verwendung
User user = new User.Builder("Max", "max@example.com")
    .age(30)
    .phone("+49123456789")
    .build();
\`\`\`

<!-- micro-quiz:bp-04-design-patterns-creational-patterns-micro-1 -->
## Structural Patterns

### Adapter

**Problem**: Inkompatible Interfaces zusammenarbeiten lassen.

**L√∂sung**: Adapter-Klasse √ºbersetzt zwischen Interfaces.

\`\`\`java
// Altes Interface
interface OldPrinter {
    void printOld(String text);
}

// Neues Interface
interface NewPrinter {
    void print(String text, boolean color);
}

// Adapter
class PrinterAdapter implements NewPrinter {
    private OldPrinter oldPrinter;
    
    public PrinterAdapter(OldPrinter oldPrinter) {
        this.oldPrinter = oldPrinter;
    }
    
    public void print(String text, boolean color) {
        // Ignoriere color-Parameter, alte Drucker k√∂nnen nur schwarz-wei√ü
        oldPrinter.printOld(text);
    }
}
\`\`\`

### Decorator

**Problem**: Funktionalit√§t dynamisch zu Objekten hinzuf√ºgen.

**L√∂sung**: Wrapper-Klassen, die Funktionalit√§t erweitern.

\`\`\`java
// Component
interface Coffee {
    double getCost();
    String getDescription();
}

// Concrete Component
class SimpleCoffee implements Coffee {
    public double getCost() {
        return 2.0;
    }
    
    public String getDescription() {
        return "Simple Coffee";
    }
}

// Decorator
abstract class CoffeeDecorator implements Coffee {
    protected Coffee coffee;
    
    public CoffeeDecorator(Coffee coffee) {
        this.coffee = coffee;
    }
}

// Concrete Decorators
class MilkDecorator extends CoffeeDecorator {
    public MilkDecorator(Coffee coffee) {
        super(coffee);
    }
    
    public double getCost() {
        return coffee.getCost() + 0.5;
    }
    
    public String getDescription() {
        return coffee.getDescription() + ", Milk";
    }
}

class SugarDecorator extends CoffeeDecorator {
    public SugarDecorator(Coffee coffee) {
        super(coffee);
    }
    
    public double getCost() {
        return coffee.getCost() + 0.2;
    }
    
    public String getDescription() {
        return coffee.getDescription() + ", Sugar";
    }
}

// Verwendung
Coffee coffee = new SimpleCoffee();
coffee = new MilkDecorator(coffee);
coffee = new SugarDecorator(coffee);
System.out.println(coffee.getDescription() + " costs " + coffee.getCost());
// Output: Simple Coffee, Milk, Sugar costs 2.7
\`\`\`

### Facade

**Problem**: Komplexes Subsystem vereinfachen.

**L√∂sung**: Einheitliche Schnittstelle f√ºr Subsystem.

\`\`\`java
// Komplexe Subsysteme
class CPU {
    public void freeze() { System.out.println("CPU freeze"); }
    public void jump(long position) { System.out.println("CPU jump"); }
    public void execute() { System.out.println("CPU execute"); }
}

class Memory {
    public void load(long position, byte[] data) {
        System.out.println("Memory load");
    }
}

class HardDrive {
    public byte[] read(long lba, int size) {
        System.out.println("HardDrive read");
        return new byte[size];
    }
}

// Facade
class ComputerFacade {
    private CPU cpu;
    private Memory memory;
    private HardDrive hardDrive;
    
    public ComputerFacade() {
        this.cpu = new CPU();
        this.memory = new Memory();
        this.hardDrive = new HardDrive();
    }
    
    public void start() {
        cpu.freeze();
        memory.load(0, hardDrive.read(0, 1024));
        cpu.jump(0);
        cpu.execute();
    }
}

// Verwendung
ComputerFacade computer = new ComputerFacade();
computer.start(); // Einfacher Aufruf statt komplexer Subsystem-Interaktion
\`\`\`

## Behavioral Patterns
<!-- micro-quiz:bp-04-design-patterns-structural-patterns-micro-1 -->


### Observer

**Problem**: Objekte sollen √ºber √Ñnderungen informiert werden.

**L√∂sung**: Subject benachrichtigt Observer bei √Ñnderungen.

\`\`\`java
import java.util.ArrayList;
import java.util.List;

// Observer Interface
interface Observer {
    void update(String message);
}

// Subject
class NewsAgency {
    private List<Observer> observers = new ArrayList<>();
    private String news;
    
    public void addObserver(Observer observer) {
        observers.add(observer);
    }
    
    public void removeObserver(Observer observer) {
        observers.remove(observer);
    }
    
    public void setNews(String news) {
        this.news = news;
        notifyObservers();
    }
    
    private void notifyObservers() {
        for (Observer observer : observers) {
            observer.update(news);
        }
    }
}

// Concrete Observer
class NewsChannel implements Observer {
    private String name;
    
    public NewsChannel(String name) {
        this.name = name;
    }
    
    public void update(String news) {
        System.out.println(name + " received news: " + news);
    }
}

// Verwendung
NewsAgency agency = new NewsAgency();
NewsChannel channel1 = new NewsChannel("Channel 1");
NewsChannel channel2 = new NewsChannel("Channel 2");

agency.addObserver(channel1);
agency.addObserver(channel2);

agency.setNews("Breaking News!");
// Output:
// Channel 1 received news: Breaking News!
// Channel 2 received news: Breaking News!
\`\`\`

### Strategy

**Problem**: Algorithmen austauschbar machen.

**L√∂sung**: Algorithmen in separate Klassen kapseln.

\`\`\`java
// Strategy Interface
interface PaymentStrategy {
    void pay(double amount);
}

// Concrete Strategies
class CreditCardPayment implements PaymentStrategy {
    private String cardNumber;
    
    public CreditCardPayment(String cardNumber) {
        this.cardNumber = cardNumber;
    }
    
    public void pay(double amount) {
        System.out.println("Paid " + amount + " with credit card " + cardNumber);
    }
}

class PayPalPayment implements PaymentStrategy {
    private String email;
    
    public PayPalPayment(String email) {
        this.email = email;
    }
    
    public void pay(double amount) {
        System.out.println("Paid " + amount + " with PayPal " + email);
    }
}

// Context
class ShoppingCart {
    private PaymentStrategy paymentStrategy;
    
    public void setPaymentStrategy(PaymentStrategy strategy) {
        this.paymentStrategy = strategy;
    }
    
    public void checkout(double amount) {
        paymentStrategy.pay(amount);
    }
}

// Verwendung
ShoppingCart cart = new ShoppingCart();
cart.setPaymentStrategy(new CreditCardPayment("1234-5678-9012-3456"));
cart.checkout(100.0);

cart.setPaymentStrategy(new PayPalPayment("user@example.com"));
cart.checkout(50.0);
\`\`\`

### Template Method

**Problem**: Algorithmus-Struktur definieren, Details in Subklassen.

**L√∂sung**: Abstrakte Klasse mit Template-Methode.

\`\`\`java
abstract class DataProcessor {
    // Template Method
    public final void process() {
        readData();
        processData();
        writeData();
    }
    
    abstract void readData();
    abstract void processData();
    abstract void writeData();
}

class CSVProcessor extends DataProcessor {
    void readData() {
        System.out.println("Reading CSV data");
    }
    
    void processData() {
        System.out.println("Processing CSV data");
    }
    
    void writeData() {
        System.out.println("Writing CSV data");
    }
}

class JSONProcessor extends DataProcessor {
    void readData() {
        System.out.println("Reading JSON data");
    }
    
    void processData() {
        System.out.println("Processing JSON data");
    }
    
    void writeData() {
        System.out.println("Writing JSON data");
    }
}
\`\`\`

<!-- micro-quiz:bp-04-design-patterns-behavioral-patterns-micro-1 -->
## Pr√ºfungsrelevante Aspekte

- Wichtigste Design Patterns kennen
- Kategorien (Creational, Structural, Behavioral) unterscheiden
- Probleme und L√∂sungen zuordnen
- Anwendungsf√§lle erkennen
- UML-Diagramme interpretieren
- Code-Beispiele verstehen


<!-- micro-quiz:bp-04-design-patterns-prufungsrelevante-aspekte-micro-1 -->`,dA=[{language:"java",code:`// Kombination mehrerer Patterns

// Singleton + Factory
public class VehicleFactory {
    private static VehicleFactory instance;
    
    private VehicleFactory() {}
    
    public static VehicleFactory getInstance() {
        if (instance == null) {
            instance = new VehicleFactory();
        }
        return instance;
    }
    
    public Vehicle createVehicle(String type) {
        switch (type) {
            case "car": return new Car();
            case "bike": return new Bike();
            default: throw new IllegalArgumentException("Unknown type");
        }
    }
}

// Strategy + Observer
class PriceCalculator {
    private List<Observer> observers = new ArrayList<>();
    private PricingStrategy strategy;
    
    public void setStrategy(PricingStrategy strategy) {
        this.strategy = strategy;
        notifyObservers("Strategy changed");
    }
    
    public double calculatePrice(double basePrice) {
        return strategy.calculate(basePrice);
    }
    
    public void addObserver(Observer observer) {
        observers.add(observer);
    }
    
    private void notifyObservers(String message) {
        for (Observer obs : observers) {
            obs.update(message);
        }
    }
}`,explanation:"Kombination mehrerer Design Patterns in der Praxis",title:"Pattern-Kombination"}],mA=[],gA=[{title:"Design Patterns: Elements of Reusable Object-Oriented Software",url:"https://en.wikipedia.org/wiki/Design_Patterns",type:"article"},{title:"Refactoring Guru - Design Patterns",url:"https://refactoring.guru/design-patterns",type:"article"}],hA="2025-01-10T00:00:00Z",pA="1.0",fA=["Du kannst design Patterns erkl√§ren","Du kannst oOP erkl√§ren","Du kannst software-Design erkl√§ren","Du kannst gang of Four erkl√§ren"],bA="Bew√§hrte L√∂sungsmuster f√ºr wiederkehrende Softwaredesign-Probleme",kA=[{id:"design-patterns-entwurfsmuster",title:"Design Patterns (Entwurfsmuster)",summary:"Kernaspekt: Design Patterns (Entwurfsmuster)"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"kategorien",title:"Kategorien",summary:"Kernaspekt: Kategorien"},{id:"creational-patterns",title:"Creational Patterns",summary:"Kernaspekt: Creational Patterns"},{id:"structural-patterns",title:"Structural Patterns",summary:"Kernaspekt: Structural Patterns"},{id:"behavioral-patterns",title:"Behavioral Patterns",summary:"Kernaspekt: Behavioral Patterns"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],zA="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",vA="Automatisch erg√§nzt: Review erforderlich",yA=["bp-04-design-patterns-einfuhrung-micro-1","bp-04-design-patterns-kategorien-micro-1","bp-04-design-patterns-creational-patterns-micro-1","bp-04-design-patterns-structural-patterns-micro-1","bp-04-design-patterns-behavioral-patterns-micro-1","bp-04-design-patterns-prufungsrelevante-aspekte-micro-1"],SA={id:Jw,title:Yw,description:Xw,category:eA,subcategory:nA,difficulty:tA,examRelevance:iA,newIn2025:rA,removedIn2025:sA,important:aA,estimatedTime:oA,prerequisites:lA,tags:uA,content:cA,codeExamples:dA,relatedQuizzes:mA,resources:gA,lastUpdated:hA,version:pA,learningObjectives:fA,summary:bA,contentOutline:kA,accessibilityNotes:zA,editorNote:vA,microQuizzes:yA},wA="bp-04-programming-paradigms",AA="Programmierparadigmen (Veraltet ab 2025)",EA="√úbersicht √ºber Programmierparadigmen - Nicht mehr pr√ºfungsrelevant ab 2025",_A="BP-04",DA="Programmierung",PA="intermediate",TA="low",qA=!1,RA=!0,IA=!1,CA=30,LA=[],MA=["Programmierparadigmen","OOP","Funktional","Veraltet"],OA=`# Programmierparadigmen

## √¢≈°¬†√Ø¬∏¬è Hinweis: Nicht mehr pr√ºfungsrelevant ab 2025

Dieses Thema wurde aus dem Pr√ºfungskatalog 2025 gestrichen. Die Inhalte dienen nur noch als Hintergrundwissen.

<!-- micro-quiz:bp-04-programming-paradigms-as-i-hinweis-nicht-mehr-prufungsrelevant-ab-2025-micro-1 -->
## √úbersicht

Programmierparadigmen sind grundlegende Programmierstile, die bestimmen, wie Code strukturiert und organisiert wird.

### Hauptparadigmen

1. **Imperativ**: Befehle, die den Programmzustand √§ndern
2. **Deklarativ**: Beschreibung des gew√ºnschten Ergebnisses
3. **Objektorientiert**: Organisation in Objekten
4. **Funktional**: Funktionen als zentrale Bausteine

## Imperative Programmierung
<!-- micro-quiz:bp-04-programming-paradigms-ubersicht-micro-1 -->


**Eigenschaften:**
- Sequenz von Befehlen
- Zustands√§nderungen
- Kontrollstrukturen (if, for, while)

\`\`\`python
# Imperativ
numbers = [1, 2, 3, 4, 5]
sum = 0
for num in numbers:
    sum += num
print(sum)  # 15
\`\`\`

<!-- micro-quiz:bp-04-programming-paradigms-imperative-programmierung-micro-1 -->
## Deklarative Programmierung

**Eigenschaften:**
- Beschreibung des "Was", nicht "Wie"
- Keine expliziten Zustands√§nderungen

\`\`\`sql
-- Deklarativ (SQL)
SELECT SUM(price) FROM products WHERE category = 'Electronics';
\`\`\`

## Objektorientierte Programmierung (OOP)
<!-- micro-quiz:bp-04-programming-paradigms-deklarative-programmierung-micro-1 -->


**Eigenschaften:**
- Kapselung
- Vererbung
- Polymorphie

\`\`\`java
class Animal {
    void makeSound() {
        System.out.println("Some sound");
    }
}

class Dog extends Animal {
    void makeSound() {
        System.out.println("Woof!");
    }
}
\`\`\`

<!-- micro-quiz:bp-04-programming-paradigms-objektorientierte-programmierung-oop-micro-1 -->
## Funktionale Programmierung

**Eigenschaften:**
- Funktionen als First-Class Citizens
- Immutability
- Pure Functions

\`\`\`python
# Funktional
numbers = [1, 2, 3, 4, 5]
sum = reduce(lambda x, y: x + y, numbers)
print(sum)  # 15
\`\`\`

## Pr√ºfungshinweis
<!-- micro-quiz:bp-04-programming-paradigms-funktionale-programmierung-micro-1 -->


Dieses Thema ist **nicht mehr pr√ºfungsrelevant ab 2025**. Fokussieren Sie stattdessen auf:
- Design Patterns
- Architektur-Pattern
- Scrum
- TDD


<!-- micro-quiz:bp-04-programming-paradigms-prufungshinweis-micro-1 -->`,NA=[],BA=[],xA=[],VA="2025-01-10T00:00:00Z",FA="1.0",KA=["Du kannst programmierparadigmen erkl√§ren","Du kannst oOP erkl√§ren","Du kannst funktional erkl√§ren","Du kannst veraltet erkl√§ren"],WA="√úbersicht √ºber Programmierparadigmen - Nicht mehr pr√ºfungsrelevant ab 2025",jA=[{id:"programmierparadigmen",title:"Programmierparadigmen",summary:"Kernaspekt: Programmierparadigmen"},{id:"as-i-hinweis-nicht-mehr-prufungsrelevant-ab-2025",title:"√¢≈°¬†√Ø¬∏¬è Hinweis: Nicht mehr pr√ºfungsrelevant ab 2025",summary:"Kernaspekt: √¢≈°¬†√Ø¬∏¬è Hinweis: Nicht mehr pr√ºfungsrelevant ab 2025"},{id:"ubersicht",title:"√úbersicht",summary:"Kernaspekt: √úbersicht"},{id:"imperative-programmierung",title:"Imperative Programmierung",summary:"Kernaspekt: Imperative Programmierung"},{id:"imperativ",title:"Imperativ",summary:"Kernaspekt: Imperativ"},{id:"deklarative-programmierung",title:"Deklarative Programmierung",summary:"Kernaspekt: Deklarative Programmierung"},{id:"objektorientierte-programmierung-oop",title:"Objektorientierte Programmierung (OOP)",summary:"Kernaspekt: Objektorientierte Programmierung (OOP)"},{id:"funktionale-programmierung",title:"Funktionale Programmierung",summary:"Kernaspekt: Funktionale Programmierung"},{id:"funktional",title:"Funktional",summary:"Kernaspekt: Funktional"},{id:"prufungshinweis",title:"Pr√ºfungshinweis",summary:"Kernaspekt: Pr√ºfungshinweis"}],$A="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",GA="Automatisch erg√§nzt: Review erforderlich",UA=["bp-04-programming-paradigms-as-i-hinweis-nicht-mehr-prufungsrelevant-ab-2025-micro-1","bp-04-programming-paradigms-ubersicht-micro-1","bp-04-programming-paradigms-imperative-programmierung-micro-1","bp-04-programming-paradigms-deklarative-programmierung-micro-1","bp-04-programming-paradigms-objektorientierte-programmierung-oop-micro-1","bp-04-programming-paradigms-funktionale-programmierung-micro-1","bp-04-programming-paradigms-prufungshinweis-micro-1"],HA={id:wA,title:AA,description:EA,category:_A,subcategory:DA,difficulty:PA,examRelevance:TA,newIn2025:qA,removedIn2025:RA,important:IA,estimatedTime:CA,prerequisites:LA,tags:MA,content:OA,codeExamples:NA,relatedQuizzes:BA,resources:xA,lastUpdated:VA,version:FA,learningObjectives:KA,summary:WA,contentOutline:jA,accessibilityNotes:$A,editorNote:GA,microQuizzes:UA},QA="bp-04-scrum",ZA="Scrum - Agiles Projektmanagement",JA="Verstehe das Scrum-Framework mit seinen Rollen, Events und Artefakten f√ºr agile Softwareentwicklung.",YA="BP-04",XA="Projektmanagement und Softwareentwicklungsmethoden",eE="intermediate",nE="high",tE=!0,iE=!1,rE=!0,sE=50,aE=[],oE=["Scrum","Agile","Projektmanagement","Sprint","Product Owner","Scrum Master","Neu 2025"],lE=`# Scrum - Agiles Projektmanagement

## Was ist Scrum?

Scrum ist ein **agiles Framework** f√ºr die Entwicklung, Lieferung und Wartung komplexer Produkte. Es basiert auf empirischer Prozesssteuerung und setzt auf Transparenz, √úberpr√ºfung und Anpassung.

### Scrum-Werte

- **Commitment** (Selbstverpflichtung): Das Team verpflichtet sich, die Sprint-Ziele zu erreichen
- **Focus** (Fokus): Konzentration auf die Sprint-Arbeit
- **Openness** (Offenheit): Transparenz √ºber Fortschritt und Probleme
- **Respect** (Respekt): Gegenseitiger Respekt im Team
- **Courage** (Mut): Mut, schwierige Probleme anzugehen

<!-- micro-quiz:bp-04-scrum-was-ist-scrum-micro-1 -->
## Die drei Scrum-Rollen

### 1. Product Owner (PO)

**Verantwortlichkeiten:**
- Maximierung des Produktwerts
- Verwaltung des Product Backlogs
- Priorisierung der Anforderungen
- Kommunikation mit Stakeholdern
- Akzeptanz der Arbeitsergebnisse

**Wichtig:** Der Product Owner ist **eine Person**, kein Komitee!

### 2. Scrum Master (SM)

**Verantwortlichkeiten:**
- Sicherstellen, dass Scrum verstanden und gelebt wird
- Beseitigung von Hindernissen (Impediments)
- Moderation der Scrum-Events
- Coaching des Teams und der Organisation
- Schutz des Teams vor externen St√∂rungen

**Wichtig:** Der Scrum Master ist **kein Projektleiter**, sondern ein Servant Leader!

### 3. Development Team (Entwicklungsteam)

**Eigenschaften:**
- Selbstorganisierend und cross-funktional
- 3-9 Mitglieder (optimal)
- Gemeinsam verantwortlich f√ºr das Increment
- Keine Sub-Teams oder Hierarchien
- Alle F√§higkeiten zur Produkterstellung vorhanden

## Die f√ºnf Scrum-Events
<!-- micro-quiz:bp-04-scrum-die-drei-scrum-rollen-micro-1 -->


### 1. Sprint

- **Dauer:** 1-4 Wochen (meist 2 Wochen)
- **Ziel:** Erstellung eines nutzbaren Increments
- **Regel:** Keine √Ñnderungen, die das Sprint-Ziel gef√§hrden

\`\`\`
[Sprint 1] √¢‚Ä†‚Äô [Sprint 2] √¢‚Ä†‚Äô [Sprint 3] √¢‚Ä†‚Äô ...
  2 Wochen    2 Wochen    2 Wochen
\`\`\`

### 2. Sprint Planning

- **Dauer:** Max. 8 Stunden f√ºr 4-Wochen-Sprint
- **Teilnehmer:** Gesamtes Scrum Team
- **Ergebnis:** Sprint Goal und Sprint Backlog

**Zwei Hauptfragen:**
1. **Was** kann in diesem Sprint geliefert werden?
2. **Wie** wird die Arbeit erledigt?

### 3. Daily Scrum (Daily Standup)

- **Dauer:** Max. 15 Minuten
- **Zeitpunkt:** T√§glich zur gleichen Zeit
- **Teilnehmer:** Development Team (PO und SM optional)

**Drei Fragen:**
1. Was habe ich gestern erreicht?
2. Was werde ich heute tun?
3. Welche Hindernisse gibt es?

### 4. Sprint Review

- **Dauer:** Max. 4 Stunden f√ºr 4-Wochen-Sprint
- **Teilnehmer:** Scrum Team + Stakeholder
- **Ziel:** Increment pr√§sentieren und Feedback einholen

**Aktivit√§ten:**
- Demonstration des Increments
- Diskussion √ºber erreichte Ziele
- Anpassung des Product Backlogs

### 5. Sprint Retrospective

- **Dauer:** Max. 3 Stunden f√ºr 4-Wochen-Sprint
- **Teilnehmer:** Scrum Team
- **Ziel:** Prozessverbesserung

**Drei Fragen:**
1. Was lief gut?
2. Was kann verbessert werden?
3. Was werden wir im n√§chsten Sprint anders machen?

<!-- micro-quiz:bp-04-scrum-die-funf-scrum-events-micro-1 -->
## Die drei Scrum-Artefakte

### 1. Product Backlog

- **Inhalt:** Geordnete Liste aller Anforderungen
- **Verantwortlich:** Product Owner
- **Eigenschaften:** Dynamisch, priorisiert, verfeinert

**Beispiel-Eintr√§ge:**
- User Stories
- Bugfixes
- Technische Verbesserungen
- Wissensaufbau

### 2. Sprint Backlog

- **Inhalt:** Ausgew√§hlte Product Backlog Items + Plan
- **Verantwortlich:** Development Team
- **Eigenschaften:** F√ºr den aktuellen Sprint, detailliert

**Besteht aus:**
- Sprint Goal
- Ausgew√§hlte Product Backlog Items
- Aufgaben zur Umsetzung

### 3. Increment

- **Definition:** Summe aller abgeschlossenen Product Backlog Items
- **Zustand:** Potenziell auslieferbar
- **Qualit√§t:** Erf√ºllt die Definition of Done

## Definition of Done (DoD)
<!-- micro-quiz:bp-04-scrum-die-drei-scrum-artefakte-micro-1 -->


 Die **Definition of Done** ist eine gemeinsame Vereinbarung dar√ºber, wann ein Product Backlog Item als "fertig" gilt.

**Beispiel DoD:**
- √¢≈ì‚Ä¶ Code geschrieben und reviewed
- √¢≈ì‚Ä¶ Unit Tests geschrieben und bestanden
- √¢≈ì‚Ä¶ Integration Tests erfolgreich
- √¢≈ì‚Ä¶ Dokumentation aktualisiert
- √¢≈ì‚Ä¶ Code in Main-Branch gemerged
- √¢≈ì‚Ä¶ Von Product Owner akzeptiert

<!-- micro-quiz:bp-04-scrum-definition-of-done-dod-micro-1 -->
## User Stories

User Stories sind eine g√§ngige Form, Anforderungen im Product Backlog zu beschreiben.

**Format:**
\`\`\`
Als [Rolle]
m√∂chte ich [Funktionalit√§t]
damit [Nutzen]
\`\`\`

**Beispiel:**
\`\`\`
Als Kunde
m√∂chte ich meine Bestellhistorie einsehen
damit ich fr√ºhere K√§ufe nachvollziehen kann
\`\`\`

**Akzeptanzkriterien:**
- Liste der Bedingungen, die erf√ºllt sein m√ºssen
- Testbar und messbar
- Vom Product Owner definiert

## Story Points
<!-- micro-quiz:bp-04-scrum-user-stories-micro-1 -->


Story Points sind eine relative Sch√§tzeinheit f√ºr den Aufwand von User Stories.

**Fibonacci-Skala:** 1, 2, 3, 5, 8, 13, 21, ...

- **1-2 Punkte:** Sehr kleine Aufgabe
- **3-5 Punkte:** Kleine bis mittlere Aufgabe
- **8-13 Punkte:** Gro√üe Aufgabe
- **21+ Punkte:** Zu gro√ü, sollte aufgeteilt werden

<!-- micro-quiz:bp-04-scrum-story-points-micro-1 -->
## Scrum-Ablauf Visualisierung

\`\`\`
Product Backlog
     √¢‚Ä†‚Äú
[Sprint Planning] √¢‚Ä†‚Äô Sprint Goal + Sprint Backlog
     √¢‚Ä†‚Äú
[Sprint (2 Wochen)]
  √¢‚Äù≈ì√¢‚Äù‚Ç¨ Daily Scrum (t√§glich 15 min)
  √¢‚Äù≈ì√¢‚Äù‚Ç¨ Entwicklung
  √¢‚Äù‚Äù√¢‚Äù‚Ç¨ Testing
     √¢‚Ä†‚Äú
[Sprint Review] √¢‚Ä†‚Äô Increment pr√§sentieren
     √¢‚Ä†‚Äú
[Sprint Retrospective] √¢‚Ä†‚Äô Prozess verbessern
     √¢‚Ä†‚Äú
[N√§chster Sprint]
\`\`\`

## Praktische Szenarien
<!-- micro-quiz:bp-04-scrum-scrum-ablauf-visualisierung-micro-1 -->


### Szenario 1: Impediment im Sprint

**Situation:** Das Development Team kann nicht weiterarbeiten, weil der Zugang zur Testumgebung fehlt.

**L√∂sung:**
- Team meldet Impediment im Daily Scrum
- Scrum Master √ºbernimmt die Beseitigung
- Scrum Master koordiniert mit IT-Abteilung
- Team arbeitet an anderen Sprint Backlog Items

### Szenario 2: Neue dringende Anforderung

**Situation:** Ein wichtiger Kunde fordert ein neues Feature w√§hrend des Sprints.

**L√∂sung:**
- Product Owner nimmt Anforderung auf
- Priorisierung im Product Backlog
- **Nicht** in den laufenden Sprint aufnehmen
- Im n√§chsten Sprint Planning ber√ºcksichtigen
- Bei echter Notwendigkeit: Sprint abbrechen (selten!)

### Szenario 3: Team erreicht Sprint Goal nicht

**Situation:** Am Ende des Sprints sind nicht alle Sprint Backlog Items fertig.

**L√∂sung:**
- Fertige Items werden im Sprint Review pr√§sentiert
- Unfertige Items gehen zur√ºck ins Product Backlog
- In der Retrospective analysieren: Warum?
- Verbesserungsma√ünahmen definieren
- Velocity f√ºr n√§chste Planung anpassen

<!-- micro-quiz:bp-04-scrum-praktische-szenarien-micro-1 -->
## Vorteile von Scrum

√¢≈ì‚Ä¶ **Flexibilit√§t:** Schnelle Anpassung an √Ñnderungen

√¢≈ì‚Ä¶ **Transparenz:** Alle wissen, woran gearbeitet wird

√¢≈ì‚Ä¶ **Fr√ºhe Lieferung:** Regelm√§√üige Increments

√¢≈ì‚Ä¶ **Risikominimierung:** Fr√ºhe Problemerkennung

√¢≈ì‚Ä¶ **Kundenzufriedenheit:** Kontinuierliches Feedback

## H√§ufige Fehler (Anti-Patterns)
<!-- micro-quiz:bp-04-scrum-vorteile-von-scrum-micro-1 -->


√¢¬ù≈í **Scrum-But:** "Wir machen Scrum, aber..."

√¢¬ù≈í **Scrum Master als Projektleiter:** Falsche Rolleninterpretation

√¢¬ù≈í **Kein echtes Increment:** Nichts ist wirklich fertig

√¢¬ù≈í **Sprint Planning ohne Vorbereitung:** Product Backlog nicht refined

√¢¬ù≈í **Daily Scrum als Status-Meeting:** Berichtet an Scrum Master statt Team-Synchronisation

<!-- micro-quiz:bp-04-scrum-haufige-fehler-anti-patterns-micro-1 -->
## √úbungsaufgaben

### Aufgabe 1: Rollen zuordnen

Ordne die folgenden Aufgaben der richtigen Rolle zu:
- Product Backlog priorisieren
- Impediments beseitigen
- Code schreiben und testen
- Sprint Review moderieren
- Definition of Done erstellen

### Aufgabe 2: Event-Reihenfolge

Bringe die Scrum-Events in die richtige Reihenfolge f√ºr einen Sprint.

### Aufgabe 3: Szenario-Analyse

Ein Stakeholder m√∂chte im Daily Scrum teilnehmen und dem Team Aufgaben zuweisen. Was ist falsch daran und wie sollte es richtig sein?

### Aufgabe 4: User Story schreiben

Schreibe eine User Story f√ºr ein Login-Feature mit mindestens 3 Akzeptanzkriterien.

## Zusammenfassung
<!-- micro-quiz:bp-04-scrum-ubungsaufgaben-micro-1 -->


Scrum ist ein leichtgewichtiges Framework f√ºr agile Produktentwicklung. Mit seinen klar definierten Rollen (Product Owner, Scrum Master, Development Team), Events (Sprint, Sprint Planning, Daily Scrum, Sprint Review, Sprint Retrospective) und Artefakten (Product Backlog, Sprint Backlog, Increment) erm√∂glicht es Teams, komplexe Produkte iterativ und inkrementell zu entwickeln.



<!-- micro-quiz:scrum-quiz-2025 -->
<!-- micro-quiz:bp-04-scrum-zusammenfassung-micro-1 -->
`,uE=[{language:"markdown",title:"Beispiel: User Story mit Akzeptanzkriterien",code:`# User Story: Benutzer-Login

## Story
Als registrierter Benutzer
m√∂chte ich mich mit E-Mail und Passwort anmelden
damit ich auf mein pers√∂nliches Dashboard zugreifen kann

## Akzeptanzkriterien

1. GIVEN ich bin auf der Login-Seite
   WHEN ich g√ºltige Anmeldedaten eingebe
   THEN werde ich zum Dashboard weitergeleitet

2. GIVEN ich bin auf der Login-Seite
   WHEN ich ung√ºltige Anmeldedaten eingebe
   THEN sehe ich eine Fehlermeldung "E-Mail oder Passwort falsch"

3. GIVEN ich habe 3x falsche Anmeldedaten eingegeben
   WHEN ich einen 4. Versuch starte
   THEN wird mein Account f√ºr 15 Minuten gesperrt

4. GIVEN ich bin angemeldet
   WHEN ich 30 Minuten inaktiv bin
   THEN werde ich automatisch abgemeldet

## Story Points: 5

## Definition of Done
- [ ] Code implementiert
- [ ] Unit Tests geschrieben (Coverage > 80%)
- [ ] Integration Tests erfolgreich
- [ ] Security Review durchgef√ºhrt
- [ ] Dokumentation aktualisiert
- [ ] Von Product Owner akzeptiert`,explanation:"Eine vollst√§ndige User Story mit dem Standard-Format, testbaren Akzeptanzkriterien im Given-When-Then Format und einer Definition of Done."},{language:"markdown",title:"Beispiel: Sprint Backlog",code:`# Sprint Backlog - Sprint 15 (01.02. - 14.02.2025)

## Sprint Goal
"Benutzer k√∂nnen sich registrieren, anmelden und ihr Profil verwalten"

## Selected Product Backlog Items

### 1. User Story: Benutzer-Registrierung (8 SP)
**Status:** In Progress
**Verantwortlich:** Team

**Tasks:**
- [x] Datenbank-Schema f√ºr User-Tabelle erstellen (Anna)
- [x] Backend API f√ºr Registrierung implementieren (Tom)
- [ ] Frontend Registrierungsformular erstellen (Lisa)
- [ ] E-Mail-Verifizierung implementieren (Tom)
- [ ] Unit Tests schreiben (Anna)
- [ ] Integration Tests (Lisa)

### 2. User Story: Benutzer-Login (5 SP)
**Status:** To Do
**Verantwortlich:** Team

**Tasks:**
- [ ] JWT-Token-Generierung implementieren (Tom)
- [ ] Login-Endpoint erstellen (Tom)
- [ ] Frontend Login-Formular (Lisa)
- [ ] Session-Management (Anna)
- [ ] Tests schreiben (Team)

### 3. User Story: Profil anzeigen (3 SP)
**Status:** To Do
**Verantwortlich:** Team

**Tasks:**
- [ ] Profil-Endpoint erstellen (Tom)
- [ ] Profil-Seite im Frontend (Lisa)
- [ ] Avatar-Upload (Anna)
- [ ] Tests (Team)

## Impediments
- √¢≈°¬†√Ø¬∏¬è Zugang zur Test-Datenbank fehlt (Scrum Master k√ºmmert sich)

## Burndown
Tag 1: 16 SP verbleibend
Tag 2: 14 SP verbleibend
Tag 3: 14 SP verbleibend (Impediment)
...`,explanation:"Ein Sprint Backlog zeigt das Sprint Goal, die ausgew√§hlten User Stories mit Story Points und die detaillierten Tasks mit Verantwortlichkeiten und Status."},{language:"markdown",title:"Beispiel: Sprint Retrospective - Ergebnisse",code:`# Sprint Retrospective - Sprint 14

**Datum:** 31.01.2025
**Teilnehmer:** Gesamtes Scrum Team
**Moderator:** Scrum Master (Sarah)

## √∞≈∏Àú≈† Was lief gut?

1. **Pair Programming bei komplexen Features**
   - Weniger Bugs
   - Besserer Wissenstransfer
   - √¢‚Ä†‚Äô Weiter so!

2. **Verbesserte Definition of Done**
   - Klarere Erwartungen
   - Weniger Diskussionen im Review
   - √¢‚Ä†‚Äô Beibehalten

3. **Daily Scrum p√ºnktlich und fokussiert**
   - Alle waren vorbereitet
   - Nur 12 Minuten statt 15
   - √¢‚Ä†‚Äô Weiter so!

## √∞≈∏Àú‚Ä¢ Was kann verbessert werden?

1. **Code Reviews dauern zu lange**
   - Teilweise 2 Tage bis zum Merge
   - Blockiert andere Entwickler
   - √¢‚Ä†‚Äô Action Item definiert

2. **Unklare Akzeptanzkriterien**
   - Mehrfache R√ºckfragen an PO
   - Verz√∂gerungen
   - √¢‚Ä†‚Äô Action Item definiert

3. **Testumgebung instabil**
   - 3x ausgefallen w√§hrend Sprint
   - Tests konnten nicht durchgef√ºhrt werden
   - √¢‚Ä†‚Äô Action Item definiert

## √∞≈∏≈Ω¬Ø Action Items f√ºr n√§chsten Sprint

1. **Code Review SLA einf√ºhren**
   - Verantwortlich: Tom
   - Ziel: Reviews innerhalb 4 Stunden
   - Ma√ünahme: Rotation-System einf√ºhren

2. **Backlog Refinement verbessern**
   - Verantwortlich: Product Owner (Michael)
   - Ziel: Alle Stories haben klare Akzeptanzkriterien
   - Ma√ünahme: Refinement-Session 2 Tage vor Planning

3. **Testumgebung stabilisieren**
   - Verantwortlich: Scrum Master (Sarah)
   - Ziel: 99% Verf√ºgbarkeit
   - Ma√ünahme: Mit DevOps-Team Monitoring einrichten

## √∞≈∏‚Äú≈† Metriken

- **Velocity:** 18 SP (Ziel: 20 SP)
- **Sprint Goal erreicht:** Ja (80% der Stories Done)
- **Team-Zufriedenheit:** 8/10

## N√§chste Retrospective
14.02.2025 - √úberpr√ºfung der Action Items`,explanation:"Eine Sprint Retrospective dokumentiert, was gut lief, was verbessert werden kann und definiert konkrete Action Items mit Verantwortlichkeiten f√ºr den n√§chsten Sprint."}],cE=["scrum-quiz-2025"],dE=[{title:"Scrum Guide (offiziell)",url:"https://scrumguides.org/",type:"documentation"},{title:"Scrum.org - Learning Path",url:"https://www.scrum.org/",type:"article"}],mE="2025-01-10T00:00:00Z",gE="1.0",hE=["Du kannst scrum erkl√§ren","Du kannst agile erkl√§ren","Du kannst projektmanagement erkl√§ren","Du kannst sprint erkl√§ren","Du kannst product Owner erkl√§ren"],pE="Verstehe das Scrum-Framework mit seinen Rollen, Events und Artefakten f√ºr agile Softwareentwicklung.",fE=[{id:"scrum---agiles-projektmanagement",title:"Scrum - Agiles Projektmanagement",summary:"Kernaspekt: Scrum - Agiles Projektmanagement"},{id:"was-ist-scrum",title:"Was ist Scrum?",summary:"Kernaspekt: Was ist Scrum?"},{id:"die-drei-scrum-rollen",title:"Die drei Scrum-Rollen",summary:"Kernaspekt: Die drei Scrum-Rollen"},{id:"die-funf-scrum-events",title:"Die f√ºnf Scrum-Events",summary:"Kernaspekt: Die f√ºnf Scrum-Events"},{id:"die-drei-scrum-artefakte",title:"Die drei Scrum-Artefakte",summary:"Kernaspekt: Die drei Scrum-Artefakte"},{id:"definition-of-done-dod",title:"Definition of Done (DoD)",summary:"Kernaspekt: Definition of Done (DoD)"},{id:"user-stories",title:"User Stories",summary:"Kernaspekt: User Stories"},{id:"story-points",title:"Story Points",summary:"Kernaspekt: Story Points"},{id:"scrum-ablauf-visualisierung",title:"Scrum-Ablauf Visualisierung",summary:"Kernaspekt: Scrum-Ablauf Visualisierung"},{id:"praktische-szenarien",title:"Praktische Szenarien",summary:"Kernaspekt: Praktische Szenarien"},{id:"vorteile-von-scrum",title:"Vorteile von Scrum",summary:"Kernaspekt: Vorteile von Scrum"},{id:"haufige-fehler-anti-patterns",title:"H√§ufige Fehler (Anti-Patterns)",summary:"Kernaspekt: H√§ufige Fehler (Anti-Patterns)"},{id:"ubungsaufgaben",title:"√úbungsaufgaben",summary:"Kernaspekt: √úbungsaufgaben"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],bE="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",kE="Automatisch erg√§nzt: Review erforderlich",zE=["bp-04-scrum-was-ist-scrum-micro-1","bp-04-scrum-die-drei-scrum-rollen-micro-1","bp-04-scrum-die-funf-scrum-events-micro-1","bp-04-scrum-die-drei-scrum-artefakte-micro-1","bp-04-scrum-definition-of-done-dod-micro-1","bp-04-scrum-user-stories-micro-1","bp-04-scrum-story-points-micro-1","bp-04-scrum-scrum-ablauf-visualisierung-micro-1","bp-04-scrum-praktische-szenarien-micro-1","bp-04-scrum-vorteile-von-scrum-micro-1","bp-04-scrum-haufige-fehler-anti-patterns-micro-1","bp-04-scrum-ubungsaufgaben-micro-1","bp-04-scrum-zusammenfassung-micro-1"],vE={id:QA,title:ZA,description:JA,category:YA,subcategory:XA,difficulty:eE,examRelevance:nE,newIn2025:tE,removedIn2025:iE,important:rE,estimatedTime:sE,prerequisites:aE,tags:oE,content:lE,codeExamples:uE,relatedQuizzes:cE,resources:dE,lastUpdated:mE,version:gE,learningObjectives:hE,summary:pE,contentOutline:fE,accessibilityNotes:bE,editorNote:kE,microQuizzes:zE},yE="bp-05-data-structures",SE="Datenstrukturen (Arrays, Listen, Stacks, Queues, Trees)",wE="Grundlegende Datenstrukturen und ihre Anwendungsf√§lle",AE="BP-05",EE="Algorithmen und Datenstrukturen",_E="intermediate",DE="high",PE=!1,TE=!1,qE=!0,RE=60,IE=[],CE=["Datenstrukturen","Arrays","Listen","Stack","Queue","Tree"],LE=`# Datenstrukturen

## Einf√ºhrung

Datenstrukturen sind Methoden zur Organisation und Speicherung von Daten, die effiziente Zugriffs- und √Ñnderungsoperationen erm√∂glichen.

<!-- micro-quiz:bp-05-data-structures-einfuhrung-micro-1 -->
## Arrays

### Eigenschaften

- **Feste Gr√∂√üe**: Gr√∂√üe bei Erstellung festgelegt
- **Zusammenh√§ngender Speicher**: Elemente direkt hintereinander
- **Index-basierter Zugriff**: O(1) Zugriff
- **Homogen**: Alle Elemente gleichen Typs

### Operationen

\`\`\`java
// Array erstellen
int[] numbers = new int[5];
int[] values = {1, 2, 3, 4, 5};

// Zugriff: O(1)
int first = values[0];

// √Ñndern: O(1)
values[2] = 10;

// Suchen: O(n)
for (int i = 0; i < values.length; i++) {
    if (values[i] == 10) {
        System.out.println("Found at index " + i);
    }
}
\`\`\`

### Vor- und Nachteile

**Vorteile:**
- Schneller Zugriff (O(1))
- Geringer Speicher-Overhead
- Cache-freundlich

**Nachteile:**
- Feste Gr√∂√üe
- Einf√ºgen/L√∂schen teuer (O(n))
- Verschwendung bei nicht voller Nutzung

## Listen
<!-- micro-quiz:bp-05-data-structures-arrays-micro-1 -->


### ArrayList (Dynamisches Array)

\`\`\`java
import java.util.ArrayList;

ArrayList<String> list = new ArrayList<>();

// Hinzuf√ºgen: O(1) amortisiert
list.add("Apple");
list.add("Banana");
list.add("Cherry");

// Zugriff: O(1)
String first = list.get(0);

// Einf√ºgen: O(n)
list.add(1, "Apricot");

// L√∂schen: O(n)
list.remove(0);

// Gr√∂√üe
int size = list.size();
\`\`\`

### LinkedList (Verkettete Liste)

**Struktur:**
\`\`\`
[Data|Next] -> [Data|Next] -> [Data|Next] -> null
\`\`\`

\`\`\`java
import java.util.LinkedList;

LinkedList<String> list = new LinkedList<>();

// Hinzuf√ºgen: O(1) am Anfang/Ende
list.addFirst("First");
list.addLast("Last");

// Zugriff: O(n)
String element = list.get(2);

// Einf√ºgen: O(1) wenn Position bekannt
list.add(1, "Middle");

// L√∂schen: O(1) wenn Position bekannt
list.removeFirst();
list.removeLast();
\`\`\`

### ArrayList vs. LinkedList

| Operation | ArrayList | LinkedList |
|-----------|-----------|------------|
| Zugriff | O(1) | O(n) |
| Einf√ºgen (Ende) | O(1)* | O(1) |
| Einf√ºgen (Mitte) | O(n) | O(1)** |
| L√∂schen | O(n) | O(1)** |
| Speicher | Weniger | Mehr (Pointer) |

*amortisiert, **wenn Position bekannt

<!-- micro-quiz:bp-05-data-structures-listen-micro-1 -->
## Stack (Stapel)

### Eigenschaften

- **LIFO**: Last In, First Out
- **Push**: Element oben hinzuf√ºgen
- **Pop**: Element oben entfernen
- **Peek**: Oberstes Element ansehen

### Implementierung

\`\`\`java
import java.util.Stack;

Stack<Integer> stack = new Stack<>();

// Push: O(1)
stack.push(1);
stack.push(2);
stack.push(3);

// Peek: O(1)
int top = stack.peek();  // 3

// Pop: O(1)
int removed = stack.pop();  // 3

// Leer?
boolean empty = stack.isEmpty();

// Gr√∂√üe
int size = stack.size();
\`\`\`

### Anwendungsf√§lle

- **Funktionsaufrufe**: Call Stack
- **Undo/Redo**: Aktionen r√ºckg√§ngig machen
- **Klammerpr√ºfung**: Syntaxvalidierung
- **Tiefensuche (DFS)**: Graph-Traversierung

### Beispiel: Klammerpr√ºfung

\`\`\`java
public boolean isValidParentheses(String s) {
    Stack<Character> stack = new Stack<>();
    
    for (char c : s.toCharArray()) {
        if (c == '(' || c == '[' || c == '{') {
            stack.push(c);
        } else {
            if (stack.isEmpty()) return false;
            
            char top = stack.pop();
            if (c == ')' && top != '(') return false;
            if (c == ']' && top != '[') return false;
            if (c == '}' && top != '{') return false;
        }
    }
    
    return stack.isEmpty();
}

// Test
isValidParentheses("({[]})");  // true
isValidParentheses("({[})");   // false
\`\`\`

## Queue (Warteschlange)
<!-- micro-quiz:bp-05-data-structures-stack-stapel-micro-1 -->


### Eigenschaften

- **FIFO**: First In, First Out
- **Enqueue**: Element hinten hinzuf√ºgen
- **Dequeue**: Element vorne entfernen
- **Peek**: Vorderstes Element ansehen

### Implementierung

\`\`\`java
import java.util.Queue;
import java.util.LinkedList;

Queue<String> queue = new LinkedList<>();

// Enqueue: O(1)
queue.offer("First");
queue.offer("Second");
queue.offer("Third");

// Peek: O(1)
String front = queue.peek();  // "First"

// Dequeue: O(1)
String removed = queue.poll();  // "First"

// Leer?
boolean empty = queue.isEmpty();

// Gr√∂√üe
int size = queue.size();
\`\`\`

### Anwendungsf√§lle

- **Task-Scheduling**: Aufgabenwarteschlange
- **Breadth-First Search (BFS)**: Graph-Traversierung
- **Printer Queue**: Druckauftr√§ge
- **Message Queue**: Nachrichtenverarbeitung

### Priority Queue

\`\`\`java
import java.util.PriorityQueue;

PriorityQueue<Integer> pq = new PriorityQueue<>();

// Hinzuf√ºgen: O(log n)
pq.offer(5);
pq.offer(1);
pq.offer(3);

// Peek: O(1) - kleinstes Element
int min = pq.peek();  // 1

// Poll: O(log n)
int removed = pq.poll();  // 1
\`\`\`

<!-- micro-quiz:bp-05-data-structures-queue-warteschlange-micro-1 -->
## Trees (B√§ume)

### Binary Tree (Bin√§rbaum)

**Struktur:**
\`\`\`
       10
      /  \\
     5    15
    / \\   / \\
   3   7 12  20
\`\`\`

**Eigenschaften:**
- Jeder Knoten hat maximal 2 Kinder
- Root: Wurzelknoten
- Leaf: Blattknoten (keine Kinder)
- Height: H√∂he des Baums

### Binary Search Tree (BST)

**Eigenschaften:**
- Linkes Kind < Parent
- Rechtes Kind > Parent
- Effiziente Suche: O(log n) im Durchschnitt

\`\`\`java
class TreeNode {
    int value;
    TreeNode left;
    TreeNode right;
    
    TreeNode(int value) {
        this.value = value;
    }
}

class BinarySearchTree {
    TreeNode root;
    
    // Einf√ºgen: O(log n) durchschnittlich
    public void insert(int value) {
        root = insertRec(root, value);
    }
    
    private TreeNode insertRec(TreeNode node, int value) {
        if (node == null) {
            return new TreeNode(value);
        }
        
        if (value < node.value) {
            node.left = insertRec(node.left, value);
        } else if (value > node.value) {
            node.right = insertRec(node.right, value);
        }
        
        return node;
    }
    
    // Suchen: O(log n) durchschnittlich
    public boolean search(int value) {
        return searchRec(root, value);
    }
    
    private boolean searchRec(TreeNode node, int value) {
        if (node == null) return false;
        if (node.value == value) return true;
        
        if (value < node.value) {
            return searchRec(node.left, value);
        } else {
            return searchRec(node.right, value);
        }
    }
}
\`\`\`

### Tree Traversal (Baumtraversierung)

**Inorder (Links-Wurzel-Rechts):**
\`\`\`java
void inorder(TreeNode node) {
    if (node == null) return;
    inorder(node.left);
    System.out.print(node.value + " ");
    inorder(node.right);
}
// Output f√ºr BST: 3 5 7 10 12 15 20 (sortiert!)
\`\`\`

**Preorder (Wurzel-Links-Rechts):**
\`\`\`java
void preorder(TreeNode node) {
    if (node == null) return;
    System.out.print(node.value + " ");
    preorder(node.left);
    preorder(node.right);
}
// Output: 10 5 3 7 15 12 20
\`\`\`

**Postorder (Links-Rechts-Wurzel):**
\`\`\`java
void postorder(TreeNode node) {
    if (node == null) return;
    postorder(node.left);
    postorder(node.right);
    System.out.print(node.value + " ");
}
// Output: 3 7 5 12 20 15 10
\`\`\`

**Level-Order (Breitensuche):**
\`\`\`java
void levelOrder(TreeNode root) {
    if (root == null) return;
    
    Queue<TreeNode> queue = new LinkedList<>();
    queue.offer(root);
    
    while (!queue.isEmpty()) {
        TreeNode node = queue.poll();
        System.out.print(node.value + " ");
        
        if (node.left != null) queue.offer(node.left);
        if (node.right != null) queue.offer(node.right);
    }
}
// Output: 10 5 15 3 7 12 20
\`\`\`

## Hash Table (Hash Map)
<!-- micro-quiz:bp-05-data-structures-trees-baume-micro-1 -->


### Eigenschaften

- **Key-Value-Paare**: Zuordnung von Schl√ºsseln zu Werten
- **Hash-Funktion**: Berechnet Index aus Schl√ºssel
- **Durchschnittlich O(1)**: F√ºr Einf√ºgen, Suchen, L√∂schen

\`\`\`java
import java.util.HashMap;

HashMap<String, Integer> map = new HashMap<>();

// Einf√ºgen: O(1) durchschnittlich
map.put("Alice", 25);
map.put("Bob", 30);
map.put("Charlie", 35);

// Zugriff: O(1) durchschnittlich
int age = map.get("Alice");  // 25

// Enth√§lt Schl√ºssel?
boolean hasKey = map.containsKey("Bob");  // true

// L√∂schen: O(1) durchschnittlich
map.remove("Charlie");

// Iterieren
for (String key : map.keySet()) {
    System.out.println(key + ": " + map.get(key));
}
\`\`\`

<!-- micro-quiz:bp-05-data-structures-hash-table-hash-map-micro-1 -->
## Komplexit√§tsvergleich

| Datenstruktur | Zugriff | Suchen | Einf√ºgen | L√∂schen |
|---------------|---------|--------|----------|----------|
| Array | O(1) | O(n) | O(n) | O(n) |
| ArrayList | O(1) | O(n) | O(n) | O(n) |
| LinkedList | O(n) | O(n) | O(1)* | O(1)* |
| Stack | O(n) | O(n) | O(1) | O(1) |
| Queue | O(n) | O(n) | O(1) | O(1) |
| BST | O(log n) | O(log n) | O(log n) | O(log n) |
| Hash Table | - | O(1)** | O(1)** | O(1)** |

*wenn Position bekannt, **durchschnittlich

## Pr√ºfungsrelevante Aspekte
<!-- micro-quiz:bp-05-data-structures-komplexitatsvergleich-micro-1 -->


- Datenstrukturen und ihre Eigenschaften kennen
- Zeitkomplexit√§t von Operationen verstehen
- Anwendungsf√§lle zuordnen
- Stack vs. Queue unterscheiden
- Tree-Traversierung verstehen
- Vor- und Nachteile benennen


<!-- micro-quiz:bp-05-data-structures-prufungsrelevante-aspekte-micro-1 -->`,ME=[{language:"java",code:`// Praktisches Beispiel: LRU Cache mit LinkedHashMap
import java.util.LinkedHashMap;
import java.util.Map;

class LRUCache<K, V> extends LinkedHashMap<K, V> {
    private final int capacity;
    
    public LRUCache(int capacity) {
        super(capacity, 0.75f, true);  // accessOrder = true
        this.capacity = capacity;
    }
    
    @Override
    protected boolean removeEldestEntry(Map.Entry<K, V> eldest) {
        return size() > capacity;
    }
}

// Verwendung
LRUCache<String, Integer> cache = new LRUCache<>(3);
cache.put("A", 1);
cache.put("B", 2);
cache.put("C", 3);
cache.get("A");  // A wird "recent"
cache.put("D", 4);  // B wird entfernt (least recently used)

System.out.println(cache);  // {C=3, A=1, D=4}`,explanation:"LRU Cache kombiniert HashMap und LinkedList f√ºr effiziente Cache-Verwaltung",title:"LRU Cache Implementierung"}],OE=[],NE=[{title:"Java Collections Framework",url:"https://docs.oracle.com/javase/8/docs/technotes/guides/collections/",type:"documentation"}],BE="2025-01-10T00:00:00Z",xE="1.0",VE=["Du kannst datenstrukturen erkl√§ren","Du kannst arrays erkl√§ren","Du kannst listen erkl√§ren","Du kannst stack erkl√§ren","Du kannst queue erkl√§ren"],FE="Grundlegende Datenstrukturen und ihre Anwendungsf√§lle",KE=[{id:"datenstrukturen",title:"Datenstrukturen",summary:"Kernaspekt: Datenstrukturen"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"arrays",title:"Arrays",summary:"Kernaspekt: Arrays"},{id:"listen",title:"Listen",summary:"Kernaspekt: Listen"},{id:"stack-stapel",title:"Stack (Stapel)",summary:"Kernaspekt: Stack (Stapel)"},{id:"queue-warteschlange",title:"Queue (Warteschlange)",summary:"Kernaspekt: Queue (Warteschlange)"},{id:"trees-baume",title:"Trees (B√§ume)",summary:"Kernaspekt: Trees (B√§ume)"},{id:"hash-table-hash-map",title:"Hash Table (Hash Map)",summary:"Kernaspekt: Hash Table (Hash Map)"},{id:"komplexitatsvergleich",title:"Komplexit√§tsvergleich",summary:"Kernaspekt: Komplexit√§tsvergleich"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],WE="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",jE="Automatisch erg√§nzt: Review erforderlich",$E=["bp-05-data-structures-einfuhrung-micro-1","bp-05-data-structures-arrays-micro-1","bp-05-data-structures-listen-micro-1","bp-05-data-structures-stack-stapel-micro-1","bp-05-data-structures-queue-warteschlange-micro-1","bp-05-data-structures-trees-baume-micro-1","bp-05-data-structures-hash-table-hash-map-micro-1","bp-05-data-structures-komplexitatsvergleich-micro-1","bp-05-data-structures-prufungsrelevante-aspekte-micro-1"],GE={id:yE,title:SE,description:wE,category:AE,subcategory:EE,difficulty:_E,examRelevance:DE,newIn2025:PE,removedIn2025:TE,important:qE,estimatedTime:RE,prerequisites:IE,tags:CE,content:LE,codeExamples:ME,relatedQuizzes:OE,resources:NE,lastUpdated:BE,version:xE,learningObjectives:VE,summary:FE,contentOutline:KE,accessibilityNotes:WE,editorNote:jE,microQuizzes:$E},UE="bp-05-encapsulation",HE="Kapselung (Encapsulation)",QE="Verstehe das Prinzip der Kapselung in der objektorientierten Programmierung.",ZE="BP-05",JE="Objektorientierte Programmierung",YE="intermediate",XE="high",e0=!1,n0=!1,t0=!0,i0=30,r0=[],s0=["OOP","Kapselung","Encapsulation","Information Hiding"],a0=`# Kapselung (Encapsulation)

## Einf√ºhrung

Kapselung ist ein grundlegendes Prinzip der objektorientierten Programmierung.

<!-- micro-quiz:bp-05-encapsulation-einfuhrung-micro-1 -->
## Konzept

Kapselung bedeutet, dass Daten und Methoden in einer Klasse zusammengefasst werden und der Zugriff kontrolliert wird.


<!-- micro-quiz:bp-05-encapsulation-konzept-micro-1 -->`,o0=[],l0=[],u0=[],c0="2025-01-10T00:00:00Z",d0="1.0",m0=["Du kannst oOP erkl√§ren","Du kannst kapselung erkl√§ren","Du kannst encapsulation erkl√§ren","Du kannst information Hiding erkl√§ren"],g0="Verstehe das Prinzip der Kapselung in der objektorientierten Programmierung.",h0=[{id:"kapselung-encapsulation",title:"Kapselung (Encapsulation)",summary:"Kernaspekt: Kapselung (Encapsulation)"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"konzept",title:"Konzept",summary:"Kernaspekt: Konzept"}],p0="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",f0="Automatisch erg√§nzt: Review erforderlich",b0=["bp-05-encapsulation-einfuhrung-micro-1","bp-05-encapsulation-konzept-micro-1"],k0={id:UE,title:HE,description:QE,category:ZE,subcategory:JE,difficulty:YE,examRelevance:XE,newIn2025:e0,removedIn2025:n0,important:t0,estimatedTime:i0,prerequisites:r0,tags:s0,content:a0,codeExamples:o0,relatedQuizzes:l0,resources:u0,lastUpdated:c0,version:d0,learningObjectives:m0,summary:g0,contentOutline:h0,accessibilityNotes:p0,editorNote:f0,microQuizzes:b0},z0="bp-05-sorting",v0="Sortierverfahren - Bubble, Selection und Insertion Sort",y0="Lerne die grundlegenden Sortieralgorithmen Bubble Sort, Selection Sort und Insertion Sort mit Visualisierungen und Komplexit√§tsanalyse.",S0="BP-05",w0="OOP und Algorithmen",A0="intermediate",E0="high",_0=!0,D0=!1,P0=!0,T0=60,q0=[],R0=["Sortieralgorithmen","Bubble Sort","Selection Sort","Insertion Sort","Zeitkomplexit√§t","Big-O","Neu 2025"],I0=`# Sortierverfahren

## Einf√ºhrung

Sortieralgorithmen sind fundamentale Algorithmen in der Informatik, die eine Liste von Elementen in eine bestimmte Reihenfolge bringen. In der IHK-Pr√ºfung sind besonders **Bubble Sort**, **Selection Sort** und **Insertion Sort** relevant.

<!-- micro-quiz:bp-05-sorting-einfuhrung-micro-1 -->
## Warum Sortieren wichtig ist

- **Suche beschleunigen:** Sortierte Daten erm√∂glichen bin√§re Suche (O(log n))
- **Daten organisieren:** Bessere √úbersicht und Analyse
- **Algorithmen-Verst√§ndnis:** Grundlage f√ºr komplexere Algorithmen
- **Praxisrelevanz:** Datenbanken, Suchmaschinen, Dateisysteme

## Zeitkomplexit√§t - Big-O Notation
<!-- micro-quiz:bp-05-sorting-warum-sortieren-wichtig-ist-micro-1 -->


Die **Big-O Notation** beschreibt, wie die Laufzeit eines Algorithmus mit der Eingabegr√∂√üe w√§chst.

### Wichtige Komplexit√§tsklassen

- **O(1)** - Konstant: Unabh√§ngig von Eingabegr√∂√üe
- **O(log n)** - Logarithmisch: Sehr effizient (z.B. bin√§re Suche)
- **O(n)** - Linear: Proportional zur Eingabegr√∂√üe
- **O(n log n)** - Linearithmisch: Effiziente Sortieralgorithmen (z.B. Merge Sort)
- **O(n√Ç¬≤)** - Quadratisch: Ineffizient bei gro√üen Datenmengen
- **O(2√¢¬Å¬ø)** - Exponentiell: Sehr ineffizient

### Best, Average, Worst Case

- **Best Case:** Beste m√∂gliche Laufzeit (z.B. bereits sortierte Liste)
- **Average Case:** Durchschnittliche Laufzeit
- **Worst Case:** Schlechteste m√∂gliche Laufzeit (z.B. umgekehrt sortierte Liste)

<!-- micro-quiz:bp-05-sorting-zeitkomplexitat---big-o-notation-micro-1 -->
## 1. Bubble Sort (Blasensortierung)

### Funktionsweise

Bubble Sort vergleicht **benachbarte Elemente** und tauscht sie, wenn sie in falscher Reihenfolge sind. Dieser Prozess wird wiederholt, bis die Liste sortiert ist.

**Metapher:** Wie Blasen im Wasser steigen die gr√∂√üten Elemente nach oben.

### Algorithmus-Schritte

1. Durchlaufe die Liste von links nach rechts
2. Vergleiche jedes Element mit seinem Nachbarn
3. Tausche die Elemente, wenn sie in falscher Reihenfolge sind
4. Wiederhole, bis keine Tauschoperationen mehr n√∂tig sind

### Visualisierung

\`\`\`
Unsortiert: [5, 2, 8, 1, 9]

Durchlauf 1:
[5, 2, 8, 1, 9] √¢‚Ä†‚Äô [2, 5, 8, 1, 9]  (5 und 2 tauschen)
[2, 5, 8, 1, 9] √¢‚Ä†‚Äô [2, 5, 8, 1, 9]  (5 und 8 OK)
[2, 5, 8, 1, 9] √¢‚Ä†‚Äô [2, 5, 1, 8, 9]  (8 und 1 tauschen)
[2, 5, 1, 8, 9] √¢‚Ä†‚Äô [2, 5, 1, 8, 9]  (8 und 9 OK)

Durchlauf 2:
[2, 5, 1, 8, 9] √¢‚Ä†‚Äô [2, 5, 1, 8, 9]  (2 und 5 OK)
[2, 5, 1, 8, 9] √¢‚Ä†‚Äô [2, 1, 5, 8, 9]  (5 und 1 tauschen)
[2, 1, 5, 8, 9] √¢‚Ä†‚Äô [2, 1, 5, 8, 9]  (5 und 8 OK)

Durchlauf 3:
[2, 1, 5, 8, 9] √¢‚Ä†‚Äô [1, 2, 5, 8, 9]  (2 und 1 tauschen)

Sortiert: [1, 2, 5, 8, 9]
\`\`\`

### Komplexit√§t

- **Best Case:** O(n) - Liste bereits sortiert (mit Optimierung)
- **Average Case:** O(n√Ç¬≤)
- **Worst Case:** O(n√Ç¬≤) - Liste umgekehrt sortiert
- **Speicher:** O(1) - In-Place Sortierung

### Eigenschaften

√¢≈ì‚Ä¶ **Stabil:** Gleiche Elemente behalten ihre relative Reihenfolge

√¢≈ì‚Ä¶ **In-Place:** Ben√∂tigt keinen zus√§tzlichen Speicher

√¢¬ù≈í **Ineffizient:** Langsam bei gro√üen Datenmengen

## 2. Selection Sort (Auswahlsortierung)
<!-- micro-quiz:bp-05-sorting-1-bubble-sort-blasensortierung-micro-1 -->


### Funktionsweise

Selection Sort sucht in jedem Durchlauf das **kleinste Element** und platziert es an der richtigen Position.

**Metapher:** Wie beim Kartensortieren - suche die kleinste Karte und lege sie ganz links ab.

### Algorithmus-Schritte

1. Finde das kleinste Element in der unsortierten Liste
2. Tausche es mit dem ersten Element
3. Finde das zweitkleinste Element
4. Tausche es mit dem zweiten Element
5. Wiederhole, bis die Liste sortiert ist

### Visualisierung

\`\`\`
Unsortiert: [5, 2, 8, 1, 9]
           ^
Durchlauf 1: Suche Minimum (1)
[5, 2, 8, 1, 9] √¢‚Ä†‚Äô [1, 2, 8, 5, 9]
 ^        ^         (1 und 5 tauschen)

Durchlauf 2: Suche Minimum in [2, 8, 5, 9] √¢‚Ä†‚Äô 2
[1, 2, 8, 5, 9] √¢‚Ä†‚Äô [1, 2, 8, 5, 9]
    ^              (2 bereits an richtiger Position)

Durchlauf 3: Suche Minimum in [8, 5, 9] √¢‚Ä†‚Äô 5
[1, 2, 8, 5, 9] √¢‚Ä†‚Äô [1, 2, 5, 8, 9]
       ^  ^         (5 und 8 tauschen)

Durchlauf 4: Suche Minimum in [8, 9] √¢‚Ä†‚Äô 8
[1, 2, 5, 8, 9] √¢‚Ä†‚Äô [1, 2, 5, 8, 9]
          ^        (8 bereits an richtiger Position)

Sortiert: [1, 2, 5, 8, 9]
\`\`\`

### Komplexit√§t

- **Best Case:** O(n√Ç¬≤)
- **Average Case:** O(n√Ç¬≤)
- **Worst Case:** O(n√Ç¬≤)
- **Speicher:** O(1) - In-Place Sortierung

### Eigenschaften

√¢¬ù≈í **Nicht stabil:** Kann relative Reihenfolge √§ndern

√¢≈ì‚Ä¶ **In-Place:** Ben√∂tigt keinen zus√§tzlichen Speicher

√¢≈ì‚Ä¶ **Wenige Tauschoperationen:** Maximal n-1 Tausche

√¢¬ù≈í **Immer O(n√Ç¬≤):** Auch bei bereits sortierten Listen

<!-- micro-quiz:bp-05-sorting-2-selection-sort-auswahlsortierung-micro-1 -->
## 3. Insertion Sort (Einf√ºgesortierung)

### Funktionsweise

Insertion Sort baut eine sortierte Liste auf, indem jedes Element an der **richtigen Position eingef√ºgt** wird.

**Metapher:** Wie beim Kartensortieren in der Hand - nimm eine Karte und f√ºge sie an der richtigen Stelle ein.

### Algorithmus-Schritte

1. Beginne mit dem zweiten Element
2. Vergleiche es mit den Elementen links davon
3. Verschiebe gr√∂√üere Elemente nach rechts
4. F√ºge das Element an der richtigen Position ein
5. Wiederhole f√ºr alle Elemente

### Visualisierung

\`\`\`
Unsortiert: [5, 2, 8, 1, 9]

Schritt 1: F√ºge 2 ein
[5 | 2, 8, 1, 9]
[2, 5 | 8, 1, 9]  (2 vor 5 einf√ºgen)

Schritt 2: F√ºge 8 ein
[2, 5 | 8, 1, 9]
[2, 5, 8 | 1, 9]  (8 ist bereits richtig)

Schritt 3: F√ºge 1 ein
[2, 5, 8 | 1, 9]
[1, 2, 5, 8 | 9]  (1 ganz vorne einf√ºgen)

Schritt 4: F√ºge 9 ein
[1, 2, 5, 8 | 9]
[1, 2, 5, 8, 9]   (9 ist bereits richtig)

Sortiert: [1, 2, 5, 8, 9]
\`\`\`

### Komplexit√§t

- **Best Case:** O(n) - Liste bereits sortiert
- **Average Case:** O(n√Ç¬≤)
- **Worst Case:** O(n√Ç¬≤) - Liste umgekehrt sortiert
- **Speicher:** O(1) - In-Place Sortierung

### Eigenschaften

√¢≈ì‚Ä¶ **Stabil:** Gleiche Elemente behalten ihre relative Reihenfolge

√¢≈ì‚Ä¶ **In-Place:** Ben√∂tigt keinen zus√§tzlichen Speicher

√¢≈ì‚Ä¶ **Effizient f√ºr kleine Listen:** Besser als Bubble/Selection Sort

√¢≈ì‚Ä¶ **Effizient f√ºr fast sortierte Listen:** O(n) im Best Case

√¢≈ì‚Ä¶ **Online-Algorithmus:** Kann Elemente w√§hrend der Eingabe sortieren

## Vergleich der Sortierverfahren
<!-- micro-quiz:bp-05-sorting-3-insertion-sort-einfugesortierung-micro-1 -->


| Eigenschaft | Bubble Sort | Selection Sort | Insertion Sort |
|-------------|-------------|----------------|----------------|
| **Best Case** | O(n)* | O(n√Ç¬≤) | O(n) |
| **Average Case** | O(n√Ç¬≤) | O(n√Ç¬≤) | O(n√Ç¬≤) |
| **Worst Case** | O(n√Ç¬≤) | O(n√Ç¬≤) | O(n√Ç¬≤) |
| **Speicher** | O(1) | O(1) | O(1) |
| **Stabil** | √¢≈ì‚Ä¶ Ja | √¢¬ù≈í Nein | √¢≈ì‚Ä¶ Ja |
| **Tauschoperationen** | Viele | Wenige | Mittel |
| **Vergleiche** | Viele | Viele | Wenige (Best Case) |
| **Geeignet f√ºr** | Kleine Listen | Kleine Listen | Fast sortierte Listen |

*mit Optimierung (Early Exit)

<!-- micro-quiz:bp-05-sorting-vergleich-der-sortierverfahren-micro-1 -->
## Wann welchen Algorithmus verwenden?

### Bubble Sort
- √¢≈ì‚Ä¶ Lernzwecke und einfache Implementierung
- √¢≈ì‚Ä¶ Sehr kleine Datenmengen (< 10 Elemente)
- √¢¬ù≈í Produktivcode (zu ineffizient)

### Selection Sort
- √¢≈ì‚Ä¶ Wenn Tauschoperationen teuer sind
- √¢≈ì‚Ä¶ Kleine Datenmengen
- √¢¬ù≈í Wenn Stabilit√§t wichtig ist

### Insertion Sort
- √¢≈ì‚Ä¶ Fast sortierte Listen
- √¢≈ì‚Ä¶ Kleine bis mittlere Datenmengen
- √¢≈ì‚Ä¶ Online-Sortierung (Daten kommen nach und nach)
- √¢≈ì‚Ä¶ Als Teil von Hybrid-Algorithmen (z.B. Timsort)

### F√ºr gro√üe Datenmengen
- √¢≈ì‚Ä¶ **Merge Sort** - O(n log n), stabil
- √¢≈ì‚Ä¶ **Quick Sort** - O(n log n) average, in-place
- √¢≈ì‚Ä¶ **Heap Sort** - O(n log n), in-place

## Stabilit√§t bei Sortieralgorithmen
<!-- micro-quiz:bp-05-sorting-wann-welchen-algorithmus-verwenden-micro-1 -->


**Stabil** bedeutet: Elemente mit gleichem Wert behalten ihre urspr√ºngliche Reihenfolge.

**Beispiel:**
\`\`\`
Unsortiert: [(3, A), (1, B), (3, C), (2, D)]

Stabil sortiert:   [(1, B), (2, D), (3, A), (3, C)]
                                      √¢‚Ä†‚Äò A vor C

Instabil sortiert: [(1, B), (2, D), (3, C), (3, A)]
                                      √¢‚Ä†‚Äò C vor A (Reihenfolge ge√§ndert!)
\`\`\`

**Wichtig bei:**
- Mehrfachem Sortieren nach verschiedenen Kriterien
- Sortierung von Objekten mit mehreren Attributen

<!-- micro-quiz:bp-05-sorting-stabilitat-bei-sortieralgorithmen-micro-1 -->
## √úbungsaufgaben

### Aufgabe 1: Algorithmus erkennen

Welcher Sortieralgorithmus wird hier verwendet?
\`\`\`
[64, 25, 12, 22, 11]
[11, 25, 12, 22, 64]  (11 und 64 getauscht)
[11, 12, 25, 22, 64]  (12 und 25 getauscht)
[11, 12, 22, 25, 64]  (22 und 25 getauscht)
\`\`\`

### Aufgabe 2: Komplexit√§t berechnen

Eine Liste hat 100 Elemente. Wie viele Vergleiche macht Selection Sort im Worst Case?

### Aufgabe 3: Bester Algorithmus w√§hlen

Welcher Algorithmus ist am besten geeignet f√ºr:
a) Eine fast sortierte Liste mit 1000 Elementen?
b) Eine Liste mit 5 Elementen?
c) Eine Liste, bei der Stabilit√§t wichtig ist?

### Aufgabe 4: Sortierung durchf√ºhren

Sortiere [3, 1, 4, 1, 5] mit Bubble Sort. Zeige jeden Durchlauf.

### Aufgabe 5: Code-L√ºcken f√ºllen

Vervollst√§ndige den Insertion Sort Code (siehe Code-Beispiele).

## Zusammenfassung
<!-- micro-quiz:bp-05-sorting-ubungsaufgaben-micro-1 -->


Alle drei Sortieralgorithmen haben eine Zeitkomplexit√§t von **O(n√Ç¬≤)** im Average und Worst Case, sind aber f√ºr kleine Datenmengen und Lernzwecke geeignet.

**Merks√§tze:**
- **Bubble Sort:** Tausche benachbarte Elemente
- **Selection Sort:** W√§hle das Minimum aus
- **Insertion Sort:** F√ºge Elemente sortiert ein

F√ºr gro√üe Datenmengen sollten effizientere Algorithmen wie Merge Sort oder Quick Sort verwendet werden.



<!-- micro-quiz:sorting-algorithms-quiz-2025 -->
<!-- micro-quiz:bp-05-sorting-zusammenfassung-micro-1 -->
`,C0=[{language:"java",title:"Bubble Sort - Java Implementierung",code:`public class BubbleSort {
    
    public static void bubbleSort(int[] arr) {
        int n = arr.length;
        boolean swapped;
        
        // √Ñu√üere Schleife: Durchl√§ufe
        for (int i = 0; i < n - 1; i++) {
            swapped = false;
            
            // Innere Schleife: Vergleiche benachbarte Elemente
            for (int j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    // Tausche arr[j] und arr[j+1]
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                    swapped = true;
                }
            }
            
            // Optimierung: Wenn keine Tausche, ist Liste sortiert
            if (!swapped) {
                break;
            }
        }
    }
    
    public static void main(String[] args) {
        int[] arr = {64, 34, 25, 12, 22, 11, 90};
        
        System.out.println("Unsortiert:");
        printArray(arr);
        
        bubbleSort(arr);
        
        System.out.println("\\nSortiert:");
        printArray(arr);
    }
    
    public static void printArray(int[] arr) {
        for (int value : arr) {
            System.out.print(value + " ");
        }
        System.out.println();
    }
}

// Output:
// Unsortiert: 64 34 25 12 22 11 90
// Sortiert: 11 12 22 25 34 64 90`,explanation:"Bubble Sort mit Optimierung: Die Variable 'swapped' erm√∂glicht ein fr√ºhzeitiges Beenden, wenn die Liste bereits sortiert ist. Dies verbessert den Best Case auf O(n)."},{language:"python",title:"Selection Sort - Python Implementierung",code:`def selection_sort(arr):
    n = len(arr)
    
    # Durchlaufe die gesamte Liste
    for i in range(n):
        # Finde das Minimum im unsortierten Teil
        min_index = i
        
        for j in range(i + 1, n):
            if arr[j] < arr[min_index]:
                min_index = j
        
        # Tausche das gefundene Minimum mit dem ersten Element
        arr[i], arr[min_index] = arr[min_index], arr[i]
        
        # Optional: Zeige jeden Schritt
        print(f"Durchlauf {i + 1}: {arr}")
    
    return arr

# Beispiel
arr = [64, 25, 12, 22, 11]
print(f"Unsortiert: {arr}")
print()
sorted_arr = selection_sort(arr)
print(f"\\nSortiert: {sorted_arr}")

# Output:
# Unsortiert: [64, 25, 12, 22, 11]
# 
# Durchlauf 1: [11, 25, 12, 22, 64]
# Durchlauf 2: [11, 12, 25, 22, 64]
# Durchlauf 3: [11, 12, 22, 25, 64]
# Durchlauf 4: [11, 12, 22, 25, 64]
# Durchlauf 5: [11, 12, 22, 25, 64]
# 
# Sortiert: [11, 12, 22, 25, 64]`,explanation:"Selection Sort findet in jedem Durchlauf das Minimum und platziert es an der richtigen Position. Die Anzahl der Tauschoperationen ist minimal (maximal n-1)."},{language:"java",title:"Insertion Sort - Java Implementierung",code:`public class InsertionSort {
    
    public static void insertionSort(int[] arr) {
        int n = arr.length;
        
        // Beginne beim zweiten Element (Index 1)
        for (int i = 1; i < n; i++) {
            int key = arr[i];  // Element zum Einf√ºgen
            int j = i - 1;
            
            // Verschiebe Elemente, die gr√∂√üer als key sind
            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                j--;
            }
            
            // F√ºge key an der richtigen Position ein
            arr[j + 1] = key;
        }
    }
    
    // Variante mit Visualisierung
    public static void insertionSortVerbose(int[] arr) {
        int n = arr.length;
        
        System.out.println("Start: " + java.util.Arrays.toString(arr));
        
        for (int i = 1; i < n; i++) {
            int key = arr[i];
            int j = i - 1;
            
            System.out.println("\\nF√ºge " + key + " ein:");
            
            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                j--;
            }
            
            arr[j + 1] = key;
            System.out.println(java.util.Arrays.toString(arr));
        }
    }
    
    public static void main(String[] args) {
        int[] arr = {12, 11, 13, 5, 6};
        insertionSortVerbose(arr);
    }
}

// Output:
// Start: [12, 11, 13, 5, 6]
// 
// F√ºge 11 ein:
// [11, 12, 13, 5, 6]
// 
// F√ºge 13 ein:
// [11, 12, 13, 5, 6]
// 
// F√ºge 5 ein:
// [5, 11, 12, 13, 6]
// 
// F√ºge 6 ein:
// [5, 6, 11, 12, 13]`,explanation:"Insertion Sort ist besonders effizient f√ºr fast sortierte Listen. Die while-Schleife verschiebt gr√∂√üere Elemente nach rechts, bis die richtige Position f√ºr das einzuf√ºgende Element gefunden ist."},{language:"python",title:"Vergleich aller drei Algorithmen mit Zeitmessung",code:`import time
import random

def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        swapped = False
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                swapped = True
        if not swapped:
            break
    return arr

def selection_sort(arr):
    n = len(arr)
    for i in range(n):
        min_idx = i
        for j in range(i + 1, n):
            if arr[j] < arr[min_idx]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]
    return arr

def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

# Teste mit verschiedenen Listengr√∂√üen
sizes = [100, 500, 1000]

for size in sizes:
    print(f"\\n=== Liste mit {size} Elementen ===")
    
    # Erstelle zuf√§llige Liste
    original = [random.randint(1, 1000) for _ in range(size)]
    
    # Bubble Sort
    arr = original.copy()
    start = time.time()
    bubble_sort(arr)
    bubble_time = time.time() - start
    print(f"Bubble Sort:    {bubble_time:.4f} Sekunden")
    
    # Selection Sort
    arr = original.copy()
    start = time.time()
    selection_sort(arr)
    selection_time = time.time() - start
    print(f"Selection Sort: {selection_time:.4f} Sekunden")
    
    # Insertion Sort
    arr = original.copy()
    start = time.time()
    insertion_sort(arr)
    insertion_time = time.time() - start
    print(f"Insertion Sort: {insertion_time:.4f} Sekunden")

# Beispiel Output:
# === Liste mit 100 Elementen ===
# Bubble Sort:    0.0023 Sekunden
# Selection Sort: 0.0015 Sekunden
# Insertion Sort: 0.0012 Sekunden
# 
# === Liste mit 500 Elementen ===
# Bubble Sort:    0.0567 Sekunden
# Selection Sort: 0.0389 Sekunden
# Insertion Sort: 0.0298 Sekunden`,explanation:"Dieser Code vergleicht die Performance aller drei Algorithmen. Insertion Sort ist in der Praxis oft am schnellsten, gefolgt von Selection Sort und Bubble Sort."}],L0=["sorting-algorithms-quiz-2025"],M0=[{title:"Visualgo - Sortieralgorithmen visualisiert",url:"https://visualgo.net/en/sorting",type:"video"},{title:"Big-O Cheat Sheet",url:"https://www.bigocheatsheet.com/",type:"article"}],O0="2025-01-10T00:00:00Z",N0="1.0",B0=["Du kannst sortieralgorithmen erkl√§ren","Du kannst bubble Sort erkl√§ren","Du kannst selection Sort erkl√§ren","Du kannst insertion Sort erkl√§ren","Du kannst zeitkomplexit√§t erkl√§ren"],x0="Lerne die grundlegenden Sortieralgorithmen Bubble Sort, Selection Sort und Insertion Sort mit Visualisierungen und Komplexit√§tsanalyse.",V0=[{id:"sortierverfahren",title:"Sortierverfahren",summary:"Kernaspekt: Sortierverfahren"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"warum-sortieren-wichtig-ist",title:"Warum Sortieren wichtig ist",summary:"Kernaspekt: Warum Sortieren wichtig ist"},{id:"zeitkomplexitat---big-o-notation",title:"Zeitkomplexit√§t - Big-O Notation",summary:"Kernaspekt: Zeitkomplexit√§t - Big-O Notation"},{id:"1-bubble-sort-blasensortierung",title:"1. Bubble Sort (Blasensortierung)",summary:"Kernaspekt: 1. Bubble Sort (Blasensortierung)"},{id:"2-selection-sort-auswahlsortierung",title:"2. Selection Sort (Auswahlsortierung)",summary:"Kernaspekt: 2. Selection Sort (Auswahlsortierung)"},{id:"3-insertion-sort-einfugesortierung",title:"3. Insertion Sort (Einf√ºgesortierung)",summary:"Kernaspekt: 3. Insertion Sort (Einf√ºgesortierung)"},{id:"vergleich-der-sortierverfahren",title:"Vergleich der Sortierverfahren",summary:"Kernaspekt: Vergleich der Sortierverfahren"},{id:"wann-welchen-algorithmus-verwenden",title:"Wann welchen Algorithmus verwenden?",summary:"Kernaspekt: Wann welchen Algorithmus verwenden?"},{id:"stabilitat-bei-sortieralgorithmen",title:"Stabilit√§t bei Sortieralgorithmen",summary:"Kernaspekt: Stabilit√§t bei Sortieralgorithmen"},{id:"ubungsaufgaben",title:"√úbungsaufgaben",summary:"Kernaspekt: √úbungsaufgaben"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],F0="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",K0="Automatisch erg√§nzt: Review erforderlich",W0=["bp-05-sorting-einfuhrung-micro-1","bp-05-sorting-warum-sortieren-wichtig-ist-micro-1","bp-05-sorting-zeitkomplexitat---big-o-notation-micro-1","bp-05-sorting-1-bubble-sort-blasensortierung-micro-1","bp-05-sorting-2-selection-sort-auswahlsortierung-micro-1","bp-05-sorting-3-insertion-sort-einfugesortierung-micro-1","bp-05-sorting-vergleich-der-sortierverfahren-micro-1","bp-05-sorting-wann-welchen-algorithmus-verwenden-micro-1","bp-05-sorting-stabilitat-bei-sortieralgorithmen-micro-1","bp-05-sorting-ubungsaufgaben-micro-1","bp-05-sorting-zusammenfassung-micro-1"],j0={id:z0,title:v0,description:y0,category:S0,subcategory:w0,difficulty:A0,examRelevance:E0,newIn2025:_0,removedIn2025:D0,important:P0,estimatedTime:T0,prerequisites:q0,tags:R0,content:I0,codeExamples:C0,relatedQuizzes:L0,resources:M0,lastUpdated:O0,version:N0,learningObjectives:B0,summary:x0,contentOutline:V0,accessibilityNotes:F0,editorNote:K0,microQuizzes:W0},$0="bp-05-sql-reference",G0="SQL-Referenz mit Verweis auf Beiblatt",U0="√úbersicht √ºber SQL-Themen mit Verweis auf das offizielle Pr√ºfungsbeiblatt",H0="BP-05",Q0="Datenbanken",Z0="intermediate",J0="high",Y0=!1,X0=!1,e_=!0,n_=15,t_=[],i_=["SQL","Datenbank","Beiblatt","Pr√ºfung"],r_=`# SQL-Referenz mit Verweis auf Beiblatt

## Wichtiger Hinweis zur Pr√ºfung

**In der IHK Abschlusspr√ºfung Teil 2 wird ein 2-seitiges SQL-Beiblatt bereitgestellt**, das alle wichtigen SQL-Befehle und Syntax enth√§lt. Sie m√ºssen die SQL-Syntax nicht auswendig lernen!

<!-- micro-quiz:bp-05-sql-reference-wichtiger-hinweis-zur-prufung-micro-1 -->
## Was Sie k√∂nnen sollten

### 1. SQL-Befehle verstehen und anwenden

- **DDL (Data Definition Language)**: Tabellenstruktur erstellen und √§ndern
- **DML (Data Manipulation Language)**: Daten einf√ºgen, √§ndern, l√∂schen
- **DQL (Data Query Language)**: Daten abfragen

### 2. Abfragen lesen und interpretieren

- SELECT-Statements verstehen
- WHERE-Bedingungen interpretieren
- JOINs nachvollziehen
- Aggregatfunktionen anwenden

### 3. Abfragen schreiben

- Einfache SELECT-Abfragen
- Filterung mit WHERE
- Sortierung mit ORDER BY
- Gruppierung mit GROUP BY
- Verkn√ºpfung mit JOINs

## Verf√ºgbare SQL-Module
<!-- micro-quiz:bp-05-sql-reference-was-sie-konnen-sollten-micro-1 -->


F√ºr detailliertes Lernen stehen folgende Module zur Verf√ºgung:

### 1. SQL DDL (Data Definition Language)
**Modul-ID**: \`sql-ddl\`

**Inhalte:**
- CREATE TABLE
- ALTER TABLE
- DROP TABLE
- CREATE INDEX
- Datentypen
- Constraints (PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL)

### 2. SQL DML (Data Manipulation Language)
**Modul-ID**: \`sql-dml\`

**Inhalte:**
- INSERT INTO
- UPDATE
- DELETE
- Transaktionen (BEGIN, COMMIT, ROLLBACK)

### 3. SQL DQL (Data Query Language)
**Modul-ID**: \`sql-dql\`

**Inhalte:**
- SELECT
- WHERE
- ORDER BY
- GROUP BY
- HAVING
- JOINs (INNER, LEFT, RIGHT, FULL)
- Subqueries
- Aggregatfunktionen (COUNT, SUM, AVG, MIN, MAX)

<!-- micro-quiz:bp-05-sql-reference-verfugbare-sql-module-micro-1 -->
## Pr√ºfungsstrategie

### Vor der Pr√ºfung

1. **Konzepte verstehen**: Wann verwendet man welchen Befehl?
2. **Beispiele √ºben**: Verschiedene Abfragen schreiben
3. **Beiblatt kennenlernen**: Struktur und Inhalt vertraut machen

### In der Pr√ºfung

1. **Beiblatt nutzen**: Syntax nachschlagen
2. **Schritt f√ºr Schritt**: Komplexe Abfragen in Teile zerlegen
3. **Testen**: Abfrage gedanklich durchgehen

## Typische Pr√ºfungsaufgaben
<!-- micro-quiz:bp-05-sql-reference-prufungsstrategie-micro-1 -->


### Aufgabe 1: Einfache Abfrage

**Gegeben**: Tabelle \`employees\` mit Spalten \`id\`, \`name\`, \`department\`, \`salary\`

**Aufgabe**: Alle Mitarbeiter aus der IT-Abteilung mit Gehalt √ºber 50.000√¢‚Äö¬¨

**L√∂sung**:
\`\`\`sql
SELECT name, salary
FROM employees
WHERE department = 'IT' AND salary > 50000;
\`\`\`

### Aufgabe 2: JOIN

**Gegeben**: 
- Tabelle \`orders\` mit \`id\`, \`customer_id\`, \`total\`
- Tabelle \`customers\` mit \`id\`, \`name\`, \`email\`

**Aufgabe**: Alle Bestellungen mit Kundennamen

**L√∂sung**:
\`\`\`sql
SELECT o.id, c.name, o.total
FROM orders o
INNER JOIN customers c ON o.customer_id = c.id;
\`\`\`

### Aufgabe 3: Aggregation

**Gegeben**: Tabelle \`sales\` mit \`product_id\`, \`quantity\`, \`price\`

**Aufgabe**: Gesamtumsatz pro Produkt

**L√∂sung**:
\`\`\`sql
SELECT product_id, SUM(quantity * price) AS total_revenue
FROM sales
GROUP BY product_id;
\`\`\`

<!-- micro-quiz:bp-05-sql-reference-typische-prufungsaufgaben-micro-1 -->
## H√§ufige Fehler vermeiden

### 1. Vergessene WHERE-Klausel
\`\`\`sql
-- Falsch: L√∂scht ALLE Datens√§tze!
DELETE FROM users;

-- Richtig: L√∂scht nur bestimmte Datens√§tze
DELETE FROM users WHERE id = 123;
\`\`\`

### 2. Falsche JOIN-Syntax
\`\`\`sql
-- Falsch: Kartesisches Produkt
SELECT * FROM orders, customers;

-- Richtig: Expliziter JOIN
SELECT * FROM orders o
INNER JOIN customers c ON o.customer_id = c.id;
\`\`\`

### 3. GROUP BY ohne Aggregatfunktion
\`\`\`sql
-- Falsch: name nicht in GROUP BY
SELECT department, name, COUNT(*)
FROM employees
GROUP BY department;

-- Richtig: Nur aggregierte Spalten
SELECT department, COUNT(*) AS employee_count
FROM employees
GROUP BY department;
\`\`\`

## Checkliste f√ºr die Pr√ºfung
<!-- micro-quiz:bp-05-sql-reference-haufige-fehler-vermeiden-micro-1 -->


- [ ] SQL-Module durchgearbeitet
- [ ] Verschiedene Abfragen ge√ºbt
- [ ] JOINs verstanden
- [ ] Aggregatfunktionen angewendet
- [ ] Subqueries ge√ºbt
- [ ] H√§ufige Fehler bekannt
- [ ] Beiblatt-Struktur vertraut

<!-- micro-quiz:bp-05-sql-reference-checkliste-fur-die-prufung-micro-1 -->
## Weiterf√ºhrende Module

F√ºr tieferes Verst√§ndnis:

1. **SQL DDL Modul**: Detaillierte Erkl√§rungen zu Tabellenstrukturen
2. **SQL DML Modul**: Datenmanipulation mit Beispielen
3. **SQL DQL Modul**: Komplexe Abfragen und Optimierung
4. **SQL Quiz**: Pr√ºfungssimulation mit 30+ Fragen

## Pr√ºfungsrelevante Aspekte
<!-- micro-quiz:bp-05-sql-reference-weiterfuhrende-module-micro-1 -->


- SQL-Befehle kennen und anwenden
- Beiblatt effektiv nutzen
- Abfragen lesen und verstehen
- Einfache bis mittlere Abfragen schreiben
- JOINs korrekt verwenden
- Aggregatfunktionen anwenden
- H√§ufige Fehler vermeiden



<!-- micro-quiz:sql-comprehensive-quiz-2025 -->
<!-- micro-quiz:bp-05-sql-reference-prufungsrelevante-aspekte-micro-1 -->
`,s_=[{language:"sql",code:`-- Beispiel: Komplexe Abfrage mit mehreren Konzepten

-- Gegeben: E-Commerce-Datenbank
-- Aufgabe: Top 5 Kunden nach Umsatz im Jahr 2024

SELECT 
    c.name,
    c.email,
    COUNT(o.id) AS order_count,
    SUM(o.total) AS total_revenue
FROM customers c
INNER JOIN orders o ON c.id = o.customer_id
WHERE o.order_date >= '2024-01-01' 
  AND o.order_date < '2025-01-01'
GROUP BY c.id, c.name, c.email
HAVING SUM(o.total) > 1000
ORDER BY total_revenue DESC
LIMIT 5;

-- Diese Abfrage kombiniert:
-- - JOIN (Verkn√ºpfung)
-- - WHERE (Filterung)
-- - GROUP BY (Gruppierung)
-- - HAVING (Filterung nach Aggregation)
-- - ORDER BY (Sortierung)
-- - LIMIT (Begrenzung)`,explanation:"Komplexe SQL-Abfrage, die mehrere Konzepte kombiniert - typisch f√ºr Pr√ºfungsaufgaben",title:"Pr√ºfungsbeispiel: Komplexe Abfrage"}],a_=["sql-comprehensive-quiz-2025"],o_=[{title:"SQL DDL Modul",url:"#/module/sql-ddl",type:"article"},{title:"SQL DML Modul",url:"#/module/sql-dml",type:"article"},{title:"SQL DQL Modul",url:"#/module/sql-dql",type:"article"}],l_="2025-01-10T00:00:00Z",u_="1.0",c_=["Du kannst sQL erkl√§ren","Du kannst datenbank erkl√§ren","Du kannst beiblatt erkl√§ren","Du kannst pr√ºfung erkl√§ren"],d_="√úbersicht √ºber SQL-Themen mit Verweis auf das offizielle Pr√ºfungsbeiblatt",m_=[{id:"sql-referenz-mit-verweis-auf-beiblatt",title:"SQL-Referenz mit Verweis auf Beiblatt",summary:"Kernaspekt: SQL-Referenz mit Verweis auf Beiblatt"},{id:"wichtiger-hinweis-zur-prufung",title:"Wichtiger Hinweis zur Pr√ºfung",summary:"Kernaspekt: Wichtiger Hinweis zur Pr√ºfung"},{id:"was-sie-konnen-sollten",title:"Was Sie k√∂nnen sollten",summary:"Kernaspekt: Was Sie k√∂nnen sollten"},{id:"verfugbare-sql-module",title:"Verf√ºgbare SQL-Module",summary:"Kernaspekt: Verf√ºgbare SQL-Module"},{id:"prufungsstrategie",title:"Pr√ºfungsstrategie",summary:"Kernaspekt: Pr√ºfungsstrategie"},{id:"typische-prufungsaufgaben",title:"Typische Pr√ºfungsaufgaben",summary:"Kernaspekt: Typische Pr√ºfungsaufgaben"},{id:"haufige-fehler-vermeiden",title:"H√§ufige Fehler vermeiden",summary:"Kernaspekt: H√§ufige Fehler vermeiden"},{id:"checkliste-fur-die-prufung",title:"Checkliste f√ºr die Pr√ºfung",summary:"Kernaspekt: Checkliste f√ºr die Pr√ºfung"},{id:"weiterfuhrende-module",title:"Weiterf√ºhrende Module",summary:"Kernaspekt: Weiterf√ºhrende Module"},{id:"prufungsrelevante-aspekte",title:"Pr√ºfungsrelevante Aspekte",summary:"Kernaspekt: Pr√ºfungsrelevante Aspekte"}],g_="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",h_="Automatisch erg√§nzt: Review erforderlich",p_=["bp-05-sql-reference-wichtiger-hinweis-zur-prufung-micro-1","bp-05-sql-reference-was-sie-konnen-sollten-micro-1","bp-05-sql-reference-verfugbare-sql-module-micro-1","bp-05-sql-reference-prufungsstrategie-micro-1","bp-05-sql-reference-typische-prufungsaufgaben-micro-1","bp-05-sql-reference-haufige-fehler-vermeiden-micro-1","bp-05-sql-reference-checkliste-fur-die-prufung-micro-1","bp-05-sql-reference-weiterfuhrende-module-micro-1","bp-05-sql-reference-prufungsrelevante-aspekte-micro-1"],f_={id:$0,title:G0,description:U0,category:H0,subcategory:Q0,difficulty:Z0,examRelevance:J0,newIn2025:Y0,removedIn2025:X0,important:e_,estimatedTime:n_,prerequisites:t_,tags:i_,content:r_,codeExamples:s_,relatedQuizzes:a_,resources:o_,lastUpdated:l_,version:u_,learningObjectives:c_,summary:d_,contentOutline:m_,accessibilityNotes:g_,editorNote:h_,microQuizzes:p_},b_="sql-ddl-2025",k_="SQL DDL - Datenstrukturen definieren",z_="Lerne die Data Definition Language (DDL) Befehle CREATE TABLE, ALTER TABLE und CREATE INDEX aus dem IHK Pr√ºfungsbeiblatt. Diese Befehle werden verwendet, um Datenbankstrukturen zu erstellen und zu √§ndern.",v_="F√ú-02",y_="SQL - Data Definition Language",S_="beginner",w_="high",A_=!0,E_=!1,__=!0,D_=45,P_=[],T_=["SQL","DDL","CREATE TABLE","ALTER TABLE","CREATE INDEX","Datenbank","Pr√ºfungsbeiblatt"],q_=`# SQL DDL - Data Definition Language

## Einf√ºhrung

Die **Data Definition Language (DDL)** ist ein Teil von SQL, der verwendet wird, um die Struktur von Datenbanken zu definieren und zu √§ndern. Mit DDL-Befehlen kannst du Tabellen erstellen, √§ndern und l√∂schen sowie Indizes f√ºr bessere Performance anlegen.

**Wichtig f√ºr die Pr√ºfung:** Diese Befehle sind im 2-seitigen SQL-Beiblatt enthalten, das du in der IHK-Pr√ºfung erh√§ltst!

<!-- micro-quiz:sql-ddl-2025-einfuhrung-micro-1 -->
## CREATE TABLE - Tabellen erstellen

### Syntax

\`\`\`sql
CREATE TABLE table_name (
    column1 datatype constraints,
    column2 datatype constraints,
    ...
);
\`\`\`

### Wichtige Datentypen

- **INT** / **INTEGER**: Ganzzahlen
- **VARCHAR(n)**: Variable Zeichenkette mit maximaler L√§nge n
- **CHAR(n)**: Feste Zeichenkette mit L√§nge n
- **DATE**: Datum (YYYY-MM-DD)
- **DECIMAL(p,s)**: Dezimalzahl mit p Stellen, davon s Nachkommastellen
- **BOOLEAN**: Wahrheitswert (TRUE/FALSE)

### Wichtige Constraints (Einschr√§nkungen)

- **PRIMARY KEY**: Prim√§rschl√ºssel (eindeutig, nicht NULL)
- **FOREIGN KEY**: Fremdschl√ºssel (Verweis auf andere Tabelle)
- **NOT NULL**: Wert darf nicht leer sein
- **UNIQUE**: Wert muss eindeutig sein
- **DEFAULT**: Standardwert, wenn nichts angegeben wird
- **CHECK**: Bedingung, die erf√ºllt sein muss

### Beispiel: Mitarbeiter-Tabelle

\`\`\`sql
CREATE TABLE mitarbeiter (
    mitarbeiter_id INT PRIMARY KEY,
    vorname VARCHAR(50) NOT NULL,
    nachname VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    gehalt DECIMAL(10,2) CHECK (gehalt > 0),
    einstellungsdatum DATE DEFAULT CURRENT_DATE,
    abteilung_id INT,
    FOREIGN KEY (abteilung_id) REFERENCES abteilung(abteilung_id)
);
\`\`\`

**Erkl√§rung:**
- \`mitarbeiter_id\` ist der Prim√§rschl√ºssel
- \`vorname\` und \`nachname\` d√ºrfen nicht leer sein
- \`email\` muss eindeutig sein
- \`gehalt\` muss gr√∂√üer als 0 sein
- \`einstellungsdatum\` hat einen Standardwert (heutiges Datum)
- \`abteilung_id\` ist ein Fremdschl√ºssel zur Tabelle \`abteilung\`

## ALTER TABLE - Tabellen √§ndern
<!-- micro-quiz:sql-ddl-2025-create-table---tabellen-erstellen-micro-1 -->


### Spalte hinzuf√ºgen

\`\`\`sql
ALTER TABLE table_name
ADD column_name datatype;
\`\`\`

**Beispiel:**
\`\`\`sql
ALTER TABLE mitarbeiter
ADD telefon VARCHAR(20);
\`\`\`

### Spalte l√∂schen

\`\`\`sql
ALTER TABLE table_name
DROP COLUMN column_name;
\`\`\`

**Beispiel:**
\`\`\`sql
ALTER TABLE mitarbeiter
DROP COLUMN telefon;
\`\`\`

### Spalte √§ndern (je nach DBMS unterschiedlich)

\`\`\`sql
-- MySQL/MariaDB
ALTER TABLE mitarbeiter
MODIFY COLUMN gehalt DECIMAL(12,2);

-- PostgreSQL
ALTER TABLE mitarbeiter
ALTER COLUMN gehalt TYPE DECIMAL(12,2);
\`\`\`

<!-- micro-quiz:sql-ddl-2025-alter-table---tabellen-andern-micro-1 -->
## CREATE INDEX - Indizes erstellen

### Was ist ein Index?

Ein **Index** ist wie ein Inhaltsverzeichnis in einem Buch. Er beschleunigt Suchabfragen erheblich, indem er einen schnellen Zugriff auf Daten erm√∂glicht.

**Vorteile:**
- Schnellere SELECT-Abfragen
- Schnellere WHERE-Bedingungen
- Schnellere JOIN-Operationen

**Nachteile:**
- Zus√§tzlicher Speicherplatz
- Langsamere INSERT/UPDATE/DELETE-Operationen

### Syntax

\`\`\`sql
CREATE INDEX index_name
ON table_name (column_name);
\`\`\`

### Beispiele

**Einfacher Index:**
\`\`\`sql
CREATE INDEX idx_nachname
ON mitarbeiter (nachname);
\`\`\`

**Zusammengesetzter Index (mehrere Spalten):**
\`\`\`sql
CREATE INDEX idx_name
ON mitarbeiter (nachname, vorname);
\`\`\`

**Eindeutiger Index:**
\`\`\`sql
CREATE UNIQUE INDEX idx_email
ON mitarbeiter (email);
\`\`\`

## Praxisbeispiel: Projektdatenbank
<!-- micro-quiz:sql-ddl-2025-create-index---indizes-erstellen-micro-1 -->


Lass uns eine kleine Projektdatenbank erstellen:

\`\`\`sql
-- Abteilungen
CREATE TABLE abteilung (
    abteilung_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    standort VARCHAR(100)
);

-- Mitarbeiter
CREATE TABLE mitarbeiter (
    mitarbeiter_id INT PRIMARY KEY,
    vorname VARCHAR(50) NOT NULL,
    nachname VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    gehalt DECIMAL(10,2) CHECK (gehalt > 0),
    abteilung_id INT,
    FOREIGN KEY (abteilung_id) REFERENCES abteilung(abteilung_id)
);

-- Projekte
CREATE TABLE projekt (
    projekt_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    budget DECIMAL(12,2),
    startdatum DATE,
    enddatum DATE,
    CHECK (enddatum >= startdatum)
);

-- Mitarbeiter-Projekt Zuordnung (n:m Beziehung)
CREATE TABLE mitarbeiter_projekt (
    mitarbeiter_id INT,
    projekt_id INT,
    rolle VARCHAR(50),
    PRIMARY KEY (mitarbeiter_id, projekt_id),
    FOREIGN KEY (mitarbeiter_id) REFERENCES mitarbeiter(mitarbeiter_id),
    FOREIGN KEY (projekt_id) REFERENCES projekt(projekt_id)
);

-- Indizes f√ºr bessere Performance
CREATE INDEX idx_mitarbeiter_nachname ON mitarbeiter(nachname);
CREATE INDEX idx_projekt_name ON projekt(name);
CREATE INDEX idx_mitarbeiter_abteilung ON mitarbeiter(abteilung_id);
\`\`\`

<!-- micro-quiz:sql-ddl-2025-praxisbeispiel-projektdatenbank-micro-1 -->
## Wichtige Hinweise f√ºr die Pr√ºfung

1. **Reihenfolge beachten**: Tabellen mit Fremdschl√ºsseln m√ºssen nach den referenzierten Tabellen erstellt werden
2. **Constraints**: PRIMARY KEY ist automatisch NOT NULL und UNIQUE
3. **Datentypen**: W√§hle passende Datentypen (VARCHAR f√ºr Text, INT f√ºr Zahlen, DATE f√ºr Datum)
4. **Indizes**: Erstelle Indizes auf Spalten, die h√§ufig in WHERE, JOIN oder ORDER BY verwendet werden
5. **Namenskonventionen**: Verwende aussagekr√§ftige Namen (z.B. \`mitarbeiter_id\` statt \`id\`)

## Zusammenfassung
<!-- micro-quiz:sql-ddl-2025-wichtige-hinweise-fur-die-prufung-micro-1 -->


- **CREATE TABLE**: Erstellt neue Tabellen mit Spalten und Constraints
- **ALTER TABLE ADD**: F√ºgt neue Spalten hinzu
- **ALTER TABLE DROP COLUMN**: Entfernt Spalten
- **CREATE INDEX**: Erstellt Indizes f√ºr schnellere Abfragen
- **Constraints**: PRIMARY KEY, FOREIGN KEY, NOT NULL, UNIQUE, CHECK, DEFAULT
- **Indizes**: Beschleunigen Abfragen, verlangsamen aber Schreiboperationen



<!-- micro-quiz:sql-comprehensive-quiz-2025 -->
<!-- micro-quiz:sql-ddl-2025-zusammenfassung-micro-1 -->
`,R_=[{language:"sql",title:"Einfache Tabelle erstellen",code:`CREATE TABLE kunde (
    kunde_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE
);`,explanation:"Erstellt eine Kunden-Tabelle mit Prim√§rschl√ºssel, Pflichtfeld und eindeutiger E-Mail"},{language:"sql",title:"Tabelle mit Fremdschl√ºssel",code:`CREATE TABLE bestellung (
    bestellung_id INT PRIMARY KEY,
    kunde_id INT NOT NULL,
    bestelldatum DATE DEFAULT CURRENT_DATE,
    gesamtbetrag DECIMAL(10,2) CHECK (gesamtbetrag >= 0),
    FOREIGN KEY (kunde_id) REFERENCES kunde(kunde_id)
);`,explanation:"Erstellt eine Bestellungs-Tabelle mit Fremdschl√ºssel zur Kunden-Tabelle"},{language:"sql",title:"Spalte hinzuf√ºgen",code:`ALTER TABLE kunde
ADD telefon VARCHAR(20);`,explanation:"F√ºgt der Kunden-Tabelle eine Telefon-Spalte hinzu"},{language:"sql",title:"Index erstellen",code:`CREATE INDEX idx_kunde_name
ON kunde (name);`,explanation:"Erstellt einen Index auf der Name-Spalte f√ºr schnellere Suchen"}],I_=[{title:"√úbung 1: Sch√ºler-Tabelle",description:`Erstelle eine Tabelle 'schueler' mit folgenden Spalten:
- schueler_id (Prim√§rschl√ºssel, INT)
- vorname (VARCHAR(50), Pflichtfeld)
- nachname (VARCHAR(50), Pflichtfeld)
- geburtsdatum (DATE)
- klasse (VARCHAR(10))`,difficulty:"beginner",solution:`CREATE TABLE schueler (
    schueler_id INT PRIMARY KEY,
    vorname VARCHAR(50) NOT NULL,
    nachname VARCHAR(50) NOT NULL,
    geburtsdatum DATE,
    klasse VARCHAR(10)
);`},{title:"√úbung 2: Produkt-Tabelle mit Constraints",description:`Erstelle eine Tabelle 'produkt' mit:
- produkt_id (Prim√§rschl√ºssel)
- name (Pflichtfeld, eindeutig)
- preis (DECIMAL, muss gr√∂√üer als 0 sein)
- lagerbestand (INT, Standardwert 0)
- kategorie_id (Fremdschl√ºssel zu kategorie-Tabelle)`,difficulty:"intermediate",solution:`CREATE TABLE produkt (
    produkt_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    preis DECIMAL(10,2) CHECK (preis > 0),
    lagerbestand INT DEFAULT 0,
    kategorie_id INT,
    FOREIGN KEY (kategorie_id) REFERENCES kategorie(kategorie_id)
);`},{title:"√úbung 3: Tabelle erweitern",description:`F√ºge der 'produkt' Tabelle folgende Spalten hinzu:
- beschreibung (VARCHAR(500))
- erstellt_am (DATE)`,difficulty:"beginner",solution:`ALTER TABLE produkt
ADD beschreibung VARCHAR(500);

ALTER TABLE produkt
ADD erstellt_am DATE;`},{title:"√úbung 4: Indizes erstellen",description:`Erstelle Indizes f√ºr die 'produkt' Tabelle:
- Index auf 'name'
- Index auf 'kategorie_id'
- Zusammengesetzter Index auf 'kategorie_id' und 'preis'`,difficulty:"intermediate",solution:`CREATE INDEX idx_produkt_name ON produkt(name);
CREATE INDEX idx_produkt_kategorie ON produkt(kategorie_id);
CREATE INDEX idx_produkt_kategorie_preis ON produkt(kategorie_id, preis);`},{title:"√úbung 5: Komplette Datenbank",description:`Erstelle eine Bibliotheks-Datenbank mit:
1. Tabelle 'autor' (autor_id, name)
2. Tabelle 'buch' (buch_id, titel, isbn (eindeutig), erscheinungsjahr, autor_id als Fremdschl√ºssel)
3. Tabelle 'ausleihe' (ausleihe_id, buch_id, ausleih_datum, rueckgabe_datum mit CHECK dass R√ºckgabe >= Ausleihe)
4. Passende Indizes`,difficulty:"advanced",solution:`CREATE TABLE autor (
    autor_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE buch (
    buch_id INT PRIMARY KEY,
    titel VARCHAR(200) NOT NULL,
    isbn VARCHAR(20) UNIQUE NOT NULL,
    erscheinungsjahr INT,
    autor_id INT,
    FOREIGN KEY (autor_id) REFERENCES autor(autor_id)
);

CREATE TABLE ausleihe (
    ausleihe_id INT PRIMARY KEY,
    buch_id INT NOT NULL,
    ausleih_datum DATE NOT NULL,
    rueckgabe_datum DATE,
    CHECK (rueckgabe_datum >= ausleih_datum),
    FOREIGN KEY (buch_id) REFERENCES buch(buch_id)
);

CREATE INDEX idx_buch_titel ON buch(titel);
CREATE INDEX idx_buch_autor ON buch(autor_id);
CREATE INDEX idx_ausleihe_buch ON ausleihe(buch_id);`}],C_=["sql-comprehensive-quiz-2025"],L_=[{title:"SQL Tutorial - DDL",url:"https://www.w3schools.com/sql/sql_create_table.asp",type:"documentation"}],M_="2025-01-10T00:00:00Z",O_="1.0",N_=["Du kannst sQL erkl√§ren","Du kannst dDL erkl√§ren","Du kannst cREATE TABLE erkl√§ren","Du kannst aLTER TABLE erkl√§ren","Du kannst cREATE INDEX erkl√§ren"],B_="Lerne die Data Definition Language (DDL) Befehle CREATE TABLE, ALTER TABLE und CREATE INDEX aus dem IHK Pr√ºfungsbeiblatt.",x_=[{id:"sql-ddl---data-definition-language",title:"SQL DDL - Data Definition Language",summary:"Kernaspekt: SQL DDL - Data Definition Language"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"create-table---tabellen-erstellen",title:"CREATE TABLE - Tabellen erstellen",summary:"Kernaspekt: CREATE TABLE - Tabellen erstellen"},{id:"alter-table---tabellen-andern",title:"ALTER TABLE - Tabellen √§ndern",summary:"Kernaspekt: ALTER TABLE - Tabellen √§ndern"},{id:"create-index---indizes-erstellen",title:"CREATE INDEX - Indizes erstellen",summary:"Kernaspekt: CREATE INDEX - Indizes erstellen"},{id:"praxisbeispiel-projektdatenbank",title:"Praxisbeispiel: Projektdatenbank",summary:"Kernaspekt: Praxisbeispiel: Projektdatenbank"},{id:"wichtige-hinweise-fur-die-prufung",title:"Wichtige Hinweise f√ºr die Pr√ºfung",summary:"Kernaspekt: Wichtige Hinweise f√ºr die Pr√ºfung"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],V_="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",F_="Automatisch erg√§nzt: Review erforderlich",K_=["sql-ddl-2025-einfuhrung-micro-1","sql-ddl-2025-create-table---tabellen-erstellen-micro-1","sql-ddl-2025-alter-table---tabellen-andern-micro-1","sql-ddl-2025-create-index---indizes-erstellen-micro-1","sql-ddl-2025-praxisbeispiel-projektdatenbank-micro-1","sql-ddl-2025-wichtige-hinweise-fur-die-prufung-micro-1","sql-ddl-2025-zusammenfassung-micro-1"],W_={id:b_,title:k_,description:z_,category:v_,subcategory:y_,difficulty:S_,examRelevance:w_,newIn2025:A_,removedIn2025:E_,important:__,estimatedTime:D_,prerequisites:P_,tags:T_,content:q_,codeExamples:R_,exercises:I_,relatedQuizzes:C_,resources:L_,lastUpdated:M_,version:O_,learningObjectives:N_,summary:B_,contentOutline:x_,accessibilityNotes:V_,editorNote:F_,microQuizzes:K_},j_="sql-dml-2025",$_="SQL DML - Daten manipulieren",G_="Lerne die Data Manipulation Language (DML) Befehle INSERT, UPDATE und DELETE aus dem IHK Pr√ºfungsbeiblatt. Diese Befehle werden verwendet, um Daten in Tabellen einzuf√ºgen, zu √§ndern und zu l√∂schen.",U_="F√ú-02",H_="SQL - Data Manipulation Language",Q_="beginner",Z_="high",J_=!0,Y_=!1,X_=!0,eD=40,nD=["sql-ddl-2025"],tD=["SQL","DML","INSERT","UPDATE","DELETE","Datenbank","Pr√ºfungsbeiblatt"],iD=`# SQL DML - Data Manipulation Language

## Einf√ºhrung

Die **Data Manipulation Language (DML)** ist der Teil von SQL, mit dem du Daten in Tabellen einf√ºgen, √§ndern und l√∂schen kannst. Im Gegensatz zu DDL (das die Struktur √§ndert) arbeitet DML mit den eigentlichen Daten.

**Wichtig f√ºr die Pr√ºfung:** Diese Befehle sind im SQL-Beiblatt enthalten!

<!-- micro-quiz:sql-dml-2025-einfuhrung-micro-1 -->
## INSERT - Daten einf√ºgen

### Syntax

\`\`\`sql
INSERT INTO table_name (column1, column2, ...)
VALUES (value1, value2, ...);
\`\`\`

### Grundlegendes Beispiel

\`\`\`sql
INSERT INTO mitarbeiter (mitarbeiter_id, vorname, nachname, email)
VALUES (1, 'Max', 'Mustermann', 'max.mustermann@firma.de');
\`\`\`

### Alle Spalten einf√ºgen

Wenn du Werte f√ºr alle Spalten in der richtigen Reihenfolge angibst, kannst du die Spaltennamen weglassen:

\`\`\`sql
INSERT INTO mitarbeiter
VALUES (2, 'Anna', 'Schmidt', 'anna.schmidt@firma.de', 45000.00, '2024-01-15', 1);
\`\`\`

**Achtung:** Diese Methode ist fehleranf√§llig! Besser ist es, die Spalten explizit anzugeben.

### Mehrere Zeilen gleichzeitig einf√ºgen

\`\`\`sql
INSERT INTO mitarbeiter (mitarbeiter_id, vorname, nachname, email)
VALUES 
    (3, 'Tom', 'Weber', 'tom.weber@firma.de'),
    (4, 'Lisa', 'Meyer', 'lisa.meyer@firma.de'),
    (5, 'Paul', 'Fischer', 'paul.fischer@firma.de');
\`\`\`

### Daten aus anderer Tabelle einf√ºgen

\`\`\`sql
INSERT INTO mitarbeiter_archiv (mitarbeiter_id, vorname, nachname)
SELECT mitarbeiter_id, vorname, nachname
FROM mitarbeiter
WHERE einstellungsdatum < '2020-01-01';
\`\`\`

### NULL-Werte und Standardwerte

\`\`\`sql
-- NULL explizit einf√ºgen
INSERT INTO mitarbeiter (mitarbeiter_id, vorname, nachname, email, telefon)
VALUES (6, 'Julia', 'Becker', 'julia.becker@firma.de', NULL);

-- Spalte weglassen (verwendet DEFAULT oder NULL)
INSERT INTO mitarbeiter (mitarbeiter_id, vorname, nachname, email)
VALUES (7, 'Tim', 'Schulz', 'tim.schulz@firma.de');
-- einstellungsdatum erh√§lt automatisch CURRENT_DATE (wenn als DEFAULT definiert)
\`\`\`

## UPDATE - Daten √§ndern
<!-- micro-quiz:sql-dml-2025-insert---daten-einfugen-micro-1 -->


### Syntax

\`\`\`sql
UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;
\`\`\`

**WICHTIG:** Vergiss niemals die WHERE-Klausel! Ohne WHERE werden ALLE Zeilen ge√§ndert!

### Einzelne Zeile √§ndern

\`\`\`sql
UPDATE mitarbeiter
SET gehalt = 50000.00
WHERE mitarbeiter_id = 1;
\`\`\`

### Mehrere Spalten √§ndern

\`\`\`sql
UPDATE mitarbeiter
SET gehalt = 52000.00,
    abteilung_id = 2,
    email = 'max.mustermann@neue-email.de'
WHERE mitarbeiter_id = 1;
\`\`\`

### Mehrere Zeilen √§ndern

\`\`\`sql
-- Gehaltserh√∂hung f√ºr alle in Abteilung 1
UPDATE mitarbeiter
SET gehalt = gehalt * 1.05
WHERE abteilung_id = 1;
\`\`\`

### Berechnungen im UPDATE

\`\`\`sql
-- 10% Gehaltserh√∂hung f√ºr alle
UPDATE mitarbeiter
SET gehalt = gehalt * 1.10;

-- Gehalt um festen Betrag erh√∂hen
UPDATE mitarbeiter
SET gehalt = gehalt + 2000
WHERE einstellungsdatum < '2020-01-01';
\`\`\`

### UPDATE mit Subquery

\`\`\`sql
-- Setze Abteilung auf die Abteilung mit den meisten Mitarbeitern
UPDATE mitarbeiter
SET abteilung_id = (
    SELECT abteilung_id
    FROM mitarbeiter
    GROUP BY abteilung_id
    ORDER BY COUNT(*) DESC
    LIMIT 1
)
WHERE abteilung_id IS NULL;
\`\`\`

<!-- micro-quiz:sql-dml-2025-update---daten-andern-micro-1 -->
## DELETE - Daten l√∂schen

### Syntax

\`\`\`sql
DELETE FROM table_name
WHERE condition;
\`\`\`

**WICHTIG:** Ohne WHERE-Klausel werden ALLE Zeilen gel√∂scht!

### Einzelne Zeile l√∂schen

\`\`\`sql
DELETE FROM mitarbeiter
WHERE mitarbeiter_id = 1;
\`\`\`

### Mehrere Zeilen l√∂schen

\`\`\`sql
-- Alle Mitarbeiter aus Abteilung 3 l√∂schen
DELETE FROM mitarbeiter
WHERE abteilung_id = 3;

-- Alle Mitarbeiter mit Gehalt unter 30000 l√∂schen
DELETE FROM mitarbeiter
WHERE gehalt < 30000;
\`\`\`

### DELETE mit komplexen Bedingungen

\`\`\`sql
-- Mitarbeiter l√∂schen, die vor 2015 eingestellt wurden UND in Abteilung 2 sind
DELETE FROM mitarbeiter
WHERE einstellungsdatum < '2015-01-01'
  AND abteilung_id = 2;
\`\`\`

### DELETE mit Subquery

\`\`\`sql
-- L√∂sche alle Mitarbeiter aus Abteilungen, die in Berlin sind
DELETE FROM mitarbeiter
WHERE abteilung_id IN (
    SELECT abteilung_id
    FROM abteilung
    WHERE standort = 'Berlin'
);
\`\`\`

### Alle Zeilen l√∂schen

\`\`\`sql
-- L√∂scht alle Zeilen (Struktur bleibt erhalten)
DELETE FROM mitarbeiter;

-- Alternative: TRUNCATE (schneller, aber nicht √ºberall verf√ºgbar)
TRUNCATE TABLE mitarbeiter;
\`\`\`

## Praxisbeispiel: Online-Shop
<!-- micro-quiz:sql-dml-2025-delete---daten-loschen-micro-1 -->


Lass uns ein vollst√§ndiges Beispiel mit INSERT, UPDATE und DELETE durchgehen:

\`\`\`sql
-- 1. Neue Kunden anlegen
INSERT INTO kunde (kunde_id, name, email, registriert_am)
VALUES 
    (1, 'Max M√ºller', 'max@example.com', '2024-01-15'),
    (2, 'Anna Schmidt', 'anna@example.com', '2024-01-16'),
    (3, 'Tom Weber', 'tom@example.com', '2024-01-17');

-- 2. Produkte anlegen
INSERT INTO produkt (produkt_id, name, preis, lagerbestand)
VALUES
    (101, 'Laptop', 899.99, 15),
    (102, 'Maus', 29.99, 50),
    (103, 'Tastatur', 79.99, 30);

-- 3. Bestellungen erstellen
INSERT INTO bestellung (bestellung_id, kunde_id, bestelldatum, gesamtbetrag)
VALUES
    (1001, 1, '2024-02-01', 929.98),
    (1002, 2, '2024-02-02', 29.99);

-- 4. Lagerbestand nach Verkauf aktualisieren
UPDATE produkt
SET lagerbestand = lagerbestand - 1
WHERE produkt_id = 101;

UPDATE produkt
SET lagerbestand = lagerbestand - 1
WHERE produkt_id = 102;

-- 5. Preis √§ndern (Rabattaktion)
UPDATE produkt
SET preis = preis * 0.9
WHERE produkt_id IN (102, 103);

-- 6. Kunde √§ndert E-Mail
UPDATE kunde
SET email = 'max.mueller@newmail.com'
WHERE kunde_id = 1;

-- 7. Alte Bestellungen l√∂schen (√§lter als 2 Jahre)
DELETE FROM bestellung
WHERE bestelldatum < '2022-01-01';

-- 8. Produkte ohne Lagerbestand l√∂schen
DELETE FROM produkt
WHERE lagerbestand = 0;
\`\`\`

<!-- micro-quiz:sql-dml-2025-praxisbeispiel-online-shop-micro-1 -->
## Wichtige Hinweise f√ºr die Pr√ºfung

### 1. WHERE-Klausel nicht vergessen!

\`\`\`sql
-- FALSCH: √Ñndert ALLE Mitarbeiter!
UPDATE mitarbeiter
SET gehalt = 100000;

-- RICHTIG: √Ñndert nur einen Mitarbeiter
UPDATE mitarbeiter
SET gehalt = 100000
WHERE mitarbeiter_id = 1;
\`\`\`

### 2. Datentypen beachten

\`\`\`sql
-- Strings in Anf√ºhrungszeichen
INSERT INTO kunde (name) VALUES ('Max M√ºller');

-- Zahlen ohne Anf√ºhrungszeichen
INSERT INTO produkt (preis) VALUES (29.99);

-- Datum in Anf√ºhrungszeichen (Format: YYYY-MM-DD)
INSERT INTO bestellung (bestelldatum) VALUES ('2024-01-15');
\`\`\`

### 3. Fremdschl√ºssel-Constraints

\`\`\`sql
-- FEHLER: kunde_id 999 existiert nicht
INSERT INTO bestellung (bestellung_id, kunde_id)
VALUES (1, 999);

-- FEHLER: Kann Kunde nicht l√∂schen, wenn Bestellungen existieren
DELETE FROM kunde WHERE kunde_id = 1;
-- L√∂sung: Erst Bestellungen l√∂schen, dann Kunde
\`\`\`

### 4. NULL-Werte

\`\`\`sql
-- NULL einf√ºgen
INSERT INTO mitarbeiter (mitarbeiter_id, vorname, nachname, telefon)
VALUES (1, 'Max', 'M√ºller', NULL);

-- NULL in UPDATE
UPDATE mitarbeiter
SET telefon = NULL
WHERE mitarbeiter_id = 1;

-- Pr√ºfen auf NULL
DELETE FROM mitarbeiter
WHERE telefon IS NULL;
\`\`\`

## Transaktionen (Bonus-Wissen)
<!-- micro-quiz:sql-dml-2025-wichtige-hinweise-fur-die-prufung-micro-1 -->


In der Praxis werden DML-Befehle oft in Transaktionen verwendet:

\`\`\`sql
BEGIN TRANSACTION;

-- Geld von Konto A abbuchen
UPDATE konto
SET saldo = saldo - 100
WHERE konto_id = 1;

-- Geld auf Konto B einzahlen
UPDATE konto
SET saldo = saldo + 100
WHERE konto_id = 2;

COMMIT; -- √Ñnderungen speichern
-- oder ROLLBACK; -- √Ñnderungen r√ºckg√§ngig machen
\`\`\`

<!-- micro-quiz:sql-dml-2025-transaktionen-bonus-wissen-micro-1 -->
## Zusammenfassung

- **INSERT INTO**: F√ºgt neue Zeilen in eine Tabelle ein
- **UPDATE SET WHERE**: √Ñndert bestehende Zeilen (WHERE nicht vergessen!)
- **DELETE FROM WHERE**: L√∂scht Zeilen (WHERE nicht vergessen!)
- **Mehrere Zeilen**: Alle Befehle k√∂nnen mehrere Zeilen gleichzeitig bearbeiten
- **Subqueries**: K√∂nnen in INSERT, UPDATE und DELETE verwendet werden
- **Constraints**: Fremdschl√ºssel und andere Constraints m√ºssen beachtet werden
- **NULL**: Kann explizit eingef√ºgt oder gesetzt werden



<!-- micro-quiz:sql-comprehensive-quiz-2025 -->
<!-- micro-quiz:sql-dml-2025-zusammenfassung-micro-1 -->
`,rD=[{language:"sql",title:"Einfaches INSERT",code:`INSERT INTO kunde (kunde_id, name, email)
VALUES (1, 'Max M√ºller', 'max@example.com');`,explanation:"F√ºgt einen neuen Kunden in die Tabelle ein"},{language:"sql",title:"Mehrere Zeilen einf√ºgen",code:`INSERT INTO produkt (produkt_id, name, preis)
VALUES 
    (1, 'Laptop', 899.99),
    (2, 'Maus', 29.99),
    (3, 'Tastatur', 79.99);`,explanation:"F√ºgt mehrere Produkte gleichzeitig ein"},{language:"sql",title:"UPDATE mit Berechnung",code:`UPDATE produkt
SET preis = preis * 0.9
WHERE kategorie = 'Elektronik';`,explanation:"Reduziert alle Elektronik-Preise um 10%"},{language:"sql",title:"DELETE mit Bedingung",code:`DELETE FROM bestellung
WHERE bestelldatum < '2022-01-01'
  AND status = 'abgeschlossen';`,explanation:"L√∂scht alte, abgeschlossene Bestellungen"}],sD=[{title:"√úbung 1: Kunden einf√ºgen",description:`F√ºge drei neue Kunden in die 'kunde' Tabelle ein:
- ID: 10, Name: 'Sarah Klein', Email: 'sarah@test.de'
- ID: 11, Name: 'Peter Gro√ü', Email: 'peter@test.de'
- ID: 12, Name: 'Maria Lang', Email: 'maria@test.de'`,difficulty:"beginner",solution:`INSERT INTO kunde (kunde_id, name, email)
VALUES 
    (10, 'Sarah Klein', 'sarah@test.de'),
    (11, 'Peter Gro√ü', 'peter@test.de'),
    (12, 'Maria Lang', 'maria@test.de');`},{title:"√úbung 2: Preis aktualisieren",description:"Erh√∂he den Preis aller Produkte in der Kategorie 'B√ºcher' um 5%.",difficulty:"beginner",solution:`UPDATE produkt
SET preis = preis * 1.05
WHERE kategorie = 'B√ºcher';`},{title:"√úbung 3: Lagerbestand reduzieren",description:"Ein Kunde kauft 3 St√ºck von Produkt mit ID 101. Reduziere den Lagerbestand entsprechend.",difficulty:"beginner",solution:`UPDATE produkt
SET lagerbestand = lagerbestand - 3
WHERE produkt_id = 101;`},{title:"√úbung 4: Alte Daten l√∂schen",description:"L√∂sche alle Bestellungen, die vor dem 1. Januar 2020 erstellt wurden UND den Status 'storniert' haben.",difficulty:"intermediate",solution:`DELETE FROM bestellung
WHERE bestelldatum < '2020-01-01'
  AND status = 'storniert';`},{title:"√úbung 5: Komplexe Datenmanipulation",description:`F√ºhre folgende Operationen durch:
1. F√ºge ein neues Produkt ein (ID: 200, Name: 'Monitor', Preis: 299.99, Lagerbestand: 10)
2. Erstelle eine Bestellung f√ºr Kunde 1 (Bestellung-ID: 5000, Datum: heute, Betrag: 299.99)
3. Reduziere den Lagerbestand des Monitors um 1
4. √Ñndere den Status der Bestellung auf 'versendet'`,difficulty:"advanced",solution:`-- 1. Produkt einf√ºgen
INSERT INTO produkt (produkt_id, name, preis, lagerbestand)
VALUES (200, 'Monitor', 299.99, 10);

-- 2. Bestellung erstellen
INSERT INTO bestellung (bestellung_id, kunde_id, bestelldatum, gesamtbetrag, status)
VALUES (5000, 1, CURRENT_DATE, 299.99, 'neu');

-- 3. Lagerbestand reduzieren
UPDATE produkt
SET lagerbestand = lagerbestand - 1
WHERE produkt_id = 200;

-- 4. Status √§ndern
UPDATE bestellung
SET status = 'versendet'
WHERE bestellung_id = 5000;`},{title:"√úbung 6: Daten aus Subquery einf√ºgen",description:"Erstelle eine Tabelle 'top_kunden' und f√ºge alle Kunden ein, die mehr als 5 Bestellungen haben. (Tipp: Verwende INSERT INTO ... SELECT ...)",difficulty:"advanced",solution:`INSERT INTO top_kunden (kunde_id, name, email, anzahl_bestellungen)
SELECT k.kunde_id, k.name, k.email, COUNT(b.bestellung_id)
FROM kunde k
JOIN bestellung b ON k.kunde_id = b.kunde_id
GROUP BY k.kunde_id, k.name, k.email
HAVING COUNT(b.bestellung_id) > 5;`}],aD=["sql-comprehensive-quiz-2025"],oD=[{title:"SQL Tutorial - DML",url:"https://www.w3schools.com/sql/sql_insert.asp",type:"documentation"}],lD="2025-01-10T00:00:00Z",uD="1.0",cD=["Du kannst sQL erkl√§ren","Du kannst dML erkl√§ren","Du kannst iNSERT erkl√§ren","Du kannst uPDATE erkl√§ren","Du kannst dELETE erkl√§ren"],dD="Lerne die Data Manipulation Language (DML) Befehle INSERT, UPDATE und DELETE aus dem IHK Pr√ºfungsbeiblatt.",mD=[{id:"sql-dml---data-manipulation-language",title:"SQL DML - Data Manipulation Language",summary:"Kernaspekt: SQL DML - Data Manipulation Language"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"insert---daten-einfugen",title:"INSERT - Daten einf√ºgen",summary:"Kernaspekt: INSERT - Daten einf√ºgen"},{id:"update---daten-andern",title:"UPDATE - Daten √§ndern",summary:"Kernaspekt: UPDATE - Daten √§ndern"},{id:"delete---daten-loschen",title:"DELETE - Daten l√∂schen",summary:"Kernaspekt: DELETE - Daten l√∂schen"},{id:"praxisbeispiel-online-shop",title:"Praxisbeispiel: Online-Shop",summary:"Kernaspekt: Praxisbeispiel: Online-Shop"},{id:"wichtige-hinweise-fur-die-prufung",title:"Wichtige Hinweise f√ºr die Pr√ºfung",summary:"Kernaspekt: Wichtige Hinweise f√ºr die Pr√ºfung"},{id:"transaktionen-bonus-wissen",title:"Transaktionen (Bonus-Wissen)",summary:"Kernaspekt: Transaktionen (Bonus-Wissen)"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],gD="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",hD="Automatisch erg√§nzt: Review erforderlich",pD=["sql-dml-2025-einfuhrung-micro-1","sql-dml-2025-insert---daten-einfugen-micro-1","sql-dml-2025-update---daten-andern-micro-1","sql-dml-2025-delete---daten-loschen-micro-1","sql-dml-2025-praxisbeispiel-online-shop-micro-1","sql-dml-2025-wichtige-hinweise-fur-die-prufung-micro-1","sql-dml-2025-transaktionen-bonus-wissen-micro-1","sql-dml-2025-zusammenfassung-micro-1"],fD={id:j_,title:$_,description:G_,category:U_,subcategory:H_,difficulty:Q_,examRelevance:Z_,newIn2025:J_,removedIn2025:Y_,important:X_,estimatedTime:eD,prerequisites:nD,tags:tD,content:iD,codeExamples:rD,exercises:sD,relatedQuizzes:aD,resources:oD,lastUpdated:lD,version:uD,learningObjectives:cD,summary:dD,contentOutline:mD,accessibilityNotes:gD,editorNote:hD,microQuizzes:pD},bD="sql-dql-2025",kD="SQL DQL - Daten abfragen",zD="Lerne die Data Query Language (DQL) mit SELECT, WHERE, JOIN, GROUP BY und mehr aus dem IHK Pr√ºfungsbeiblatt. Dies ist der wichtigste Teil von SQL f√ºr die Pr√ºfung!",vD="F√ú-02",yD="SQL - Data Query Language",SD="intermediate",wD="high",AD=!0,ED=!1,_D=!0,DD=60,PD=["sql-ddl-2025","sql-dml-2025"],TD=["SQL","DQL","SELECT","WHERE","JOIN","GROUP BY","Subquery","Datenbank","Pr√ºfungsbeiblatt"],qD=`# SQL DQL - Data Query Language

## Einf√ºhrung

Die **Data Query Language (DQL)** ist der wichtigste Teil von SQL f√ºr die Pr√ºfung! Mit DQL-Befehlen fragst du Daten aus Datenbanken ab. Der Hauptbefehl ist **SELECT**.

**Wichtig:** Diese Befehle sind im SQL-Beiblatt enthalten und machen den Gro√üteil der SQL-Aufgaben in der Pr√ºfung aus!

<!-- micro-quiz:sql-dql-2025-einfuhrung-micro-1 -->
## SELECT - Grundlagen

### Alle Spalten ausw√§hlen

\`\`\`sql
SELECT *
FROM mitarbeiter;
\`\`\`

**Hinweis:** \`*\` bedeutet "alle Spalten". In der Praxis solltest du nur die ben√∂tigten Spalten ausw√§hlen!

### Bestimmte Spalten ausw√§hlen (Projektion)

\`\`\`sql
SELECT vorname, nachname, email
FROM mitarbeiter;
\`\`\`

### Spalten umbenennen (Alias)

\`\`\`sql
SELECT 
    vorname AS "Vorname",
    nachname AS "Nachname",
    gehalt AS "Monatsgehalt"
FROM mitarbeiter;
\`\`\`

### Berechnungen in SELECT

\`\`\`sql
SELECT 
    vorname,
    nachname,
    gehalt,
    gehalt * 12 AS jahresgehalt,
    gehalt * 0.19 AS steuern
FROM mitarbeiter;
\`\`\`

## WHERE - Daten filtern (Selektion)
<!-- micro-quiz:sql-dql-2025-select---grundlagen-micro-1 -->


### Einfache Bedingungen

\`\`\`sql
-- Gleichheit
SELECT * FROM mitarbeiter
WHERE abteilung_id = 1;

-- Ungleichheit
SELECT * FROM mitarbeiter
WHERE abteilung_id != 2;
-- oder
SELECT * FROM mitarbeiter
WHERE abteilung_id <> 2;

-- Vergleiche
SELECT * FROM mitarbeiter
WHERE gehalt > 50000;

SELECT * FROM mitarbeiter
WHERE gehalt >= 40000;

SELECT * FROM mitarbeiter
WHERE einstellungsdatum < '2020-01-01';
\`\`\`

### Logische Operatoren (AND, OR, NOT)

\`\`\`sql
-- AND: Beide Bedingungen m√ºssen erf√ºllt sein
SELECT * FROM mitarbeiter
WHERE gehalt > 40000 AND abteilung_id = 1;

-- OR: Mindestens eine Bedingung muss erf√ºllt sein
SELECT * FROM mitarbeiter
WHERE abteilung_id = 1 OR abteilung_id = 2;

-- NOT: Negation
SELECT * FROM mitarbeiter
WHERE NOT abteilung_id = 3;

-- Kombination mit Klammern
SELECT * FROM mitarbeiter
WHERE (abteilung_id = 1 OR abteilung_id = 2)
  AND gehalt > 45000;
\`\`\`

### BETWEEN - Bereichsabfragen

\`\`\`sql
SELECT * FROM mitarbeiter
WHERE gehalt BETWEEN 40000 AND 60000;

-- Entspricht:
SELECT * FROM mitarbeiter
WHERE gehalt >= 40000 AND gehalt <= 60000;
\`\`\`

### IN - Mehrere Werte

\`\`\`sql
SELECT * FROM mitarbeiter
WHERE abteilung_id IN (1, 2, 3);

-- Entspricht:
SELECT * FROM mitarbeiter
WHERE abteilung_id = 1 
   OR abteilung_id = 2 
   OR abteilung_id = 3;
\`\`\`

### LIKE - Mustersuche

\`\`\`sql
-- % = beliebig viele Zeichen
SELECT * FROM mitarbeiter
WHERE nachname LIKE 'M%';  -- Beginnt mit M

SELECT * FROM mitarbeiter
WHERE nachname LIKE '%er';  -- Endet mit er

SELECT * FROM mitarbeiter
WHERE email LIKE '%@gmail.com';  -- Gmail-Adressen

-- _ = genau ein Zeichen
SELECT * FROM mitarbeiter
WHERE vorname LIKE 'T_m';  -- Tom, Tim, etc.
\`\`\`

### IS NULL / IS NOT NULL

\`\`\`sql
-- Mitarbeiter ohne Telefonnummer
SELECT * FROM mitarbeiter
WHERE telefon IS NULL;

-- Mitarbeiter mit Telefonnummer
SELECT * FROM mitarbeiter
WHERE telefon IS NOT NULL;
\`\`\`

**Wichtig:** Verwende niemals \`= NULL\`, sondern immer \`IS NULL\`!

<!-- micro-quiz:sql-dql-2025-where---daten-filtern-selektion-micro-1 -->
## ORDER BY - Sortieren

### Aufsteigend sortieren (ASC)

\`\`\`sql
SELECT * FROM mitarbeiter
ORDER BY nachname ASC;

-- ASC ist Standard und kann weggelassen werden
SELECT * FROM mitarbeiter
ORDER BY nachname;
\`\`\`

### Absteigend sortieren (DESC)

\`\`\`sql
SELECT * FROM mitarbeiter
ORDER BY gehalt DESC;
\`\`\`

### Nach mehreren Spalten sortieren

\`\`\`sql
SELECT * FROM mitarbeiter
ORDER BY abteilung_id ASC, gehalt DESC;
-- Erst nach Abteilung aufsteigend, dann nach Gehalt absteigend
\`\`\`

## Aggregatfunktionen
<!-- micro-quiz:sql-dql-2025-order-by---sortieren-micro-1 -->


### COUNT - Anzahl z√§hlen

\`\`\`sql
-- Alle Zeilen z√§hlen
SELECT COUNT(*) FROM mitarbeiter;

-- Nicht-NULL Werte z√§hlen
SELECT COUNT(telefon) FROM mitarbeiter;

-- Eindeutige Werte z√§hlen
SELECT COUNT(DISTINCT abteilung_id) FROM mitarbeiter;
\`\`\`

### SUM - Summe berechnen

\`\`\`sql
SELECT SUM(gehalt) AS gesamtgehalt
FROM mitarbeiter;
\`\`\`

### AVG - Durchschnitt berechnen

\`\`\`sql
SELECT AVG(gehalt) AS durchschnittsgehalt
FROM mitarbeiter;
\`\`\`

### MIN und MAX - Minimum und Maximum

\`\`\`sql
SELECT 
    MIN(gehalt) AS niedrigstes_gehalt,
    MAX(gehalt) AS hoechstes_gehalt
FROM mitarbeiter;
\`\`\`

<!-- micro-quiz:sql-dql-2025-aggregatfunktionen-micro-1 -->
## GROUP BY - Gruppieren

### Grundlegendes Gruppieren

\`\`\`sql
-- Anzahl Mitarbeiter pro Abteilung
SELECT abteilung_id, COUNT(*) AS anzahl_mitarbeiter
FROM mitarbeiter
GROUP BY abteilung_id;
\`\`\`

### Mehrere Aggregatfunktionen

\`\`\`sql
SELECT 
    abteilung_id,
    COUNT(*) AS anzahl,
    AVG(gehalt) AS durchschnitt,
    MIN(gehalt) AS minimum,
    MAX(gehalt) AS maximum
FROM mitarbeiter
GROUP BY abteilung_id;
\`\`\`

### HAVING - Gruppen filtern

\`\`\`sql
-- Nur Abteilungen mit mehr als 5 Mitarbeitern
SELECT abteilung_id, COUNT(*) AS anzahl
FROM mitarbeiter
GROUP BY abteilung_id
HAVING COUNT(*) > 5;
\`\`\`

**Wichtig:** 
- WHERE filtert VOR dem Gruppieren
- HAVING filtert NACH dem Gruppieren

\`\`\`sql
-- Abteilungen mit mehr als 3 Mitarbeitern, die mehr als 40000 verdienen
SELECT abteilung_id, COUNT(*) AS anzahl
FROM mitarbeiter
WHERE gehalt > 40000
GROUP BY abteilung_id
HAVING COUNT(*) > 3;
\`\`\`

## JOIN - Tabellen verkn√ºpfen
<!-- micro-quiz:sql-dql-2025-group-by---gruppieren-micro-1 -->


### INNER JOIN - Nur √ºbereinstimmende Zeilen

\`\`\`sql
SELECT 
    m.vorname,
    m.nachname,
    a.name AS abteilung
FROM mitarbeiter m
INNER JOIN abteilung a ON m.abteilung_id = a.abteilung_id;
\`\`\`

### LEFT JOIN - Alle Zeilen aus linker Tabelle

\`\`\`sql
-- Alle Mitarbeiter, auch ohne Abteilung
SELECT 
    m.vorname,
    m.nachname,
    a.name AS abteilung
FROM mitarbeiter m
LEFT JOIN abteilung a ON m.abteilung_id = a.abteilung_id;
\`\`\`

### RIGHT JOIN - Alle Zeilen aus rechter Tabelle

\`\`\`sql
-- Alle Abteilungen, auch ohne Mitarbeiter
SELECT 
    a.name AS abteilung,
    m.vorname,
    m.nachname
FROM mitarbeiter m
RIGHT JOIN abteilung a ON m.abteilung_id = a.abteilung_id;
\`\`\`

### Mehrere JOINs

\`\`\`sql
SELECT 
    m.vorname,
    m.nachname,
    a.name AS abteilung,
    p.name AS projekt
FROM mitarbeiter m
INNER JOIN abteilung a ON m.abteilung_id = a.abteilung_id
INNER JOIN mitarbeiter_projekt mp ON m.mitarbeiter_id = mp.mitarbeiter_id
INNER JOIN projekt p ON mp.projekt_id = p.projekt_id;
\`\`\`

<!-- micro-quiz:sql-dql-2025-join---tabellen-verknupfen-micro-1 -->
## Subqueries (Unterabfragen)

### Subquery in WHERE

\`\`\`sql
-- Mitarbeiter mit √ºberdurchschnittlichem Gehalt
SELECT vorname, nachname, gehalt
FROM mitarbeiter
WHERE gehalt > (
    SELECT AVG(gehalt)
    FROM mitarbeiter
);
\`\`\`

### Subquery mit IN

\`\`\`sql
-- Mitarbeiter aus Abteilungen in Berlin
SELECT vorname, nachname
FROM mitarbeiter
WHERE abteilung_id IN (
    SELECT abteilung_id
    FROM abteilung
    WHERE standort = 'Berlin'
);
\`\`\`

### Subquery in SELECT

\`\`\`sql
SELECT 
    vorname,
    nachname,
    gehalt,
    (SELECT AVG(gehalt) FROM mitarbeiter) AS durchschnitt,
    gehalt - (SELECT AVG(gehalt) FROM mitarbeiter) AS differenz
FROM mitarbeiter;
\`\`\`

## DISTINCT - Duplikate entfernen
<!-- micro-quiz:sql-dql-2025-subqueries-unterabfragen-micro-1 -->


\`\`\`sql
-- Alle verschiedenen Abteilungs-IDs
SELECT DISTINCT abteilung_id
FROM mitarbeiter;

-- Alle verschiedenen Kombinationen
SELECT DISTINCT abteilung_id, standort
FROM abteilung;
\`\`\`

<!-- micro-quiz:sql-dql-2025-distinct---duplikate-entfernen-micro-1 -->
## LIMIT - Anzahl begrenzen

\`\`\`sql
-- Die 5 bestbezahlten Mitarbeiter
SELECT vorname, nachname, gehalt
FROM mitarbeiter
ORDER BY gehalt DESC
LIMIT 5;

-- Mit OFFSET (√ºberspringt erste 10 Zeilen)
SELECT vorname, nachname
FROM mitarbeiter
ORDER BY nachname
LIMIT 10 OFFSET 10;
\`\`\`

## Komplexes Praxisbeispiel
<!-- micro-quiz:sql-dql-2025-limit---anzahl-begrenzen-micro-1 -->


\`\`\`sql
-- Finde alle Abteilungen mit:
-- - Mehr als 3 Mitarbeitern
-- - Durchschnittsgehalt √ºber 45000
-- - Standort in Berlin oder M√ºnchen
-- Zeige: Abteilungsname, Anzahl Mitarbeiter, Durchschnittsgehalt
-- Sortiert nach Durchschnittsgehalt absteigend

SELECT 
    a.name AS abteilung,
    a.standort,
    COUNT(m.mitarbeiter_id) AS anzahl_mitarbeiter,
    ROUND(AVG(m.gehalt), 2) AS durchschnittsgehalt,
    MIN(m.gehalt) AS min_gehalt,
    MAX(m.gehalt) AS max_gehalt
FROM abteilung a
INNER JOIN mitarbeiter m ON a.abteilung_id = m.abteilung_id
WHERE a.standort IN ('Berlin', 'M√ºnchen')
GROUP BY a.abteilung_id, a.name, a.standort
HAVING COUNT(m.mitarbeiter_id) > 3
   AND AVG(m.gehalt) > 45000
ORDER BY durchschnittsgehalt DESC;
\`\`\`

<!-- micro-quiz:sql-dql-2025-komplexes-praxisbeispiel-micro-1 -->
## Wichtige Hinweise f√ºr die Pr√ºfung

### 1. SELECT-Reihenfolge (Schreibweise)

\`\`\`sql
SELECT      -- 1. Was soll ausgegeben werden?
    spalten
FROM        -- 2. Aus welcher Tabelle?
    tabelle
WHERE       -- 3. Welche Zeilen? (vor Gruppierung)
    bedingung
GROUP BY    -- 4. Gruppieren?
    spalten
HAVING      -- 5. Welche Gruppen? (nach Gruppierung)
    bedingung
ORDER BY    -- 6. Sortierung?
    spalten
LIMIT       -- 7. Anzahl begrenzen?
    anzahl;
\`\`\`

### 2. Ausf√ºhrungsreihenfolge (intern)

1. FROM (Tabellen laden)
2. WHERE (Zeilen filtern)
3. GROUP BY (Gruppieren)
4. HAVING (Gruppen filtern)
5. SELECT (Spalten ausw√§hlen)
6. ORDER BY (Sortieren)
7. LIMIT (Begrenzen)

### 3. H√§ufige Fehler

\`\`\`sql
-- FALSCH: Spalte nicht in GROUP BY
SELECT abteilung_id, vorname, COUNT(*)
FROM mitarbeiter
GROUP BY abteilung_id;
-- vorname muss auch in GROUP BY oder eine Aggregatfunktion sein!

-- RICHTIG:
SELECT abteilung_id, COUNT(*)
FROM mitarbeiter
GROUP BY abteilung_id;

-- FALSCH: WHERE mit Aggregatfunktion
SELECT abteilung_id, COUNT(*)
FROM mitarbeiter
WHERE COUNT(*) > 5
GROUP BY abteilung_id;
-- Verwende HAVING statt WHERE!

-- RICHTIG:
SELECT abteilung_id, COUNT(*)
FROM mitarbeiter
GROUP BY abteilung_id
HAVING COUNT(*) > 5;
\`\`\`

## Zusammenfassung
<!-- micro-quiz:sql-dql-2025-wichtige-hinweise-fur-die-prufung-micro-1 -->


- **SELECT**: Spalten ausw√§hlen (Projektion)
- **FROM**: Tabelle(n) angeben
- **WHERE**: Zeilen filtern (Selektion)
- **JOIN**: Tabellen verkn√ºpfen
- **GROUP BY**: Zeilen gruppieren
- **HAVING**: Gruppen filtern
- **ORDER BY**: Ergebnis sortieren
- **LIMIT**: Anzahl begrenzen
- **Aggregatfunktionen**: COUNT, SUM, AVG, MIN, MAX
- **Subqueries**: Abfragen in Abfragen
- **DISTINCT**: Duplikate entfernen



<!-- micro-quiz:sql-comprehensive-quiz-2025 -->
<!-- micro-quiz:sql-dql-2025-zusammenfassung-micro-1 -->
`,RD=[{language:"sql",title:"Einfache SELECT-Abfrage",code:`SELECT vorname, nachname, email
FROM mitarbeiter
WHERE abteilung_id = 1
ORDER BY nachname;`,explanation:"W√§hlt bestimmte Spalten aus, filtert nach Abteilung und sortiert nach Nachname"},{language:"sql",title:"JOIN mit Aggregation",code:`SELECT 
    a.name AS abteilung,
    COUNT(m.mitarbeiter_id) AS anzahl,
    AVG(m.gehalt) AS durchschnitt
FROM abteilung a
LEFT JOIN mitarbeiter m ON a.abteilung_id = m.abteilung_id
GROUP BY a.abteilung_id, a.name
ORDER BY anzahl DESC;`,explanation:"Zeigt Abteilungen mit Mitarbeiteranzahl und Durchschnittsgehalt"},{language:"sql",title:"Subquery Beispiel",code:`SELECT vorname, nachname, gehalt
FROM mitarbeiter
WHERE gehalt > (
    SELECT AVG(gehalt)
    FROM mitarbeiter
)
ORDER BY gehalt DESC;`,explanation:"Findet alle Mitarbeiter mit √ºberdurchschnittlichem Gehalt"},{language:"sql",title:"Komplexe Abfrage",code:`SELECT 
    p.name AS projekt,
    COUNT(DISTINCT m.mitarbeiter_id) AS team_groesse,
    SUM(p.budget) AS gesamtbudget
FROM projekt p
INNER JOIN mitarbeiter_projekt mp ON p.projekt_id = mp.projekt_id
INNER JOIN mitarbeiter m ON mp.mitarbeiter_id = m.mitarbeiter_id
WHERE p.startdatum >= '2024-01-01'
GROUP BY p.projekt_id, p.name
HAVING COUNT(DISTINCT m.mitarbeiter_id) >= 3
ORDER BY gesamtbudget DESC
LIMIT 10;`,explanation:"Top 10 Projekte ab 2024 mit mindestens 3 Teammitgliedern"}],ID=[{title:"√úbung 1: Einfache SELECT-Abfrage",description:"W√§hle alle Mitarbeiter aus, die mehr als 50000 verdienen. Zeige nur Vorname, Nachname und Gehalt. Sortiere nach Gehalt absteigend.",difficulty:"beginner",solution:`SELECT vorname, nachname, gehalt
FROM mitarbeiter
WHERE gehalt > 50000
ORDER BY gehalt DESC;`},{title:"√úbung 2: WHERE mit mehreren Bedingungen",description:"Finde alle Mitarbeiter aus Abteilung 1 oder 2, die nach dem 1. Januar 2020 eingestellt wurden und mehr als 40000 verdienen.",difficulty:"beginner",solution:`SELECT *
FROM mitarbeiter
WHERE (abteilung_id = 1 OR abteilung_id = 2)
  AND einstellungsdatum > '2020-01-01'
  AND gehalt > 40000;`},{title:"√úbung 3: Aggregatfunktionen",description:"Berechne f√ºr jede Abteilung: Anzahl Mitarbeiter, Durchschnittsgehalt, Minimum und Maximum. Sortiere nach Durchschnittsgehalt absteigend.",difficulty:"intermediate",solution:`SELECT 
    abteilung_id,
    COUNT(*) AS anzahl,
    AVG(gehalt) AS durchschnitt,
    MIN(gehalt) AS minimum,
    MAX(gehalt) AS maximum
FROM mitarbeiter
GROUP BY abteilung_id
ORDER BY durchschnitt DESC;`},{title:"√úbung 4: INNER JOIN",description:"Zeige alle Mitarbeiter mit ihrem Abteilungsnamen und Standort. Zeige nur Mitarbeiter, die einer Abteilung zugeordnet sind.",difficulty:"intermediate",solution:`SELECT 
    m.vorname,
    m.nachname,
    a.name AS abteilung,
    a.standort
FROM mitarbeiter m
INNER JOIN abteilung a ON m.abteilung_id = a.abteilung_id;`},{title:"√úbung 5: LEFT JOIN mit NULL-Pr√ºfung",description:"Finde alle Mitarbeiter, die KEINER Abteilung zugeordnet sind. Verwende einen LEFT JOIN.",difficulty:"intermediate",solution:`SELECT 
    m.vorname,
    m.nachname,
    m.email
FROM mitarbeiter m
LEFT JOIN abteilung a ON m.abteilung_id = a.abteilung_id
WHERE a.abteilung_id IS NULL;`},{title:"√úbung 6: Subquery",description:"Finde alle Mitarbeiter, die in der gleichen Abteilung arbeiten wie 'Max Mustermann'. Schlie√üe Max Mustermann selbst aus.",difficulty:"advanced",solution:`SELECT vorname, nachname, abteilung_id
FROM mitarbeiter
WHERE abteilung_id = (
    SELECT abteilung_id
    FROM mitarbeiter
    WHERE vorname = 'Max' AND nachname = 'Mustermann'
)
AND NOT (vorname = 'Max' AND nachname = 'Mustermann');`},{title:"√úbung 7: HAVING Klausel",description:"Zeige alle Abteilungen, die mehr als 5 Mitarbeiter haben UND ein Durchschnittsgehalt √ºber 45000. Zeige Abteilungs-ID, Anzahl und Durchschnitt.",difficulty:"advanced",solution:`SELECT 
    abteilung_id,
    COUNT(*) AS anzahl,
    AVG(gehalt) AS durchschnitt
FROM mitarbeiter
GROUP BY abteilung_id
HAVING COUNT(*) > 5 AND AVG(gehalt) > 45000;`},{title:"√úbung 8: Mehrere JOINs",description:"Zeige alle Projekte mit den zugeordneten Mitarbeitern und deren Abteilungen. Zeige: Projektname, Mitarbeitername, Abteilungsname, Rolle im Projekt.",difficulty:"advanced",solution:`SELECT 
    p.name AS projekt,
    m.vorname,
    m.nachname,
    a.name AS abteilung,
    mp.rolle
FROM projekt p
INNER JOIN mitarbeiter_projekt mp ON p.projekt_id = mp.projekt_id
INNER JOIN mitarbeiter m ON mp.mitarbeiter_id = m.mitarbeiter_id
INNER JOIN abteilung a ON m.abteilung_id = a.abteilung_id
ORDER BY p.name, m.nachname;`},{title:"√úbung 9: Komplexe Abfrage",description:"Finde die Top 3 Abteilungen mit dem h√∂chsten Gesamtgehalt (Summe aller Mitarbeitergeh√§lter). Zeige: Abteilungsname, Standort, Anzahl Mitarbeiter, Gesamtgehalt. Nur Abteilungen in Berlin oder M√ºnchen.",difficulty:"advanced",solution:`SELECT 
    a.name AS abteilung,
    a.standort,
    COUNT(m.mitarbeiter_id) AS anzahl,
    SUM(m.gehalt) AS gesamtgehalt
FROM abteilung a
INNER JOIN mitarbeiter m ON a.abteilung_id = m.abteilung_id
WHERE a.standort IN ('Berlin', 'M√ºnchen')
GROUP BY a.abteilung_id, a.name, a.standort
ORDER BY gesamtgehalt DESC
LIMIT 3;`},{title:"√úbung 10: Subquery mit IN",description:"Finde alle Mitarbeiter, die an Projekten mit einem Budget √ºber 100000 arbeiten. Zeige: Vorname, Nachname, Email. Keine Duplikate!",difficulty:"advanced",solution:`SELECT DISTINCT m.vorname, m.nachname, m.email
FROM mitarbeiter m
INNER JOIN mitarbeiter_projekt mp ON m.mitarbeiter_id = mp.mitarbeiter_id
WHERE mp.projekt_id IN (
    SELECT projekt_id
    FROM projekt
    WHERE budget > 100000
)
ORDER BY m.nachname;`}],CD=["sql-comprehensive-quiz-2025"],LD=[{title:"SQL Tutorial - SELECT",url:"https://www.w3schools.com/sql/sql_select.asp",type:"documentation"},{title:"SQL JOIN Visualizer",url:"https://sql-joins.leopard.in.ua/",type:"article"}],MD="2025-01-10T00:00:00Z",OD="1.0",ND=["Du kannst sQL erkl√§ren","Du kannst dQL erkl√§ren","Du kannst sELECT erkl√§ren","Du kannst wHERE erkl√§ren","Du kannst jOIN erkl√§ren"],BD="Lerne die Data Query Language (DQL) mit SELECT, WHERE, JOIN, GROUP BY und mehr aus dem IHK Pr√ºfungsbeiblatt.",xD=[{id:"sql-dql---data-query-language",title:"SQL DQL - Data Query Language",summary:"Kernaspekt: SQL DQL - Data Query Language"},{id:"einfuhrung",title:"Einf√ºhrung",summary:"Kernaspekt: Einf√ºhrung"},{id:"select---grundlagen",title:"SELECT - Grundlagen",summary:"Kernaspekt: SELECT - Grundlagen"},{id:"where---daten-filtern-selektion",title:"WHERE - Daten filtern (Selektion)",summary:"Kernaspekt: WHERE - Daten filtern (Selektion)"},{id:"order-by---sortieren",title:"ORDER BY - Sortieren",summary:"Kernaspekt: ORDER BY - Sortieren"},{id:"aggregatfunktionen",title:"Aggregatfunktionen",summary:"Kernaspekt: Aggregatfunktionen"},{id:"group-by---gruppieren",title:"GROUP BY - Gruppieren",summary:"Kernaspekt: GROUP BY - Gruppieren"},{id:"join---tabellen-verknupfen",title:"JOIN - Tabellen verkn√ºpfen",summary:"Kernaspekt: JOIN - Tabellen verkn√ºpfen"},{id:"subqueries-unterabfragen",title:"Subqueries (Unterabfragen)",summary:"Kernaspekt: Subqueries (Unterabfragen)"},{id:"distinct---duplikate-entfernen",title:"DISTINCT - Duplikate entfernen",summary:"Kernaspekt: DISTINCT - Duplikate entfernen"},{id:"limit---anzahl-begrenzen",title:"LIMIT - Anzahl begrenzen",summary:"Kernaspekt: LIMIT - Anzahl begrenzen"},{id:"komplexes-praxisbeispiel",title:"Komplexes Praxisbeispiel",summary:"Kernaspekt: Komplexes Praxisbeispiel"},{id:"wichtige-hinweise-fur-die-prufung",title:"Wichtige Hinweise f√ºr die Pr√ºfung",summary:"Kernaspekt: Wichtige Hinweise f√ºr die Pr√ºfung"},{id:"zusammenfassung",title:"Zusammenfassung",summary:"Kernaspekt: Zusammenfassung"}],VD="Klare √úberschriften, kurze S√§tze, keine reine Farb-Codierung.",FD="Automatisch erg√§nzt: Review erforderlich",KD=["sql-dql-2025-einfuhrung-micro-1","sql-dql-2025-select---grundlagen-micro-1","sql-dql-2025-where---daten-filtern-selektion-micro-1","sql-dql-2025-order-by---sortieren-micro-1","sql-dql-2025-aggregatfunktionen-micro-1","sql-dql-2025-group-by---gruppieren-micro-1","sql-dql-2025-join---tabellen-verknupfen-micro-1","sql-dql-2025-subqueries-unterabfragen-micro-1","sql-dql-2025-distinct---duplikate-entfernen-micro-1","sql-dql-2025-limit---anzahl-begrenzen-micro-1","sql-dql-2025-komplexes-praxisbeispiel-micro-1","sql-dql-2025-wichtige-hinweise-fur-die-prufung-micro-1","sql-dql-2025-zusammenfassung-micro-1"],WD={id:bD,title:kD,description:zD,category:vD,subcategory:yD,difficulty:SD,examRelevance:wD,newIn2025:AD,removedIn2025:ED,important:_D,estimatedTime:DD,prerequisites:PD,tags:TD,content:qD,codeExamples:RD,exercises:ID,relatedQuizzes:CD,resources:LD,lastUpdated:MD,version:OD,learningObjectives:ND,summary:BD,contentOutline:xD,accessibilityNotes:VD,editorNote:FD,microQuizzes:KD},jD=[{id:"bp-dpa-01-er-modeling",title:"ER-Modellierung und Datenmodellierung",description:"Grundlagen der Entity-Relationship-Modellierung und konzeptionelle Datenmodellierung",category:"BP-DPA-02",subcategory:"Datenmodelle entwickeln und implementieren",difficulty:"intermediate",examRelevance:"high",newIn2025:!1,removedIn2025:!1,important:!0,estimatedTime:60,prerequisites:[],tags:["ER-Modell","Datenmodellierung","Entit√§ten","Beziehungen","Kardinalit√§ten"],content:`# ER-Modellierung und Datenmodellierung

## Einf√ºhrung

Die Entity-Relationship-Modellierung (ER-Modellierung) ist eine grundlegende Methode zur konzeptionellen Darstellung von Datenstrukturen. Sie bildet die Basis f√ºr die Entwicklung relationaler Datenbanken und ist essentiell f√ºr Fachinformatiker der Fachrichtung Daten- und Prozessanalyse.

## Grundkonzepte der ER-Modellierung

### 1. Entit√§ten (Entities)

**Definition:**
- Objekte oder Konzepte der realen Welt
- Eindeutig identifizierbar
- Haben Eigenschaften (Attribute)

**Beispiele:**
- Kunde, Produkt, Bestellung, Mitarbeiter
- Darstellung: Rechteck

## ... (see backup for full content)`,codeExamples:[],relatedQuizzes:["bp-dpa-01-er-modeling-quiz"],resources:[{title:"ER-Modellierung Tutorial",url:"https://www.lucidchart.com/pages/er-diagrams",type:"article"}],learningObjectives:["ER-Diagramme erstellen und interpretieren","Entit√§ten, Attribute und Beziehungen identifizieren","Kardinalit√§ten korrekt bestimmen","Schl√ºssel definieren und verwenden","Modellierungsfehler erkennen und vermeiden"],keyTakeaways:["ER-Modellierung ist die Basis f√ºr Datenbankdesign","Kardinalit√§ten beschreiben Beziehungen zwischen Entit√§ten","Prim√§rschl√ºssel identifizieren Entit√§ten eindeutig","N:M-Beziehungen erfordern Zwischentabellen"],lastUpdated:"2025-01-20T00:00:00Z",version:"1.0"}],$D={modules:jD},GD=[{id:"bp-dpa-02-etl-fundamentals",title:"ETL-Prozesse und Datenintegration",description:"Extract, Transform, Load - Grundlagen der Datenintegration und ETL-Pipeline-Design",category:"BP-DPA-01",subcategory:"Daten erfassen, aufbereiten und auswerten",difficulty:"intermediate",examRelevance:"high",newIn2025:!1,removedIn2025:!1,important:!0,estimatedTime:55,prerequisites:[],tags:["ETL","Datenintegration","Extract","Transform","Load","Data Pipeline"],content:`# ETL-Prozesse und Datenintegration

## Einf√ºhrung

ETL (Extract, Transform, Load) ist ein fundamentaler Prozess in der Datenverarbeitung, der es erm√∂glicht, Daten aus verschiedenen Quellen zu extrahieren, zu transformieren und in Zielsysteme zu laden. F√ºr Fachinformatiker der Fachrichtung Daten- und Prozessanalyse ist das Verst√§ndnis von ETL-Prozessen essentiell f√ºr effektive Datenintegration.

## ETL-Grundlagen

### Definition

ETL ist ein dreistufiger Prozess zur Datenintegration: Extract (Extrahieren), Transform (Transformieren), Load (Laden).

## ... (see backup for full content)`,codeExamples:[],relatedQuizzes:["bp-dpa-02-etl-quiz"],resources:[{title:"Apache Airflow Documentation",url:"https://airflow.apache.org/docs/",type:"documentation"},{title:"Talend Open Studio",url:"https://www.talend.com/products/talend-open-studio/",type:"tool"}],learningObjectives:["ETL-Prozess verstehen und implementieren","Extraktionsstrategien ausw√§hlen und anwenden","Datentransformation und -bereinigung durchf√ºhren","Ladestrategien und SCD-Typen implementieren","Datenqualit√§t in ETL-Pipelines sicherstellen"],keyTakeaways:["ETL ist fundamental f√ºr Datenintegration und -qualit√§t","Inkrementelle Extraktion ist effizienter bei gro√üen Datenmengen","Datentransformation erfordert umfassende Validierung","SCD-Typen erm√∂glichen Historisierung von √Ñnderungen"],lastUpdated:"2025-01-20T00:00:00Z",version:"1.0",tracks:["DPA"]}],UD={modules:GD},HD=[{id:"bp-dpa-03-bpmn-fundamentals",title:"Gesch√§ftsprozessmodellierung mit BPMN",description:"Business Process Model and Notation (BPMN) f√ºr die Modellierung und Optimierung von Gesch√§ftsprozessen",category:"BP-DPA-03",subcategory:"Gesch√§ftsprozesse analysieren und optimieren",difficulty:"intermediate",examRelevance:"high",newIn2025:!1,removedIn2025:!1,important:!0,estimatedTime:65,prerequisites:[],tags:["BPMN","Gesch√§ftsprozesse","Prozessmodellierung","Workflow","Prozessoptimierung"],content:`# Gesch√§ftsprozessmodellierung mit BPMN

## Einf√ºhrung

Business Process Model and Notation (BPMN) ist ein internationaler Standard zur grafischen Darstellung von Gesch√§ftsprozessen. F√ºr Fachinformatiker der Fachrichtung Daten- und Prozessanalyse ist BPMN ein essentielles Werkzeug zur Analyse, Dokumentation und Optimierung von Gesch√§ftsprozessen.

## BPMN-Grundlagen

### Definition und Zweck

**BPMN (Business Process Model and Notation):**
- Standardisierte grafische Notation f√ºr Gesch√§ftsprozesse
- Entwickelt von der Object Management Group (OMG)
- Aktuelle Version: BPMN 2.0
- Br√ºcke zwischen Gesch√§ftsanalysten und IT-Entwicklern

**Ziele von BPMN:**
- Einheitliche Darstellung von Gesch√§ftsprozessen
- Verbesserung der Kommunikation zwischen Stakeholdern
- Basis f√ºr Prozessautomatisierung
- Dokumentation und Compliance

## BPMN-Grundelemente

### 1. Flussobjekte (Flow Objects)

#### Ereignisse (Events)
**Start-Ereignisse:**
- Kreis mit d√ºnnem Rand
- Ausl√∂ser f√ºr Prozessbeginn
- Typen: Nachrichten-, Zeit-, Signal-, Regel-Start

#### Aktivit√§ten (Activities)
**Aufgaben (Tasks):**
- Abgerundetes Rechteck
- Atomare Arbeitsschritte
- Typen: Benutzer-, Service-, Skript-, Gesch√§ftsregel-Aufgabe

#### Gateways (Entscheidungen)
**Exklusives Gateway (XOR):**
- Raute mit X
- Entweder-oder-Entscheidung
- Nur ein ausgehender Pfad wird gew√§hlt

## Prozessmodellierung in der Praxis

### Modellierungsprozess

**Schritt 1: Prozessidentifikation**
- Prozessgrenzen definieren
- Start- und Endpunkte bestimmen
- Stakeholder identifizieren

**Schritt 2: Ist-Analyse**
- Aktuellen Prozess dokumentieren
- Interviews mit Prozessbeteiligten
- Beobachtung und Datensammlung

## Pr√ºfungsrelevante Aspekte

- BPMN-Grundelemente erkennen und verwenden
- Prozessdiagramme lesen und erstellen
- Gateways korrekt einsetzen
- Schwimmbahnen f√ºr Verantwortlichkeiten nutzen
- Prozessoptimierung durch BPMN-Analyse`,codeExamples:[],relatedQuizzes:["bp-dpa-03-bpmn-quiz"],resources:[{title:"BPMN 2.0 Specification",url:"https://www.omg.org/spec/BPMN/2.0/",type:"documentation"},{title:"Camunda BPMN Tutorial",url:"https://camunda.com/bpmn/",type:"tutorial"}],learningObjectives:["BPMN-Grundelemente verstehen und anwenden","Gesch√§ftsprozesse grafisch modellieren","Prozessoptimierung durch BPMN-Analyse","Verantwortlichkeiten mit Schwimmbahnen darstellen","KPIs f√ºr Prozessmessung definieren"],keyTakeaways:["BPMN ist der Standard f√ºr Gesch√§ftsprozessmodellierung","Gateways steuern den Prozessfluss und Entscheidungen","Schwimmbahnen zeigen Verantwortlichkeiten auf","Prozessoptimierung basiert auf messbaren KPIs"],lastUpdated:"2025-01-20T00:00:00Z",version:"1.0",tracks:["DPA"]}],QD={modules:HD},ZD=[{id:"bp-dpa-03-process-mining",title:"Process Mining: Discovery, Conformance & Enhancement",description:"Grundlagen und Anwendung von Process Mining zur datengetriebenen Analyse, √úbereinstimmungspr√ºfung und Optimierung von Gesch√§ftsprozessen",category:"BP-DPA-03",subcategory:"Gesch√§ftsprozesse analysieren und optimieren",difficulty:"intermediate",examRelevance:"high",newIn2025:!0,removedIn2025:!1,important:!0,estimatedTime:65,prerequisites:["bp-dpa-03-bpmn-fundamentals"],tags:["process-mining","event-log","discovery","conformance","enhancement","prozessanalyse","kpi","BPMN"],content:`# Process Mining: Discovery, Conformance & Enhancement

## Einf√ºhrung
Process Mining verbindet Gesch√§ftsprozessmodellierung (z.B. BPMN) mit datenbasierter Analyse realer Ausf√ºhrungen. Aus Event Logs (Ereignisprotokollen) werden Prozesse automatisch rekonstruiert (Discovery), mit Soll-Modellen verglichen (Conformance) und gezielt verbessert (Enhancement). Es schlie√üt L√ºcken zwischen modelliertem und gelebtem Prozess und liefert belastbare Kennzahlen (KPIs) wie Durchlaufzeit, Variantenvielfalt und Engp√§sse.`},{id:"bp-dpa-03-kpi-measurement",title:"Prozess-KPI Messung & Auswertung",description:"Systematische Definition, Erhebung und Interpretation von Prozess-KPIs zur Steuerung kontinuierlicher Optimierung",category:"BP-DPA-03",subcategory:"Gesch√§ftsprozesse analysieren und optimieren",difficulty:"intermediate",examRelevance:"high",newIn2025:!0,removedIn2025:!1,important:!0,estimatedTime:60,prerequisites:["bp-dpa-03-bpmn-fundamentals","bp-dpa-03-process-mining"],tags:["kpi","prozesskennzahlen","durchlaufzeit","varianz","performance","prozessanalyse","governance"],content:`# Prozess-KPI Messung & Auswertung

## Einf√ºhrung
Kennzahlen (Key Performance Indicators) √ºbersetzen Prozessleistung in objektiv messbare Gr√∂√üen. Aussagekr√§ftige KPIs sind klar definiert (Formel, Datendom√§ne, Zeitbezug), valide (vertrauensw√ºrdige Quelle) und steuerungsrelevant (beeinflussbar).`},{id:"bp-dpa-03-lean-six-sigma",title:"Lean & Six Sigma integrierte Prozessverbesserung",description:"Kombination von Lean-Verschwendungsreduktion und Six Sigma-Variabilit√§tskontrolle f√ºr nachhaltige Prozessoptimierung",category:"BP-DPA-03",subcategory:"Gesch√§ftsprozesse analysieren und optimieren",difficulty:"intermediate",examRelevance:"high",newIn2025:!0,removedIn2025:!1,important:!1,estimatedTime:55,prerequisites:["bp-dpa-03-bpmn-fundamentals"],tags:["lean","six-sigma","dmaic","verschwendung","kaizen","pdca","prozessoptimierung"],content:`# Lean & Six Sigma integrierte Prozessverbesserung

## Einf√ºhrung
Lean fokussiert auf Fluss & Verschwendungsreduktion, Six Sigma auf Variabilit√§t & Fehlerreduktion. Kombiniert erm√∂glichen sie schnell wirksame (Lean) und nachhaltig stabile (Six Sigma) Verbesserungen.`},{id:"bp-dpa-03-automation-orchestration",title:"Prozessautomatisierung & Orchestrierung",description:"Identifikation, Bewertung und Umsetzung von Automatisierungspotenzialen (RPA, Workflow Engines, Orchestrierung vs. Choreographie)",category:"BP-DPA-03",subcategory:"Gesch√§ftsprozesse analysieren und optimieren",difficulty:"advanced",examRelevance:"high",newIn2025:!0,removedIn2025:!1,important:!0,estimatedTime:70,prerequisites:["bp-dpa-03-bpmn-fundamentals","bp-dpa-03-process-mining"],tags:["automatisierung","rpa","workflow-engine","orchestrierung","choreographie","governance","prozessoptimierung"],content:`# Prozessautomatisierung & Orchestrierung

## Einf√ºhrung
Automatisierung steigert Geschwindigkeit, Konsistenz und Skalierbarkeit. Ziel ist nicht blindes Ersetzen menschlicher Arbeit, sondern Eliminierung repetitiver, regelbasierter T√§tigkeiten und verbesserte End-to-End-Steuerbarkeit.`}],JD={modules:ZD},YD=[{id:"bp-dpa-04-bi-fundamentals",title:"Business Intelligence und Dashboards",description:"Business Intelligence Systeme, Datenvisualisierung und Dashboard-Design f√ºr datengetriebene Entscheidungen",category:"BP-DPA-04",subcategory:"Datenvisualisierung und Reporting",difficulty:"intermediate",examRelevance:"high",newIn2025:!1,removedIn2025:!1,important:!0,estimatedTime:70,prerequisites:["bp-dpa-01-er-modeling","bp-dpa-02-etl-fundamentals"],tags:["Business Intelligence","BI","Dashboards","Datenvisualisierung","KPIs","Reporting"],content:`# Business Intelligence und Dashboards

## Einf√ºhrung

Business Intelligence (BI) umfasst Technologien, Anwendungen und Praktiken zur Sammlung, Integration, Analyse und Pr√§sentation von Gesch√§ftsinformationen. F√ºr Fachinformatiker der Fachrichtung Daten- und Prozessanalyse ist BI essentiell, um aus Daten verwertbare Erkenntnisse zu gewinnen und datengetriebene Entscheidungen zu erm√∂glichen.`,codeExamples:[],relatedQuizzes:["bp-dpa-04-bi-quiz"],resources:[{title:"Microsoft Power BI Documentation",url:"https://docs.microsoft.com/en-us/power-bi/",type:"documentation"},{title:"Tableau Learning Resources",url:"https://www.tableau.com/learn",type:"tutorial"},{title:"The Data Warehouse Toolkit",url:"https://www.kimballgroup.com/",type:"book"}],learningObjectives:["BI-Architektur und Komponenten verstehen","Data Warehouse Design mit dimensionaler Modellierung","KPIs definieren und Dashboard-Design anwenden","OLAP-Operationen f√ºr Datenanalyse nutzen","Datenqualit√§t und Governance implementieren"],keyTakeaways:["BI transformiert Daten in verwertbare Gesch√§ftserkenntnisse","Star Schema ist das Standard-Design f√ºr Data Warehouses","Gute Dashboards folgen klaren Design-Prinzipien","Self-Service BI erfordert starke Governance-Strukturen"],lastUpdated:"2025-01-20T00:00:00Z",version:"1.0"}],XD={modules:YD},ie="bp-01-conception-quiz",re="bp-01-networks-basics",se="Netzwerktopologien und Protokolle",ae="Umfassendes Quiz zu Netzwerkgrundlagen, Topologien, OSI-Modell, TCP/IP-Protokollen und wichtigen Netzwerkdiensten",oe="BP-01",le="intermediate",ue="high",ce=!1,de=30,me=70,ge=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Welche Netzwerktopologie bietet die h√∂chste Ausfallsicherheit durch redundante Verbindungen?","options":["Stern-Topologie","Bus-Topologie","Ring-Topologie","Vermaschte Topologie (Mesh)"],"correctAnswer":"Vermaschte Topologie (Mesh)","explanation":"Die vermaschte Topologie (Mesh) bietet die h√∂chste Ausfallsicherheit, da jedes Ger√§t mit mehreren anderen Ger√§ten verbunden ist. Bei Ausfall einer Verbindung existieren alternative √úbertragungswege. Vollvermaschte Netzwerke haben Verbindungen zwischen allen Ger√§ten, teilvermaschte nur zwischen kritischen Komponenten. Stern-, Bus- und Ring-Topologien haben jeweils Single Points of Failure.","points":1,"category":"Netzwerktopologien"},{"id":"q2","type":"single-choice","question":"Was ist der Hauptnachteil einer Stern-Topologie?","options":["Hoher Kabelaufwand und zentraler Switch als Single Point of Failure","Ausfall eines Endger√§ts betrifft das gesamte Netzwerk","Schwierige Erweiterung des Netzwerks","Keine zentrale Verwaltung m√∂glich"],"correctAnswer":"Hoher Kabelaufwand und zentraler Switch als Single Point of Failure","explanation":"Der Hauptnachteil der Stern-Topologie ist der h√∂here Kabelaufwand (jedes Ger√§t ben√∂tigt ein eigenes Kabel zum Switch) und dass der zentrale Switch einen Single Point of Failure darstellt. F√§llt der Switch aus, ist das gesamte Netzwerk betroffen. Die anderen Aussagen sind falsch: Ausfall eines Endger√§ts betrifft nur dieses Ger√§t, Erweiterung ist einfach, und zentrale Verwaltung ist ein Vorteil.","points":1,"category":"Netzwerktopologien"},{"id":"q3","type":"single-choice","question":"Welcher Netzwerktyp beschreibt ein lokales Netzwerk innerhalb eines Geb√§udes oder Campus?","options":["WAN (Wide Area Network)","MAN (Metropolitan Area Network)","LAN (Local Area Network)","WLAN (Wireless LAN)"],"correctAnswer":"LAN (Local Area Network)","explanation":"Ein LAN (Local Area Network) ist ein lokales Netzwerk, das sich auf ein Geb√§ude oder einen Campus beschr√§nkt. Es bietet hohe √úbertragungsraten (1-100 Gbps) und geringe Latenz. WAN verbindet St√§dte/L√§nder, MAN ist ein st√§dtisches Netzwerk, und WLAN ist die drahtlose Variante eines LAN.","points":1,"category":"Netzwerktypen"},{"id":"q4","type":"single-choice","question":"Wie viele Schichten hat das OSI-Modell?","options":["4 Schichten","5 Schichten","7 Schichten","9 Schichten"],"correctAnswer":"7 Schichten","explanation":"Das OSI-Modell (Open Systems Interconnection) hat 7 Schichten: Anwendungsschicht, Darstellungsschicht, Sitzungsschicht, Transportschicht, Vermittlungsschicht, Sicherungsschicht und Bit√ºbertragungsschicht. Das TCP/IP-Modell hat dagegen nur 4 Schichten.","points":1,"category":"OSI-Modell"},{"id":"q5","type":"multiple-choice","question":"Welche Protokolle geh√∂ren zur Transportschicht des OSI-Modells?","options":["TCP (Transmission Control Protocol)","UDP (User Datagram Protocol)","IP (Internet Protocol)","HTTP (Hypertext Transfer Protocol)"],"correctAnswer":["TCP (Transmission Control Protocol)","UDP (User Datagram Protocol)"],"explanation":"TCP und UDP sind Transportschicht-Protokolle (Schicht 4). TCP ist verbindungsorientiert und zuverl√§ssig, UDP ist verbindungslos und schneller. IP geh√∂rt zur Vermittlungsschicht (Schicht 3) und HTTP zur Anwendungsschicht (Schicht 7).","points":2,"category":"OSI-Modell"},{"id":"q6","type":"single-choice","question":"Was ist der Hauptunterschied zwischen TCP und UDP?","options":["TCP ist verbindungsorientiert und zuverl√§ssig, UDP ist verbindungslos und unzuverl√§ssig","TCP ist schneller als UDP","UDP garantiert die Reihenfolge der Pakete, TCP nicht","TCP wird f√ºr Streaming verwendet, UDP f√ºr Webseiten"],"correctAnswer":"TCP ist verbindungsorientiert und zuverl√§ssig, UDP ist verbindungslos und unzuverl√§ssig","explanation":"TCP (Transmission Control Protocol) ist verbindungsorientiert, zuverl√§ssig (mit Best√§tigung und Neu√ºbertragung) und garantiert die Reihenfolge. UDP (User Datagram Protocol) ist verbindungslos, unzuverl√§ssig (keine Best√§tigung) und schneller durch geringeren Overhead. UDP wird f√ºr Streaming und Gaming verwendet, TCP f√ºr HTTP, FTP und E-Mail.","points":1,"category":"Protokolle"},{"id":"q7","type":"single-choice","question":"Welche drei Schritte umfasst der TCP Three-Way-Handshake?","options":["SYN, SYN-ACK, ACK","CONNECT, ACCEPT, CONFIRM","REQUEST, RESPONSE, ACKNOWLEDGE","HELLO, WELCOME, READY"],"correctAnswer":"SYN, SYN-ACK, ACK","explanation":"Der TCP Three-Way-Handshake besteht aus drei Schritten: 1) Client sendet SYN (Synchronize), 2) Server antwortet mit SYN-ACK (Synchronize-Acknowledge), 3) Client best√§tigt mit ACK (Acknowledge). Danach ist die Verbindung aufgebaut und Daten k√∂nnen √ºbertragen werden.","points":1,"category":"Protokolle"},{"id":"q8","type":"multiple-choice","question":"F√ºr welche Anwendungen ist UDP besonders geeignet?","options":["Video- und Audio-Streaming","Online-Gaming","E-Mail-Versand (SMTP)","DNS-Abfragen"],"correctAnswer":["Video- und Audio-Streaming","Online-Gaming","DNS-Abfragen"],"explanation":"UDP ist ideal f√ºr zeitkritische Anwendungen, bei denen geringe Latenz wichtiger ist als Zuverl√§ssigkeit: Streaming (verlorene Pakete sind akzeptabel), Gaming (schnelle Reaktion wichtig) und DNS (kurze Abfragen, Wiederholung bei Timeout). SMTP verwendet TCP, da E-Mails zuverl√§ssig √ºbertragen werden m√ºssen.","points":2,"category":"Protokolle"},{"id":"q9","type":"single-choice","question":"Welche HTTP-Methode wird verwendet, um Daten vom Server abzurufen?","options":["POST","GET","PUT","DELETE"],"correctAnswer":"GET","explanation":"GET wird verwendet, um Daten vom Server abzurufen (z.B. Webseiten, Bilder). POST sendet Daten an den Server, PUT aktualisiert bestehende Ressourcen, und DELETE l√∂scht Ressourcen. GET-Anfragen sollten keine Seiteneffekte haben (idempotent).","points":1,"category":"HTTP"},{"id":"q10","type":"single-choice","question":"Was bedeutet der HTTP-Status-Code 404?","options":["Server-Fehler","Erfolgreiche Anfrage","Ressource nicht gefunden","Umleitung"],"correctAnswer":"Ressource nicht gefunden","explanation":"HTTP-Status-Code 404 bedeutet 'Not Found' - die angeforderte Ressource wurde auf dem Server nicht gefunden. Status-Codes beginnen mit 2xx f√ºr Erfolg (200 OK), 3xx f√ºr Umleitung, 4xx f√ºr Client-Fehler und 5xx f√ºr Server-Fehler (z.B. 500 Internal Server Error).","points":1,"category":"HTTP"},{"id":"q11","type":"single-choice","question":"Was ist der Hauptunterschied zwischen HTTP und HTTPS?","options":["HTTPS ist schneller als HTTP","HTTPS verwendet verschl√ºsselte √úbertragung √ºber TLS/SSL","HTTP unterst√ºtzt mehr Methoden als HTTPS","HTTPS funktioniert nur mit IPv6"],"correctAnswer":"HTTPS verwendet verschl√ºsselte √úbertragung √ºber TLS/SSL","explanation":"HTTPS (HTTP Secure) ist HTTP √ºber TLS/SSL und bietet verschl√ºsselte √úbertragung sowie Authentifizierung des Servers. Dies sch√ºtzt vor Abh√∂ren und Man-in-the-Middle-Angriffen. HTTPS ist etwas langsamer durch Verschl√ºsselung, unterst√ºtzt dieselben Methoden wie HTTP und funktioniert mit IPv4 und IPv6.","points":1,"category":"HTTP"},{"id":"q12","type":"single-choice","question":"Welche Hauptfunktion hat das DNS (Domain Name System)?","options":["Automatische IP-Adressvergabe an Clients","Verschl√ºsselung von Netzwerkverkehr","Aufl√∂sung von Domainnamen zu IP-Adressen","Routing von Datenpaketen"],"correctAnswer":"Aufl√∂sung von Domainnamen zu IP-Adressen","explanation":"DNS (Domain Name System) l√∂st Domainnamen (z.B. www.example.com) in IP-Adressen (z.B. 192.0.2.1) auf. Es ist ein hierarchisches System mit Root-Servern, TLD-Servern und autoritativen Servern. Automatische IP-Vergabe ist DHCP, Verschl√ºsselung ist TLS/SSL, und Routing ist Aufgabe von Routern.","points":1,"category":"DNS"},{"id":"q13","type":"multiple-choice","question":"Welche DNS-Record-Typen existieren?","options":["A-Record (IPv4-Adresse)","AAAA-Record (IPv6-Adresse)","MX-Record (Mail-Server)","TCP-Record (Transportprotokoll)"],"correctAnswer":["A-Record (IPv4-Adresse)","AAAA-Record (IPv6-Adresse)","MX-Record (Mail-Server)"],"explanation":"A-Records speichern IPv4-Adressen, AAAA-Records IPv6-Adressen, und MX-Records definieren Mail-Server f√ºr eine Domain. Weitere wichtige Record-Typen sind CNAME (Alias), TXT (Textinformationen) und NS (Nameserver). TCP-Record existiert nicht - TCP ist ein Transportprotokoll, kein DNS-Record-Typ.","points":2,"category":"DNS"},{"id":"q14","type":"single-choice","question":"Welche vier Schritte umfasst der DHCP-Prozess zur automatischen IP-Adressvergabe?","options":["Connect, Request, Assign, Confirm","Discover, Offer, Request, Acknowledge","Hello, Welcome, Accept, Ready","SYN, SYN-ACK, ACK, FIN"],"correctAnswer":"Discover, Offer, Request, Acknowledge","explanation":"Der DHCP-Prozess (DORA) besteht aus vier Schritten: 1) DHCP Discover (Client sucht Server per Broadcast), 2) DHCP Offer (Server bietet IP-Konfiguration), 3) DHCP Request (Client akzeptiert Angebot), 4) DHCP Acknowledge (Server best√§tigt Zuweisung). Danach hat der Client eine g√ºltige IP-Adresse, Subnetzmaske, Gateway und DNS-Server.","points":1,"category":"DHCP"},{"id":"q15","type":"single-choice","question":"Welcher Port wird standardm√§√üig f√ºr HTTPS verwendet?","options":["Port 80","Port 443","Port 8080","Port 22"],"correctAnswer":"Port 443","explanation":"HTTPS verwendet standardm√§√üig Port 443. HTTP verwendet Port 80, SSH Port 22, und Port 8080 wird oft als alternativer HTTP-Port f√ºr Entwicklung oder Proxy-Server verwendet. Well-Known Ports (0-1023) sind f√ºr Standarddienste reserviert.","points":1,"category":"Ports"},{"id":"q16","type":"multiple-choice","question":"Welche Ports geh√∂ren zu den Well-Known Ports f√ºr Datenbankdienste?","options":["Port 3306 (MySQL)","Port 5432 (PostgreSQL)","Port 80 (HTTP)","Port 1433 (Microsoft SQL Server)"],"correctAnswer":["Port 3306 (MySQL)","Port 5432 (PostgreSQL)","Port 1433 (Microsoft SQL Server)"],"explanation":"MySQL verwendet Port 3306, PostgreSQL Port 5432, und Microsoft SQL Server Port 1433. Diese Ports sind standardm√§√üig f√ºr Datenbankverbindungen konfiguriert. Port 80 ist f√ºr HTTP und geh√∂rt nicht zu Datenbankdiensten. Weitere wichtige Datenbank-Ports: MongoDB (27017), Redis (6379).","points":2,"category":"Ports"},{"id":"q17","type":"single-choice","question":"Welcher Port wird f√ºr DNS-Abfragen verwendet?","options":["Port 25","Port 53","Port 67","Port 110"],"correctAnswer":"Port 53","explanation":"DNS verwendet Port 53 f√ºr Namensaufl√∂sungen, sowohl √ºber UDP (f√ºr normale Abfragen) als auch TCP (f√ºr Zonentransfers). Port 25 ist SMTP (E-Mail), Port 67 ist DHCP-Server, und Port 110 ist POP3 (E-Mail-Abruf).","points":1,"category":"Ports"},{"id":"q18","type":"single-choice","question":"Was ist ein Vorteil von IPv6 gegen√ºber IPv4?","options":["IPv6 ist schneller als IPv4","IPv6 hat praktisch unbegrenzte Adressen durch 128-Bit-Adressierung","IPv6 ben√∂tigt keine Router","IPv6 ist einfacher zu konfigurieren als IPv4"],"correctAnswer":"IPv6 hat praktisch unbegrenzte Adressen durch 128-Bit-Adressierung","explanation":"IPv6 verwendet 128-Bit-Adressen (statt 32-Bit bei IPv4) und bietet damit praktisch unbegrenzte Adressen (ca. 340 Sextillionen). Dies l√∂st das Problem der IPv4-Adressknappheit. IPv6 hat auch einen vereinfachten Header und integrierte Sicherheitsfunktionen (IPsec), ist aber nicht grunds√§tzlich schneller und ben√∂tigt weiterhin Router.","points":1,"category":"IP-Protokoll"},{"id":"q19","type":"single-choice","question":"Welche Netzwerktopologie wurde fr√ºher bei Ethernet (10Base2, 10Base5) verwendet?","options":["Stern-Topologie","Bus-Topologie","Ring-Topologie","Mesh-Topologie"],"correctAnswer":"Bus-Topologie","explanation":"Fr√ºhe Ethernet-Standards (10Base2 'Thin Ethernet' und 10Base5 'Thick Ethernet') verwendeten die Bus-Topologie mit einem gemeinsamen Koaxialkabel. Alle Ger√§te waren an dieses Kabel angeschlossen. Moderne Ethernet-Netzwerke (100Base-TX, 1000Base-T) verwenden die Stern-Topologie mit Switches.","points":1,"category":"Netzwerktopologien"},{"id":"q20","type":"multiple-choice","question":"Welche Aussagen √ºber die Ring-Topologie sind korrekt?","options":["Daten flie√üen in eine Richtung oder bidirektional","Es gibt keine Kollisionen durch Token-basierte Zugriffskontrolle","Ausfall eines Ger√§ts kann das gesamte Netzwerk unterbrechen","Sie ist die h√§ufigste Topologie in modernen LANs"],"correctAnswer":["Daten flie√üen in eine Richtung oder bidirektional","Es gibt keine Kollisionen durch Token-basierte Zugriffskontrolle","Ausfall eines Ger√§ts kann das gesamte Netzwerk unterbrechen"],"explanation":"In der Ring-Topologie flie√üen Daten in eine Richtung (oder bidirektional bei doppeltem Ring). Token-basierte Verfahren (Token Ring, FDDI) verhindern Kollisionen. Der Ausfall eines Ger√§ts kann den Ring unterbrechen, au√üer bei redundanten Ringen. Die Stern-Topologie ist heute die h√§ufigste in LANs, nicht die Ring-Topologie.","points":2,"category":"Netzwerktopologien"}]`),he=["Netzwerk","Topologie","OSI-Modell","TCP/IP","HTTP","DNS","DHCP","Ports","Protokolle"],pe="2025-01-10T00:00:00Z",fe={id:ie,moduleId:re,title:se,description:ae,category:oe,difficulty:le,examRelevance:ue,newIn2025:ce,timeLimit:de,passingScore:me,questions:ge,tags:he,lastUpdated:pe},be=Object.freeze(Object.defineProperty({__proto__:null,category:oe,default:fe,description:ae,difficulty:le,examRelevance:ue,id:ie,lastUpdated:pe,moduleId:re,newIn2025:ce,passingScore:me,questions:ge,tags:he,timeLimit:de,title:se},Symbol.toStringTag,{value:"Module"})),ke="bp-01-documentation-quiz",ze="bp-01-documentation",ve="Programm- und Konfigurationsdokumentation Quiz",ye="Umfassendes Quiz zu technischer Dokumentation, Code-Kommentaren, API-Dokumentation und Best Practices",Se="BP-01",we="intermediate",Ae="high",Ee=!0,_e=25,De=70,Pe=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist der Hauptzweck von Programmdokumentation?","options":["Wartbarkeit, Zusammenarbeit und Wissenstransfer zu verbessern","Den Code l√§nger zu machen","Compilerfehler zu vermeiden","Die Ausf√ºhrungsgeschwindigkeit zu erh√∂hen"],"correctAnswer":"Wartbarkeit, Zusammenarbeit und Wissenstransfer zu verbessern","explanation":"Gute Dokumentation ist essentiell f√ºr Wartbarkeit (Code verstehen und √§ndern), Zusammenarbeit (andere Entwickler einarbeiten) und Wissenstransfer (Know-how bewahren). Sie macht Code nicht l√§nger oder schneller und hat keinen Einfluss auf Compilerfehler.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Welche Best Practice gilt f√ºr Code-Kommentare?","options":["Erkl√§re das 'Warum', nicht das 'Was'","Kommentiere jede einzelne Zeile Code","Verwende nur englische Kommentare","Kommentare sind √ºberfl√ºssig bei gutem Code"],"correctAnswer":"Erkl√§re das 'Warum', nicht das 'Was'","explanation":"Gute Kommentare erkl√§ren die Intention und Entscheidungen (Warum), nicht die offensichtliche Funktionsweise (Was). Beispiel: 'Verwende Binary Search f√ºr bessere Performance' statt 'Inkrementiere i um 1'. Nicht jede Zeile braucht Kommentare, aber komplexe Logik sollte erkl√§rt werden. Sprache und Notwendigkeit h√§ngen vom Kontext ab.","points":1,"category":"Best Practices"},{"id":"q3","type":"multiple-choice","question":"Welche JavaDoc-Tags werden f√ºr Methodendokumentation verwendet?","options":["@param f√ºr Parameter-Beschreibungen","@return f√ºr R√ºckgabewerte","@throws f√ºr Exceptions","@import f√ºr Abh√§ngigkeiten"],"correctAnswer":["@param f√ºr Parameter-Beschreibungen","@return f√ºr R√ºckgabewerte","@throws f√ºr Exceptions"],"explanation":"@param beschreibt Methodenparameter, @return den R√ºckgabewert, und @throws dokumentiert geworfene Exceptions. Weitere wichtige Tags sind @deprecated, @see, @since und @author. @import existiert nicht als JavaDoc-Tag - Imports werden mit der import-Anweisung gemacht.","points":2,"category":"JavaDoc"},{"id":"q4","type":"single-choice","question":"Was ist selbstdokumentierender Code?","options":["Code mit aussagekr√§ftigen Variablen- und Methodennamen, der ohne Kommentare verst√§ndlich ist","Code, der automatisch Dokumentation generiert","Code mit sehr vielen Kommentaren","Code, der sich selbst testet"],"correctAnswer":"Code mit aussagekr√§ftigen Variablen- und Methodennamen, der ohne Kommentare verst√§ndlich ist","explanation":"Selbstdokumentierender Code verwendet aussagekr√§ftige Namen (z.B. 'daysUntilDeadline' statt 'd'), klare Strukturen und verst√§ndliche Logik. Er minimiert den Bedarf an Kommentaren, da die Intention aus dem Code selbst ersichtlich ist. Dies ist ein wichtiges Prinzip von Clean Code.","points":1,"category":"Best Practices"},{"id":"q5","type":"single-choice","question":"Welches Format wird h√§ufig f√ºr REST-API-Dokumentation verwendet?","options":["Swagger/OpenAPI","JavaDoc","Markdown","UML"],"correctAnswer":"Swagger/OpenAPI","explanation":"Swagger/OpenAPI ist der Standard f√ºr REST-API-Dokumentation. Es definiert Endpoints, Parameter, Request/Response-Formate und generiert interaktive Dokumentation. JavaDoc ist f√ºr Java-Code, Markdown f√ºr allgemeine Dokumentation, und UML f√ºr Diagramme.","points":1,"category":"API-Dokumentation"},{"id":"q6","type":"multiple-choice","question":"Welche Abschnitte sollte eine gute README-Datei enthalten?","options":["Projektbeschreibung und Features","Installation und Verwendung","Konfiguration und Tests","Pers√∂nliche Tagebucheintr√§ge"],"correctAnswer":["Projektbeschreibung und Features","Installation und Verwendung","Konfiguration und Tests"],"explanation":"Eine gute README enth√§lt: Projektbeschreibung, Features, Installation, Verwendung, Konfiguration, Tests, Lizenz und ggf. Contributing-Guidelines. Sie ist oft der erste Kontaktpunkt f√ºr neue Nutzer und Entwickler. Pers√∂nliche Inhalte geh√∂ren nicht in eine README.","points":2,"category":"README"},{"id":"q7","type":"single-choice","question":"Was beschreibt ein Changelog?","options":["√Ñnderungen zwischen Versionen (Added, Changed, Fixed, Deprecated)","Die Konfiguration der Anwendung","Die Architektur des Systems","Die Testabdeckung"],"correctAnswer":"√Ñnderungen zwischen Versionen (Added, Changed, Fixed, Deprecated)","explanation":"Ein Changelog dokumentiert √Ñnderungen zwischen Versionen chronologisch. Typische Kategorien sind: Added (neue Features), Changed (√Ñnderungen), Fixed (Bugfixes), Deprecated (veraltete Features) und Removed (entfernte Features). Format: Keep a Changelog (keepachangelog.com).","points":1,"category":"Versionierung"},{"id":"q8","type":"code","question":"Welcher JavaDoc-Kommentar ist korrekt formatiert?","code":"// Option A\\n/* Berechnet die Summe */\\nint sum(int a, int b) { return a + b; }\\n\\n// Option B\\n/** \\n * Berechnet die Summe zweier Zahlen.\\n * @param a Erste Zahl\\n * @param b Zweite Zahl\\n * @return Die Summe von a und b\\n */\\nint sum(int a, int b) { return a + b; }\\n\\n// Option C\\n// Berechnet die Summe\\nint sum(int a, int b) { return a + b; }","language":"java","options":["Option A","Option B","Option C","Alle sind korrekt"],"correctAnswer":"Option B","explanation":"Option B ist korrekt: JavaDoc verwendet /** */ (nicht /* */ oder //), beschreibt die Methode und dokumentiert Parameter mit @param und R√ºckgabewert mit @return. Option A verwendet falsches Kommentarformat, Option C ist ein einfacher Kommentar ohne JavaDoc-Tags.","points":2,"category":"JavaDoc"},{"id":"q9","type":"single-choice","question":"Was ist JSDoc?","options":["Dokumentations-Standard f√ºr JavaScript mit @param, @returns, @example Tags","Ein JavaScript-Framework","Eine JavaScript-Testbibliothek","Ein JavaScript-Compiler"],"correctAnswer":"Dokumentations-Standard f√ºr JavaScript mit @param, @returns, @example Tags","explanation":"JSDoc ist der Dokumentations-Standard f√ºr JavaScript, √§hnlich wie JavaDoc f√ºr Java. Es verwendet spezielle Kommentare mit Tags wie @param (Parameter), @returns (R√ºckgabewert), @example (Beispiele) und @type (Typen). Tools k√∂nnen daraus Dokumentation generieren.","points":1,"category":"JSDoc"},{"id":"q10","type":"single-choice","question":"Welches Tool wird f√ºr Python-Dokumentation aus Docstrings verwendet?","options":["Sphinx","JavaDoc","Swagger","Doxygen"],"correctAnswer":"Sphinx","explanation":"Sphinx ist das Standard-Tool f√ºr Python-Dokumentation. Es generiert HTML-Dokumentation aus Docstrings und unterst√ºtzt reStructuredText und Markdown. JavaDoc ist f√ºr Java, Swagger f√ºr REST-APIs, und Doxygen haupts√§chlich f√ºr C/C++.","points":1,"category":"Dokumentations-Tools"},{"id":"q11","type":"multiple-choice","question":"Welche Informationen sollten in Konfigurationsdokumentation enthalten sein?","options":["Beschreibung jeder Konfigurationsoption","Standardwerte und erlaubte Wertebereiche","Beispiele f√ºr typische Konfigurationen","Quellcode der Anwendung"],"correctAnswer":["Beschreibung jeder Konfigurationsoption","Standardwerte und erlaubte Wertebereiche","Beispiele f√ºr typische Konfigurationen"],"explanation":"Gute Konfigurationsdokumentation erkl√§rt jede Option, gibt Standardwerte und Wertebereiche an, und zeigt Beispiele. Inline-Kommentare in Konfigurationsdateien (YAML, JSON, Properties) sind hilfreich. Der Quellcode geh√∂rt nicht in die Konfigurationsdokumentation.","points":2,"category":"Konfiguration"},{"id":"q12","type":"single-choice","question":"Was ist der Unterschied zwischen technischer und Endnutzer-Dokumentation?","options":["Technische Dokumentation enth√§lt Code-Details, Endnutzer-Dokumentation ist einfacher mit Screenshots","Es gibt keinen Unterschied","Technische Dokumentation ist immer auf Englisch","Endnutzer-Dokumentation enth√§lt mehr Code-Beispiele"],"correctAnswer":"Technische Dokumentation enth√§lt Code-Details, Endnutzer-Dokumentation ist einfacher mit Screenshots","explanation":"Technische Dokumentation richtet sich an Entwickler (Code-Beispiele, Architektur, APIs). Endnutzer-Dokumentation ist f√ºr Anwender (einfache Sprache, Screenshots, Schritt-f√ºr-Schritt-Anleitungen). Beide sind wichtig, aber f√ºr unterschiedliche Zielgruppen.","points":1,"category":"Zielgruppen"},{"id":"q13","type":"single-choice","question":"Welches UML-Diagramm eignet sich am besten zur Dokumentation von Klassenstrukturen?","options":["Klassendiagramm","Sequenzdiagramm","Use-Case-Diagramm","Aktivit√§tsdiagramm"],"correctAnswer":"Klassendiagramm","explanation":"Klassendiagramme zeigen Klassen, Attribute, Methoden und Beziehungen (Vererbung, Assoziation, Komposition). Sequenzdiagramme zeigen Abl√§ufe, Use-Case-Diagramme Anwendungsf√§lle, und Aktivit√§tsdiagramme Prozesse. F√ºr Strukturdokumentation sind Klassendiagramme ideal.","points":1,"category":"UML"},{"id":"q14","type":"multiple-choice","question":"Welche Aussagen √ºber API-Dokumentation sind korrekt?","options":["Sie sollte alle Endpoints mit Parametern und Responses dokumentieren","Beispiel-Requests und -Responses sind hilfreich","Status-Codes und Fehlerbehandlung sollten erkl√§rt werden","API-Dokumentation ist nur f√ºr externe APIs notwendig"],"correctAnswer":["Sie sollte alle Endpoints mit Parametern und Responses dokumentieren","Beispiel-Requests und -Responses sind hilfreich","Status-Codes und Fehlerbehandlung sollten erkl√§rt werden"],"explanation":"Gute API-Dokumentation enth√§lt: Endpoints, Parameter (Typ, Pflicht/Optional), Request/Response-Formate, Status-Codes, Fehler, Authentifizierung und Beispiele. Dies gilt f√ºr externe UND interne APIs - auch interne Teams profitieren von guter Dokumentation.","points":2,"category":"API-Dokumentation"},{"id":"q15","type":"single-choice","question":"Was ist das C4-Modell in der Architektur-Dokumentation?","options":["Ein hierarchisches Modell mit 4 Ebenen: Context, Container, Component, Code","Ein Programmiersprachen-Standard","Ein Testframework","Ein Datenbank-Modell"],"correctAnswer":"Ein hierarchisches Modell mit 4 Ebenen: Context, Container, Component, Code","explanation":"Das C4-Modell dokumentiert Software-Architektur in 4 Abstraktionsebenen: System Context (Systemumgebung), Container (Anwendungen/Services), Component (Komponenten innerhalb Container) und Code (Klassen/Funktionen). Es bietet verschiedene Detailstufen f√ºr unterschiedliche Zielgruppen.","points":1,"category":"Architektur"},{"id":"q16","type":"single-choice","question":"Warum sollte Dokumentation bei Code-√Ñnderungen aktualisiert werden?","options":["Um Inkonsistenzen zu vermeiden und Verwirrung zu verhindern","Weil es gesetzlich vorgeschrieben ist","Um mehr Zeilen Code zu haben","Dokumentation muss nie aktualisiert werden"],"correctAnswer":"Um Inkonsistenzen zu vermeiden und Verwirrung zu verhindern","explanation":"Veraltete Dokumentation ist schlimmer als keine Dokumentation, da sie zu falschen Annahmen und Fehlern f√ºhrt. Bei Code-√Ñnderungen m√ºssen Kommentare, API-Docs und README aktualisiert werden. Dies ist eine Best Practice, keine gesetzliche Pflicht.","points":1,"category":"Best Practices"},{"id":"q17","type":"code","question":"Welcher Python-Docstring folgt dem korrekten Format?","code":"# Option A\\ndef add(a, b):\\n    # Addiert zwei Zahlen\\n    return a + b\\n\\n# Option B\\ndef add(a, b):\\n    \\"\\"\\"\\n    Addiert zwei Zahlen.\\n    \\n    Args:\\n        a: Erste Zahl\\n        b: Zweite Zahl\\n    \\n    Returns:\\n        Die Summe von a und b\\n    \\"\\"\\"\\n    return a + b\\n\\n# Option C\\ndef add(a, b):\\n    /* Addiert zwei Zahlen */\\n    return a + b","language":"python","options":["Option A","Option B","Option C","Alle sind korrekt"],"correctAnswer":"Option B","explanation":"Option B ist korrekt: Python-Docstrings verwenden dreifache Anf√ºhrungszeichen (\\"\\"\\" \\"\\"\\") direkt nach der Funktionsdefinition. Sie dokumentieren Args (Parameter) und Returns (R√ºckgabewert). Option A ist ein normaler Kommentar, Option C verwendet C-Syntax (/* */) die in Python nicht funktioniert.","points":2,"category":"Python Docstrings"},{"id":"q18","type":"single-choice","question":"Welches Tool generiert interaktive API-Dokumentation aus OpenAPI/Swagger-Spezifikationen?","options":["Swagger UI","JavaDoc","Git","npm"],"correctAnswer":"Swagger UI","explanation":"Swagger UI generiert interaktive, browserbasierte API-Dokumentation aus OpenAPI/Swagger-Spezifikationen. Entwickler k√∂nnen APIs direkt in der Dokumentation testen. JavaDoc ist f√ºr Java-Code, Git f√ºr Versionskontrolle, und npm ist ein Paketmanager.","points":1,"category":"Dokumentations-Tools"},{"id":"q19","type":"multiple-choice","question":"Welche Informationen geh√∂ren in eine Deployment-Dokumentation?","options":["Voraussetzungen (Node.js, Datenbank-Versionen)","Umgebungsvariablen und Konfiguration","Installations- und Start-Befehle","Pers√∂nliche Meinungen √ºber das Projekt"],"correctAnswer":["Voraussetzungen (Node.js, Datenbank-Versionen)","Umgebungsvariablen und Konfiguration","Installations- und Start-Befehle"],"explanation":"Deployment-Dokumentation enth√§lt: Voraussetzungen (Software-Versionen), Umgebungsvariablen, Installations-Schritte, Build-Prozess, Start-Befehle, Monitoring und Health-Checks. Sie erm√∂glicht reproduzierbare Deployments. Pers√∂nliche Meinungen geh√∂ren nicht hinein.","points":2,"category":"Deployment"},{"id":"q20","type":"single-choice","question":"Was ist Markdown und wof√ºr wird es verwendet?","options":["Eine leichtgewichtige Markup-Sprache f√ºr formatierte Textdokumente (README, Wikis)","Eine Programmiersprache","Ein Datenbank-System","Ein Testing-Framework"],"correctAnswer":"Eine leichtgewichtige Markup-Sprache f√ºr formatierte Textdokumente (README, Wikis)","explanation":"Markdown ist eine einfache Markup-Sprache f√ºr formatierte Texte mit Syntax f√ºr √úberschriften (#), Listen (-), Links ([text](url)), Code-Bl√∂cke (\`\`\`), etc. Es wird f√ºr README-Dateien, Wikis, Dokumentation und Blogs verwendet. Es ist keine Programmiersprache.","points":1,"category":"Markdown"}]`),Te=["Dokumentation","Code-Kommentare","API-Docs","README","JavaDoc","JSDoc","Markdown","UML","Neu 2025"],qe="2025-01-10T00:00:00Z",Re={id:ke,moduleId:ze,title:ve,description:ye,category:Se,difficulty:we,examRelevance:Ae,newIn2025:Ee,timeLimit:_e,passingScore:De,questions:Pe,tags:Te,lastUpdated:qe},Ie=Object.freeze(Object.defineProperty({__proto__:null,category:Se,default:Re,description:ye,difficulty:we,examRelevance:Ae,id:ke,lastUpdated:qe,moduleId:ze,newIn2025:Ee,passingScore:De,questions:Pe,tags:Te,timeLimit:_e,title:ve},Symbol.toStringTag,{value:"Module"})),Ce="bp-01-monitoring-quiz",Le="bp-01-monitoring",Me="System-Monitoring und √úberwachung Quiz",Oe="Umfassendes Quiz zu Monitoring-Tools, Metriken, Logging, Alerting und APM",Ne="BP-01",Be="intermediate",xe="high",Ve=!0,Fe=25,Ke=70,We=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist der Hauptzweck von System-Monitoring?","options":["Kontinuierliche √úberwachung von IT-Systemen zur Sicherstellung von Verf√ºgbarkeit, Performance und Sicherheit","Automatisches Beheben von Fehlern","Erstellung von Backups","Entwicklung neuer Features"],"correctAnswer":"Kontinuierliche √úberwachung von IT-Systemen zur Sicherstellung von Verf√ºgbarkeit, Performance und Sicherheit","explanation":"Monitoring √ºberwacht kontinuierlich IT-Systeme, Anwendungen und Infrastruktur, um Verf√ºgbarkeit, Performance und Sicherheit sicherzustellen. Es erkennt Probleme fr√ºhzeitig, erm√∂glicht proaktive Ma√ünahmen und hilft bei der Kapazit√§tsplanung. Automatisches Beheben ist Aufgabe von Auto-Remediation, Backups sind separate Systeme.","points":1,"category":"Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche Bereiche geh√∂ren zum Infrastruktur-Monitoring?","options":["CPU-Auslastung und RAM-Nutzung","Festplattenspeicher und Netzwerkbandbreite","Quellcode-Qualit√§t","Temperatur und Verbindungsstatus"],"correctAnswer":["CPU-Auslastung und RAM-Nutzung","Festplattenspeicher und Netzwerkbandbreite","Temperatur und Verbindungsstatus"],"explanation":"Infrastruktur-Monitoring √ºberwacht Hardware (CPU, RAM, Festplatte, Temperatur) und Netzwerk (Bandbreite, Latenz, Paketverlust, Verbindungen). Quellcode-Qualit√§t geh√∂rt zu Code-Analyse-Tools wie SonarQube, nicht zum Infrastruktur-Monitoring.","points":2,"category":"Monitoring-Bereiche"},{"id":"q3","type":"single-choice","question":"Was sind die 'Golden Signals' nach Google SRE?","options":["Latency, Traffic, Errors, Saturation","CPU, RAM, Disk, Network","Availability, Performance, Security","Requests, Responses, Timeouts, Failures"],"correctAnswer":"Latency, Traffic, Errors, Saturation","explanation":"Die Golden Signals sind vier Schl√ºsselmetriken f√ºr Service-Monitoring: Latency (Antwortzeit), Traffic (Anfragen/Sekunde), Errors (Fehlerrate) und Saturation (Ressourcenauslastung). Sie wurden von Google SRE definiert und sind essentiell f√ºr effektives Monitoring.","points":1,"category":"Metriken"},{"id":"q4","type":"single-choice","question":"Wof√ºr steht die RED-Methode im Service-Monitoring?","options":["Rate, Errors, Duration","Request, Error, Data","Response, Execution, Debug","Reliability, Efficiency, Deployment"],"correctAnswer":"Rate, Errors, Duration","explanation":"Die RED-Methode fokussiert auf drei Metriken f√ºr Services: Rate (Anfragen pro Sekunde), Errors (Fehlerrate) und Duration (Antwortzeit). Sie ist √§hnlich zu den Golden Signals, aber speziell f√ºr Request-basierte Services optimiert.","points":1,"category":"Metriken"},{"id":"q5","type":"single-choice","question":"Welches Tool ist eine Time-Series-Datenbank f√ºr Metriken und verwendet PromQL?","options":["Prometheus","Grafana","Nagios","Kibana"],"correctAnswer":"Prometheus","explanation":"Prometheus ist eine Open-Source Time-Series-Datenbank f√ºr Monitoring-Metriken. Es verwendet Pull-basiertes Scraping und die PromQL Query Language. Grafana ist f√ºr Visualisierung, Nagios f√ºr klassisches Monitoring, und Kibana f√ºr Log-Visualisierung (Teil des ELK-Stacks).","points":1,"category":"Monitoring-Tools"},{"id":"q6","type":"single-choice","question":"Welches Tool wird typischerweise f√ºr die Visualisierung von Prometheus-Metriken verwendet?","options":["Grafana","Nagios","Zabbix","Logstash"],"correctAnswer":"Grafana","explanation":"Grafana ist das Standard-Tool f√ºr Visualisierung von Monitoring-Daten. Es erstellt Dashboards, unterst√ºtzt viele Datenquellen (Prometheus, InfluxDB, Elasticsearch) und bietet Alerting. Nagios und Zabbix sind eigenst√§ndige Monitoring-Systeme, Logstash ist f√ºr Log-Verarbeitung.","points":1,"category":"Monitoring-Tools"},{"id":"q7","type":"multiple-choice","question":"Welche Komponenten geh√∂ren zum ELK-Stack?","options":["Elasticsearch (Speicherung und Suche)","Logstash (Log-Verarbeitung)","Kibana (Visualisierung)","Prometheus (Metriken)"],"correctAnswer":["Elasticsearch (Speicherung und Suche)","Logstash (Log-Verarbeitung)","Kibana (Visualisierung)"],"explanation":"Der ELK-Stack besteht aus Elasticsearch (Speicherung und Suche), Logstash (Log-Aggregation und -Verarbeitung) und Kibana (Visualisierung und Dashboards). Die Pipeline: Anwendung ‚Üí Logstash ‚Üí Elasticsearch ‚Üí Kibana. Prometheus geh√∂rt nicht zum ELK-Stack.","points":2,"category":"Monitoring-Tools"},{"id":"q8","type":"single-choice","question":"Was sind die Standard-Log-Levels in aufsteigender Schwere?","options":["DEBUG, INFO, WARN, ERROR","INFO, DEBUG, WARN, ERROR","ERROR, WARN, INFO, DEBUG","TRACE, DEBUG, INFO, CRITICAL"],"correctAnswer":"DEBUG, INFO, WARN, ERROR","explanation":"Die Standard-Log-Levels in aufsteigender Schwere sind: DEBUG (detaillierte Debug-Informationen), INFO (allgemeine Informationen), WARN (Warnungen, keine Fehler), ERROR (Fehler). Manche Systeme haben zus√§tzlich TRACE (noch detaillierter) und FATAL/CRITICAL (kritische Fehler).","points":1,"category":"Logging"},{"id":"q9","type":"single-choice","question":"Was ist der Unterschied zwischen Liveness und Readiness Probes?","options":["Liveness pr√ºft ob die Anwendung l√§uft, Readiness ob sie bereit ist Anfragen zu verarbeiten","Liveness ist f√ºr Datenbanken, Readiness f√ºr Webserver","Liveness pr√ºft die Performance, Readiness die Sicherheit","Es gibt keinen Unterschied"],"correctAnswer":"Liveness pr√ºft ob die Anwendung l√§uft, Readiness ob sie bereit ist Anfragen zu verarbeiten","explanation":"Liveness Probe pr√ºft, ob die Anwendung am Leben ist (z.B. /health/live). Bei Fehlschlag wird Container neu gestartet. Readiness Probe pr√ºft, ob die Anwendung bereit ist (z.B. Datenbankverbindung OK). Bei Fehlschlag wird kein Traffic weitergeleitet, aber kein Neustart. Wichtig f√ºr Kubernetes und Load Balancer.","points":1,"category":"Health Checks"},{"id":"q10","type":"multiple-choice","question":"Welche Alert-Kan√§le werden typischerweise f√ºr Monitoring-Alerts verwendet?","options":["E-Mail f√ºr Standard-Benachrichtigungen","Slack/Teams f√ºr Team-Kommunikation","PagerDuty f√ºr On-Call-Management","FTP f√ºr Datei√ºbertragung"],"correctAnswer":["E-Mail f√ºr Standard-Benachrichtigungen","Slack/Teams f√ºr Team-Kommunikation","PagerDuty f√ºr On-Call-Management"],"explanation":"Typische Alert-Kan√§le sind: E-Mail (Standard), SMS (kritisch), Slack/Teams (Team-Benachrichtigungen), PagerDuty (On-Call-Rotation) und Webhooks (Integration). FTP ist ein Datei√ºbertragungsprotokoll und kein Alert-Kanal.","points":2,"category":"Alerting"},{"id":"q11","type":"single-choice","question":"Was bedeutet eine SLA (Service Level Agreement) von 99.9% Verf√ºgbarkeit?","options":["Maximal 43.2 Minuten Ausfall pro Monat","Maximal 1 Stunde Ausfall pro Monat","Maximal 1 Tag Ausfall pro Jahr","Keine Ausf√§lle erlaubt"],"correctAnswer":"Maximal 43.2 Minuten Ausfall pro Monat","explanation":"99.9% Verf√ºgbarkeit bedeutet 0.1% Ausfallzeit: 30 Tage √ó 24 Stunden √ó 60 Minuten √ó 0.001 = 43.2 Minuten pro Monat. Weitere Beispiele: 99.99% = 4.32 Minuten/Monat, 99.999% = 26 Sekunden/Monat. SLAs sind vertragliche Vereinbarungen zwischen Anbieter und Kunde.","points":1,"category":"SLA/SLO"},{"id":"q12","type":"single-choice","question":"Was ist der Unterschied zwischen SLA, SLO und SLI?","options":["SLA ist vertragliche Vereinbarung, SLO ist internes Ziel, SLI ist messbare Metrik","SLA ist f√ºr Kunden, SLO f√ºr Manager, SLI f√ºr Entwickler","SLA ist monatlich, SLO ist j√§hrlich, SLI ist t√§glich","Es gibt keinen Unterschied"],"correctAnswer":"SLA ist vertragliche Vereinbarung, SLO ist internes Ziel, SLI ist messbare Metrik","explanation":"SLA (Service Level Agreement) ist die vertragliche Vereinbarung mit Kunden (z.B. 99.9% Uptime). SLO (Service Level Objective) ist das interne Ziel, oft strenger als SLA (z.B. 99.95%). SLI (Service Level Indicator) ist die messbare Metrik (z.B. Uptime, Response Time).","points":1,"category":"SLA/SLO"},{"id":"q13","type":"code","question":"Welcher Prometheus-Metrik-Typ ist f√ºr das Z√§hlen von HTTP-Requests geeignet?","code":"# Option A: Counter\\nrequest_count = Counter(\\n    'http_requests_total',\\n    'Total HTTP Requests',\\n    ['method', 'endpoint']\\n)\\n\\n# Option B: Gauge\\nrequest_count = Gauge(\\n    'http_requests_total',\\n    'Total HTTP Requests'\\n)\\n\\n# Option C: Histogram\\nrequest_count = Histogram(\\n    'http_requests_total',\\n    'Total HTTP Requests'\\n)","language":"python","options":["Option A: Counter","Option B: Gauge","Option C: Histogram","Alle sind geeignet"],"correctAnswer":"Option A: Counter","explanation":"Counter ist richtig f√ºr HTTP-Requests, da sie nur steigen (monoton wachsend). Counter eignen sich f√ºr Ereignisse, die gez√§hlt werden. Gauge ist f√ºr Werte, die steigen und fallen (z.B. aktive Verbindungen). Histogram ist f√ºr Verteilungen (z.B. Response Times). Labels (method, endpoint) erm√∂glichen Filterung.","points":2,"category":"Metriken"},{"id":"q14","type":"single-choice","question":"Was ist strukturiertes Logging?","options":["Logs im JSON-Format mit strukturierten Feldern statt Freitext","Logs in alphabetischer Reihenfolge","Logs mit vielen Zeilen","Logs ohne Zeitstempel"],"correctAnswer":"Logs im JSON-Format mit strukturierten Feldern statt Freitext","explanation":"Strukturiertes Logging verwendet strukturierte Formate (meist JSON) mit definierten Feldern (event, user_id, timestamp, etc.) statt Freitext. Vorteile: Einfaches Parsen, Filtern und Analysieren. Beispiel: {'event': 'user_login', 'user_id': 123, 'success': true}. Tools wie ELK k√∂nnen strukturierte Logs besser verarbeiten.","points":1,"category":"Logging"},{"id":"q15","type":"multiple-choice","question":"Welche Metriken sollten in einem Anwendungs-Dashboard enthalten sein?","options":["Requests pro Sekunde","Response Time (Antwortzeit)","Error Rate (Fehlerrate)","Quellcode-Zeilen"],"correctAnswer":["Requests pro Sekunde","Response Time (Antwortzeit)","Error Rate (Fehlerrate)"],"explanation":"Ein gutes Anwendungs-Dashboard zeigt: Requests/Sekunde (Traffic), Response Time (Performance), Error Rate (Zuverl√§ssigkeit) und Active Users. Diese Metriken entsprechen den RED-Signalen. Quellcode-Zeilen sind keine Runtime-Metrik und geh√∂ren nicht ins Monitoring-Dashboard.","points":2,"category":"Dashboards"},{"id":"q16","type":"single-choice","question":"Was ist APM (Application Performance Monitoring)?","options":["√úberwachung von Anwendungsperformance mit Tracing, Profiling und Fehleranalyse","Automatisches Patchen von Anwendungen","Anwendungs-Paketmanager","API-Dokumentation"],"correctAnswer":"√úberwachung von Anwendungsperformance mit Tracing, Profiling und Fehleranalyse","explanation":"APM (Application Performance Monitoring) √ºberwacht Anwendungsperformance im Detail: Distributed Tracing (Request-Verfolgung √ºber Services), Profiling (Code-Performance), Fehleranalyse und Transaktions-Monitoring. Tools: New Relic, Dynatrace, AppDynamics, Elastic APM. Es geht √ºber einfaches Monitoring hinaus.","points":1,"category":"APM"},{"id":"q17","type":"single-choice","question":"Welche Alert-Severity erfordert sofortige Aktion?","options":["Critical","Warning","Info","Debug"],"correctAnswer":"Critical","explanation":"Alert-Severities: Critical (sofortige Aktion erforderlich, z.B. Service down), Warning (Beobachtung erforderlich, z.B. hohe CPU), Info (informativ, keine Aktion). Debug ist ein Log-Level, keine Alert-Severity. Critical-Alerts sollten zu Pager/SMS f√ºhren, Warnings zu E-Mail/Slack.","points":1,"category":"Alerting"},{"id":"q18","type":"multiple-choice","question":"Welche Aussagen √ºber Prometheus sind korrekt?","options":["Prometheus verwendet Pull-basiertes Scraping von Metriken","PromQL ist die Query Language f√ºr Prometheus","Prometheus ist eine Time-Series-Datenbank","Prometheus ist nur f√ºr Java-Anwendungen geeignet"],"correctAnswer":["Prometheus verwendet Pull-basiertes Scraping von Metriken","PromQL ist die Query Language f√ºr Prometheus","Prometheus ist eine Time-Series-Datenbank"],"explanation":"Prometheus ist eine Time-Series-Datenbank, die Metriken per Pull (HTTP-Scraping) sammelt. PromQL ist die Query Language f√ºr Aggregationen und Berechnungen. Prometheus ist sprachunabh√§ngig - es gibt Exporters f√ºr alle Sprachen (Python, Java, Go, Node.js, etc.).","points":2,"category":"Monitoring-Tools"},{"id":"q19","type":"single-choice","question":"Was ist der Zweck von Log-Aggregation?","options":["Zentrale Sammlung und Analyse von Logs aus mehreren Quellen","L√∂schen alter Logs","Verschl√ºsselung von Logs","Komprimierung von Logs"],"correctAnswer":"Zentrale Sammlung und Analyse von Logs aus mehreren Quellen","explanation":"Log-Aggregation sammelt Logs von mehreren Servern/Services zentral (z.B. mit ELK-Stack, Splunk, Graylog). Vorteile: Zentrale Suche, Korrelation von Events √ºber Services hinweg, einfachere Analyse. Ohne Aggregation m√ºsste man jeden Server einzeln durchsuchen.","points":1,"category":"Logging"},{"id":"q20","type":"single-choice","question":"Welche USE-Methode wird f√ºr Ressourcen-Monitoring verwendet?","options":["Utilization (Auslastung), Saturation (Warteschlange), Errors (Fehler)","User, System, Error","Upload, Storage, Execution","Uptime, Speed, Efficiency"],"correctAnswer":"Utilization (Auslastung), Saturation (Warteschlange), Errors (Fehler)","explanation":"Die USE-Methode f√ºr Ressourcen-Monitoring fokussiert auf: Utilization (Auslastung in %), Saturation (Warteschlangenl√§nge, z.B. Load Average), Errors (Fehleranzahl). Sie eignet sich f√ºr Hardware-Ressourcen wie CPU, RAM, Disk, Network. Entwickelt von Brendan Gregg.","points":1,"category":"Metriken"}]`),je=["Monitoring","Logging","Metriken","Alerting","Prometheus","Grafana","ELK-Stack","APM","SLA","Neu 2025"],$e="2025-01-10T00:00:00Z",Ge={id:Ce,moduleId:Le,title:Me,description:Oe,category:Ne,difficulty:Be,examRelevance:xe,newIn2025:Ve,timeLimit:Fe,passingScore:Ke,questions:We,tags:je,lastUpdated:$e},Ue=Object.freeze(Object.defineProperty({__proto__:null,category:Ne,default:Ge,description:Oe,difficulty:Be,examRelevance:xe,id:Ce,lastUpdated:$e,moduleId:Le,newIn2025:Ve,passingScore:Ke,questions:We,tags:je,timeLimit:Fe,title:Me},Symbol.toStringTag,{value:"Module"})),He="bp-01-odbc-quiz",Qe="bp-01-odbc",Ze="ODBC - Datenbankzugriff √ºber offene Schnittstellen Quiz",Je="Teste dein Wissen √ºber ODBC - Datenbankzugriff √ºber offene Schnittstellen",Ye="BP-01",Xe="intermediate",en="high",nn=10,tn=70,rn=[{id:"q1",type:"single-choice",question:"Was ist ODBC - Datenbankzugriff √ºber offene Schnittstellen?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],sn=["ODBC","Datenbank","API","Schnittstelle","Neu 2025"],an={id:He,moduleId:Qe,title:Ze,description:Je,category:Ye,difficulty:Xe,examRelevance:en,timeLimit:nn,passingScore:tn,questions:rn,tags:sn},on=Object.freeze(Object.defineProperty({__proto__:null,category:Ye,default:an,description:Je,difficulty:Xe,examRelevance:en,id:He,moduleId:Qe,passingScore:tn,questions:rn,tags:sn,timeLimit:nn,title:Ze},Symbol.toStringTag,{value:"Module"})),ln="bp-02-cloud-models-quiz",un="bp-02-cloud-models",cn="Cloud-Modelle und Deployment-Typen Quiz",dn="Teste dein Wissen √ºber Cloud-Service-Modelle (IaaS, PaaS, SaaS), Deployment-Modelle (Public, Private, Hybrid Cloud) und Cloud-Provider",mn="BP-02",gn="intermediate",hn="high",pn=20,fn=70,bn=JSON.parse('[{"id":"q1","type":"single-choice","question":"Was ist Cloud Computing?","options":["Die Bereitstellung von IT-Ressourcen √ºber das Internet nach Bedarf","Ein lokaler Server im Unternehmen","Eine Software f√ºr Datenbanken","Ein Netzwerkprotokoll"],"correctAnswer":"Die Bereitstellung von IT-Ressourcen √ºber das Internet nach Bedarf","explanation":"Cloud Computing ist die bedarfsgerechte Bereitstellung von IT-Ressourcen (Rechenleistung, Speicher, Anwendungen) √ºber das Internet mit nutzungsbasierter Abrechnung (Pay-as-you-go).","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Was bedeutet IaaS (Infrastructure as a Service)?","options":["Bereitstellung von virtualisierter Hardware-Infrastruktur (Server, Speicher, Netzwerk)","Bereitstellung von fertigen Anwendungen √ºber das Internet","Bereitstellung von Entwicklungsplattformen","Bereitstellung von Datenbanken"],"correctAnswer":"Bereitstellung von virtualisierter Hardware-Infrastruktur (Server, Speicher, Netzwerk)","explanation":"IaaS stellt virtualisierte Hardware-Ressourcen bereit: virtuelle Maschinen, Speicher, Netzwerke. Der Kunde verwaltet Betriebssystem, Middleware und Anwendungen. Beispiele: AWS EC2, Azure Virtual Machines.","points":1,"category":"Service-Modelle"},{"id":"q3","type":"single-choice","question":"Was bedeutet PaaS (Platform as a Service)?","options":["Bereitstellung einer Entwicklungs- und Laufzeitumgebung f√ºr Anwendungen","Bereitstellung von virtuellen Servern","Bereitstellung von fertigen Anwendungen","Bereitstellung von Netzwerk-Hardware"],"correctAnswer":"Bereitstellung einer Entwicklungs- und Laufzeitumgebung f√ºr Anwendungen","explanation":"PaaS stellt eine komplette Plattform f√ºr Entwicklung, Test und Deployment von Anwendungen bereit. Der Provider verwaltet Infrastruktur und Plattform. Beispiele: Google App Engine, Azure App Service, Heroku.","points":1,"category":"Service-Modelle"},{"id":"q4","type":"single-choice","question":"Was bedeutet SaaS (Software as a Service)?","options":["Bereitstellung von fertigen Anwendungen √ºber das Internet","Bereitstellung von virtuellen Servern","Bereitstellung von Entwicklungstools","Bereitstellung von Datenbanken"],"correctAnswer":"Bereitstellung von fertigen Anwendungen √ºber das Internet","explanation":"SaaS stellt fertige Anwendungen √ºber das Internet bereit, die √ºber einen Browser genutzt werden. Der Provider verwaltet alles. Beispiele: Microsoft 365, Google Workspace, Salesforce, Dropbox.","points":1,"category":"Service-Modelle"},{"id":"q5","type":"multiple-choice","question":"Welche Aussagen √ºber die Cloud-Service-Modelle sind korrekt? (Mehrere Antworten m√∂glich)","options":["Bei IaaS hat der Kunde die meiste Kontrolle","Bei SaaS hat der Kunde die wenigste Verwaltungsarbeit","PaaS liegt zwischen IaaS und SaaS","SaaS erfordert Installation auf lokalen Rechnern"],"correctAnswer":["Bei IaaS hat der Kunde die meiste Kontrolle","Bei SaaS hat der Kunde die wenigste Verwaltungsarbeit","PaaS liegt zwischen IaaS und SaaS"],"explanation":"IaaS bietet maximale Kontrolle (aber auch Verwaltungsaufwand), SaaS minimale Verwaltung (aber wenig Kontrolle), PaaS liegt dazwischen. SaaS wird √ºber Browser genutzt, keine lokale Installation n√∂tig.","points":2,"category":"Service-Modelle"},{"id":"q6","type":"single-choice","question":"Was ist eine Public Cloud?","options":["Cloud-Infrastruktur, die √∂ffentlich √ºber das Internet verf√ºgbar ist","Eine Cloud nur f√ºr Regierungsbeh√∂rden","Eine Cloud im eigenen Rechenzentrum","Eine kostenlose Cloud"],"correctAnswer":"Cloud-Infrastruktur, die √∂ffentlich √ºber das Internet verf√ºgbar ist","explanation":"Public Cloud ist eine Cloud-Infrastruktur, die von einem Provider betrieben wird und √∂ffentlich √ºber das Internet f√ºr jeden Kunden verf√ºgbar ist. Ressourcen werden mit anderen Kunden geteilt (Multi-Tenancy). Beispiele: AWS, Azure, Google Cloud.","points":1,"category":"Deployment-Modelle"},{"id":"q7","type":"single-choice","question":"Was ist eine Private Cloud?","options":["Cloud-Infrastruktur, die exklusiv f√ºr eine Organisation betrieben wird","Eine Cloud ohne Internetverbindung","Eine Cloud f√ºr Privatpersonen","Eine kostenlose Cloud"],"correctAnswer":"Cloud-Infrastruktur, die exklusiv f√ºr eine Organisation betrieben wird","explanation":"Private Cloud ist eine Cloud-Infrastruktur, die exklusiv f√ºr eine Organisation betrieben wird, entweder im eigenen Rechenzentrum (On-Premises) oder von einem Provider gehostet. Sie bietet mehr Kontrolle und Sicherheit.","points":1,"category":"Deployment-Modelle"},{"id":"q8","type":"single-choice","question":"Was ist eine Hybrid Cloud?","options":["Kombination aus Public und Private Cloud mit Datenintegration","Eine Cloud mit zwei Providern","Eine Cloud f√ºr mobile Ger√§te","Eine Cloud mit verschiedenen Service-Modellen"],"correctAnswer":"Kombination aus Public und Private Cloud mit Datenintegration","explanation":"Hybrid Cloud kombiniert Public und Private Cloud, wobei Daten und Anwendungen zwischen beiden ausgetauscht werden k√∂nnen. Dies erm√∂glicht Flexibilit√§t: sensible Daten in Private Cloud, skalierbare Workloads in Public Cloud.","points":1,"category":"Deployment-Modelle"},{"id":"q9","type":"multiple-choice","question":"Welche Vorteile bietet Cloud Computing? (Mehrere Antworten m√∂glich)","options":["Skalierbarkeit nach Bedarf","Nutzungsbasierte Abrechnung (Pay-as-you-go)","Keine Vorabinvestitionen in Hardware","Vollst√§ndige Kontrolle √ºber physische Server"],"correctAnswer":["Skalierbarkeit nach Bedarf","Nutzungsbasierte Abrechnung (Pay-as-you-go)","Keine Vorabinvestitionen in Hardware"],"explanation":"Cloud bietet flexible Skalierung, nutzungsbasierte Kosten und keine Vorabinvestitionen. Vollst√§ndige Kontrolle √ºber physische Server hat man nur bei On-Premises-L√∂sungen, nicht in der Cloud.","points":2,"category":"Vorteile"},{"id":"q10","type":"multiple-choice","question":"Welche Nachteile oder Risiken hat Cloud Computing? (Mehrere Antworten m√∂glich)","options":["Abh√§ngigkeit vom Cloud-Provider (Vendor Lock-in)","Datenschutz- und Compliance-Herausforderungen","Internetverbindung erforderlich","Unbegrenzte kostenlose Ressourcen"],"correctAnswer":["Abh√§ngigkeit vom Cloud-Provider (Vendor Lock-in)","Datenschutz- und Compliance-Herausforderungen","Internetverbindung erforderlich"],"explanation":"Cloud-Risiken umfassen Vendor Lock-in, Datenschutz-Compliance (DSGVO), Abh√§ngigkeit von Internetverbindung und potenzielle Sicherheitsbedenken. Ressourcen sind nicht kostenlos, sondern werden nach Nutzung abgerechnet.","points":2,"category":"Nachteile"},{"id":"q11","type":"single-choice","question":"Welches Service-Modell eignet sich am besten f√ºr ein Startup, das schnell eine Webanwendung entwickeln m√∂chte?","options":["PaaS","IaaS","SaaS","On-Premises"],"correctAnswer":"PaaS","explanation":"PaaS ist ideal f√ºr schnelle Anwendungsentwicklung, da die Plattform (Server, Datenbanken, Entwicklungstools) bereits bereitgestellt ist. Das Team kann sich auf die Anwendung konzentrieren, ohne Infrastruktur zu verwalten.","points":1,"category":"Anwendungsf√§lle"},{"id":"q12","type":"single-choice","question":"Welches Service-Modell eignet sich am besten f√ºr ein Unternehmen, das vollst√§ndige Kontrolle √ºber Betriebssystem und Netzwerk ben√∂tigt?","options":["IaaS","PaaS","SaaS","FaaS"],"correctAnswer":"IaaS","explanation":"IaaS bietet maximale Kontrolle √ºber virtuelle Maschinen, Betriebssysteme, Netzwerkkonfiguration und Speicher. Dies ist ideal f√ºr Unternehmen mit spezifischen Anforderungen oder Legacy-Anwendungen.","points":1,"category":"Anwendungsf√§lle"},{"id":"q13","type":"multiple-choice","question":"Welche sind bekannte Public-Cloud-Provider? (Mehrere Antworten m√∂glich)","options":["Amazon Web Services (AWS)","Microsoft Azure","Google Cloud Platform (GCP)","VMware vSphere"],"correctAnswer":["Amazon Web Services (AWS)","Microsoft Azure","Google Cloud Platform (GCP)"],"explanation":"AWS, Azure und Google Cloud sind die drei gr√∂√üten Public-Cloud-Provider. VMware vSphere ist eine Virtualisierungsplattform f√ºr Private Cloud oder On-Premises, kein Public-Cloud-Provider.","points":2,"category":"Cloud-Provider"},{"id":"q14","type":"single-choice","question":"Was ist Elastizit√§t (Elasticity) in der Cloud?","options":["Die F√§higkeit, Ressourcen automatisch nach Bedarf zu skalieren","Die Flexibilit√§t bei der Wahl des Providers","Die Geschwindigkeit der Netzwerkverbindung","Die Anzahl der verf√ºgbaren Rechenzentren"],"correctAnswer":"Die F√§higkeit, Ressourcen automatisch nach Bedarf zu skalieren","explanation":"Elastizit√§t bedeutet, dass Cloud-Ressourcen automatisch nach Bedarf hoch- oder herunterskaliert werden k√∂nnen. Bei hoher Last werden mehr Ressourcen bereitgestellt, bei niedriger Last reduziert, um Kosten zu sparen.","points":1,"category":"Konzepte"},{"id":"q15","type":"single-choice","question":"Was bedeutet Multi-Tenancy in der Cloud?","options":["Mehrere Kunden teilen sich dieselbe physische Infrastruktur","Ein Kunde nutzt mehrere Cloud-Provider","Eine Anwendung l√§uft auf mehreren Servern","Mehrere Benutzer eines Unternehmens nutzen die Cloud"],"correctAnswer":"Mehrere Kunden teilen sich dieselbe physische Infrastruktur","explanation":"Multi-Tenancy bedeutet, dass mehrere Kunden (Tenants) sich dieselbe physische Infrastruktur teilen, aber logisch voneinander isoliert sind. Dies erm√∂glicht Kosteneffizienz in Public Clouds.","points":1,"category":"Konzepte"},{"id":"q16","type":"single-choice","question":"Was ist der Hauptunterschied zwischen Skalierung (Scaling) und Elastizit√§t (Elasticity)?","options":["Elastizit√§t erfolgt automatisch, Skalierung kann manuell sein","Skalierung ist schneller als Elastizit√§t","Elastizit√§t ist nur f√ºr IaaS verf√ºgbar","Es gibt keinen Unterschied"],"correctAnswer":"Elastizit√§t erfolgt automatisch, Skalierung kann manuell sein","explanation":"Skalierung ist die F√§higkeit, Ressourcen zu erh√∂hen oder zu reduzieren (manuell oder automatisch). Elastizit√§t ist die automatische Skalierung basierend auf aktueller Last, ohne menschliches Eingreifen.","points":1,"category":"Konzepte"},{"id":"q17","type":"multiple-choice","question":"Welche Beispiele geh√∂ren zu SaaS? (Mehrere Antworten m√∂glich)","options":["Microsoft 365 (Word, Excel, Outlook)","Google Workspace (Gmail, Docs, Drive)","Amazon EC2","Salesforce CRM"],"correctAnswer":["Microsoft 365 (Word, Excel, Outlook)","Google Workspace (Gmail, Docs, Drive)","Salesforce CRM"],"explanation":"Microsoft 365, Google Workspace und Salesforce sind SaaS-Anwendungen, die √ºber Browser genutzt werden. Amazon EC2 ist IaaS (virtuelle Server).","points":2,"category":"Service-Modelle"},{"id":"q18","type":"single-choice","question":"Was ist ein Vorteil von Private Cloud gegen√ºber Public Cloud?","options":["Mehr Kontrolle √ºber Sicherheit und Compliance","Geringere Kosten","Bessere Skalierbarkeit","Keine Wartung erforderlich"],"correctAnswer":"Mehr Kontrolle √ºber Sicherheit und Compliance","explanation":"Private Cloud bietet mehr Kontrolle √ºber Sicherheit, Datenschutz und Compliance, da die Infrastruktur exklusiv f√ºr eine Organisation ist. Public Cloud ist jedoch meist kosteng√ºnstiger und skalierbarer.","points":1,"category":"Deployment-Modelle"},{"id":"q19","type":"single-choice","question":"Welches Abrechnungsmodell ist typisch f√ºr Cloud Computing?","options":["Pay-as-you-go (nutzungsbasiert)","Einmalige Lizenzgeb√ºhr","Kostenlos mit Werbung","J√§hrliche Pauschalgeb√ºhr"],"correctAnswer":"Pay-as-you-go (nutzungsbasiert)","explanation":"Cloud Computing verwendet typischerweise Pay-as-you-go: Man zahlt nur f√ºr die tats√§chlich genutzten Ressourcen (Rechenzeit, Speicher, Daten√ºbertragung). Dies erm√∂glicht Kosteneffizienz und Flexibilit√§t.","points":1,"category":"Konzepte"},{"id":"q20","type":"multiple-choice","question":"F√ºr welche Szenarien ist Hybrid Cloud besonders geeignet? (Mehrere Antworten m√∂glich)","options":["Sensible Daten in Private Cloud, skalierbare Workloads in Public Cloud","Schrittweise Migration von On-Premises zu Cloud","Disaster Recovery und Backup","Ausschlie√ülich f√ºr kleine Unternehmen"],"correctAnswer":["Sensible Daten in Private Cloud, skalierbare Workloads in Public Cloud","Schrittweise Migration von On-Premises zu Cloud","Disaster Recovery und Backup"],"explanation":"Hybrid Cloud eignet sich f√ºr Datentrennung (sensibel vs. √∂ffentlich), schrittweise Cloud-Migration und Disaster Recovery. Sie ist f√ºr Unternehmen jeder Gr√∂√üe geeignet, nicht nur f√ºr kleine.","points":2,"category":"Deployment-Modelle"}]'),kn=["Cloud Computing","IaaS","PaaS","SaaS","Public Cloud","Private Cloud","Hybrid Cloud","AWS","Azure","Google Cloud"],zn="2025-10-05T00:00:00Z",vn={id:ln,moduleId:un,title:cn,description:dn,category:mn,difficulty:gn,examRelevance:hn,timeLimit:pn,passingScore:fn,questions:bn,tags:kn,lastUpdated:zn},yn=Object.freeze(Object.defineProperty({__proto__:null,category:mn,default:vn,description:dn,difficulty:gn,examRelevance:hn,id:ln,lastUpdated:zn,moduleId:un,passingScore:fn,questions:bn,tags:kn,timeLimit:pn,title:cn},Symbol.toStringTag,{value:"Module"})),Sn="bp-02-data-formats-quiz",wn="bp-02-data-formats",An="Datenaustauschformate (JSON, XML, YAML) Quiz",En="Teste dein Wissen √ºber Datenaustauschformate JSON, XML und YAML sowie deren Syntax, Struktur und Anwendungsf√§lle",_n="BP-02",Dn="intermediate",Pn="high",Tn=20,qn=70,Rn=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist JSON (JavaScript Object Notation)?","options":["Ein textbasiertes Datenaustauschformat, das auf JavaScript-Objekten basiert","Eine Programmiersprache f√ºr Webentwicklung","Ein Datenbank-Management-System","Ein Komprimierungsformat f√ºr Dateien"],"correctAnswer":"Ein textbasiertes Datenaustauschformat, das auf JavaScript-Objekten basiert","explanation":"JSON ist ein leichtgewichtiges, textbasiertes Datenaustauschformat, das auf einer Teilmenge der JavaScript-Syntax basiert. Es ist sprachunabh√§ngig und wird h√§ufig f√ºr APIs und Konfigurationsdateien verwendet.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Welches Zeichen wird in JSON verwendet, um ein Objekt zu definieren?","options":["Geschweifte Klammern { }","Eckige Klammern [ ]","Spitze Klammern < >","Runde Klammern ( )"],"correctAnswer":"Geschweifte Klammern { }","explanation":"In JSON werden Objekte mit geschweiften Klammern { } definiert, w√§hrend Arrays mit eckigen Klammern [ ] definiert werden. Objekte enthalten Key-Value-Paare.","points":1,"category":"JSON-Syntax"},{"id":"q3","type":"code","question":"Ist dieser JSON-Code syntaktisch korrekt?","code":"{\\n  \\"name\\": \\"Max Mustermann\\",\\n  \\"alter\\": 25,\\n  \\"aktiv\\": true,\\n  \\"hobbys\\": [\\"Lesen\\", \\"Sport\\"]\\n}","language":"json","options":["Ja, der Code ist korrekt","Nein, Strings m√ºssen mit einfachen Anf√ºhrungszeichen definiert werden","Nein, Arrays sind in JSON nicht erlaubt","Nein, Boolesche Werte m√ºssen in Anf√ºhrungszeichen stehen"],"correctAnswer":"Ja, der Code ist korrekt","explanation":"Der JSON-Code ist syntaktisch korrekt. JSON verwendet doppelte Anf√ºhrungszeichen f√ºr Strings und Keys, unterst√ºtzt Arrays, Zahlen, Booleans (true/false) und null als Datentypen.","points":2,"category":"JSON-Syntax"},{"id":"q4","type":"single-choice","question":"Was ist XML (Extensible Markup Language)?","options":["Eine erweiterbare Auszeichnungssprache zur Darstellung hierarchischer Daten","Eine Programmiersprache f√ºr Datenbanken","Ein Bildformat f√ºr Webseiten","Ein Verschl√ºsselungsprotokoll"],"correctAnswer":"Eine erweiterbare Auszeichnungssprache zur Darstellung hierarchischer Daten","explanation":"XML ist eine erweiterbare Auszeichnungssprache, die zur Darstellung hierarchisch strukturierter Daten verwendet wird. Sie ist selbstbeschreibend und sowohl menschen- als auch maschinenlesbar.","points":1,"category":"Grundlagen"},{"id":"q5","type":"multiple-choice","question":"Welche Aussagen √ºber XML sind korrekt? (Mehrere Antworten m√∂glich)","options":["XML-Dokumente m√ºssen ein Root-Element haben","XML-Tags sind case-sensitive (Gro√ü-/Kleinschreibung wird beachtet)","XML erlaubt keine Attribute in Tags","Jedes √∂ffnende Tag muss ein schlie√üendes Tag haben"],"correctAnswer":["XML-Dokumente m√ºssen ein Root-Element haben","XML-Tags sind case-sensitive (Gro√ü-/Kleinschreibung wird beachtet)","Jedes √∂ffnende Tag muss ein schlie√üendes Tag haben"],"explanation":"XML-Dokumente m√ºssen genau ein Root-Element haben, Tags sind case-sensitive (<Name> ‚â† <name>), und jedes √∂ffnende Tag ben√∂tigt ein schlie√üendes Tag. XML erlaubt sehr wohl Attribute in Tags (z.B. <person id='1'>).","points":2,"category":"XML-Struktur"},{"id":"q6","type":"code","question":"Welches XML-Dokument ist wohlgeformt (well-formed)?","code":"","language":"xml","options":["<person><name>Anna</name><alter>30</alter></person>","<person><name>Anna<alter>30</alter></name></person>","<Person><name>Anna</name><alter>30</alter></Person>","<person><name>Anna</name><alter>30</person></alter>"],"correctAnswer":"<person><name>Anna</name><alter>30</alter></person>","explanation":"Die erste Option ist korrekt wohlgeformt: Es gibt ein Root-Element, alle Tags sind korrekt geschachtelt und geschlossen. Option 2 hat falsche Verschachtelung, Option 3 ist zwar wohlgeformt aber zeigt nur case-sensitivity, Option 4 hat falsch geschlossene Tags.","points":2,"category":"XML-Struktur"},{"id":"q7","type":"single-choice","question":"Was ist YAML (YAML Ain't Markup Language)?","options":["Ein menschenfreundliches Daten-Serialisierungsformat","Eine Markup-Sprache wie HTML","Ein Datenbank-Abfragesprache","Ein Komprimierungsalgorithmus"],"correctAnswer":"Ein menschenfreundliches Daten-Serialisierungsformat","explanation":"YAML ist ein menschenfreundliches Daten-Serialisierungsformat, das h√§ufig f√ºr Konfigurationsdateien verwendet wird. Es verwendet Einr√ºckungen zur Strukturierung und ist leichter lesbar als JSON oder XML.","points":1,"category":"Grundlagen"},{"id":"q8","type":"single-choice","question":"Wie werden in YAML hierarchische Strukturen dargestellt?","options":["Durch Einr√ºckungen (Indentation)","Durch geschweifte Klammern","Durch XML-Tags","Durch Semikolons"],"correctAnswer":"Durch Einr√ºckungen (Indentation)","explanation":"YAML verwendet Einr√ºckungen (typischerweise 2 Leerzeichen) zur Darstellung hierarchischer Strukturen. Dies macht YAML sehr lesbar, erfordert aber pr√§zise Formatierung.","points":1,"category":"YAML-Syntax"},{"id":"q9","type":"code","question":"Welche YAML-Syntax ist korrekt f√ºr eine Liste von Werten?","code":"","language":"yaml","options":["hobbys:\\n  - Lesen\\n  - Sport\\n  - Musik","hobbys: [Lesen, Sport, Musik]","hobbys:\\n  * Lesen\\n  * Sport\\n  * Musik","Beide ersten Optionen sind korrekt"],"correctAnswer":"Beide ersten Optionen sind korrekt","explanation":"YAML unterst√ºtzt zwei Syntaxen f√ºr Listen: Die Block-Syntax mit Bindestrichen (- Item) und die Flow-Syntax mit eckigen Klammern [Item1, Item2]. Beide sind g√ºltig. Die Asterisk-Syntax (*) ist nicht korrekt.","points":2,"category":"YAML-Syntax"},{"id":"q10","type":"multiple-choice","question":"Welche Vorteile hat JSON gegen√ºber XML? (Mehrere Antworten m√∂glich)","options":["Kompaktere Syntax mit weniger Overhead","Einfacher zu parsen in JavaScript","Bessere Lesbarkeit durch weniger Tags","Unterst√ºtzt mehr Datentypen als XML"],"correctAnswer":["Kompaktere Syntax mit weniger Overhead","Einfacher zu parsen in JavaScript","Bessere Lesbarkeit durch weniger Tags"],"explanation":"JSON hat eine kompaktere Syntax ohne schlie√üende Tags, ist nativ in JavaScript integrierbar und durch die reduzierte Syntax oft lesbarer. Beide Formate unterst√ºtzen √§hnliche Datentypen, wobei XML durch Schemas erweiterbar ist.","points":2,"category":"Vergleich"},{"id":"q11","type":"single-choice","question":"Welches Format eignet sich am besten f√ºr Konfigurationsdateien, die von Menschen h√§ufig bearbeitet werden?","options":["YAML","JSON","XML","CSV"],"correctAnswer":"YAML","explanation":"YAML eignet sich am besten f√ºr Konfigurationsdateien, da es durch Einr√ºckungen statt Klammern sehr lesbar ist, Kommentare unterst√ºtzt und weniger Syntax-Overhead hat. Deshalb wird es oft in Docker, Kubernetes und CI/CD-Tools verwendet.","points":1,"category":"Anwendungsf√§lle"},{"id":"q12","type":"single-choice","question":"Welches Format wird typischerweise f√ºr REST-APIs verwendet?","options":["JSON","XML","YAML","CSV"],"correctAnswer":"JSON","explanation":"JSON ist das Standard-Format f√ºr moderne REST-APIs, da es kompakt ist, nativ von JavaScript unterst√ºtzt wird und von allen Programmiersprachen einfach geparst werden kann. XML wird seltener verwendet, haupts√§chlich in Legacy-Systemen.","points":1,"category":"Anwendungsf√§lle"},{"id":"q13","type":"code","question":"Was ist das √Ñquivalent dieses JSON-Objekts in YAML?","code":"{\\n  \\"name\\": \\"Server1\\",\\n  \\"port\\": 8080,\\n  \\"ssl\\": true\\n}","language":"json","options":["name: Server1\\nport: 8080\\nssl: true","name = Server1\\nport = 8080\\nssl = true","<name>Server1</name>\\n<port>8080</port>\\n<ssl>true</ssl>","name: 'Server1'; port: 8080; ssl: true"],"correctAnswer":"name: Server1\\nport: 8080\\nssl: true","explanation":"In YAML werden Key-Value-Paare mit Doppelpunkt und Leerzeichen getrennt (key: value). Strings ben√∂tigen keine Anf√ºhrungszeichen, Zahlen und Booleans werden direkt geschrieben. Die Syntax ist deutlich kompakter als JSON.","points":2,"category":"Vergleich"},{"id":"q14","type":"multiple-choice","question":"Welche Datentypen werden von JSON nativ unterst√ºtzt? (Mehrere Antworten m√∂glich)","options":["String, Number, Boolean","Object, Array","null","Date, RegExp, Function"],"correctAnswer":["String, Number, Boolean","Object, Array","null"],"explanation":"JSON unterst√ºtzt nativ: String, Number, Boolean, Object, Array und null. Komplexe Typen wie Date, RegExp oder Function werden nicht unterst√ºtzt und m√ºssen als Strings serialisiert werden.","points":2,"category":"JSON-Syntax"},{"id":"q15","type":"single-choice","question":"Was ist ein XML-Namespace?","options":["Ein Mechanismus zur Vermeidung von Namenskonflikten bei Tags","Ein Speicherbereich f√ºr XML-Variablen","Eine Datenbank f√ºr XML-Dokumente","Ein Komprimierungsverfahren f√ºr XML"],"correctAnswer":"Ein Mechanismus zur Vermeidung von Namenskonflikten bei Tags","explanation":"XML-Namespaces verhindern Namenskonflikte, wenn XML-Dokumente aus verschiedenen Quellen kombiniert werden. Sie werden mit xmlns-Attributen definiert (z.B. xmlns:prefix='URI') und erm√∂glichen eindeutige Tag-Namen.","points":1,"category":"XML-Struktur"},{"id":"q16","type":"single-choice","question":"Welches Format hat die geringste Dateigr√∂√üe f√ºr dieselben Daten?","options":["JSON","XML","YAML","Alle haben die gleiche Gr√∂√üe"],"correctAnswer":"JSON","explanation":"JSON hat typischerweise die geringste Dateigr√∂√üe, da es keine schlie√üenden Tags wie XML ben√∂tigt und kompakter als YAML ist. XML hat durch √∂ffnende und schlie√üende Tags den gr√∂√üten Overhead.","points":1,"category":"Vergleich"},{"id":"q17","type":"multiple-choice","question":"Welche Aussagen √ºber YAML-Kommentare sind korrekt? (Mehrere Antworten m√∂glich)","options":["Kommentare beginnen mit dem #-Zeichen","YAML unterst√ºtzt mehrzeilige Kommentare mit /* */","Kommentare k√∂nnen am Ende einer Zeile stehen","YAML unterst√ºtzt keine Kommentare"],"correctAnswer":["Kommentare beginnen mit dem #-Zeichen","Kommentare k√∂nnen am Ende einer Zeile stehen"],"explanation":"YAML-Kommentare beginnen mit # und k√∂nnen sowohl als eigene Zeile als auch am Ende einer Zeile stehen. Mehrzeilige Kommentare wie in C (/* */) werden nicht unterst√ºtzt. JSON unterst√ºtzt √ºbrigens gar keine Kommentare.","points":2,"category":"YAML-Syntax"},{"id":"q18","type":"single-choice","question":"Was ist ein XML-Schema (XSD)?","options":["Eine Definition der Struktur und Datentypen eines XML-Dokuments","Ein Komprimierungsformat f√ºr XML-Dateien","Eine Programmiersprache f√ºr XML-Verarbeitung","Ein Verschl√ºsselungsstandard f√ºr XML"],"correctAnswer":"Eine Definition der Struktur und Datentypen eines XML-Dokuments","explanation":"Ein XML-Schema (XSD - XML Schema Definition) definiert die erlaubte Struktur, Elemente, Attribute und Datentypen eines XML-Dokuments. Es dient zur Validierung und Dokumentation von XML-Formaten.","points":1,"category":"XML-Struktur"},{"id":"q19","type":"code","question":"Welcher JSON-Code enth√§lt einen Syntaxfehler?","code":"","language":"json","options":["{\\"name\\": \\"Test\\", \\"wert\\": 42,}","{\\"name\\": \\"Test\\", \\"wert\\": 42}","{\\"name\\": \\"Test\\", \\"liste\\": [1, 2, 3]}","{\\"name\\": \\"Test\\", \\"aktiv\\": false}"],"correctAnswer":"{\\"name\\": \\"Test\\", \\"wert\\": 42,}","explanation":"Die erste Option enth√§lt ein trailing comma (Komma nach dem letzten Element), was in JSON nicht erlaubt ist. Alle anderen Optionen sind syntaktisch korrekt.","points":2,"category":"JSON-Syntax"},{"id":"q20","type":"multiple-choice","question":"F√ºr welche Anwendungsf√§lle ist XML besonders geeignet? (Mehrere Antworten m√∂glich)","options":["Dokumente mit komplexer Struktur und Metadaten","Systeme, die XML-Schema-Validierung ben√∂tigen","Legacy-Systeme und SOAP-Webservices","Moderne REST-APIs mit hoher Performance-Anforderung"],"correctAnswer":["Dokumente mit komplexer Struktur und Metadaten","Systeme, die XML-Schema-Validierung ben√∂tigen","Legacy-Systeme und SOAP-Webservices"],"explanation":"XML eignet sich f√ºr komplexe Dokumente (z.B. Office-Formate), Systeme mit strikter Schema-Validierung und Legacy-Systeme wie SOAP. F√ºr moderne REST-APIs wird JSON bevorzugt, da es kompakter und performanter ist.","points":2,"category":"Anwendungsf√§lle"}]`),In=["JSON","XML","YAML","Datenaustausch","API","Konfiguration","Serialisierung"],Cn="2025-10-05T00:00:00Z",Ln={id:Sn,moduleId:wn,title:An,description:En,category:_n,difficulty:Dn,examRelevance:Pn,timeLimit:Tn,passingScore:qn,questions:Rn,tags:In,lastUpdated:Cn},Mn=Object.freeze(Object.defineProperty({__proto__:null,category:_n,default:Ln,description:En,difficulty:Dn,examRelevance:Pn,id:Sn,lastUpdated:Cn,moduleId:wn,passingScore:qn,questions:Rn,tags:In,timeLimit:Tn,title:An},Symbol.toStringTag,{value:"Module"})),On="bp-02-nas-san-quiz",Nn="bp-02-nas-san",Bn="Network Attached Storage (NAS) und Storage Area Network (SAN) Quiz",xn="Teste dein Wissen √ºber NAS, SAN, Speicherprotokolle (NFS, SMB, iSCSI, FC), RAID-Level und Backup-Strategien",Vn="BP-02",Fn="intermediate",Kn="high",Wn=20,jn=70,$n=JSON.parse('[{"id":"q1","type":"single-choice","question":"Was ist Network Attached Storage (NAS)?","options":["Ein dedizierter Dateiserver, der √ºber das Netzwerk Speicher auf Dateiebene bereitstellt","Ein Speichernetzwerk, das Blockspeicher √ºber Fibre Channel bereitstellt","Eine Cloud-Speicherl√∂sung f√ºr Unternehmen","Ein lokaler Festplattenspeicher im Server"],"correctAnswer":"Ein dedizierter Dateiserver, der √ºber das Netzwerk Speicher auf Dateiebene bereitstellt","explanation":"NAS ist ein dedizierter Dateiserver, der Speicher auf Dateiebene √ºber Standard-Netzwerkprotokolle (NFS, SMB/CIFS) bereitstellt. Clients greifen auf Dateien und Ordner zu, nicht auf Bl√∂cke.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Was ist ein Storage Area Network (SAN)?","options":["Ein dediziertes Hochgeschwindigkeitsnetzwerk f√ºr Blockspeicher","Ein Dateiserver im lokalen Netzwerk","Eine Cloud-Backup-L√∂sung","Ein RAID-Controller f√ºr Festplatten"],"correctAnswer":"Ein dediziertes Hochgeschwindigkeitsnetzwerk f√ºr Blockspeicher","explanation":"Ein SAN ist ein dediziertes Hochgeschwindigkeitsnetzwerk, das Blockspeicher bereitstellt. Server greifen auf Speicher-Bl√∂cke zu, als w√§ren es lokale Festplatten. Typische Protokolle sind Fibre Channel und iSCSI.","points":1,"category":"Grundlagen"},{"id":"q3","type":"multiple-choice","question":"Was sind die Hauptunterschiede zwischen NAS und SAN? (Mehrere Antworten m√∂glich)","options":["NAS arbeitet auf Dateiebene, SAN auf Blockebene","NAS nutzt Standard-Ethernet, SAN oft Fibre Channel","SAN ist typischerweise schneller als NAS","NAS ist teurer als SAN"],"correctAnswer":["NAS arbeitet auf Dateiebene, SAN auf Blockebene","NAS nutzt Standard-Ethernet, SAN oft Fibre Channel","SAN ist typischerweise schneller als NAS"],"explanation":"NAS arbeitet auf Dateiebene √ºber Ethernet (NFS/SMB), w√§hrend SAN Blockspeicher √ºber Fibre Channel oder iSCSI bereitstellt. SAN ist schneller aber auch komplexer und teurer als NAS.","points":2,"category":"Vergleich"},{"id":"q4","type":"single-choice","question":"Welches Protokoll wird typischerweise f√ºr NAS in Linux/Unix-Umgebungen verwendet?","options":["NFS (Network File System)","SMB (Server Message Block)","iSCSI","Fibre Channel"],"correctAnswer":"NFS (Network File System)","explanation":"NFS (Network File System) ist das Standard-Protokoll f√ºr Dateifreigaben in Linux/Unix-Umgebungen. SMB/CIFS wird haupts√§chlich in Windows-Umgebungen verwendet, w√§hrend iSCSI und Fibre Channel f√ºr SAN genutzt werden.","points":1,"category":"Protokolle"},{"id":"q5","type":"single-choice","question":"Welches Protokoll wird typischerweise f√ºr NAS in Windows-Umgebungen verwendet?","options":["SMB/CIFS (Server Message Block/Common Internet File System)","NFS (Network File System)","iSCSI","FTP"],"correctAnswer":"SMB/CIFS (Server Message Block/Common Internet File System)","explanation":"SMB/CIFS ist das Standard-Protokoll f√ºr Dateifreigaben in Windows-Umgebungen. Moderne Versionen hei√üen SMB2 und SMB3 und bieten verbesserte Performance und Sicherheit.","points":1,"category":"Protokolle"},{"id":"q6","type":"single-choice","question":"Was ist iSCSI?","options":["Ein Protokoll zur √úbertragung von SCSI-Befehlen √ºber IP-Netzwerke","Ein Dateisystem f√ºr Linux","Ein RAID-Level f√ºr Festplatten","Ein Backup-Protokoll"],"correctAnswer":"Ein Protokoll zur √úbertragung von SCSI-Befehlen √ºber IP-Netzwerke","explanation":"iSCSI (Internet Small Computer System Interface) √ºbertr√§gt SCSI-Befehle √ºber IP-Netzwerke und erm√∂glicht SAN √ºber Standard-Ethernet. Es ist eine kosteng√ºnstigere Alternative zu Fibre Channel.","points":1,"category":"Protokolle"},{"id":"q7","type":"single-choice","question":"Was ist Fibre Channel?","options":["Ein Hochgeschwindigkeits-Netzwerkprotokoll f√ºr SANs","Ein Glasfaserkabel f√ºr Internet-Verbindungen","Ein RAID-Controller","Ein Backup-System"],"correctAnswer":"Ein Hochgeschwindigkeits-Netzwerkprotokoll f√ºr SANs","explanation":"Fibre Channel ist ein Hochgeschwindigkeits-Netzwerkprotokoll speziell f√ºr SANs, das sehr niedrige Latenz und hohe Bandbreite bietet. Es verwendet spezielle Hardware (HBAs, Switches) und ist teurer als iSCSI.","points":1,"category":"Protokolle"},{"id":"q8","type":"single-choice","question":"Was bedeutet RAID?","options":["Redundant Array of Independent Disks","Rapid Access Internet Database","Remote Array Interface Device","Reliable Automated Information Delivery"],"correctAnswer":"Redundant Array of Independent Disks","explanation":"RAID steht f√ºr Redundant Array of Independent Disks. Es kombiniert mehrere Festplatten zu einem logischen Laufwerk f√ºr verbesserte Performance, Redundanz oder beides.","points":1,"category":"RAID"},{"id":"q9","type":"single-choice","question":"Was ist RAID 0?","options":["Striping ohne Redundanz f√ºr maximale Performance","Spiegelung f√ºr maximale Redundanz","Striping mit Parit√§t","Spiegelung mit Striping"],"correctAnswer":"Striping ohne Redundanz f√ºr maximale Performance","explanation":"RAID 0 verteilt Daten √ºber mehrere Festplatten (Striping) f√ºr maximale Performance, bietet aber keine Redundanz. Bei Ausfall einer Festplatte sind alle Daten verloren.","points":1,"category":"RAID"},{"id":"q10","type":"single-choice","question":"Was ist RAID 1?","options":["Spiegelung (Mirroring) f√ºr Redundanz","Striping f√ºr Performance","Striping mit Parit√§t","Verteilte Parit√§t"],"correctAnswer":"Spiegelung (Mirroring) f√ºr Redundanz","explanation":"RAID 1 spiegelt Daten auf zwei oder mehr Festplatten. Bei Ausfall einer Festplatte sind die Daten weiterhin verf√ºgbar. Es bietet Redundanz, aber keine Performance-Verbesserung beim Schreiben.","points":1,"category":"RAID"},{"id":"q11","type":"single-choice","question":"Was ist RAID 5?","options":["Striping mit verteilter Parit√§t (mindestens 3 Festplatten)","Spiegelung mit Striping","Doppelte Parit√§t","Einfaches Striping ohne Redundanz"],"correctAnswer":"Striping mit verteilter Parit√§t (mindestens 3 Festplatten)","explanation":"RAID 5 verteilt Daten und Parit√§tsinformationen √ºber mindestens 3 Festplatten. Es bietet gute Performance und kann den Ausfall einer Festplatte verkraften. Die nutzbare Kapazit√§t ist n-1 Festplatten.","points":1,"category":"RAID"},{"id":"q12","type":"multiple-choice","question":"Welche RAID-Level bieten Redundanz? (Mehrere Antworten m√∂glich)","options":["RAID 1","RAID 5","RAID 6","RAID 0"],"correctAnswer":["RAID 1","RAID 5","RAID 6"],"explanation":"RAID 1 (Spiegelung), RAID 5 (Parit√§t) und RAID 6 (doppelte Parit√§t) bieten Redundanz. RAID 0 bietet keine Redundanz und ist bei Festplattenausfall komplett verloren.","points":2,"category":"RAID"},{"id":"q13","type":"single-choice","question":"Was ist der Hauptvorteil von RAID 6 gegen√ºber RAID 5?","options":["Kann zwei gleichzeitige Festplattenausf√§lle verkraften","Ist schneller beim Lesen","Ben√∂tigt weniger Festplatten","Hat mehr nutzbare Kapazit√§t"],"correctAnswer":"Kann zwei gleichzeitige Festplattenausf√§lle verkraften","explanation":"RAID 6 verwendet doppelte Parit√§t und kann daher zwei gleichzeitige Festplattenausf√§lle verkraften. Es ben√∂tigt mindestens 4 Festplatten und hat eine nutzbare Kapazit√§t von n-2 Festplatten.","points":1,"category":"RAID"},{"id":"q14","type":"single-choice","question":"Was ist ein Snapshot im Kontext von Storage?","options":["Eine zeitpunktbezogene Kopie des Dateisystems oder Volumes","Ein Backup auf Band","Eine Komprimierung von Daten","Ein RAID-Level"],"correctAnswer":"Eine zeitpunktbezogene Kopie des Dateisystems oder Volumes","explanation":"Ein Snapshot ist eine zeitpunktbezogene, schreibgesch√ºtzte Kopie eines Dateisystems oder Volumes. Snapshots erm√∂glichen schnelle Backups und Wiederherstellung ohne vollst√§ndige Kopien zu erstellen.","points":1,"category":"Backup"},{"id":"q15","type":"multiple-choice","question":"Welche Backup-Strategien gibt es? (Mehrere Antworten m√∂glich)","options":["Vollbackup (Full Backup)","Inkrementelles Backup","Differenzielles Backup","RAID-Backup"],"correctAnswer":["Vollbackup (Full Backup)","Inkrementelles Backup","Differenzielles Backup"],"explanation":"Die drei Hauptstrategien sind: Vollbackup (alle Daten), Inkrementelles Backup (nur √Ñnderungen seit letztem Backup) und Differenzielles Backup (√Ñnderungen seit letztem Vollbackup). RAID ist keine Backup-Strategie.","points":2,"category":"Backup"},{"id":"q16","type":"single-choice","question":"Was ist der Unterschied zwischen inkrementellem und differenziellem Backup?","options":["Inkrementell sichert √Ñnderungen seit letztem Backup, differenziell seit letztem Vollbackup","Differenziell ist schneller als inkrementell","Inkrementell ben√∂tigt mehr Speicherplatz","Es gibt keinen Unterschied"],"correctAnswer":"Inkrementell sichert √Ñnderungen seit letztem Backup, differenziell seit letztem Vollbackup","explanation":"Inkrementelles Backup sichert nur √Ñnderungen seit dem letzten Backup (schneller, weniger Speicher, aber komplexere Wiederherstellung). Differenzielles Backup sichert alle √Ñnderungen seit dem letzten Vollbackup (gr√∂√üer, aber einfachere Wiederherstellung).","points":1,"category":"Backup"},{"id":"q17","type":"single-choice","question":"Was bedeutet die 3-2-1-Backup-Regel?","options":["3 Kopien, 2 verschiedene Medien, 1 Kopie extern","3 Vollbackups, 2 inkrementelle, 1 differenzielles","3 Festplatten, 2 RAID-Level, 1 Snapshot","3 Server, 2 Standorte, 1 Cloud"],"correctAnswer":"3 Kopien, 2 verschiedene Medien, 1 Kopie extern","explanation":"Die 3-2-1-Regel besagt: Halte 3 Kopien deiner Daten (Original + 2 Backups), auf 2 verschiedenen Medientypen (z.B. Festplatte + Band), mit 1 Kopie extern (Offsite-Backup f√ºr Katastrophenschutz).","points":1,"category":"Backup"},{"id":"q18","type":"multiple-choice","question":"F√ºr welche Anwendungsf√§lle ist NAS besonders geeignet? (Mehrere Antworten m√∂glich)","options":["Dateifreigaben f√ºr Benutzer","Zentrale Datenspeicherung f√ºr kleine bis mittlere Unternehmen","Multimedia-Streaming","Hochperformante Datenbank-Server"],"correctAnswer":["Dateifreigaben f√ºr Benutzer","Zentrale Datenspeicherung f√ºr kleine bis mittlere Unternehmen","Multimedia-Streaming"],"explanation":"NAS eignet sich gut f√ºr Dateifreigaben, zentrale Datenspeicherung und Multimedia-Streaming. F√ºr hochperformante Datenbank-Server ist SAN besser geeignet, da es Blockspeicher mit niedrigerer Latenz bietet.","points":2,"category":"Anwendungsf√§lle"},{"id":"q19","type":"multiple-choice","question":"F√ºr welche Anwendungsf√§lle ist SAN besonders geeignet? (Mehrere Antworten m√∂glich)","options":["Datenbank-Server mit hohen Performance-Anforderungen","Virtualisierungsumgebungen (VMware, Hyper-V)","E-Mail-Server mit vielen Benutzern","Einfache Dateifreigaben f√ºr Endbenutzer"],"correctAnswer":["Datenbank-Server mit hohen Performance-Anforderungen","Virtualisierungsumgebungen (VMware, Hyper-V)","E-Mail-Server mit vielen Benutzern"],"explanation":"SAN eignet sich f√ºr Anwendungen mit hohen Performance-Anforderungen wie Datenbanken, Virtualisierung und E-Mail-Server. F√ºr einfache Dateifreigaben ist NAS kosteng√ºnstiger und einfacher zu verwalten.","points":2,"category":"Anwendungsf√§lle"},{"id":"q20","type":"single-choice","question":"Was ist der Hauptnachteil von RAID als Backup-L√∂sung?","options":["RAID sch√ºtzt nicht vor versehentlichem L√∂schen, Viren oder Katastrophen","RAID ist zu langsam f√ºr Backups","RAID ben√∂tigt zu viel Speicherplatz","RAID funktioniert nur mit SAN"],"correctAnswer":"RAID sch√ºtzt nicht vor versehentlichem L√∂schen, Viren oder Katastrophen","explanation":"RAID sch√ºtzt nur vor Hardwareausf√§llen einzelner Festplatten, nicht aber vor versehentlichem L√∂schen, Malware, Ransomware oder Katastrophen (Brand, Diebstahl). Daher ist RAID kein Ersatz f√ºr echte Backups.","points":1,"category":"RAID"}]'),Gn=["NAS","SAN","Storage","Netzwerkspeicher","iSCSI","NFS","SMB","Fibre Channel","RAID","Backup"],Un="2025-10-05T00:00:00Z",Hn={id:On,moduleId:Nn,title:Bn,description:xn,category:Vn,difficulty:Fn,examRelevance:Kn,timeLimit:Wn,passingScore:jn,questions:$n,tags:Gn,lastUpdated:Un},Qn=Object.freeze(Object.defineProperty({__proto__:null,category:Vn,default:Hn,description:xn,difficulty:Fn,examRelevance:Kn,id:On,lastUpdated:Un,moduleId:Nn,passingScore:jn,questions:$n,tags:Gn,timeLimit:Wn,title:Bn},Symbol.toStringTag,{value:"Module"})),Zn="bp-02-quality-assurance-quiz",Jn="fue-03-quality",Yn="Qualit√§tssicherung und Testing-Strategien Quiz",Xn="Teste dein Wissen √ºber Qualit√§tssicherung, Software-Tests (Black Box, White Box, Review), Extremwertetests und Last-/Performancetests",et="BP-02",nt="intermediate",tt="high",it=!1,rt=25,st=70,at=JSON.parse('[{"id":"q1","type":"single-choice","question":"Was ist der Hauptunterschied zwischen Black Box und White Box Testing?","options":["Black Box testet ohne Kenntnis der internen Struktur, White Box mit Kenntnis des Codes","Black Box ist automatisiert, White Box ist manuell","Black Box testet nur die Oberfl√§che, White Box nur die Datenbank","Black Box ist schneller als White Box Testing"],"correctAnswer":"Black Box testet ohne Kenntnis der internen Struktur, White Box mit Kenntnis des Codes","explanation":"Beim Black Box Testing wird die Software ohne Kenntnis der internen Struktur getestet (nur Eingaben und erwartete Ausgaben). Beim White Box Testing kennt der Tester den Quellcode und die Architektur und kann gezielt alle Codepfade testen.","points":1,"category":"Testarten"},{"id":"q2","type":"multiple-choice","question":"Welche Vorteile bietet Black Box Testing? (Mehrere Antworten m√∂glich)","options":["Unabh√§ngig von der Implementierung","Tester ben√∂tigen keine Programmierkenntnisse","Alle Codepfade werden getestet","Fokus auf Benutzerperspektive"],"correctAnswer":["Unabh√§ngig von der Implementierung","Tester ben√∂tigen keine Programmierkenntnisse","Fokus auf Benutzerperspektive"],"explanation":"Black Box Testing ist unabh√§ngig von der Implementierung, erfordert keine Programmierkenntnisse und fokussiert sich auf die Benutzerperspektive. Der Nachteil ist, dass nicht alle Codepfade getestet werden k√∂nnen - das ist ein Vorteil von White Box Testing.","points":2,"category":"Black Box Testing"},{"id":"q3","type":"single-choice","question":"Was ist √Ñquivalenzklassenbildung?","options":["Gruppierung von Eingabewerten, die √§hnlich behandelt werden","Aufteilung von Testf√§llen nach Priorit√§t","Klassifizierung von Bugs nach Schweregrad","Einteilung von Testern in Teams"],"correctAnswer":"Gruppierung von Eingabewerten, die √§hnlich behandelt werden","explanation":"Bei der √Ñquivalenzklassenbildung werden Eingabewerte in Klassen gruppiert, die vom System √§hnlich behandelt werden. Aus jeder Klasse wird ein repr√§sentativer Testwert gew√§hlt. Beispiel: F√ºr Altersvalidierung (18-65) gibt es g√ºltige Klasse (18-65) und ung√ºltige Klassen (<18, >65).","points":1,"category":"Black Box Testing"},{"id":"q4","type":"single-choice","question":"Was ist das Ziel der Grenzwertanalyse?","options":["Tests auf die Grenzen von √Ñquivalenzklassen konzentrieren, da dort h√§ufig Fehler auftreten","Die maximale Anzahl von Testf√§llen bestimmen","Die Grenzen des Testbudgets festlegen","Die zeitlichen Grenzen f√ºr Tests definieren"],"correctAnswer":"Tests auf die Grenzen von √Ñquivalenzklassen konzentrieren, da dort h√§ufig Fehler auftreten","explanation":"Die Grenzwertanalyse konzentriert sich auf die Grenzen von √Ñquivalenzklassen, da dort erfahrungsgem√§√ü die meisten Fehler auftreten. F√ºr Altersvalidierung (18-65) werden Werte wie 17, 18, 19, 64, 65, 66 getestet - also die Grenzen und direkt angrenzende Werte.","points":1,"category":"Black Box Testing"},{"id":"q5","type":"code","question":"Welche Testf√§lle sind f√ºr diese Altersvalidierung nach Grenzwertanalyse sinnvoll?","code":"function validateAge(age) {\\n  return age >= 18 && age <= 65;\\n}","language":"javascript","options":["17, 18, 19, 64, 65, 66","1, 50, 100","18, 65","0, 18, 65, 999"],"correctAnswer":"17, 18, 19, 64, 65, 66","explanation":"Nach Grenzwertanalyse testet man die Grenzen (18, 65) sowie Werte direkt darunter (17, 64) und dar√ºber (19, 66). Dies deckt die kritischen Bereiche ab, wo Off-by-One-Fehler auftreten k√∂nnen. Die anderen Optionen testen nicht systematisch die Grenzbereiche.","points":2,"category":"Black Box Testing"},{"id":"q6","type":"multiple-choice","question":"Was sind typische Extremwerte, die getestet werden sollten? (Mehrere Antworten m√∂glich)","options":["Leerer String \\"\\"","Integer.MAX_VALUE und Integer.MIN_VALUE","Durchschnittswerte","Null-Werte und negative Zahlen"],"correctAnswer":["Leerer String \\"\\"","Integer.MAX_VALUE und Integer.MIN_VALUE","Null-Werte und negative Zahlen"],"explanation":"Extremwertetests pr√ºfen das Verhalten bei extremen Eingaben: leere Strings, sehr lange Strings, minimale/maximale Zahlenwerte, Null, negative Zahlen, leere Listen, sehr gro√üe Listen. Durchschnittswerte sind normale Testf√§lle, keine Extremwerte.","points":2,"category":"Extremwertetests"},{"id":"q7","type":"single-choice","question":"Was bedeutet Anweisungs√ºberdeckung (Statement Coverage) beim White Box Testing?","options":["Jede Anweisung im Code wird mindestens einmal ausgef√ºhrt","Alle Variablen werden getestet","Alle Kommentare werden √ºberpr√ºft","Alle Funktionen werden dokumentiert"],"correctAnswer":"Jede Anweisung im Code wird mindestens einmal ausgef√ºhrt","explanation":"Anweisungs√ºberdeckung (Statement Coverage) bedeutet, dass jede Codezeile mindestens einmal w√§hrend der Tests ausgef√ºhrt wird. Dies ist die einfachste Form der Code-Coverage, garantiert aber nicht, dass alle Zweige (if/else) getestet wurden.","points":1,"category":"White Box Testing"},{"id":"q8","type":"single-choice","question":"Was ist der Unterschied zwischen Zweig√ºberdeckung (Branch Coverage) und Anweisungs√ºberdeckung?","options":["Zweig√ºberdeckung testet alle if/else-Zweige, Anweisungs√ºberdeckung nur alle Zeilen","Zweig√ºberdeckung ist schneller als Anweisungs√ºberdeckung","Zweig√ºberdeckung testet nur Schleifen","Es gibt keinen Unterschied"],"correctAnswer":"Zweig√ºberdeckung testet alle if/else-Zweige, Anweisungs√ºberdeckung nur alle Zeilen","explanation":"Zweig√ºberdeckung (Branch Coverage) stellt sicher, dass jeder Zweig (true/false bei if-Statements) durchlaufen wird. Anweisungs√ºberdeckung kann 100% erreichen, ohne alle Zweige zu testen. Zweig√ºberdeckung ist strenger und findet mehr Fehler.","points":1,"category":"White Box Testing"},{"id":"q9","type":"code","question":"Wie viele Testf√§lle sind mindestens n√∂tig f√ºr 100% Zweig√ºberdeckung?","code":"function checkDiscount(isMember, isStudent) {\\n  let discount = 0;\\n  if (isMember) {\\n    discount += 10;\\n  }\\n  if (isStudent) {\\n    discount += 20;\\n  }\\n  return discount;\\n}","language":"javascript","options":["4 Testf√§lle (alle Kombinationen)","2 Testf√§lle","1 Testfall","8 Testf√§lle"],"correctAnswer":"4 Testf√§lle (alle Kombinationen)","explanation":"F√ºr 100% Zweig√ºberdeckung m√ºssen alle Zweige getestet werden: (false, false), (true, false), (false, true), (true, true). Das sind 4 Testf√§lle f√ºr 2 unabh√§ngige if-Statements. Jede Kombination testet einen anderen Pfad durch den Code.","points":2,"category":"White Box Testing"},{"id":"q10","type":"single-choice","question":"Was ist der Hauptzweck von Code Reviews?","options":["Qualit√§tssicherung und Wissensaustausch im Team","Kontrolle der Arbeitszeit","Automatische Fehlererkennung","Erstellung von Dokumentation"],"correctAnswer":"Qualit√§tssicherung und Wissensaustausch im Team","explanation":"Code Reviews dienen der Qualit√§tssicherung (Fehler finden, Best Practices durchsetzen) und dem Wissensaustausch im Team. Sie f√∂rdern gemeinsames Code-Verst√§ndnis, verbessern die Code-Qualit√§t und helfen, Fehler fr√ºh zu erkennen. Sie sind kein Kontrollmechanismus.","points":1,"category":"Code Review"},{"id":"q11","type":"multiple-choice","question":"Welche Arten von Code Reviews gibt es? (Mehrere Antworten m√∂glich)","options":["Informelles Review (spontane Durchsicht)","Walkthrough (Autor f√ºhrt durch)","Inspektion (formaler Prozess mit Rollen)","Automatisches Review (nur Tools)"],"correctAnswer":["Informelles Review (spontane Durchsicht)","Walkthrough (Autor f√ºhrt durch)","Inspektion (formaler Prozess mit Rollen)"],"explanation":"Es gibt verschiedene Review-Arten mit unterschiedlichem Formalit√§tsgrad: Informelles Review (spontan), Walkthrough (Autor pr√§sentiert), Technisches Review (formal), Inspektion (sehr formal mit Rollen und Checklisten). Rein automatische Reviews durch Tools ersetzen keine menschlichen Reviews.","points":2,"category":"Code Review"},{"id":"q12","type":"single-choice","question":"Was ist ein Performancetest?","options":["Messung der Systemleistung unter normalen Bedingungen","Test der Benutzeroberfl√§che","Sicherheitstest","Test der Datenbank-Integrit√§t"],"correctAnswer":"Messung der Systemleistung unter normalen Bedingungen","explanation":"Ein Performancetest misst die Systemleistung unter normalen Bedingungen. Gemessen werden Antwortzeiten, Durchsatz und Ressourcennutzung (CPU, RAM). Ziel ist zu pr√ºfen, ob das System die Performance-Anforderungen erf√ºllt (z.B. Antwortzeit < 2 Sekunden).","points":1,"category":"Last- und Performancetests"},{"id":"q13","type":"single-choice","question":"Was ist der Unterschied zwischen Lasttest und Stresstest?","options":["Lasttest pr√ºft erwartete Last, Stresstest findet die Grenzen des Systems","Lasttest ist schneller als Stresstest","Lasttest testet nur die Datenbank","Es gibt keinen Unterschied"],"correctAnswer":"Lasttest pr√ºft erwartete Last, Stresstest findet die Grenzen des Systems","explanation":"Lasttest (Load Test) pr√ºft das Verhalten unter erwarteter, realistischer Last (z.B. 10.000 gleichzeitige Benutzer). Stresstest erh√∂ht die Last kontinuierlich bis zum Systemausfall oder Leistungseinbruch, um den Breaking Point zu finden. Stresstests gehen √ºber normale Lastszenarien hinaus.","points":1,"category":"Last- und Performancetests"},{"id":"q14","type":"single-choice","question":"Was ist ein Spike Test?","options":["Test des Verhaltens bei pl√∂tzlichen Lastspitzen","Test mit sehr langer Laufzeit","Test der Datenbankperformance","Test der Netzwerkgeschwindigkeit"],"correctAnswer":"Test des Verhaltens bei pl√∂tzlichen Lastspitzen","explanation":"Ein Spike Test pr√ºft das Verhalten bei pl√∂tzlichen, extremen Lastspitzen. Beispiel: Normale Last 100 Benutzer, pl√∂tzlich 5.000 Benutzer innerhalb 1 Minute (z.B. nach Newsletter-Versand). Ziel ist zu pr√ºfen, ob das System die Spitze bew√§ltigt und sich danach wieder erholt.","points":1,"category":"Last- und Performancetests"},{"id":"q15","type":"single-choice","question":"Was ist ein Ausdauertest (Soak Test)?","options":["Test der Stabilit√§t √ºber l√§ngeren Zeitraum (z.B. 24 Stunden)","Test mit maximaler Last","Test der Benutzeroberfl√§che","Test der Datensicherung"],"correctAnswer":"Test der Stabilit√§t √ºber l√§ngeren Zeitraum (z.B. 24 Stunden)","explanation":"Ein Ausdauertest (Soak Test) pr√ºft die Stabilit√§t √ºber einen l√§ngeren Zeitraum (z.B. 24 Stunden) unter konstanter Last. Ziel ist es, Memory Leaks, Ressourcen-Lecks und Stabilit√§tsprobleme zu finden, die erst nach l√§ngerer Laufzeit auftreten.","points":1,"category":"Last- und Performancetests"},{"id":"q16","type":"multiple-choice","question":"Welche Metriken werden bei Performancetests gemessen? (Mehrere Antworten m√∂glich)","options":["Antwortzeit (Response Time)","Durchsatz (Throughput)","Ressourcennutzung (CPU, RAM)","Anzahl der Codezeilen"],"correctAnswer":["Antwortzeit (Response Time)","Durchsatz (Throughput)","Ressourcennutzung (CPU, RAM)"],"explanation":"Bei Performancetests werden Antwortzeit (Zeit von Anfrage bis Antwort), Durchsatz (Transaktionen pro Zeiteinheit) und Ressourcennutzung (CPU, RAM, Netzwerk, Disk I/O) gemessen. Die Anzahl der Codezeilen ist keine Performance-Metrik.","points":2,"category":"Last- und Performancetests"},{"id":"q17","type":"multiple-choice","question":"Welche Tools werden h√§ufig f√ºr Last- und Performancetests verwendet? (Mehrere Antworten m√∂glich)","options":["Apache JMeter","Gatling","Microsoft Word","K6"],"correctAnswer":["Apache JMeter","Gatling","K6"],"explanation":"Apache JMeter (Open Source, Java), Gatling (Scala), K6 (JavaScript) und Locust (Python) sind beliebte Tools f√ºr Last- und Performancetests. Sie simulieren viele gleichzeitige Benutzer und messen Performance-Metriken. Microsoft Word ist kein Testing-Tool.","points":2,"category":"Last- und Performancetests"},{"id":"q18","type":"single-choice","question":"Was besagt die Testpyramide?","options":["Viele Unit Tests, weniger Integrationstests, noch weniger E2E-Tests","Gleich viele Tests auf allen Ebenen","Nur E2E-Tests sind wichtig","Nur Unit Tests sind notwendig"],"correctAnswer":"Viele Unit Tests, weniger Integrationstests, noch weniger E2E-Tests","explanation":"Die Testpyramide empfiehlt: 70% Unit Tests (schnell, g√ºnstig), 20% Integrationstests (mittel), 10% E2E-Tests (langsam, teuer). Unit Tests sind die Basis, da sie schnell und isoliert sind. E2E-Tests sind wichtig, aber aufwendig und sollten sparsam eingesetzt werden.","points":1,"category":"Teststrategien"},{"id":"q19","type":"multiple-choice","question":"Welche Testprinzipien sind korrekt? (Mehrere Antworten m√∂glich)","options":["Testen zeigt Anwesenheit von Fehlern, nicht deren Abwesenheit","Vollst√§ndiges Testen ist unm√∂glich","Fr√ºhes Testen spart Kosten","Dieselben Tests finden immer neue Fehler"],"correctAnswer":["Testen zeigt Anwesenheit von Fehlern, nicht deren Abwesenheit","Vollst√§ndiges Testen ist unm√∂glich","Fr√ºhes Testen spart Kosten"],"explanation":"Wichtige Testprinzipien: Tests k√∂nnen Fehler finden, aber nicht beweisen, dass keine vorhanden sind. Vollst√§ndiges Testen aller Kombinationen ist unm√∂glich. Fr√ºhes Testen ist g√ºnstiger (Fehler fr√ºh finden). Das Pestizid-Paradoxon besagt, dass dieselben Tests irgendwann keine neuen Fehler mehr finden.","points":2,"category":"Teststrategien"},{"id":"q20","type":"single-choice","question":"Was ist das Ziel von Qualit√§tssicherung (QA)?","options":["Sicherstellen, dass Software Anforderungen erf√ºllt, fehlerfrei funktioniert und wartbar ist","Nur Fehler finden","Nur Tests durchf√ºhren","Nur Dokumentation erstellen"],"correctAnswer":"Sicherstellen, dass Software Anforderungen erf√ºllt, fehlerfrei funktioniert und wartbar ist","explanation":"Qualit√§tssicherung (QA) ist umfassender als nur Testen. Ziele sind: Anforderungen erf√ºllen, Fehler finden und beheben, Qualit√§t sichern, Vertrauen schaffen, Risiken minimieren und Wartbarkeit gew√§hrleisten. QA umfasst Tests, Reviews, Prozesse, Standards und kontinuierliche Verbesserung.","points":1,"category":"Grundlagen"}]'),ot=["Qualit√§tssicherung","Black Box Testing","White Box Testing","Code Review","Extremwertetests","Last-Tests","Performance-Tests","Teststrategien","QA-Prozesse"],lt="2025-01-10T00:00:00Z",ut={id:Zn,moduleId:Jn,title:Yn,description:Xn,category:et,difficulty:nt,examRelevance:tt,newIn2025:it,timeLimit:rt,passingScore:st,questions:at,tags:ot,lastUpdated:lt},ct=Object.freeze(Object.defineProperty({__proto__:null,category:et,default:ut,description:Xn,difficulty:nt,examRelevance:tt,id:Zn,lastUpdated:lt,moduleId:Jn,newIn2025:it,passingScore:st,questions:at,tags:ot,timeLimit:rt,title:Yn},Symbol.toStringTag,{value:"Module"})),dt="bp-03-cps-quiz",mt="bp-03-cps",gt="Cyber-physische Systeme (CPS) und IoT Quiz",ht="Teste dein Wissen √ºber Cyber-physische Systeme, IoT, Embedded Systems, Sensoren und Aktoren",pt="BP-03",ft="intermediate",bt="high",kt=25,zt=70,vt=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was sind Cyber-physische Systeme (CPS)?","options":["Systeme, die physikalische Prozesse mit Computersystemen und Netzwerken verbinden","Reine Software-Systeme ohne Hardware-Komponenten","Nur Sicherheitssysteme f√ºr Cyber-Angriffe","Virtuelle Realit√§ts-Systeme"],"correctAnswer":"Systeme, die physikalische Prozesse mit Computersystemen und Netzwerken verbinden","explanation":"Cyber-physische Systeme (CPS) sind Systeme, die physikalische Prozesse mit Computersystemen und Netzwerken eng verbinden. Sie bestehen aus Sensoren (erfassen physikalische Daten), Aktoren (beeinflussen physikalische Prozesse) und Steuerungssoftware. Beispiele: Autonome Fahrzeuge, Smart Homes, Industrieautomation.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Was ist der Unterschied zwischen IoT und CPS?","options":["CPS betont die Steuerung physikalischer Prozesse, IoT die Vernetzung von Ger√§ten","IoT ist nur f√ºr Haushaltsger√§te, CPS nur f√ºr Industrie","Es gibt keinen Unterschied, die Begriffe sind identisch","CPS verwendet keine Sensoren, IoT schon"],"correctAnswer":"CPS betont die Steuerung physikalischer Prozesse, IoT die Vernetzung von Ger√§ten","explanation":"CPS (Cyber-Physical Systems) betont die enge Kopplung und Steuerung physikalischer Prozesse in Echtzeit. IoT (Internet of Things) fokussiert auf die Vernetzung von Ger√§ten und Datenaustausch. CPS ist oft eine Teilmenge von IoT mit h√∂heren Anforderungen an Echtzeitf√§higkeit und Zuverl√§ssigkeit.","points":1,"category":"Grundlagen"},{"id":"q3","type":"single-choice","question":"Was ist ein Sensor in einem CPS?","options":["Ein Ger√§t, das physikalische Gr√∂√üen in elektrische Signale umwandelt","Ein Ger√§t, das elektrische Signale in physikalische Aktionen umsetzt","Eine Software zur Datenverarbeitung","Ein Netzwerkprotokoll"],"correctAnswer":"Ein Ger√§t, das physikalische Gr√∂√üen in elektrische Signale umwandelt","explanation":"Ein Sensor ist ein Ger√§t, das physikalische Gr√∂√üen (Temperatur, Druck, Licht, Bewegung, etc.) in elektrische Signale umwandelt, die von Computersystemen verarbeitet werden k√∂nnen. Beispiele: Temperatursensor, Beschleunigungssensor, Lichtsensor. Das Gegenst√ºck ist der Aktor, der elektrische Signale in physikalische Aktionen umsetzt.","points":1,"category":"Sensoren"},{"id":"q4","type":"single-choice","question":"Was ist ein Aktor in einem CPS?","options":["Ein Ger√§t, das elektrische Signale in physikalische Aktionen umsetzt","Ein Ger√§t, das physikalische Gr√∂√üen misst","Eine Datenbank f√ºr Sensordaten","Ein Kommunikationsprotokoll"],"correctAnswer":"Ein Ger√§t, das elektrische Signale in physikalische Aktionen umsetzt","explanation":"Ein Aktor (auch Aktuator) ist ein Ger√§t, das elektrische Signale in physikalische Aktionen umsetzt. Er beeinflusst die physikalische Umgebung basierend auf Steuerbefehlen. Beispiele: Motor, Ventil, LED, Heizung, Lautsprecher. Aktoren sind das Gegenst√ºck zu Sensoren im Regelkreis eines CPS.","points":1,"category":"Aktoren"},{"id":"q5","type":"multiple-choice","question":"Welche sind typische Anwendungsgebiete von CPS? (Mehrere Antworten m√∂glich)","options":["Autonome Fahrzeuge","Smart Home Systeme","Industrieautomation (Industrie 4.0)","Textverarbeitung"],"correctAnswer":["Autonome Fahrzeuge","Smart Home Systeme","Industrieautomation (Industrie 4.0)"],"explanation":"CPS werden in vielen Bereichen eingesetzt: Autonome Fahrzeuge (Sensoren + Steuerung), Smart Homes (vernetzte Ger√§te), Industrieautomation (Industrie 4.0), Medizintechnik, Energieversorgung. Textverarbeitung ist eine reine Software-Anwendung ohne physikalische Komponenten und daher kein CPS-Anwendungsgebiet.","points":2,"category":"Anwendungen"},{"id":"q6","type":"single-choice","question":"Was ist ein Embedded System?","options":["Ein in ein gr√∂√üeres System eingebettetes Computersystem mit spezifischer Funktion","Ein Cloud-basiertes System","Ein Betriebssystem f√ºr Server","Eine Datenbank-Software"],"correctAnswer":"Ein in ein gr√∂√üeres System eingebettetes Computersystem mit spezifischer Funktion","explanation":"Ein Embedded System ist ein Computersystem, das in ein gr√∂√üeres technisches System eingebettet ist und eine spezifische Steuerungs- oder √úberwachungsfunktion erf√ºllt. Beispiele: Mikrocontroller in Waschmaschinen, ABS-Steuerung im Auto, Steuerung in Industrieanlagen. Sie sind oft ressourcenbeschr√§nkt und auf Echtzeitf√§higkeit optimiert.","points":1,"category":"Embedded Systems"},{"id":"q7","type":"single-choice","question":"Was bedeutet 'Echtzeit' in Echtzeitsystemen?","options":["Das System muss innerhalb definierter Zeitgrenzen reagieren","Das System arbeitet besonders schnell","Das System l√§uft 24/7 ohne Unterbrechung","Das System zeigt die aktuelle Uhrzeit an"],"correctAnswer":"Das System muss innerhalb definierter Zeitgrenzen reagieren","explanation":"In Echtzeitsystemen bedeutet 'Echtzeit', dass das System innerhalb definierter, garantierter Zeitgrenzen (Deadlines) reagieren muss. Es geht nicht um maximale Geschwindigkeit, sondern um Vorhersagbarkeit und Zuverl√§ssigkeit. Man unterscheidet harte Echtzeit (Deadline-Verletzung = Systemversagen) und weiche Echtzeit (Deadline-Verletzung = Qualit√§tsverlust).","points":1,"category":"Echtzeit-Systeme"},{"id":"q8","type":"single-choice","question":"Was ist der Unterschied zwischen harter und weicher Echtzeit?","options":["Bei harter Echtzeit f√ºhrt Deadline-Verletzung zu Systemversagen, bei weicher zu Qualit√§tsverlust","Harte Echtzeit ist schneller als weiche Echtzeit","Harte Echtzeit verwendet Hardware, weiche Software","Es gibt keinen Unterschied"],"correctAnswer":"Bei harter Echtzeit f√ºhrt Deadline-Verletzung zu Systemversagen, bei weicher zu Qualit√§tsverlust","explanation":"Harte Echtzeit: Deadline-Verletzung f√ºhrt zu Systemversagen (z.B. Airbag-Steuerung, ABS). Weiche Echtzeit: Deadline-Verletzung f√ºhrt zu Qualit√§tsverlust, aber nicht zu Systemversagen (z.B. Video-Streaming, Online-Gaming). Die Unterscheidung bezieht sich auf die Konsequenzen von Zeit√ºberschreitungen, nicht auf die Geschwindigkeit.","points":1,"category":"Echtzeit-Systeme"},{"id":"q9","type":"multiple-choice","question":"Welche Kommunikationsprotokolle werden h√§ufig in IoT/CPS verwendet? (Mehrere Antworten m√∂glich)","options":["MQTT","CoAP","HTTP/HTTPS","FTP"],"correctAnswer":["MQTT","CoAP","HTTP/HTTPS"],"explanation":"MQTT (Message Queuing Telemetry Transport) ist ein leichtgewichtiges Publish-Subscribe-Protokoll f√ºr IoT. CoAP (Constrained Application Protocol) ist f√ºr ressourcenbeschr√§nkte Ger√§te optimiert. HTTP/HTTPS wird auch in IoT verwendet. FTP ist f√ºr Datei√ºbertragung, nicht f√ºr IoT-Kommunikation optimiert.","points":2,"category":"Kommunikation"},{"id":"q10","type":"single-choice","question":"Was ist MQTT?","options":["Ein leichtgewichtiges Publish-Subscribe-Protokoll f√ºr IoT","Ein Datenbank-Management-System","Ein Betriebssystem f√ºr Embedded Systems","Eine Programmiersprache"],"correctAnswer":"Ein leichtgewichtiges Publish-Subscribe-Protokoll f√ºr IoT","explanation":"MQTT (Message Queuing Telemetry Transport) ist ein leichtgewichtiges Publish-Subscribe-Messaging-Protokoll, das speziell f√ºr IoT und M2M-Kommunikation entwickelt wurde. Es ist ressourcenschonend, unterst√ºtzt Quality of Service (QoS) Levels und arbeitet √ºber TCP/IP. Ein MQTT-Broker vermittelt zwischen Publishers und Subscribers.","points":1,"category":"Kommunikation"},{"id":"q11","type":"single-choice","question":"Was ist ein Mikrocontroller?","options":["Ein kompakter Computer auf einem Chip mit CPU, Speicher und I/O","Ein sehr kleiner Monitor","Eine Software zur Steuerung","Ein Netzwerk-Router"],"correctAnswer":"Ein kompakter Computer auf einem Chip mit CPU, Speicher und I/O","explanation":"Ein Mikrocontroller ist ein kompakter Computer auf einem einzigen Chip, der CPU, Speicher (RAM, ROM/Flash) und I/O-Schnittstellen integriert. Er ist f√ºr spezifische Steuerungsaufgaben in Embedded Systems optimiert. Beispiele: Arduino (ATmega), ESP32, STM32. Im Gegensatz zu Mikroprozessoren sind Mikrocontroller vollst√§ndige Systeme.","points":1,"category":"Embedded Systems"},{"id":"q12","type":"multiple-choice","question":"Welche Herausforderungen gibt es bei CPS? (Mehrere Antworten m√∂glich)","options":["Sicherheit (Security) gegen Cyber-Angriffe","Echtzeitanforderungen","Energieeffizienz bei batteriebetriebenen Ger√§ten","Hohe Rechenleistung ist immer verf√ºgbar"],"correctAnswer":["Sicherheit (Security) gegen Cyber-Angriffe","Echtzeitanforderungen","Energieeffizienz bei batteriebetriebenen Ger√§ten"],"explanation":"CPS haben mehrere Herausforderungen: Sicherheit (Schutz vor Cyber-Angriffen auf kritische Infrastruktur), Echtzeitanforderungen (garantierte Reaktionszeiten), Energieeffizienz (viele Ger√§te sind batteriebetrieben), Zuverl√§ssigkeit und Ressourcenbeschr√§nkungen. Hohe Rechenleistung ist oft NICHT verf√ºgbar, da Embedded Systems ressourcenbeschr√§nkt sind.","points":2,"category":"Herausforderungen"},{"id":"q13","type":"single-choice","question":"Was ist Edge Computing im Kontext von IoT/CPS?","options":["Datenverarbeitung nahe an der Datenquelle statt in der Cloud","Verarbeitung nur in der Cloud","Eine spezielle Hardware-Komponente","Ein Netzwerkprotokoll"],"correctAnswer":"Datenverarbeitung nahe an der Datenquelle statt in der Cloud","explanation":"Edge Computing bedeutet, dass Datenverarbeitung und -analyse nahe an der Datenquelle (am 'Rand' des Netzwerks) stattfindet, statt alles in die Cloud zu senden. Vorteile: Geringere Latenz, weniger Bandbreite, besserer Datenschutz, Funktionsf√§higkeit bei Netzwerkausfall. Wichtig f√ºr Echtzeit-CPS.","points":1,"category":"Architektur"},{"id":"q14","type":"single-choice","question":"Was ist ein digitaler Zwilling (Digital Twin)?","options":["Eine virtuelle Repr√§sentation eines physischen Systems","Eine Backup-Kopie von Daten","Ein zweiter Server f√ºr Redundanz","Eine Kopie der Software"],"correctAnswer":"Eine virtuelle Repr√§sentation eines physischen Systems","explanation":"Ein digitaler Zwilling (Digital Twin) ist eine virtuelle Repr√§sentation eines physischen Systems, die in Echtzeit mit Sensordaten aktualisiert wird. Er erm√∂glicht Simulation, Analyse und Optimierung ohne das reale System zu beeinflussen. Anwendungen: Predictive Maintenance, Prozessoptimierung, Produktentwicklung in Industrie 4.0.","points":1,"category":"Konzepte"},{"id":"q15","type":"multiple-choice","question":"Welche Sensortypen gibt es? (Mehrere Antworten m√∂glich)","options":["Temperatursensor","Beschleunigungssensor (Accelerometer)","Drucksensor","Compiler"],"correctAnswer":["Temperatursensor","Beschleunigungssensor (Accelerometer)","Drucksensor"],"explanation":"Es gibt viele Sensortypen: Temperatursensor (misst Temperatur), Beschleunigungssensor/Accelerometer (misst Beschleunigung/Bewegung), Drucksensor (misst Druck), Lichtsensor, N√§herungssensor, Gyroskop, GPS, etc. Ein Compiler ist ein Software-Werkzeug zur Code-√úbersetzung, kein Sensor.","points":2,"category":"Sensoren"},{"id":"q16","type":"single-choice","question":"Was ist Industrie 4.0?","options":["Die vierte industrielle Revolution durch Digitalisierung und Vernetzung","Die vierte Version einer Industrie-Software","Ein Qualit√§tsstandard","Eine Programmiersprache"],"correctAnswer":"Die vierte industrielle Revolution durch Digitalisierung und Vernetzung","explanation":"Industrie 4.0 bezeichnet die vierte industrielle Revolution, die durch Digitalisierung, Vernetzung und Automatisierung gekennzeichnet ist. Kernelemente: CPS, IoT, Big Data, Cloud Computing, KI. Ziele: Flexible Produktion, Effizienzsteigerung, Individualisierung. Beispiele: Smart Factories, vorausschauende Wartung, autonome Logistik.","points":1,"category":"Anwendungen"},{"id":"q17","type":"single-choice","question":"Was ist ein Regelkreis (Control Loop) in CPS?","options":["Ein geschlossenes System aus Sensor, Steuerung und Aktor zur Prozessregelung","Eine Programmschleife im Code","Ein Netzwerk-Routing-Protokoll","Eine Datenbank-Transaktion"],"correctAnswer":"Ein geschlossenes System aus Sensor, Steuerung und Aktor zur Prozessregelung","explanation":"Ein Regelkreis (Control Loop) ist ein geschlossenes System: Sensor misst Ist-Wert ‚Üí Steuerung vergleicht mit Soll-Wert ‚Üí Aktor korrigiert Abweichung ‚Üí Sensor misst erneut. Beispiel: Thermostat (Sensor: Temperatur, Steuerung: Vergleich, Aktor: Heizung). Dies ist fundamental f√ºr CPS zur automatischen Prozessregelung.","points":1,"category":"Konzepte"},{"id":"q18","type":"single-choice","question":"Was ist der Zweck von Predictive Maintenance in CPS?","options":["Vorhersage von Wartungsbedarf durch Sensordaten-Analyse","Regelm√§√üige Wartung nach festem Zeitplan","Reparatur nach Ausfall","Austausch aller Komponenten j√§hrlich"],"correctAnswer":"Vorhersage von Wartungsbedarf durch Sensordaten-Analyse","explanation":"Predictive Maintenance (vorausschauende Wartung) nutzt Sensordaten und Datenanalyse, um Wartungsbedarf vorherzusagen, bevor Ausf√§lle auftreten. Vorteile: Reduzierte Ausfallzeiten, optimierte Wartungskosten, l√§ngere Lebensdauer. Im Gegensatz zu reaktiver Wartung (nach Ausfall) oder pr√§ventiver Wartung (nach Zeitplan).","points":1,"category":"Anwendungen"},{"id":"q19","type":"multiple-choice","question":"Welche Sicherheitsaspekte sind bei CPS besonders wichtig? (Mehrere Antworten m√∂glich)","options":["Schutz vor unbefugtem Zugriff (Authentication/Authorization)","Verschl√ºsselung der Kommunikation","Sichere Updates (Firmware)","Verwendung von Standard-Passw√∂rtern"],"correctAnswer":["Schutz vor unbefugtem Zugriff (Authentication/Authorization)","Verschl√ºsselung der Kommunikation","Sichere Updates (Firmware)"],"explanation":"CPS-Sicherheit umfasst: Authentifizierung/Autorisierung (nur berechtigte Zugriffe), verschl√ºsselte Kommunikation (Schutz vor Abh√∂ren), sichere Updates (signierte Firmware), Netzwerksegmentierung, Intrusion Detection. Standard-Passw√∂rter sind ein Sicherheitsrisiko und sollten vermieden werden. CPS-Angriffe k√∂nnen physische Sch√§den verursachen.","points":2,"category":"Sicherheit"},{"id":"q20","type":"single-choice","question":"Was ist der Unterschied zwischen einem Mikrocontroller und einem Mikroprozessor?","options":["Mikrocontroller integriert CPU, Speicher und I/O auf einem Chip, Mikroprozessor nur CPU","Mikrocontroller sind schneller als Mikroprozessoren","Mikroprozessoren sind billiger als Mikrocontroller","Es gibt keinen Unterschied"],"correctAnswer":"Mikrocontroller integriert CPU, Speicher und I/O auf einem Chip, Mikroprozessor nur CPU","explanation":"Mikrocontroller (MCU) integriert CPU, Speicher (RAM, Flash) und I/O-Peripherie auf einem Chip - ein vollst√§ndiges System f√ºr spezifische Aufgaben. Mikroprozessor (CPU) enth√§lt nur die Recheneinheit und ben√∂tigt externe Komponenten (Speicher, I/O). Mikrocontroller sind f√ºr Embedded Systems optimiert, Mikroprozessoren f√ºr allgemeine Computeranwendungen.","points":1,"category":"Embedded Systems"}]`),yt=["CPS","Cyber-physische Systeme","Sensoren","Aktoren","IoT","Embedded Systems","Echtzeit-Systeme","Industrie 4.0","MQTT"],St="2025-01-10",wt={id:dt,moduleId:mt,title:gt,description:ht,category:pt,difficulty:ft,examRelevance:bt,timeLimit:kt,passingScore:zt,questions:vt,tags:yt,lastUpdated:St},At=Object.freeze(Object.defineProperty({__proto__:null,category:pt,default:wt,description:ht,difficulty:ft,examRelevance:bt,id:dt,lastUpdated:St,moduleId:mt,passingScore:zt,questions:vt,tags:yt,timeLimit:kt,title:gt},Symbol.toStringTag,{value:"Module"})),Et="bp-03-rest-api-quiz",_t="bp-03-rest-api",Dt="REST API-Entwicklung Quiz",Pt="Teste dein Wissen √ºber REST API-Entwicklung, HTTP-Methoden, Status-Codes und API-Design",Tt="BP-03",qt="intermediate",Rt="high",It=25,Ct=70,Lt=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was bedeutet REST in REST API?","options":["Representational State Transfer","Remote Execution State Transfer","Resource Execution Service Technology","Representational Service Technology"],"correctAnswer":"Representational State Transfer","explanation":"REST steht f√ºr Representational State Transfer. Es ist ein Architekturstil f√ºr verteilte Systeme, der auf dem HTTP-Protokoll basiert und zustandslose Kommunikation zwischen Client und Server erm√∂glicht.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Welche HTTP-Methode wird verwendet, um eine neue Ressource zu erstellen?","options":["POST","GET","PUT","DELETE"],"correctAnswer":"POST","explanation":"POST wird verwendet, um neue Ressourcen zu erstellen. GET liest Ressourcen, PUT aktualisiert bestehende Ressourcen vollst√§ndig, und DELETE l√∂scht Ressourcen.","points":1,"category":"HTTP-Methoden"},{"id":"q3","type":"single-choice","question":"Was ist der Unterschied zwischen PUT und PATCH?","options":["PUT ersetzt die gesamte Ressource, PATCH aktualisiert nur Teile","PUT erstellt neue Ressourcen, PATCH l√∂scht sie","PUT ist idempotent, PATCH nicht","PUT verwendet JSON, PATCH verwendet XML"],"correctAnswer":"PUT ersetzt die gesamte Ressource, PATCH aktualisiert nur Teile","explanation":"PUT ersetzt die gesamte Ressource mit den gesendeten Daten, w√§hrend PATCH nur die angegebenen Felder aktualisiert. Beide Methoden sind idempotent, d.h. mehrfache identische Anfragen haben denselben Effekt wie eine einzelne Anfrage.","points":1,"category":"HTTP-Methoden"},{"id":"q4","type":"single-choice","question":"Welcher HTTP-Status-Code bedeutet 'Erfolgreich erstellt'?","options":["201 Created","200 OK","204 No Content","202 Accepted"],"correctAnswer":"201 Created","explanation":"201 Created wird zur√ºckgegeben, wenn eine neue Ressource erfolgreich erstellt wurde. 200 OK ist eine allgemeine Erfolgsantwort, 204 No Content bedeutet Erfolg ohne R√ºckgabewert, und 202 Accepted bedeutet, dass die Anfrage akzeptiert wurde, aber noch nicht verarbeitet ist.","points":1,"category":"Status-Codes"},{"id":"q5","type":"single-choice","question":"Welcher Status-Code wird bei einem nicht gefundenen Endpunkt zur√ºckgegeben?","options":["404 Not Found","400 Bad Request","401 Unauthorized","500 Internal Server Error"],"correctAnswer":"404 Not Found","explanation":"404 Not Found wird zur√ºckgegeben, wenn die angeforderte Ressource nicht existiert. 400 Bad Request bedeutet fehlerhafte Anfrage, 401 Unauthorized fehlende Authentifizierung, und 500 Internal Server Error einen Serverfehler.","points":1,"category":"Status-Codes"},{"id":"q6","type":"multiple-choice","question":"Welche HTTP-Methoden sind idempotent? (Mehrere Antworten m√∂glich)","options":["GET","PUT","DELETE","POST"],"correctAnswer":["GET","PUT","DELETE"],"explanation":"GET, PUT und DELETE sind idempotent, d.h. mehrfache identische Anfragen haben denselben Effekt wie eine einzelne Anfrage. POST ist nicht idempotent, da jede POST-Anfrage eine neue Ressource erstellen kann.","points":2,"category":"HTTP-Methoden"},{"id":"q7","type":"single-choice","question":"Was ist HATEOAS in REST APIs?","options":["Hypermedia As The Engine Of Application State","HTTP Authentication Through External OAuth Services","Hypertext Application Transfer Over Secure Sockets","High Availability Through Elastic Orchestration And Scaling"],"correctAnswer":"Hypermedia As The Engine Of Application State","explanation":"HATEOAS (Hypermedia As The Engine Of Application State) ist ein REST-Prinzip, bei dem die API-Antworten Links zu verwandten Ressourcen enthalten, sodass Clients die API dynamisch erkunden k√∂nnen, ohne vorher alle Endpunkte kennen zu m√ºssen.","points":1,"category":"REST-Prinzipien"},{"id":"q8","type":"single-choice","question":"Welcher Status-Code wird bei fehlender Authentifizierung zur√ºckgegeben?","options":["401 Unauthorized","403 Forbidden","400 Bad Request","404 Not Found"],"correctAnswer":"401 Unauthorized","explanation":"401 Unauthorized wird zur√ºckgegeben, wenn keine oder ung√ºltige Authentifizierungsinformationen vorliegen. 403 Forbidden bedeutet, dass der authentifizierte Benutzer keine Berechtigung hat, 400 Bad Request eine fehlerhafte Anfrage, und 404 Not Found eine nicht existierende Ressource.","points":1,"category":"Status-Codes"},{"id":"q9","type":"code","question":"Welcher HTTP-Status-Code sollte bei dieser erfolgreichen GET-Anfrage zur√ºckgegeben werden?","code":"GET /api/users/123\\nResponse: { \\"id\\": 123, \\"name\\": \\"Max M√ºller\\" }","language":"http","options":["200 OK","201 Created","204 No Content","202 Accepted"],"correctAnswer":"200 OK","explanation":"200 OK ist der Standard-Status-Code f√ºr erfolgreiche GET-Anfragen, die Daten zur√ºckgeben. 201 Created wird f√ºr POST verwendet, 204 No Content f√ºr erfolgreiche Anfragen ohne R√ºckgabewert, und 202 Accepted f√ºr asynchrone Verarbeitung.","points":2,"category":"Status-Codes"},{"id":"q10","type":"multiple-choice","question":"Welche Prinzipien geh√∂ren zu RESTful API-Design? (Mehrere Antworten m√∂glich)","options":["Zustandslosigkeit (Statelessness)","Einheitliche Schnittstelle (Uniform Interface)","Client-Server-Architektur","Zustandsbehaftete Sessions"],"correctAnswer":["Zustandslosigkeit (Statelessness)","Einheitliche Schnittstelle (Uniform Interface)","Client-Server-Architektur"],"explanation":"REST basiert auf Zustandslosigkeit (jede Anfrage enth√§lt alle n√∂tigen Informationen), einheitlicher Schnittstelle (standardisierte Kommunikation) und Client-Server-Architektur (Trennung von Zust√§ndigkeiten). Zustandsbehaftete Sessions widersprechen dem REST-Prinzip der Zustandslosigkeit.","points":2,"category":"REST-Prinzipien"},{"id":"q11","type":"single-choice","question":"Was ist der empfohlene Content-Type f√ºr JSON-Daten in REST APIs?","options":["application/json","text/json","application/xml","text/plain"],"correctAnswer":"application/json","explanation":"application/json ist der Standard-MIME-Type f√ºr JSON-Daten in HTTP-Anfragen und -Antworten. Er sollte im Content-Type-Header gesetzt werden, um dem Client mitzuteilen, dass die Daten im JSON-Format vorliegen.","points":1,"category":"API-Design"},{"id":"q12","type":"code","question":"Welche HTTP-Methode wird in diesem API-Aufruf verwendet, um einen Benutzer zu aktualisieren?","code":"PUT /api/users/123\\nContent-Type: application/json\\n\\n{\\n  \\"name\\": \\"Max Mustermann\\",\\n  \\"email\\": \\"max@example.com\\"\\n}","language":"http","options":["PUT","POST","PATCH","UPDATE"],"correctAnswer":"PUT","explanation":"PUT wird verwendet, um eine bestehende Ressource vollst√§ndig zu ersetzen. Die Anfrage sendet alle Daten der Ressource. PATCH w√ºrde nur einzelne Felder aktualisieren, POST neue Ressourcen erstellen, und UPDATE ist keine HTTP-Methode.","points":2,"category":"HTTP-Methoden"},{"id":"q13","type":"single-choice","question":"Welcher Status-Code wird bei einer erfolgreichen DELETE-Operation ohne R√ºckgabewert verwendet?","options":["204 No Content","200 OK","201 Created","202 Accepted"],"correctAnswer":"204 No Content","explanation":"204 No Content wird verwendet, wenn eine Operation erfolgreich war, aber keine Daten zur√ºckgegeben werden. Dies ist typisch f√ºr DELETE-Operationen. 200 OK w√ºrde verwendet, wenn Daten zur√ºckgegeben werden, 201 Created f√ºr neue Ressourcen, und 202 Accepted f√ºr asynchrone Verarbeitung.","points":1,"category":"Status-Codes"},{"id":"q14","type":"single-choice","question":"Was ist die beste Praxis f√ºr die Benennung von REST API-Endpunkten?","options":["Substantive im Plural verwenden (z.B. /users, /products)","Verben verwenden (z.B. /getUser, /createProduct)","Gemischte Gro√ü- und Kleinschreibung (z.B. /GetUsers)","Unterstriche verwenden (z.B. /get_users)"],"correctAnswer":"Substantive im Plural verwenden (z.B. /users, /products)","explanation":"REST API-Endpunkte sollten Substantive im Plural verwenden, um Ressourcen zu repr√§sentieren. Die HTTP-Methoden (GET, POST, PUT, DELETE) definieren die Aktion. Verben in URLs sind nicht RESTful, da die Methode bereits die Aktion beschreibt.","points":1,"category":"API-Design"},{"id":"q15","type":"multiple-choice","question":"Welche Status-Codes geh√∂ren zur Kategorie 'Client-Fehler'? (Mehrere Antworten m√∂glich)","options":["400 Bad Request","404 Not Found","500 Internal Server Error","503 Service Unavailable"],"correctAnswer":["400 Bad Request","404 Not Found"],"explanation":"Status-Codes im 4xx-Bereich sind Client-Fehler (400 Bad Request, 404 Not Found). Status-Codes im 5xx-Bereich sind Server-Fehler (500 Internal Server Error, 503 Service Unavailable). Client-Fehler bedeuten, dass der Client etwas falsch gemacht hat, Server-Fehler bedeuten ein Problem auf der Server-Seite.","points":2,"category":"Status-Codes"},{"id":"q16","type":"code","question":"Was ist das Problem mit dieser API-Response-Struktur?","code":"{\\n  \\"success\\": true,\\n  \\"data\\": {\\n    \\"user_id\\": 123,\\n    \\"user_name\\": \\"Max\\"\\n  }\\n}","language":"json","options":["Inkonsistente Namenskonvention (snake_case statt camelCase)","Fehlende HTTP-Status-Codes","Zu viele verschachtelte Objekte","Keine Fehler, die Struktur ist korrekt"],"correctAnswer":"Inkonsistente Namenskonvention (snake_case statt camelCase)","explanation":"In JSON-APIs sollte eine konsistente Namenskonvention verwendet werden. Entweder durchgehend camelCase (userId, userName) oder snake_case (user_id, user_name). Die Mischung verschiedener Konventionen erschwert die Verwendung der API. Das 'success'-Feld ist redundant, da der HTTP-Status-Code bereits den Erfolg anzeigt.","points":2,"category":"API-Design"},{"id":"q17","type":"single-choice","question":"Welcher HTTP-Header wird verwendet, um die API-Version anzugeben?","options":["Accept oder Custom-Header (z.B. X-API-Version)","Content-Type","Authorization","User-Agent"],"correctAnswer":"Accept oder Custom-Header (z.B. X-API-Version)","explanation":"API-Versionierung kann √ºber verschiedene Methoden erfolgen: Accept-Header (z.B. Accept: application/vnd.api.v2+json), Custom-Header (X-API-Version: 2), URL-Pfad (/v2/users) oder Query-Parameter (?version=2). Content-Type beschreibt das Datenformat, Authorization die Authentifizierung, und User-Agent den Client.","points":1,"category":"API-Design"},{"id":"q18","type":"single-choice","question":"Was bedeutet der Status-Code 429?","options":["Too Many Requests (Rate Limit √ºberschritten)","Request Timeout","Payload Too Large","Method Not Allowed"],"correctAnswer":"Too Many Requests (Rate Limit √ºberschritten)","explanation":"429 Too Many Requests wird zur√ºckgegeben, wenn ein Client zu viele Anfragen in einem bestimmten Zeitraum sendet (Rate Limiting). Der Server kann im Retry-After-Header angeben, wann der Client es erneut versuchen kann. Dies sch√ºtzt die API vor √úberlastung.","points":1,"category":"Status-Codes"},{"id":"q19","type":"multiple-choice","question":"Welche Informationen sollten in einer guten API-Fehlerantwort enthalten sein? (Mehrere Antworten m√∂glich)","options":["Fehlermeldung f√ºr Entwickler","HTTP-Status-Code","Eindeutiger Fehlercode","Vollst√§ndiger Stack-Trace"],"correctAnswer":["Fehlermeldung f√ºr Entwickler","HTTP-Status-Code","Eindeutiger Fehlercode"],"explanation":"Eine gute API-Fehlerantwort sollte einen HTTP-Status-Code, eine verst√§ndliche Fehlermeldung und einen eindeutigen Fehlercode enthalten. Stack-Traces sollten nicht in Produktionsumgebungen zur√ºckgegeben werden, da sie Sicherheitsrisiken darstellen und interne Implementierungsdetails offenlegen.","points":2,"category":"API-Design"},{"id":"q20","type":"code","question":"Welche HTTP-Methode sollte f√ºr diesen Anwendungsfall verwendet werden: 'Aktiviere einen Benutzer-Account'?","code":"// Anwendungsfall: Benutzer-Account aktivieren\\n// Endpunkt: /api/users/123/activate","language":"javascript","options":["POST oder PATCH","GET","DELETE","PUT"],"correctAnswer":"POST oder PATCH","explanation":"F√ºr Aktionen wie 'aktivieren' eignet sich POST (f√ºr nicht-idempotente Aktionen) oder PATCH (f√ºr Teilaktualisierung des Status-Feldes). GET sollte keine √Ñnderungen vornehmen, DELETE w√ºrde l√∂schen, und PUT w√ºrde die gesamte Ressource ersetzen. POST /users/123/activate oder PATCH /users/123 mit {\\"status\\": \\"active\\"} sind beide valide Ans√§tze.","points":2,"category":"HTTP-Methoden"}]`),Mt=["REST","API","HTTP","Web Services","Status-Codes","HATEOAS","API-Design"],Ot="2025-01-10",Nt={id:Et,moduleId:_t,title:Dt,description:Pt,category:Tt,difficulty:qt,examRelevance:Rt,timeLimit:It,passingScore:Ct,questions:Lt,tags:Mt,lastUpdated:Ot},Bt=Object.freeze(Object.defineProperty({__proto__:null,category:Tt,default:Nt,description:Pt,difficulty:qt,examRelevance:Rt,id:Et,lastUpdated:Ot,moduleId:_t,passingScore:Ct,questions:Lt,tags:Mt,timeLimit:It,title:Dt},Symbol.toStringTag,{value:"Module"})),xt="bp-03-software-quality-quiz",Vt="bp-03-software-quality",Ft="Softwarequalit√§t und Clean Code Quiz",Kt="Teste dein Wissen √ºber Softwarequalit√§t, Clean Code, SOLID-Prinzipien, Code-Reviews und Refactoring",Wt="BP-03",jt="intermediate",$t="high",Gt=25,Ut=70,Ht=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was beschreibt die ISO 25010 Norm?","options":["Qualit√§tsmerkmale f√ºr Softwareprodukte und -systeme","Sicherheitsstandards f√ºr Webanwendungen","Projektmanagement-Methoden","Datenbankdesign-Richtlinien"],"correctAnswer":"Qualit√§tsmerkmale f√ºr Softwareprodukte und -systeme","explanation":"ISO 25010 definiert acht Hauptqualit√§tsmerkmale f√ºr Software: Funktionale Eignung, Leistungseffizienz, Kompatibilit√§t, Benutzbarkeit, Zuverl√§ssigkeit, Sicherheit, Wartbarkeit und √úbertragbarkeit. Diese Norm ist der Nachfolger von ISO 9126.","points":1,"category":"Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche geh√∂ren zu den acht Hauptqualit√§tsmerkmalen der ISO 25010? (Mehrere Antworten m√∂glich)","options":["Wartbarkeit (Maintainability)","Zuverl√§ssigkeit (Reliability)","Profitabilit√§t (Profitability)","Skalierbarkeit (Scalability)"],"correctAnswer":["Wartbarkeit (Maintainability)","Zuverl√§ssigkeit (Reliability)"],"explanation":"Wartbarkeit und Zuverl√§ssigkeit sind zwei der acht Hauptqualit√§tsmerkmale der ISO 25010. Profitabilit√§t ist ein Gesch√§ftsziel, kein Qualit√§tsmerkmal. Skalierbarkeit ist ein Aspekt der Leistungseffizienz, aber kein eigenst√§ndiges Hauptmerkmal.","points":2,"category":"ISO 25010"},{"id":"q3","type":"single-choice","question":"Was bedeutet das 'S' in den SOLID-Prinzipien?","options":["Single Responsibility Principle","Software Reliability Principle","Secure Implementation Principle","System Scalability Principle"],"correctAnswer":"Single Responsibility Principle","explanation":"Das 'S' in SOLID steht f√ºr Single Responsibility Principle (Prinzip der eindeutigen Verantwortlichkeit). Es besagt, dass eine Klasse nur eine einzige Verantwortlichkeit haben sollte und nur einen Grund zur √Ñnderung haben darf.","points":1,"category":"SOLID"},{"id":"q4","type":"single-choice","question":"Was besagt das Open/Closed Principle (OCP)?","options":["Software sollte offen f√ºr Erweiterung, aber geschlossen f√ºr Modifikation sein","Klassen sollten √∂ffentliche und private Methoden haben","Code sollte Open Source sein","Datenbanken sollten offen f√ºr Lesen, geschlossen f√ºr Schreiben sein"],"correctAnswer":"Software sollte offen f√ºr Erweiterung, aber geschlossen f√ºr Modifikation sein","explanation":"Das Open/Closed Principle besagt, dass Software-Entit√§ten offen f√ºr Erweiterungen, aber geschlossen f√ºr Modifikationen sein sollten. Man sollte das Verhalten erweitern k√∂nnen, ohne bestehenden Code zu √§ndern, z.B. durch Vererbung oder Interfaces.","points":1,"category":"SOLID"},{"id":"q5","type":"single-choice","question":"Was ist Technical Debt (Technische Schulden)?","options":["Kosten f√ºr zuk√ºnftige Wartung durch suboptimale Implementierung","Finanzielle Schulden f√ºr Software-Lizenzen","Zeitverz√∂gerung bei der Projektabgabe","Fehlende Dokumentation im Projekt"],"correctAnswer":"Kosten f√ºr zuk√ºnftige Wartung durch suboptimale Implementierung","explanation":"Technical Debt bezeichnet die impliziten Kosten zus√§tzlicher Arbeit, die durch schnelle, suboptimale L√∂sungen entstehen. Wie finanzielle Schulden m√ºssen technische Schulden mit 'Zinsen' (erh√∂hter Wartungsaufwand) zur√ºckgezahlt werden. Bewusste technische Schulden k√∂nnen sinnvoll sein, sollten aber dokumentiert und geplant abgebaut werden.","points":1,"category":"Code-Qualit√§t"},{"id":"q6","type":"multiple-choice","question":"Welche Aussagen √ºber Clean Code sind korrekt? (Mehrere Antworten m√∂glich)","options":["Code sollte selbsterkl√§rend sein","Funktionen sollten nur eine Aufgabe erf√ºllen","Kommentare sind immer besser als verst√§ndlicher Code","Lange Funktionsnamen sind immer schlecht"],"correctAnswer":["Code sollte selbsterkl√§rend sein","Funktionen sollten nur eine Aufgabe erf√ºllen"],"explanation":"Clean Code sollte selbsterkl√§rend sein und Funktionen sollten nur eine Aufgabe erf√ºllen (Single Responsibility). Guter Code braucht weniger Kommentare, da er durch aussagekr√§ftige Namen selbsterkl√§rend ist. Lange, aber beschreibende Funktionsnamen sind besser als kurze, unklare Namen.","points":2,"category":"Clean Code"},{"id":"q7","type":"single-choice","question":"Was ist der Hauptzweck von Code-Reviews?","options":["Qualit√§tssicherung und Wissensaustausch im Team","Kontrolle der Arbeitszeit von Entwicklern","Automatische Fehlererkennung","Erstellung von Dokumentation"],"correctAnswer":"Qualit√§tssicherung und Wissensaustausch im Team","explanation":"Code-Reviews dienen der Qualit√§tssicherung (Fehler finden, Best Practices durchsetzen) und dem Wissensaustausch im Team. Sie f√∂rdern gemeinsames Code-Verst√§ndnis, verbessern die Code-Qualit√§t und helfen, Fehler fr√ºh zu erkennen. Sie sind kein Kontrollmechanismus f√ºr Entwickler.","points":1,"category":"Code-Reviews"},{"id":"q8","type":"single-choice","question":"Was bedeutet Refactoring?","options":["Umstrukturierung von Code ohne √Ñnderung des externen Verhaltens","Hinzuf√ºgen neuer Features","Behebung von Bugs","L√∂schen von altem Code"],"correctAnswer":"Umstrukturierung von Code ohne √Ñnderung des externen Verhaltens","explanation":"Refactoring ist die Umstrukturierung von Code zur Verbesserung der internen Struktur, ohne das externe Verhalten zu √§ndern. Ziele sind bessere Lesbarkeit, Wartbarkeit und Performance. Es unterscheidet sich von Bug-Fixes (Verhaltens√§nderung) und neuen Features (Funktionserweiterung).","points":1,"category":"Refactoring"},{"id":"q9","type":"code","question":"Welches SOLID-Prinzip wird in diesem Code verletzt?","code":"class User {\\n  saveToDatabase() { /* DB-Logik */ }\\n  sendEmail() { /* Email-Logik */ }\\n  validateData() { /* Validierung */ }\\n  generateReport() { /* Report */ }\\n}","language":"javascript","options":["Single Responsibility Principle","Open/Closed Principle","Liskov Substitution Principle","Dependency Inversion Principle"],"correctAnswer":"Single Responsibility Principle","explanation":"Die User-Klasse verletzt das Single Responsibility Principle, da sie mehrere Verantwortlichkeiten hat: Datenbankzugriff, Email-Versand, Validierung und Report-Generierung. Jede dieser Aufgaben sollte in eine separate Klasse ausgelagert werden, sodass jede Klasse nur einen Grund zur √Ñnderung hat.","points":2,"category":"SOLID"},{"id":"q10","type":"single-choice","question":"Was ist ein Code Smell?","options":["Ein Hinweis auf potenzielle Probleme im Code","Ein Syntaxfehler","Ein Sicherheitsleck","Eine veraltete Bibliothek"],"correctAnswer":"Ein Hinweis auf potenzielle Probleme im Code","explanation":"Ein Code Smell ist ein Symptom im Code, das auf tieferliegende Probleme hinweist. Beispiele: Duplizierter Code, zu lange Methoden, zu viele Parameter, unklare Namen. Code Smells sind keine Fehler, aber Indikatoren f√ºr schlechtes Design, das refaktoriert werden sollte.","points":1,"category":"Code-Qualit√§t"},{"id":"q11","type":"multiple-choice","question":"Welche sind typische Code Smells? (Mehrere Antworten m√∂glich)","options":["Duplizierter Code (Duplicated Code)","Lange Methoden (Long Method)","Verwendung von Kommentaren","Zu viele Parameter (Long Parameter List)"],"correctAnswer":["Duplizierter Code (Duplicated Code)","Lange Methoden (Long Method)","Zu viele Parameter (Long Parameter List)"],"explanation":"Duplizierter Code, lange Methoden und zu viele Parameter sind klassische Code Smells. Kommentare an sich sind kein Code Smell, aber √ºberm√§√üige Kommentare k√∂nnen darauf hinweisen, dass der Code nicht selbsterkl√§rend genug ist. Das DRY-Prinzip (Don't Repeat Yourself) hilft gegen duplizierten Code.","points":2,"category":"Code-Qualit√§t"},{"id":"q12","type":"single-choice","question":"Was bedeutet das DRY-Prinzip?","options":["Don't Repeat Yourself - Vermeide Code-Duplikation","Do Review Yearly - J√§hrliche Code-Reviews","Debug Regularly Yourself - Regelm√§√üiges Debugging","Document Requirements Yearly - J√§hrliche Anforderungsdokumentation"],"correctAnswer":"Don't Repeat Yourself - Vermeide Code-Duplikation","explanation":"DRY (Don't Repeat Yourself) besagt, dass jedes Wissen im System eine eindeutige, autoritative Repr√§sentation haben sollte. Code-Duplikation f√ºhrt zu Wartungsproblemen, da √Ñnderungen an mehreren Stellen vorgenommen werden m√ºssen. Stattdessen sollte gemeinsame Logik in wiederverwendbare Funktionen oder Klassen ausgelagert werden.","points":1,"category":"Clean Code"},{"id":"q13","type":"single-choice","question":"Was ist das Liskov Substitution Principle (LSP)?","options":["Objekte einer Oberklasse sollten durch Objekte ihrer Unterklassen ersetzbar sein","Klassen sollten nur von einer Oberklasse erben","Unterklassen sollten immer gr√∂√üer als Oberklassen sein","Vererbung sollte vermieden werden"],"correctAnswer":"Objekte einer Oberklasse sollten durch Objekte ihrer Unterklassen ersetzbar sein","explanation":"Das Liskov Substitution Principle besagt, dass Objekte einer Oberklasse durch Objekte ihrer Unterklassen ersetzbar sein sollten, ohne die Korrektheit des Programms zu beeintr√§chtigen. Unterklassen m√ºssen den Vertrag der Oberklasse einhalten und d√ºrfen keine st√§rkeren Vorbedingungen oder schw√§cheren Nachbedingungen haben.","points":1,"category":"SOLID"},{"id":"q14","type":"code","question":"Was ist das Problem mit diesem Code aus Clean-Code-Perspektive?","code":"function calc(a, b, c) {\\n  if (c == 1) return a + b;\\n  if (c == 2) return a - b;\\n  if (c == 3) return a * b;\\n  if (c == 4) return a / b;\\n}","language":"javascript","options":["Unklare Parameternamen und Magic Numbers","Zu viele if-Statements","Fehlende Fehlerbehandlung","Alle genannten Punkte"],"correctAnswer":"Alle genannten Punkte","explanation":"Der Code hat mehrere Probleme: 1) Unklare Namen (a, b, c sagen nichts aus), 2) Magic Numbers (1, 2, 3, 4 ohne Bedeutung), 3) Fehlende Fehlerbehandlung f√ºr ung√ºltige c-Werte. Besser w√§ren aussagekr√§ftige Namen, Enums oder Konstanten f√ºr Operationen, und ein default-Fall oder Fehlerbehandlung.","points":2,"category":"Clean Code"},{"id":"q15","type":"single-choice","question":"Was ist das Interface Segregation Principle (ISP)?","options":["Clients sollten nicht von Interfaces abh√§ngen, die sie nicht nutzen","Interfaces sollten immer klein sein","Jede Klasse sollte nur ein Interface implementieren","Interfaces sollten keine Methoden haben"],"correctAnswer":"Clients sollten nicht von Interfaces abh√§ngen, die sie nicht nutzen","explanation":"Das Interface Segregation Principle besagt, dass Clients nicht gezwungen werden sollten, von Interfaces abzuh√§ngen, die sie nicht nutzen. Besser sind mehrere spezifische Interfaces als ein gro√ües, allgemeines Interface. Dies verhindert, dass Klassen Methoden implementieren m√ºssen, die sie nicht ben√∂tigen.","points":1,"category":"SOLID"},{"id":"q16","type":"single-choice","question":"Was ist das Dependency Inversion Principle (DIP)?","options":["High-Level-Module sollten nicht von Low-Level-Modulen abh√§ngen, beide sollten von Abstraktionen abh√§ngen","Abh√§ngigkeiten sollten immer vermieden werden","Low-Level-Module sollten High-Level-Module steuern","Alle Klassen sollten voneinander abh√§ngig sein"],"correctAnswer":"High-Level-Module sollten nicht von Low-Level-Modulen abh√§ngen, beide sollten von Abstraktionen abh√§ngen","explanation":"Das Dependency Inversion Principle besagt, dass High-Level-Module nicht von Low-Level-Modulen abh√§ngen sollten. Beide sollten von Abstraktionen (Interfaces) abh√§ngen. Dies erm√∂glicht Flexibilit√§t und Testbarkeit durch Dependency Injection und macht den Code weniger gekoppelt.","points":1,"category":"SOLID"},{"id":"q17","type":"multiple-choice","question":"Welche Metriken werden h√§ufig zur Messung der Code-Qualit√§t verwendet? (Mehrere Antworten m√∂glich)","options":["Code Coverage (Testabdeckung)","Zyklomatische Komplexit√§t","Anzahl der Codezeilen","Anzahl der Entwickler"],"correctAnswer":["Code Coverage (Testabdeckung)","Zyklomatische Komplexit√§t"],"explanation":"Code Coverage (Prozentsatz des getesteten Codes) und zyklomatische Komplexit√§t (Anzahl unabh√§ngiger Pfade durch den Code) sind wichtige Qualit√§tsmetriken. Die reine Anzahl der Codezeilen ist kein guter Qualit√§tsindikator (weniger Code kann besser sein). Die Anzahl der Entwickler ist keine Code-Qualit√§tsmetrik.","points":2,"category":"Code-Qualit√§t"},{"id":"q18","type":"single-choice","question":"Was ist der Hauptvorteil von Pair Programming f√ºr die Code-Qualit√§t?","options":["Kontinuierliche Code-Review und Wissensaustausch","Doppelte Entwicklungsgeschwindigkeit","Weniger Meetings erforderlich","Automatische Fehlererkennung"],"correctAnswer":"Kontinuierliche Code-Review und Wissensaustausch","explanation":"Pair Programming bietet kontinuierliche Code-Review (ein Entwickler schreibt, der andere √ºberpr√ºft) und f√∂rdert Wissensaustausch. Dies f√ºhrt zu h√∂herer Code-Qualit√§t, weniger Bugs und besserem gemeinsamen Verst√§ndnis. Die Entwicklungsgeschwindigkeit ist nicht doppelt so hoch, aber die Qualit√§t ist oft besser.","points":1,"category":"Code-Reviews"},{"id":"q19","type":"single-choice","question":"Was ist der Zweck von Static Code Analysis Tools?","options":["Automatische Erkennung von Code-Problemen ohne Ausf√ºhrung","Ausf√ºhrung von Unit-Tests","Erstellung von Dokumentation","Deployment von Anwendungen"],"correctAnswer":"Automatische Erkennung von Code-Problemen ohne Ausf√ºhrung","explanation":"Static Code Analysis Tools (z.B. SonarQube, ESLint, PMD) analysieren den Quellcode ohne ihn auszuf√ºhren. Sie erkennen potenzielle Bugs, Code Smells, Sicherheitsl√ºcken, Stil-Verst√∂√üe und Komplexit√§tsprobleme. Sie erg√§nzen Tests, ersetzen sie aber nicht.","points":1,"category":"Code-Qualit√§t"},{"id":"q20","type":"multiple-choice","question":"Welche Faktoren beeinflussen die Wartbarkeit von Software? (Mehrere Antworten m√∂glich)","options":["Code-Lesbarkeit und Verst√§ndlichkeit","Modularer Aufbau und lose Kopplung","Umfangreiche Dokumentation","Anzahl der verwendeten Programmiersprachen"],"correctAnswer":["Code-Lesbarkeit und Verst√§ndlichkeit","Modularer Aufbau und lose Kopplung","Umfangreiche Dokumentation"],"explanation":"Wartbarkeit wird durch lesbare, verst√§ndliche Code, modularen Aufbau mit loser Kopplung und gute Dokumentation verbessert. Die Anzahl der Programmiersprachen kann die Wartbarkeit erschweren, ist aber nicht per se ein Qualit√§tsfaktor. Wichtiger sind klare Strukturen, Tests und selbsterkl√§render Code.","points":2,"category":"Wartbarkeit"}]`),Qt=["Qualit√§t","ISO 25010","Clean Code","SOLID","Refactoring","Code-Reviews","Technical Debt"],Zt="2025-01-10",Jt={id:xt,moduleId:Vt,title:Ft,description:Kt,category:Wt,difficulty:jt,examRelevance:$t,timeLimit:Gt,passingScore:Ut,questions:Ht,tags:Qt,lastUpdated:Zt},Yt=Object.freeze(Object.defineProperty({__proto__:null,category:Wt,default:Jt,description:Kt,difficulty:jt,examRelevance:$t,id:xt,lastUpdated:Zt,moduleId:Vt,passingScore:Ut,questions:Ht,tags:Qt,timeLimit:Gt,title:Ft},Symbol.toStringTag,{value:"Module"})),Xt="bp-03-tdd-quiz",ei="bp-03-tdd",ni="Test Driven Development (TDD) Quiz",ti="Teste dein Wissen √ºber Test Driven Development (TDD)",ii="BP-03",ri="intermediate",si="high",ai=10,oi=70,li=[{id:"q1",type:"single-choice",question:"Was ist Test Driven Development (TDD)?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],ui=["TDD","Testing","Unit Tests","Red-Green-Refactor","Softwarequalit√§t","Neu 2025"],ci={id:Xt,moduleId:ei,title:ni,description:ti,category:ii,difficulty:ri,examRelevance:si,timeLimit:ai,passingScore:oi,questions:li,tags:ui},di=Object.freeze(Object.defineProperty({__proto__:null,category:ii,default:ci,description:ti,difficulty:ri,examRelevance:si,id:Xt,moduleId:ei,passingScore:oi,questions:li,tags:ui,timeLimit:ai,title:ni},Symbol.toStringTag,{value:"Module"})),mi="bp-04-architecture-patterns-quiz",gi="bp-04-architecture-patterns",hi="Architektur-Pattern Quiz",pi="Teste dein Wissen √ºber Architektur-Pattern wie Layered Architecture, Microservices, Monolith, Event-Driven Architecture und CQRS",fi="BP-04",bi="advanced",ki="high",zi=25,vi=70,yi=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist das Hauptmerkmal einer Layered Architecture (Schichtenarchitektur)?","options":["Die Anwendung ist in horizontale Schichten unterteilt, wobei jede Schicht nur mit der direkt darunterliegenden kommuniziert","Alle Komponenten k√∂nnen direkt miteinander kommunizieren ohne Einschr√§nkungen","Die Anwendung besteht aus vielen kleinen, unabh√§ngigen Services","Daten werden in verschiedenen Datenbanken gespeichert"],"correctAnswer":"Die Anwendung ist in horizontale Schichten unterteilt, wobei jede Schicht nur mit der direkt darunterliegenden kommuniziert","explanation":"Bei der Layered Architecture wird die Anwendung in Schichten (z.B. Presentation, Business Logic, Data Access) unterteilt. Jede Schicht hat eine spezifische Verantwortung und kommuniziert nur mit der direkt darunterliegenden Schicht, was die Wartbarkeit und Testbarkeit verbessert.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Welche Schichten geh√∂ren typischerweise zu einer klassischen 3-Tier-Architektur?","options":["Presentation Layer, Business Logic Layer, Data Access Layer","Frontend, Backend, Database, Cache","Controller, Service, Repository, Entity","View, Model, ViewModel"],"correctAnswer":"Presentation Layer, Business Logic Layer, Data Access Layer","explanation":"Die klassische 3-Tier-Architektur besteht aus Presentation Layer (UI), Business Logic Layer (Gesch√§ftslogik) und Data Access Layer (Datenzugriff). Diese Trennung erm√∂glicht eine klare Separation of Concerns.","points":1,"category":"Grundlagen"},{"id":"q3","type":"multiple-choice","question":"Welche Vorteile bietet eine Microservices-Architektur? (Mehrere Antworten m√∂glich)","options":["Unabh√§ngige Skalierbarkeit einzelner Services","Technologie-Unabh√§ngigkeit f√ºr jeden Service","Einfachere Entwicklung als Monolith","Geringere Komplexit√§t im Deployment"],"correctAnswer":["Unabh√§ngige Skalierbarkeit einzelner Services","Technologie-Unabh√§ngigkeit f√ºr jeden Service"],"explanation":"Microservices erm√∂glichen unabh√§ngige Skalierung und Technologiewahl pro Service. Allerdings sind sie komplexer in Entwicklung und Deployment als Monolithen. Die erh√∂hte Flexibilit√§t geht mit erh√∂hter Komplexit√§t einher.","points":2,"category":"Microservices"},{"id":"q4","type":"single-choice","question":"Was ist ein Monolith in der Softwarearchitektur?","options":["Eine Anwendung, bei der alle Komponenten in einem einzigen, zusammenh√§ngenden Codebase und Deployment-Einheit existieren","Eine Anwendung, die nur eine einzige Funktion erf√ºllt","Eine Anwendung, die auf einem einzigen Server l√§uft","Eine Anwendung ohne Datenbank"],"correctAnswer":"Eine Anwendung, bei der alle Komponenten in einem einzigen, zusammenh√§ngenden Codebase und Deployment-Einheit existieren","explanation":"Ein Monolith ist eine Anwendung, bei der alle Funktionalit√§ten in einer einzigen Codebase zusammengefasst sind und als eine Einheit deployed werden. Dies vereinfacht die Entwicklung f√ºr kleinere Projekte, kann aber bei Wachstum zu Problemen f√ºhren.","points":1,"category":"Grundlagen"},{"id":"q5","type":"single-choice","question":"Was ist das Hauptprinzip einer Event-Driven Architecture?","options":["Komponenten kommunizieren asynchron √ºber Events, die Zustands√§nderungen repr√§sentieren","Alle Anfragen werden synchron verarbeitet","Events werden in einer relationalen Datenbank gespeichert","Jeder Service hat seine eigene Event-Loop"],"correctAnswer":"Komponenten kommunizieren asynchron √ºber Events, die Zustands√§nderungen repr√§sentieren","explanation":"Bei Event-Driven Architecture kommunizieren Komponenten durch das Senden und Empfangen von Events. Dies erm√∂glicht lose Kopplung und asynchrone Verarbeitung. Producer erzeugen Events, Consumer reagieren darauf.","points":1,"category":"Event-Driven"},{"id":"q6","type":"multiple-choice","question":"Welche Nachteile hat eine Microservices-Architektur? (Mehrere Antworten m√∂glich)","options":["Erh√∂hte Komplexit√§t in der Kommunikation zwischen Services","Schwierigere Fehlersuche √ºber Service-Grenzen hinweg","Geringere Performance als Monolithen","H√∂herer Overhead durch Netzwerkkommunikation"],"correctAnswer":["Erh√∂hte Komplexit√§t in der Kommunikation zwischen Services","Schwierigere Fehlersuche √ºber Service-Grenzen hinweg","H√∂herer Overhead durch Netzwerkkommunikation"],"explanation":"Microservices bringen erh√∂hte Komplexit√§t mit sich: Service-Kommunikation, verteiltes Debugging und Netzwerk-Overhead sind Herausforderungen. Performance ist nicht generell schlechter, h√§ngt aber von der Implementierung ab.","points":2,"category":"Microservices"},{"id":"q7","type":"single-choice","question":"Was bedeutet CQRS (Command Query Responsibility Segregation)?","options":["Trennung von Schreib- (Command) und Lese-Operationen (Query) in separate Modelle","Verwendung von SQL-Queries f√ºr alle Datenbankoperationen","Caching von Query-Ergebnissen","Verwendung von Command-Line-Tools f√ºr Deployment"],"correctAnswer":"Trennung von Schreib- (Command) und Lese-Operationen (Query) in separate Modelle","explanation":"CQRS trennt Schreib- und Leseoperationen in separate Modelle. Commands √§ndern den Zustand, Queries lesen Daten. Dies erm√∂glicht unterschiedliche Optimierungen f√ºr Lese- und Schreibvorg√§nge und kann die Performance verbessern.","points":1,"category":"CQRS"},{"id":"q8","type":"single-choice","question":"Welches Pattern wird h√§ufig mit CQRS kombiniert?","options":["Event Sourcing","Singleton Pattern","Factory Pattern","Observer Pattern"],"correctAnswer":"Event Sourcing","explanation":"CQRS wird h√§ufig mit Event Sourcing kombiniert. Dabei werden alle Zustands√§nderungen als Events gespeichert. Commands erzeugen Events, die den Schreib-Zustand √§ndern, w√§hrend Queries auf optimierte Read-Models zugreifen.","points":1,"category":"CQRS"},{"id":"q9","type":"single-choice","question":"Was ist ein API Gateway in einer Microservices-Architektur?","options":["Ein zentraler Einstiegspunkt, der Anfragen an die entsprechenden Microservices weiterleitet","Eine Datenbank f√ºr API-Dokumentation","Ein Tool zum Testen von APIs","Eine Firewall f√ºr Microservices"],"correctAnswer":"Ein zentraler Einstiegspunkt, der Anfragen an die entsprechenden Microservices weiterleitet","explanation":"Ein API Gateway ist ein zentraler Einstiegspunkt f√ºr Client-Anfragen. Es leitet Requests an die entsprechenden Microservices weiter, kann Authentifizierung, Rate Limiting und Request-Aggregation √ºbernehmen und vereinfacht die Client-Kommunikation.","points":1,"category":"Microservices"},{"id":"q10","type":"multiple-choice","question":"Welche Kommunikationsmuster werden in Microservices verwendet? (Mehrere Antworten m√∂glich)","options":["Synchrone REST-API-Aufrufe","Asynchrone Message Queues","Event Streaming","Direkte Datenbank-Zugriffe zwischen Services"],"correctAnswer":["Synchrone REST-API-Aufrufe","Asynchrone Message Queues","Event Streaming"],"explanation":"Microservices kommunizieren √ºber REST-APIs (synchron), Message Queues wie RabbitMQ (asynchron) oder Event Streaming wie Kafka. Direkte Datenbank-Zugriffe zwischen Services sollten vermieden werden, da sie zu enger Kopplung f√ºhren.","points":2,"category":"Microservices"},{"id":"q11","type":"single-choice","question":"Was ist der Hauptvorteil einer Hexagonal Architecture (Ports and Adapters)?","options":["Die Gesch√§ftslogik ist unabh√§ngig von externen Frameworks und Technologien","Die Anwendung hat sechs Schichten","Alle Komponenten sind hexagonal angeordnet","Die Datenbank ist im Zentrum der Architektur"],"correctAnswer":"Die Gesch√§ftslogik ist unabh√§ngig von externen Frameworks und Technologien","explanation":"Hexagonal Architecture (auch Ports and Adapters genannt) platziert die Gesch√§ftslogik im Zentrum und isoliert sie von externen Abh√§ngigkeiten. Ports definieren Schnittstellen, Adapters implementieren diese f√ºr konkrete Technologien. Dies erh√∂ht Testbarkeit und Flexibilit√§t.","points":1,"category":"Architektur-Patterns"},{"id":"q12","type":"single-choice","question":"Wann sollte man einen Monolithen einer Microservices-Architektur vorziehen?","options":["Bei kleinen Teams und einfachen Anwendungen mit √ºberschaubarer Komplexit√§t","Bei sehr gro√üen, komplexen Anwendungen","Wenn viele verschiedene Technologien verwendet werden sollen","Wenn unabh√§ngige Skalierung einzelner Komponenten erforderlich ist"],"correctAnswer":"Bei kleinen Teams und einfachen Anwendungen mit √ºberschaubarer Komplexit√§t","explanation":"Monolithen sind f√ºr kleine Teams und einfache Anwendungen oft die bessere Wahl. Sie sind einfacher zu entwickeln, zu testen und zu deployen. Microservices lohnen sich erst bei gr√∂√üerer Komplexit√§t, wenn die Vorteile die erh√∂hte Komplexit√§t rechtfertigen.","points":1,"category":"Architektur-Entscheidungen"},{"id":"q13","type":"single-choice","question":"Was ist Service Discovery in einer Microservices-Architektur?","options":["Ein Mechanismus, mit dem Services dynamisch die Netzwerkadressen anderer Services finden k√∂nnen","Ein Tool zum Entdecken von Sicherheitsl√ºcken in Services","Eine Methode zum Testen von Services","Ein Pattern f√ºr Datenbank-Zugriffe"],"correctAnswer":"Ein Mechanismus, mit dem Services dynamisch die Netzwerkadressen anderer Services finden k√∂nnen","explanation":"Service Discovery erm√∂glicht es Services, dynamisch die Adressen anderer Services zu finden. Tools wie Consul, Eureka oder Kubernetes-DNS registrieren Services und erm√∂glichen deren Auffindbarkeit, was besonders wichtig ist, wenn Services dynamisch skaliert werden.","points":1,"category":"Microservices"},{"id":"q14","type":"multiple-choice","question":"Welche Eigenschaften hat eine Event-Driven Architecture? (Mehrere Antworten m√∂glich)","options":["Lose Kopplung zwischen Komponenten","Asynchrone Kommunikation","Synchrone Request-Response-Muster","Hohe Skalierbarkeit"],"correctAnswer":["Lose Kopplung zwischen Komponenten","Asynchrone Kommunikation","Hohe Skalierbarkeit"],"explanation":"Event-Driven Architecture zeichnet sich durch lose Kopplung, asynchrone Kommunikation und hohe Skalierbarkeit aus. Producer und Consumer kennen sich nicht direkt. Synchrone Request-Response-Muster sind nicht typisch f√ºr Event-Driven Architecture.","points":2,"category":"Event-Driven"},{"id":"q15","type":"single-choice","question":"Was ist ein Bounded Context im Domain-Driven Design (DDD)?","options":["Eine explizite Grenze, innerhalb derer ein bestimmtes Domain-Modell g√ºltig ist","Eine Begrenzung der Anzahl von Klassen in einem Modul","Ein zeitliches Limit f√ºr Transaktionen","Eine Sicherheitsgrenze zwischen Services"],"correctAnswer":"Eine explizite Grenze, innerhalb derer ein bestimmtes Domain-Modell g√ºltig ist","explanation":"Ein Bounded Context definiert eine klare Grenze, innerhalb derer ein Domain-Modell konsistent ist. Verschiedene Bounded Contexts k√∂nnen unterschiedliche Modelle f√ºr dieselben Konzepte haben. Dies ist wichtig f√ºr die Strukturierung von Microservices.","points":1,"category":"DDD"},{"id":"q16","type":"single-choice","question":"Was ist der Zweck eines Circuit Breaker Patterns in Microservices?","options":["Verhinderung von Kaskadenausf√§llen durch Unterbrechung von Aufrufen zu fehlerhaften Services","Absicherung der Stromversorgung","Verschl√ºsselung der Kommunikation","Load Balancing zwischen Services"],"correctAnswer":"Verhinderung von Kaskadenausf√§llen durch Unterbrechung von Aufrufen zu fehlerhaften Services","explanation":"Das Circuit Breaker Pattern verhindert, dass ein fehlerhafter Service das gesamte System lahmlegt. Wenn ein Service wiederholt fehlschl√§gt, wird der 'Circuit' ge√∂ffnet und weitere Aufrufe werden sofort abgelehnt, bis der Service wieder verf√ºgbar ist.","points":1,"category":"Resilience"},{"id":"q17","type":"multiple-choice","question":"Welche Vorteile bietet eine Layered Architecture? (Mehrere Antworten m√∂glich)","options":["Klare Separation of Concerns","Einfachere Testbarkeit einzelner Schichten","Automatische Skalierung","Bessere Wartbarkeit durch strukturierte Organisation"],"correctAnswer":["Klare Separation of Concerns","Einfachere Testbarkeit einzelner Schichten","Bessere Wartbarkeit durch strukturierte Organisation"],"explanation":"Layered Architecture bietet klare Trennung von Verantwortlichkeiten, einfachere Testbarkeit (Schichten k√∂nnen isoliert getestet werden) und bessere Wartbarkeit. Automatische Skalierung ist kein direkter Vorteil der Schichtenarchitektur.","points":2,"category":"Layered Architecture"},{"id":"q18","type":"single-choice","question":"Was ist Eventual Consistency in verteilten Systemen?","options":["Das System erreicht einen konsistenten Zustand, aber nicht sofort nach einer √Ñnderung","Das System ist immer sofort konsistent","Das System ist niemals konsistent","Konsistenz wird nur einmal pro Tag hergestellt"],"correctAnswer":"Das System erreicht einen konsistenten Zustand, aber nicht sofort nach einer √Ñnderung","explanation":"Eventual Consistency bedeutet, dass das System nach einer √Ñnderung nicht sofort, aber letztendlich einen konsistenten Zustand erreicht. Dies ist typisch f√ºr verteilte Systeme und Event-Driven Architectures, wo √Ñnderungen asynchron propagiert werden.","points":1,"category":"Verteilte Systeme"},{"id":"q19","type":"single-choice","question":"Was ist der Hauptunterschied zwischen Orchestration und Choreography in Microservices?","options":["Orchestration hat einen zentralen Koordinator, Choreography basiert auf dezentraler Event-basierter Kommunikation","Orchestration ist schneller als Choreography","Choreography verwendet immer REST-APIs","Orchestration ist nur f√ºr kleine Systeme geeignet"],"correctAnswer":"Orchestration hat einen zentralen Koordinator, Choreography basiert auf dezentraler Event-basierter Kommunikation","explanation":"Bei Orchestration koordiniert ein zentraler Service (Orchestrator) die Interaktionen zwischen Services. Bei Choreography kommunizieren Services dezentral √ºber Events ohne zentralen Koordinator. Beide Ans√§tze haben Vor- und Nachteile.","points":1,"category":"Microservices"},{"id":"q20","type":"multiple-choice","question":"Welche Faktoren sollten bei der Wahl zwischen Monolith und Microservices ber√ºcksichtigt werden? (Mehrere Antworten m√∂glich)","options":["Teamgr√∂√üe und -struktur","Komplexit√§t der Anwendung","Skalierungsanforderungen","Farbe des Firmenlogos"],"correctAnswer":["Teamgr√∂√üe und -struktur","Komplexit√§t der Anwendung","Skalierungsanforderungen"],"explanation":"Die Architektur-Entscheidung sollte auf Teamgr√∂√üe (gro√üe Teams profitieren von Microservices), Anwendungskomplexit√§t (komplexe Dom√§nen rechtfertigen Microservices) und Skalierungsanforderungen (unterschiedliche Skalierung einzelner Komponenten) basieren. Das Firmenlogo ist irrelevant.","points":2,"category":"Architektur-Entscheidungen"}]`),Si=["Architektur","Layered Architecture","Microservices","Monolith","Event-Driven","CQRS","Software-Design"],wi="2025-01-10",Ai={id:mi,moduleId:gi,title:hi,description:pi,category:fi,difficulty:bi,examRelevance:ki,timeLimit:zi,passingScore:vi,questions:yi,tags:Si,lastUpdated:wi},Ei=Object.freeze(Object.defineProperty({__proto__:null,category:fi,default:Ai,description:pi,difficulty:bi,examRelevance:ki,id:mi,lastUpdated:wi,moduleId:gi,passingScore:vi,questions:yi,tags:Si,timeLimit:zi,title:hi},Symbol.toStringTag,{value:"Module"})),_i="bp-04-design-patterns-quiz",Di="bp-04-design-patterns",Pi="Design Patterns (Entwurfsmuster) Quiz",Ti="Teste dein Wissen √ºber Design Patterns wie Singleton, Factory, Observer, Strategy, Decorator und MVC",qi="BP-04",Ri="advanced",Ii="high",Ci=25,Li=70,Mi=JSON.parse('[{"id":"q1","type":"single-choice","question":"Was sind Design Patterns (Entwurfsmuster)?","options":["Bew√§hrte L√∂sungsschablonen f√ºr wiederkehrende Entwurfsprobleme in der Softwareentwicklung","Konkrete Code-Bibliotheken, die direkt in Projekte eingebunden werden","Programmiersprachen-spezifische Syntax-Regeln","Automatisch generierte Code-Templates durch IDEs"],"correctAnswer":"Bew√§hrte L√∂sungsschablonen f√ºr wiederkehrende Entwurfsprobleme in der Softwareentwicklung","explanation":"Design Patterns sind bew√§hrte, wiederverwendbare L√∂sungsschablonen f√ºr h√§ufig auftretende Probleme im Software-Design. Sie sind sprachunabh√§ngig und beschreiben die Struktur und Interaktion von Klassen und Objekten. Die Gang of Four (GoF) haben 23 klassische Patterns dokumentiert.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Welches Problem l√∂st das Singleton-Pattern?","options":["Es stellt sicher, dass von einer Klasse nur genau eine Instanz existiert und bietet einen globalen Zugriffspunkt","Es erm√∂glicht die Erstellung mehrerer unabh√§ngiger Instanzen einer Klasse","Es teilt eine Klasse in mehrere kleinere Klassen auf","Es erstellt Kopien von bestehenden Objekten"],"correctAnswer":"Es stellt sicher, dass von einer Klasse nur genau eine Instanz existiert und bietet einen globalen Zugriffspunkt","explanation":"Das Singleton-Pattern garantiert, dass eine Klasse nur eine einzige Instanz hat und stellt einen globalen Zugriffspunkt darauf bereit. Typische Anwendungsf√§lle sind Konfigurationsmanager, Logger oder Datenbankverbindungen. Der Konstruktor ist privat, und die Instanz wird √ºber eine statische Methode bereitgestellt.","points":1,"category":"Creational Patterns"},{"id":"q3","type":"code","question":"Welches Design Pattern wird in diesem Java-Code verwendet?","code":"public class DatabaseConnection {\\n    private static DatabaseConnection instance;\\n    \\n    private DatabaseConnection() {}\\n    \\n    public static DatabaseConnection getInstance() {\\n        if (instance == null) {\\n            instance = new DatabaseConnection();\\n        }\\n        return instance;\\n    }\\n}","language":"java","options":["Singleton Pattern","Factory Pattern","Builder Pattern","Prototype Pattern"],"correctAnswer":"Singleton Pattern","explanation":"Der Code zeigt ein klassisches Singleton Pattern: privater Konstruktor, statische Instanzvariable und eine getInstance()-Methode, die sicherstellt, dass nur eine Instanz existiert. Dies ist die Lazy-Initialization-Variante des Singleton Patterns.","points":2,"category":"Creational Patterns"},{"id":"q4","type":"single-choice","question":"Was ist der Hauptzweck des Factory-Patterns?","options":["Die Objekterzeugung von der konkreten Implementierung zu entkoppeln","Objekte zu kopieren und zu klonen","Mehrere Objekte zu einer Einheit zusammenzufassen","Die Schnittstelle eines Objekts zu √§ndern"],"correctAnswer":"Die Objekterzeugung von der konkreten Implementierung zu entkoppeln","explanation":"Das Factory Pattern (Factory Method oder Abstract Factory) entkoppelt die Objekterzeugung vom Client-Code. Der Client ruft eine Factory-Methode auf, ohne die konkrete Klasse zu kennen. Dies erh√∂ht die Flexibilit√§t und erm√∂glicht es, neue Typen hinzuzuf√ºgen, ohne bestehenden Code zu √§ndern (Open-Closed-Principle).","points":1,"category":"Creational Patterns"},{"id":"q5","type":"multiple-choice","question":"Welche Aussagen √ºber das Observer-Pattern sind korrekt? (Mehrere Antworten m√∂glich)","options":["Es definiert eine 1-zu-n-Abh√§ngigkeit zwischen Objekten","Wenn sich der Zustand des Subject √§ndert, werden alle Observer automatisch benachrichtigt","Observer m√ºssen die konkrete Klasse des Subject kennen","Es wird auch als Publish-Subscribe-Pattern bezeichnet"],"correctAnswer":["Es definiert eine 1-zu-n-Abh√§ngigkeit zwischen Objekten","Wenn sich der Zustand des Subject √§ndert, werden alle Observer automatisch benachrichtigt","Es wird auch als Publish-Subscribe-Pattern bezeichnet"],"explanation":"Das Observer Pattern definiert eine 1-zu-n-Beziehung: Ein Subject (Observable) benachrichtigt automatisch alle registrierten Observer √ºber Zustands√§nderungen. Observer arbeiten √ºber Interfaces und m√ºssen die konkrete Subject-Klasse nicht kennen. Das Pattern wird auch Publish-Subscribe genannt und ist die Basis f√ºr Event-Systeme.","points":2,"category":"Behavioral Patterns"},{"id":"q6","type":"single-choice","question":"In welcher Situation ist das Strategy-Pattern besonders n√ºtzlich?","options":["Wenn verschiedene Algorithmen austauschbar sein sollen, ohne den Client-Code zu √§ndern","Wenn ein Objekt nur einmal erstellt werden soll","Wenn die Schnittstelle eines Objekts angepasst werden muss","Wenn komplexe Objekte schrittweise aufgebaut werden sollen"],"correctAnswer":"Wenn verschiedene Algorithmen austauschbar sein sollen, ohne den Client-Code zu √§ndern","explanation":"Das Strategy Pattern kapselt verschiedene Algorithmen in separate Klassen und macht sie austauschbar. Der Client kann zur Laufzeit zwischen verschiedenen Strategien wechseln, ohne seinen Code zu √§ndern. Beispiel: Verschiedene Sortieralgorithmen oder Zahlungsmethoden in einem E-Commerce-System.","points":1,"category":"Behavioral Patterns"},{"id":"q7","type":"single-choice","question":"Was ist der Hauptunterschied zwischen dem Decorator- und dem Adapter-Pattern?","options":["Decorator erweitert die Funktionalit√§t eines Objekts, Adapter passt eine Schnittstelle an","Decorator passt Schnittstellen an, Adapter erweitert Funktionalit√§t","Beide Patterns sind identisch in ihrer Funktionsweise","Decorator erstellt neue Objekte, Adapter modifiziert bestehende"],"correctAnswer":"Decorator erweitert die Funktionalit√§t eines Objekts, Adapter passt eine Schnittstelle an","explanation":"Das Decorator Pattern f√ºgt einem Objekt dynamisch zus√§tzliche Verantwortlichkeiten hinzu, ohne die Schnittstelle zu √§ndern. Das Adapter Pattern hingegen wandelt die Schnittstelle einer Klasse in eine andere um, die der Client erwartet. Decorator erweitert, Adapter √ºbersetzt.","points":1,"category":"Structural Patterns"},{"id":"q8","type":"code","question":"Welches Pattern wird hier implementiert?","code":"interface PaymentStrategy {\\n    void pay(double amount);\\n}\\n\\nclass CreditCardPayment implements PaymentStrategy {\\n    public void pay(double amount) {\\n        System.out.println(\\"Paid \\" + amount + \\" with credit card\\");\\n    }\\n}\\n\\nclass PayPalPayment implements PaymentStrategy {\\n    public void pay(double amount) {\\n        System.out.println(\\"Paid \\" + amount + \\" with PayPal\\");\\n    }\\n}","language":"java","options":["Strategy Pattern","Factory Pattern","Observer Pattern","Template Method Pattern"],"correctAnswer":"Strategy Pattern","explanation":"Der Code zeigt das Strategy Pattern: Ein Interface (PaymentStrategy) definiert die Strategie, und verschiedene konkrete Klassen implementieren unterschiedliche Algorithmen (Zahlungsmethoden). Der Client kann zur Laufzeit zwischen den Strategien wechseln.","points":2,"category":"Behavioral Patterns"},{"id":"q9","type":"single-choice","question":"Was beschreibt das MVC-Pattern (Model-View-Controller)?","options":["Ein Architekturmuster zur Trennung von Daten, Pr√§sentation und Steuerungslogik","Ein Pattern zur Erstellung von Datenbankobjekten","Ein Pattern zur Verwaltung von Netzwerkverbindungen","Ein Pattern zur Optimierung von Algorithmen"],"correctAnswer":"Ein Architekturmuster zur Trennung von Daten, Pr√§sentation und Steuerungslogik","explanation":"MVC trennt eine Anwendung in drei Komponenten: Model (Daten und Gesch√§ftslogik), View (Pr√§sentation) und Controller (Steuerung und Vermittlung). Diese Trennung erh√∂ht die Wartbarkeit und erm√∂glicht es, verschiedene Views f√ºr dasselbe Model zu verwenden. MVC ist die Basis vieler Web-Frameworks.","points":1,"category":"Architectural Patterns"},{"id":"q10","type":"multiple-choice","question":"Welche Patterns geh√∂ren zu den Creational Patterns (Erzeugungsmustern)? (Mehrere Antworten m√∂glich)","options":["Singleton","Factory Method","Observer","Decorator"],"correctAnswer":["Singleton","Factory Method"],"explanation":"Creational Patterns befassen sich mit der Objekterzeugung: Singleton (eine Instanz), Factory Method (flexible Objekterzeugung), Abstract Factory, Builder und Prototype. Observer ist ein Behavioral Pattern, Decorator ein Structural Pattern.","points":2,"category":"Grundlagen"},{"id":"q11","type":"single-choice","question":"Welches Problem l√∂st das Adapter-Pattern?","options":["Es erm√∂glicht die Zusammenarbeit von Klassen mit inkompatiblen Schnittstellen","Es erstellt Kopien von Objekten","Es f√ºgt Objekten dynamisch neue Funktionalit√§t hinzu","Es verwaltet den Zugriff auf ein Objekt"],"correctAnswer":"Es erm√∂glicht die Zusammenarbeit von Klassen mit inkompatiblen Schnittstellen","explanation":"Das Adapter Pattern (auch Wrapper genannt) wandelt die Schnittstelle einer Klasse in eine andere um, die der Client erwartet. Es erm√∂glicht die Zusammenarbeit von Klassen, die sonst aufgrund inkompatibler Schnittstellen nicht zusammenarbeiten k√∂nnten. Beispiel: Integration von Legacy-Code in neue Systeme.","points":1,"category":"Structural Patterns"},{"id":"q12","type":"single-choice","question":"Was ist der Hauptvorteil des Dependency Injection Patterns?","options":["Reduzierung der Kopplung zwischen Klassen und bessere Testbarkeit","Schnellere Ausf√ºhrungsgeschwindigkeit des Codes","Automatische Speicherverwaltung","Vereinfachung der Benutzeroberfl√§che"],"correctAnswer":"Reduzierung der Kopplung zwischen Klassen und bessere Testbarkeit","explanation":"Dependency Injection (DI) ist ein Pattern, bei dem Abh√§ngigkeiten von au√üen injiziert werden, statt sie intern zu erzeugen. Dies reduziert die Kopplung, erh√∂ht die Flexibilit√§t und verbessert die Testbarkeit, da Abh√§ngigkeiten leicht durch Mock-Objekte ersetzt werden k√∂nnen. DI ist ein Kernprinzip moderner Frameworks.","points":1,"category":"Architectural Patterns"},{"id":"q13","type":"code","question":"Was macht dieser Decorator-Code?","code":"interface Coffee {\\n    double getCost();\\n    String getDescription();\\n}\\n\\nclass SimpleCoffee implements Coffee {\\n    public double getCost() { return 2.0; }\\n    public String getDescription() { return \\"Simple coffee\\"; }\\n}\\n\\nclass MilkDecorator implements Coffee {\\n    private Coffee coffee;\\n    public MilkDecorator(Coffee c) { this.coffee = c; }\\n    public double getCost() { return coffee.getCost() + 0.5; }\\n    public String getDescription() { return coffee.getDescription() + \\", milk\\"; }\\n}","language":"java","options":["Erweitert ein Coffee-Objekt dynamisch um zus√§tzliche Eigenschaften (Milch)","Erstellt eine neue Kaffeesorte","Passt die Schnittstelle von Coffee an","Verwaltet mehrere Coffee-Instanzen"],"correctAnswer":"Erweitert ein Coffee-Objekt dynamisch um zus√§tzliche Eigenschaften (Milch)","explanation":"Der Code zeigt das Decorator Pattern: MilkDecorator umh√ºllt ein Coffee-Objekt und f√ºgt zus√§tzliche Funktionalit√§t hinzu (Milch, h√∂herer Preis). Mehrere Decorators k√∂nnen verschachtelt werden (z.B. Milch + Zucker). Dies ist flexibler als Vererbung, da Kombinationen zur Laufzeit erstellt werden k√∂nnen.","points":3,"category":"Structural Patterns"},{"id":"q14","type":"single-choice","question":"Welches Pattern verwendet eine Schnittstelle, um eine Familie von Algorithmen zu definieren, wobei jeder Algorithmus in einer eigenen Klasse gekapselt ist?","options":["Strategy Pattern","Template Method Pattern","Command Pattern","State Pattern"],"correctAnswer":"Strategy Pattern","explanation":"Das Strategy Pattern definiert eine Familie von Algorithmen, kapselt jeden in einer eigenen Klasse und macht sie austauschbar. Das Template Method Pattern hingegen definiert das Skelett eines Algorithmus in einer Basisklasse. Command kapselt Anfragen als Objekte, State kapselt zustandsabh√§ngiges Verhalten.","points":1,"category":"Behavioral Patterns"},{"id":"q15","type":"multiple-choice","question":"Welche Aussagen √ºber das Facade-Pattern sind korrekt? (Mehrere Antworten m√∂glich)","options":["Es bietet eine vereinfachte Schnittstelle zu einem komplexen Subsystem","Es reduziert die Kopplung zwischen Client und Subsystem","Es ersetzt alle Klassen des Subsystems durch eine einzige Klasse","Es macht komplexe Systeme einfacher nutzbar"],"correctAnswer":["Es bietet eine vereinfachte Schnittstelle zu einem komplexen Subsystem","Es reduziert die Kopplung zwischen Client und Subsystem","Es macht komplexe Systeme einfacher nutzbar"],"explanation":"Das Facade Pattern bietet eine einheitliche, vereinfachte Schnittstelle zu einem komplexen Subsystem. Es reduziert die Kopplung und macht das System einfacher nutzbar, ersetzt aber nicht die Subsystem-Klassen. Clients k√∂nnen weiterhin direkt auf das Subsystem zugreifen, wenn n√∂tig.","points":2,"category":"Structural Patterns"},{"id":"q16","type":"single-choice","question":"Was ist der Hauptunterschied zwischen dem Factory Method Pattern und dem Abstract Factory Pattern?","options":["Factory Method erstellt ein Produkt, Abstract Factory erstellt Familien verwandter Produkte","Factory Method ist komplexer als Abstract Factory","Abstract Factory verwendet keine Vererbung","Factory Method kann nur Singleton-Objekte erstellen"],"correctAnswer":"Factory Method erstellt ein Produkt, Abstract Factory erstellt Familien verwandter Produkte","explanation":"Factory Method definiert eine Schnittstelle zum Erstellen eines Objekts, l√§sst aber Unterklassen entscheiden, welche Klasse instanziiert wird. Abstract Factory bietet eine Schnittstelle zum Erstellen von Familien verwandter oder abh√§ngiger Objekte, ohne deren konkrete Klassen zu spezifizieren. Abstract Factory ist umfassender.","points":1,"category":"Creational Patterns"},{"id":"q17","type":"single-choice","question":"Welches Pattern wird typischerweise verwendet, um Undo/Redo-Funktionalit√§t zu implementieren?","options":["Command Pattern","Observer Pattern","Strategy Pattern","Decorator Pattern"],"correctAnswer":"Command Pattern","explanation":"Das Command Pattern kapselt Anfragen als Objekte und erm√∂glicht es, Operationen zu parametrisieren, in Warteschlangen zu stellen und zu protokollieren. Durch Speicherung der Command-Objekte kann eine Undo/Redo-Funktionalit√§t implementiert werden. Jedes Command-Objekt kennt seine execute()- und undo()-Methoden.","points":1,"category":"Behavioral Patterns"},{"id":"q18","type":"multiple-choice","question":"Welche Vorteile bieten Design Patterns? (Mehrere Antworten m√∂glich)","options":["Wiederverwendbare L√∂sungen f√ºr h√§ufige Probleme","Verbesserte Kommunikation zwischen Entwicklern durch gemeinsames Vokabular","Automatische Code-Generierung","Bew√§hrte Best Practices und erh√∂hte Wartbarkeit"],"correctAnswer":["Wiederverwendbare L√∂sungen f√ºr h√§ufige Probleme","Verbesserte Kommunikation zwischen Entwicklern durch gemeinsames Vokabular","Bew√§hrte Best Practices und erh√∂hte Wartbarkeit"],"explanation":"Design Patterns bieten bew√§hrte, wiederverwendbare L√∂sungen, verbessern die Kommunikation (gemeinsame Sprache), f√∂rdern Best Practices und erh√∂hen die Wartbarkeit. Sie generieren keinen Code automatisch, sondern sind konzeptuelle Vorlagen, die manuell implementiert werden m√ºssen.","points":2,"category":"Grundlagen"},{"id":"q19","type":"single-choice","question":"Welches Pattern beschreibt die Gang of Four (GoF) NICHT?","options":["Dependency Injection","Singleton","Observer","Factory Method"],"correctAnswer":"Dependency Injection","explanation":"Die Gang of Four (Gamma, Helm, Johnson, Vlissides) beschrieben 1994 in ihrem Buch 23 klassische Design Patterns, darunter Singleton, Observer und Factory Method. Dependency Injection wurde sp√§ter popul√§r und ist kein GoF-Pattern, obwohl es auf √§hnlichen Prinzipien basiert.","points":1,"category":"Grundlagen"},{"id":"q20","type":"single-choice","question":"In welcher Kategorie wird das Template Method Pattern eingeordnet?","options":["Behavioral Patterns (Verhaltensmuster)","Creational Patterns (Erzeugungsmuster)","Structural Patterns (Strukturmuster)","Architectural Patterns (Architekturmuster)"],"correctAnswer":"Behavioral Patterns (Verhaltensmuster)","explanation":"Das Template Method Pattern geh√∂rt zu den Behavioral Patterns. Es definiert das Skelett eines Algorithmus in einer Methode und delegiert einige Schritte an Unterklassen. Unterklassen k√∂nnen bestimmte Schritte √ºberschreiben, ohne die Struktur des Algorithmus zu √§ndern. Dies ist ein Verhaltensmuster, da es die Interaktion zwischen Objekten regelt.","points":1,"category":"Behavioral Patterns"}]'),Oi=["Design Patterns","OOP","Software-Design","Gang of Four","Singleton","Factory","Observer","Strategy","Decorator","MVC"],Ni="2025-01-10",Bi={id:_i,moduleId:Di,title:Pi,description:Ti,category:qi,difficulty:Ri,examRelevance:Ii,timeLimit:Ci,passingScore:Li,questions:Mi,tags:Oi,lastUpdated:Ni},xi=Object.freeze(Object.defineProperty({__proto__:null,category:qi,default:Bi,description:Ti,difficulty:Ri,examRelevance:Ii,id:_i,lastUpdated:Ni,moduleId:Di,passingScore:Li,questions:Mi,tags:Oi,timeLimit:Ci,title:Pi},Symbol.toStringTag,{value:"Module"})),Vi="bp-04-programming-paradigms-quiz",Fi="bp-04-programming-paradigms",Ki="Programmierparadigmen Quiz",Wi="Teste dein Wissen √ºber Programmierparadigmen wie OOP, Funktionale Programmierung, Imperative und Deklarative Programmierung",ji="BP-04",$i="intermediate",Gi="high",Ui=25,Hi=70,Qi=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist das Hauptmerkmal der objektorientierten Programmierung (OOP)?","options":["Daten und Funktionen werden in Objekten zusammengefasst (Encapsulation)","Alle Funktionen sind global verf√ºgbar","Daten werden immer in Arrays gespeichert","Es gibt keine Variablen"],"correctAnswer":"Daten und Funktionen werden in Objekten zusammengefasst (Encapsulation)","explanation":"OOP basiert auf dem Konzept der Kapselung (Encapsulation), bei dem Daten und die darauf operierenden Methoden in Objekten zusammengefasst werden. Dies f√∂rdert Modularit√§t und Wiederverwendbarkeit.","points":1,"category":"OOP-Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche Prinzipien geh√∂ren zur objektorientierten Programmierung? (Mehrere Antworten m√∂glich)","options":["Encapsulation (Kapselung)","Inheritance (Vererbung)","Polymorphism (Polymorphie)","Immutability (Unver√§nderlichkeit)"],"correctAnswer":["Encapsulation (Kapselung)","Inheritance (Vererbung)","Polymorphism (Polymorphie)"],"explanation":"Die vier Grundprinzipien der OOP sind Encapsulation, Inheritance, Polymorphism und Abstraction. Immutability ist ein Konzept der funktionalen Programmierung, nicht der OOP.","points":2,"category":"OOP-Grundlagen"},{"id":"q3","type":"single-choice","question":"Was ist funktionale Programmierung?","options":["Ein Paradigma, das auf der Auswertung mathematischer Funktionen basiert und ver√§nderbare Zust√§nde vermeidet","Programmierung mit vielen Funktionen","Programmierung ohne Klassen","Programmierung nur mit Arrays"],"correctAnswer":"Ein Paradigma, das auf der Auswertung mathematischer Funktionen basiert und ver√§nderbare Zust√§nde vermeidet","explanation":"Funktionale Programmierung behandelt Berechnungen als Auswertung mathematischer Funktionen. Sie vermeidet ver√§nderbare Zust√§nde und Seiteneffekte. Funktionen sind First-Class Citizens und k√∂nnen als Parameter √ºbergeben werden.","points":1,"category":"Funktionale Programmierung"},{"id":"q4","type":"code","question":"Welches Paradigma wird in diesem Code-Beispiel verwendet?","code":"const numbers = [1, 2, 3, 4, 5];\\nconst doubled = numbers.map(n => n * 2);","language":"javascript","options":["Funktionale Programmierung","Objektorientierte Programmierung","Imperative Programmierung","Prozedurale Programmierung"],"correctAnswer":"Funktionale Programmierung","explanation":"Dieser Code verwendet map(), eine Higher-Order Function, die typisch f√ºr funktionale Programmierung ist. Die Transformation erfolgt ohne Seiteneffekte und das Original-Array bleibt unver√§ndert (Immutability).","points":2,"category":"Funktionale Programmierung"},{"id":"q5","type":"single-choice","question":"Was ist der Unterschied zwischen imperativer und deklarativer Programmierung?","options":["Imperativ beschreibt WIE etwas gemacht wird, deklarativ beschreibt WAS gemacht werden soll","Imperativ ist schneller als deklarativ","Deklarativ verwendet keine Variablen","Imperativ ist nur f√ºr Datenbanken geeignet"],"correctAnswer":"Imperativ beschreibt WIE etwas gemacht wird, deklarativ beschreibt WAS gemacht werden soll","explanation":"Imperative Programmierung beschreibt Schritt f√ºr Schritt, wie ein Problem gel√∂st wird (z.B. for-Schleifen). Deklarative Programmierung beschreibt, was erreicht werden soll, ohne die Details zu spezifizieren (z.B. SQL-Queries, map/filter).","points":1,"category":"Paradigmen-Vergleich"},{"id":"q6","type":"code","question":"Welches Paradigma wird in diesem Code-Beispiel verwendet?","code":"int sum = 0;\\nfor (int i = 0; i < numbers.length; i++) {\\n    sum += numbers[i];\\n}","language":"java","options":["Imperative Programmierung","Funktionale Programmierung","Deklarative Programmierung","Logische Programmierung"],"correctAnswer":"Imperative Programmierung","explanation":"Dieser Code ist imperativ: Er beschreibt Schritt f√ºr Schritt, wie die Summe berechnet wird (Initialisierung, Schleife, Akkumulation). Der Zustand (sum) wird w√§hrend der Ausf√ºhrung ver√§ndert.","points":2,"category":"Imperative Programmierung"},{"id":"q7","type":"single-choice","question":"Was ist eine Pure Function in der funktionalen Programmierung?","options":["Eine Funktion ohne Seiteneffekte, die bei gleichen Eingaben immer das gleiche Ergebnis liefert","Eine Funktion, die nur einmal aufgerufen werden kann","Eine Funktion ohne Parameter","Eine Funktion, die nur Zahlen verarbeitet"],"correctAnswer":"Eine Funktion ohne Seiteneffekte, die bei gleichen Eingaben immer das gleiche Ergebnis liefert","explanation":"Pure Functions haben zwei Eigenschaften: 1) Sie haben keine Seiteneffekte (√§ndern keinen externen Zustand), 2) Sie sind deterministisch (gleiche Eingabe ‚Üí gleiche Ausgabe). Dies macht sie vorhersagbar und einfach zu testen.","points":1,"category":"Funktionale Programmierung"},{"id":"q8","type":"multiple-choice","question":"Welche Konzepte geh√∂ren zur funktionalen Programmierung? (Mehrere Antworten m√∂glich)","options":["Immutability (Unver√§nderlichkeit)","Higher-Order Functions","Vererbung","First-Class Functions"],"correctAnswer":["Immutability (Unver√§nderlichkeit)","Higher-Order Functions","First-Class Functions"],"explanation":"Funktionale Programmierung nutzt Immutability (Daten werden nicht ver√§ndert), Higher-Order Functions (Funktionen als Parameter/R√ºckgabewerte) und First-Class Functions (Funktionen als Werte). Vererbung ist ein OOP-Konzept.","points":2,"category":"Funktionale Programmierung"},{"id":"q9","type":"single-choice","question":"Was ist Polymorphism (Polymorphie) in der OOP?","options":["Die F√§higkeit, dass Objekte verschiedener Klassen √ºber eine gemeinsame Schnittstelle angesprochen werden k√∂nnen","Die M√∂glichkeit, mehrere Klassen zu erstellen","Das Erstellen von vielen Objekten","Die Verwendung von mehreren Programmiersprachen"],"correctAnswer":"Die F√§higkeit, dass Objekte verschiedener Klassen √ºber eine gemeinsame Schnittstelle angesprochen werden k√∂nnen","explanation":"Polymorphie erm√∂glicht es, Objekte verschiedener Klassen √ºber eine gemeinsame Schnittstelle zu verwenden. Beispiel: Verschiedene Tier-Klassen k√∂nnen alle eine makeSound()-Methode haben, die unterschiedlich implementiert ist.","points":1,"category":"OOP-Konzepte"},{"id":"q10","type":"code","question":"Welches OOP-Prinzip wird hier demonstriert?","code":"class Animal {\\n    makeSound() { }\\n}\\nclass Dog extends Animal {\\n    makeSound() { return 'Wuff'; }\\n}\\nclass Cat extends Animal {\\n    makeSound() { return 'Miau'; }\\n}","language":"javascript","options":["Polymorphism und Inheritance","Nur Encapsulation","Nur Abstraction","Composition"],"correctAnswer":"Polymorphism und Inheritance","explanation":"Dieser Code zeigt Inheritance (Dog und Cat erben von Animal) und Polymorphism (beide √ºberschreiben makeSound() mit eigener Implementierung). Verschiedene Objekte k√∂nnen √ºber die gemeinsame Animal-Schnittstelle verwendet werden.","points":2,"category":"OOP-Konzepte"},{"id":"q11","type":"single-choice","question":"Was ist eine Higher-Order Function?","options":["Eine Funktion, die andere Funktionen als Parameter nimmt oder als Ergebnis zur√ºckgibt","Eine Funktion mit vielen Parametern","Eine Funktion, die sehr komplex ist","Eine Funktion, die nur Zahlen verarbeitet"],"correctAnswer":"Eine Funktion, die andere Funktionen als Parameter nimmt oder als Ergebnis zur√ºckgibt","explanation":"Higher-Order Functions sind Funktionen, die andere Funktionen als Argumente nehmen oder zur√ºckgeben. Beispiele: map(), filter(), reduce(). Sie sind ein zentrales Konzept der funktionalen Programmierung.","points":1,"category":"Funktionale Programmierung"},{"id":"q12","type":"code","question":"Ist diese Funktion eine Pure Function?","code":"let counter = 0;\\nfunction increment() {\\n    counter++;\\n    return counter;\\n}","language":"javascript","options":["Nein, sie hat Seiteneffekte (ver√§ndert externe Variable)","Ja, sie ist eine Pure Function","Ja, weil sie einen Wert zur√ºckgibt","Nein, weil sie zu einfach ist"],"correctAnswer":"Nein, sie hat Seiteneffekte (ver√§ndert externe Variable)","explanation":"Diese Funktion ist KEINE Pure Function, weil sie die externe Variable 'counter' ver√§ndert (Seiteneffekt) und bei jedem Aufruf ein anderes Ergebnis liefert (nicht deterministisch). Pure Functions d√ºrfen keinen externen Zustand √§ndern.","points":2,"category":"Funktionale Programmierung"},{"id":"q13","type":"single-choice","question":"Was ist Encapsulation (Kapselung) in der OOP?","options":["Das Verbergen interner Implementierungsdetails und Bereitstellen einer √∂ffentlichen Schnittstelle","Das Erstellen vieler kleiner Klassen","Das Verwenden von Schleifen","Das Speichern von Daten in Arrays"],"correctAnswer":"Das Verbergen interner Implementierungsdetails und Bereitstellen einer √∂ffentlichen Schnittstelle","explanation":"Encapsulation bedeutet, dass interne Details einer Klasse verborgen werden (private) und nur √ºber eine definierte Schnittstelle (public methods) zug√§nglich sind. Dies sch√ºtzt die Datenintegrit√§t und erm√∂glicht √Ñnderungen der Implementierung ohne externe Auswirkungen.","points":1,"category":"OOP-Konzepte"},{"id":"q14","type":"multiple-choice","question":"Welche Aussagen √ºber deklarative Programmierung sind korrekt? (Mehrere Antworten m√∂glich)","options":["SQL ist ein Beispiel f√ºr deklarative Programmierung","HTML/CSS sind deklarativ","Man beschreibt das gew√ºnschte Ergebnis, nicht den Weg dorthin","Deklarative Programmierung ist immer langsamer als imperative"],"correctAnswer":["SQL ist ein Beispiel f√ºr deklarative Programmierung","HTML/CSS sind deklarativ","Man beschreibt das gew√ºnschte Ergebnis, nicht den Weg dorthin"],"explanation":"SQL, HTML und CSS sind deklarativ: Man beschreibt WAS man will (SELECT * FROM users WHERE age > 18), nicht WIE es gemacht wird. Performance h√§ngt von der Implementierung ab, nicht vom Paradigma.","points":2,"category":"Deklarative Programmierung"},{"id":"q15","type":"single-choice","question":"Was ist Inheritance (Vererbung) in der OOP?","options":["Ein Mechanismus, bei dem eine Klasse Eigenschaften und Methoden von einer anderen Klasse √ºbernimmt","Das Kopieren von Code zwischen Dateien","Das Teilen von Variablen zwischen Funktionen","Das Erstellen von Backup-Kopien"],"correctAnswer":"Ein Mechanismus, bei dem eine Klasse Eigenschaften und Methoden von einer anderen Klasse √ºbernimmt","explanation":"Inheritance erm√∂glicht es, dass eine Klasse (Subclass/Child) Eigenschaften und Methoden von einer anderen Klasse (Superclass/Parent) erbt. Dies f√∂rdert Code-Wiederverwendung und erm√∂glicht hierarchische Klassenstrukturen.","points":1,"category":"OOP-Konzepte"},{"id":"q16","type":"code","question":"Welcher Ansatz ist funktionaler?","code":"// Ansatz A:\\nconst result = numbers.filter(n => n > 5).map(n => n * 2);\\n\\n// Ansatz B:\\nconst result = [];\\nfor (let n of numbers) {\\n    if (n > 5) result.push(n * 2);\\n}","language":"javascript","options":["Ansatz A ist funktionaler","Ansatz B ist funktionaler","Beide sind gleich funktional","Keiner ist funktional"],"correctAnswer":"Ansatz A ist funktionaler","explanation":"Ansatz A ist funktionaler: Er verwendet Higher-Order Functions (filter, map), vermeidet Mutation (kein push) und ist deklarativ. Ansatz B ist imperativ: Er beschreibt Schritt f√ºr Schritt, wie das Ergebnis erstellt wird, und mutiert das Array.","points":2,"category":"Paradigmen-Vergleich"},{"id":"q17","type":"single-choice","question":"Was ist Abstraction (Abstraktion) in der OOP?","options":["Das Hervorheben wesentlicher Eigenschaften und Verbergen unwichtiger Details","Das Erstellen abstrakter Kunstwerke","Das Verwenden von vielen Variablen","Das Schreiben von langem Code"],"correctAnswer":"Das Hervorheben wesentlicher Eigenschaften und Verbergen unwichtiger Details","explanation":"Abstraction bedeutet, komplexe Realit√§t auf wesentliche Eigenschaften zu reduzieren. In der OOP werden abstrakte Klassen und Interfaces verwendet, um gemeinsame Eigenschaften zu definieren, w√§hrend Implementierungsdetails verborgen bleiben.","points":1,"category":"OOP-Konzepte"},{"id":"q18","type":"multiple-choice","question":"Welche Vorteile bietet funktionale Programmierung? (Mehrere Antworten m√∂glich)","options":["Einfachere Testbarkeit durch Pure Functions","Bessere Parallelisierbarkeit durch Immutability","Automatische Fehlerkorrektur","Weniger Bugs durch Vermeidung von Seiteneffekten"],"correctAnswer":["Einfachere Testbarkeit durch Pure Functions","Bessere Parallelisierbarkeit durch Immutability","Weniger Bugs durch Vermeidung von Seiteneffekten"],"explanation":"Funktionale Programmierung bietet einfachere Tests (Pure Functions sind deterministisch), bessere Parallelisierung (keine Race Conditions bei Immutability) und weniger Bugs (keine unerwarteten Seiteneffekte). Automatische Fehlerkorrektur gibt es nicht.","points":2,"category":"Funktionale Programmierung"},{"id":"q19","type":"single-choice","question":"Was ist der Hauptunterschied zwischen Composition und Inheritance?","options":["Composition verwendet 'has-a' Beziehungen, Inheritance verwendet 'is-a' Beziehungen","Composition ist langsamer als Inheritance","Inheritance ist moderner als Composition","Composition funktioniert nur in funktionalen Sprachen"],"correctAnswer":"Composition verwendet 'has-a' Beziehungen, Inheritance verwendet 'is-a' Beziehungen","explanation":"Inheritance modelliert 'is-a' Beziehungen (Ein Hund IST ein Tier). Composition modelliert 'has-a' Beziehungen (Ein Auto HAT einen Motor). Composition wird oft bevorzugt, da sie flexibler ist und lose Kopplung f√∂rdert ('Favor composition over inheritance').","points":1,"category":"OOP-Konzepte"},{"id":"q20","type":"multiple-choice","question":"Welche Programmiersprachen unterst√ºtzen mehrere Paradigmen? (Mehrere Antworten m√∂glich)","options":["JavaScript (OOP und funktional)","Python (OOP, funktional und imperativ)","Java (OOP und funktional ab Java 8)","SQL (nur deklarativ)"],"correctAnswer":["JavaScript (OOP und funktional)","Python (OOP, funktional und imperativ)","Java (OOP und funktional ab Java 8)"],"explanation":"JavaScript, Python und Java sind Multi-Paradigmen-Sprachen, die verschiedene Programmierstile unterst√ºtzen. SQL ist prim√§r deklarativ, obwohl moderne SQL-Dialekte auch prozedurale Elemente haben. Die Wahl des Paradigmas h√§ngt vom Problem ab.","points":2,"category":"Paradigmen-Vergleich"}]`),Zi=["Programmierparadigmen","OOP","Funktionale Programmierung","Imperative Programmierung","Deklarative Programmierung"],Ji="2025-01-10",Yi={id:Vi,moduleId:Fi,title:Ki,description:Wi,category:ji,difficulty:$i,examRelevance:Gi,timeLimit:Ui,passingScore:Hi,questions:Qi,tags:Zi,lastUpdated:Ji},Xi=Object.freeze(Object.defineProperty({__proto__:null,category:ji,default:Yi,description:Wi,difficulty:$i,examRelevance:Gi,id:Vi,lastUpdated:Ji,moduleId:Fi,passingScore:Hi,questions:Qi,tags:Zi,timeLimit:Ui,title:Ki},Symbol.toStringTag,{value:"Module"})),er="bp-04-scrum-quiz",nr="bp-04-scrum",tr="Scrum - Agiles Projektmanagement Quiz",ir="Teste dein Wissen √ºber Scrum - Agiles Projektmanagement",rr="BP-04",sr="intermediate",ar="high",or=10,lr=70,ur=[{id:"q1",type:"single-choice",question:"Was ist Scrum - Agiles Projektmanagement?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],cr=["Scrum","Agile","Projektmanagement","Sprint","Product Owner","Scrum Master","Neu 2025"],dr={id:er,moduleId:nr,title:tr,description:ir,category:rr,difficulty:sr,examRelevance:ar,timeLimit:or,passingScore:lr,questions:ur,tags:cr},mr=Object.freeze(Object.defineProperty({__proto__:null,category:rr,default:dr,description:ir,difficulty:sr,examRelevance:ar,id:er,moduleId:nr,passingScore:lr,questions:ur,tags:cr,timeLimit:or,title:tr},Symbol.toStringTag,{value:"Module"})),gr="bp-05-data-structures-quiz",hr="bp-05-data-structures",pr="Datenstrukturen Quiz",fr="Teste dein Wissen √ºber grundlegende Datenstrukturen wie Arrays, Listen, Stacks, Queues, Trees, Graphs und Hash-Tables",br="BP-05",kr="intermediate",zr="high",vr=25,yr=70,Sr=JSON.parse('[{"id":"q1","type":"single-choice","question":"Was ist der Hauptvorteil eines Arrays gegen√ºber einer verketteten Liste?","options":["Direkter Zugriff auf Elemente √ºber den Index in O(1)","Dynamische Gr√∂√üenanpassung ohne Speicher-Reallokation","Effizientes Einf√ºgen am Anfang in O(1)","Geringerer Speicherverbrauch durch fehlende Pointer"],"correctAnswer":"Direkter Zugriff auf Elemente √ºber den Index in O(1)","explanation":"Arrays bieten konstanten Zugriff O(1) auf Elemente √ºber den Index, da die Speicheradressen berechenbar sind. Verkettete Listen ben√∂tigen O(n) f√ºr den Zugriff, da sie sequenziell durchlaufen werden m√ºssen. Dynamische Gr√∂√üenanpassung und effizientes Einf√ºgen am Anfang sind Vorteile von Listen.","points":1,"category":"Arrays"},{"id":"q2","type":"single-choice","question":"Welche Zeitkomplexit√§t hat das Einf√ºgen eines Elements am Anfang einer einfach verketteten Liste?","options":["O(1)","O(log n)","O(n)","O(n¬≤)"],"correctAnswer":"O(1)","explanation":"Das Einf√ºgen am Anfang einer einfach verketteten Liste ist O(1), da nur der Head-Pointer angepasst werden muss. Das neue Element zeigt auf den alten Head, und der Head-Pointer zeigt auf das neue Element. Es ist keine Iteration durch die Liste erforderlich.","points":1,"category":"Listen"},{"id":"q3","type":"single-choice","question":"Was ist das LIFO-Prinzip bei einem Stack?","options":["Last In, First Out - das zuletzt eingef√ºgte Element wird zuerst entfernt","Last In, Final Out - das letzte Element bleibt am l√§ngsten","Linear Input, Fast Output - schneller Zugriff auf alle Elemente","Limited Input, Fixed Output - begrenzte Anzahl von Operationen"],"correctAnswer":"Last In, First Out - das zuletzt eingef√ºgte Element wird zuerst entfernt","explanation":"LIFO (Last In, First Out) bedeutet, dass das zuletzt auf den Stack gelegte Element als erstes wieder entfernt wird. Dies entspricht einem Stapel von Tellern: Der oberste Teller (zuletzt hinzugef√ºgt) wird zuerst genommen. Die Operationen push() und pop() arbeiten beide am oberen Ende des Stacks.","points":1,"category":"Stack"},{"id":"q4","type":"code","question":"Was gibt dieser Stack-Code aus?","code":"Stack<Integer> stack = new Stack<>();\\nstack.push(10);\\nstack.push(20);\\nstack.push(30);\\nstack.pop();\\nSystem.out.println(stack.peek());","language":"java","options":["20","30","10","Fehler: Stack ist leer"],"correctAnswer":"20","explanation":"Der Stack enth√§lt nach den push-Operationen [10, 20, 30] (30 oben). pop() entfernt 30, sodass [10, 20] √ºbrig bleibt. peek() gibt das oberste Element zur√ºck, ohne es zu entfernen, also 20. Die Ausgabe ist daher 20.","points":2,"category":"Stack"},{"id":"q5","type":"single-choice","question":"Was ist das FIFO-Prinzip bei einer Queue?","options":["First In, First Out - das zuerst eingef√ºgte Element wird zuerst entfernt","Fast In, Fast Out - schnelle Ein- und Ausgabe","Fixed Input, Flexible Output - feste Eingabe, variable Ausgabe","Forward Input, Forward Output - vorw√§rts gerichtete Verarbeitung"],"correctAnswer":"First In, First Out - das zuerst eingef√ºgte Element wird zuerst entfernt","explanation":"FIFO (First In, First Out) bedeutet, dass das zuerst eingef√ºgte Element auch zuerst wieder entfernt wird. Dies entspricht einer Warteschlange: Wer zuerst kommt, wird zuerst bedient. Die Operationen enqueue() f√ºgt am Ende hinzu, dequeue() entfernt vom Anfang.","points":1,"category":"Queue"},{"id":"q6","type":"multiple-choice","question":"Welche Aussagen √ºber verkettete Listen sind korrekt? (Mehrere Antworten m√∂glich)","options":["Einf√ºgen und L√∂schen am Anfang ist O(1)","Zugriff auf ein Element √ºber Index ist O(1)","Dynamische Gr√∂√üenanpassung ohne Reallokation m√∂glich","Ben√∂tigen zus√§tzlichen Speicher f√ºr Pointer/Referenzen"],"correctAnswer":["Einf√ºgen und L√∂schen am Anfang ist O(1)","Dynamische Gr√∂√üenanpassung ohne Reallokation m√∂glich","Ben√∂tigen zus√§tzlichen Speicher f√ºr Pointer/Referenzen"],"explanation":"Verkettete Listen erm√∂glichen O(1) Einf√ºgen/L√∂schen am Anfang durch Anpassung des Head-Pointers. Sie wachsen dynamisch ohne Reallokation, da neue Knoten einzeln allokiert werden. Jeder Knoten ben√∂tigt zus√§tzlichen Speicher f√ºr Pointer. Der Zugriff √ºber Index ist jedoch O(n), da die Liste durchlaufen werden muss.","points":2,"category":"Listen"},{"id":"q7","type":"single-choice","question":"Was ist ein bin√§rer Suchbaum (Binary Search Tree)?","options":["Ein Baum, bei dem jeder Knoten maximal zwei Kinder hat und linke Kinder kleiner, rechte gr√∂√üer sind","Ein Baum mit genau zwei Ebenen f√ºr schnelle Suche","Ein Baum, der nur bin√§re Werte (0 und 1) speichert","Ein Baum, bei dem jeder Knoten genau zwei Kinder haben muss"],"correctAnswer":"Ein Baum, bei dem jeder Knoten maximal zwei Kinder hat und linke Kinder kleiner, rechte gr√∂√üer sind","explanation":"Ein bin√§rer Suchbaum (BST) ist ein bin√§rer Baum mit der Eigenschaft, dass f√ºr jeden Knoten gilt: Alle Werte im linken Teilbaum sind kleiner, alle im rechten Teilbaum sind gr√∂√üer. Dies erm√∂glicht effiziente Suche in O(log n) bei balancierten B√§umen. Knoten k√∂nnen 0, 1 oder 2 Kinder haben.","points":1,"category":"Trees"},{"id":"q8","type":"single-choice","question":"Welche Traversierungsart besucht bei einem bin√§ren Baum zuerst den linken Teilbaum, dann die Wurzel, dann den rechten Teilbaum?","options":["Inorder (LWR)","Preorder (WLR)","Postorder (LRW)","Level-Order (Breitensuche)"],"correctAnswer":"Inorder (LWR)","explanation":"Inorder-Traversierung besucht die Knoten in der Reihenfolge: Linker Teilbaum (L), Wurzel (W), Rechter Teilbaum (R). Bei einem bin√§ren Suchbaum liefert Inorder die Elemente in sortierter Reihenfolge. Preorder ist WLR, Postorder ist LRW, Level-Order besucht ebenenweise.","points":1,"category":"Trees"},{"id":"q9","type":"code","question":"Welche Ausgabe erzeugt diese Inorder-Traversierung?","code":"     5\\n    / \\\\\\n   3   7\\n  / \\\\ / \\\\\\n 2  4 6  8\\n\\nvoid inorder(Node node) {\\n  if (node != null) {\\n    inorder(node.left);\\n    System.out.print(node.value + \\" \\");\\n    inorder(node.right);\\n  }\\n}","language":"java","options":["2 3 4 5 6 7 8","5 3 2 4 7 6 8","2 4 3 6 8 7 5","5 3 7 2 4 6 8"],"correctAnswer":"2 3 4 5 6 7 8","explanation":"Inorder-Traversierung (LWR) besucht zuerst den linken Teilbaum, dann die Wurzel, dann den rechten Teilbaum. F√ºr diesen BST: Linker Teilbaum von 5 ergibt 2,3,4 (Inorder von 3), dann 5, dann rechter Teilbaum ergibt 6,7,8 (Inorder von 7). Ergebnis: 2 3 4 5 6 7 8 - die sortierte Reihenfolge.","points":2,"category":"Trees"},{"id":"q10","type":"single-choice","question":"Was ist eine Hash-Tabelle (Hash Table)?","options":["Eine Datenstruktur, die Schl√ºssel √ºber eine Hash-Funktion auf Array-Indizes abbildet f√ºr O(1) Zugriff","Eine Tabelle, die Daten verschl√ºsselt speichert","Eine sortierte Tabelle f√ºr schnelle bin√§re Suche","Eine Tabelle, die nur eindeutige Werte speichern kann"],"correctAnswer":"Eine Datenstruktur, die Schl√ºssel √ºber eine Hash-Funktion auf Array-Indizes abbildet f√ºr O(1) Zugriff","explanation":"Eine Hash-Tabelle verwendet eine Hash-Funktion, um Schl√ºssel in Array-Indizes umzuwandeln. Dies erm√∂glicht durchschnittlich O(1) Zugriff, Einf√ºgen und L√∂schen. Kollisionen (mehrere Schl√ºssel mit gleichem Hash) werden durch Verkettung oder offene Adressierung behandelt. Hash-Tabellen sind nicht sortiert und verschl√ºsseln keine Daten.","points":1,"category":"Hash-Tables"},{"id":"q11","type":"single-choice","question":"Was ist eine Kollision bei Hash-Tabellen?","options":["Wenn zwei verschiedene Schl√ºssel denselben Hash-Wert erzeugen","Wenn die Hash-Tabelle voll ist","Wenn ein Schl√ºssel nicht gefunden wird","Wenn die Hash-Funktion einen Fehler produziert"],"correctAnswer":"Wenn zwei verschiedene Schl√ºssel denselben Hash-Wert erzeugen","explanation":"Eine Kollision tritt auf, wenn die Hash-Funktion f√ºr zwei verschiedene Schl√ºssel denselben Index berechnet. Dies ist unvermeidbar bei endlichen Hash-Tabellen (Schubfachprinzip). Kollisionen werden durch Verkettung (Chaining) oder offene Adressierung (Open Addressing) gel√∂st. Eine gute Hash-Funktion minimiert Kollisionen.","points":1,"category":"Hash-Tables"},{"id":"q12","type":"multiple-choice","question":"Welche Aussagen √ºber Graphen sind korrekt? (Mehrere Antworten m√∂glich)","options":["Ein Graph besteht aus Knoten (Vertices) und Kanten (Edges)","Ein gerichteter Graph hat Kanten mit Richtung","Ein gewichteter Graph hat Kosten/Gewichte an den Kanten","Jeder Graph muss zusammenh√§ngend sein"],"correctAnswer":["Ein Graph besteht aus Knoten (Vertices) und Kanten (Edges)","Ein gerichteter Graph hat Kanten mit Richtung","Ein gewichteter Graph hat Kosten/Gewichte an den Kanten"],"explanation":"Graphen bestehen aus Knoten (Vertices) und Kanten (Edges). Gerichtete Graphen haben Kanten mit Richtung (A‚ÜíB ‚â† B‚ÜíA), ungerichtete nicht. Gewichtete Graphen haben Kosten an Kanten (z.B. Entfernungen). Graphen m√ºssen nicht zusammenh√§ngend sein - sie k√∂nnen aus mehreren unverbundenen Komponenten bestehen.","points":2,"category":"Graphs"},{"id":"q13","type":"single-choice","question":"Welche Datenstruktur wird typischerweise f√ºr die Breitensuche (BFS) in Graphen verwendet?","options":["Queue","Stack","Priority Queue","Hash-Tabelle"],"correctAnswer":"Queue","explanation":"Breitensuche (BFS) verwendet eine Queue, um Knoten ebenenweise zu besuchen. Startknoten wird in Queue eingef√ºgt, dann werden alle Nachbarn besucht und zur Queue hinzugef√ºgt, bevor zur n√§chsten Ebene √ºbergegangen wird. Das FIFO-Prinzip der Queue garantiert die ebenenweise Verarbeitung. Tiefensuche (DFS) verwendet einen Stack.","points":1,"category":"Graphs"},{"id":"q14","type":"single-choice","question":"Was ist der Unterschied zwischen einer doppelt verketteten Liste und einer einfach verketteten Liste?","options":["Doppelt verkettete Listen haben Pointer zum n√§chsten und vorherigen Knoten","Doppelt verkettete Listen k√∂nnen doppelt so viele Elemente speichern","Doppelt verkettete Listen sind immer sortiert","Doppelt verkettete Listen haben zwei Head-Pointer"],"correctAnswer":"Doppelt verkettete Listen haben Pointer zum n√§chsten und vorherigen Knoten","explanation":"Bei doppelt verketteten Listen hat jeder Knoten zwei Pointer: einen zum n√§chsten (next) und einen zum vorherigen Knoten (prev). Dies erm√∂glicht bidirektionale Traversierung und O(1) L√∂schen eines Knotens, wenn man eine Referenz darauf hat. Der Nachteil ist h√∂herer Speicherverbrauch durch zus√§tzliche Pointer.","points":1,"category":"Listen"},{"id":"q15","type":"code","question":"Was ist die Zeitkomplexit√§t dieser Operation?","code":"// Suche nach einem Element in einem Array\\nint[] arr = new int[n];\\nfor (int i = 0; i < arr.length; i++) {\\n  if (arr[i] == target) {\\n    return i;\\n  }\\n}\\nreturn -1;","language":"java","options":["O(n)","O(1)","O(log n)","O(n¬≤)"],"correctAnswer":"O(n)","explanation":"Die lineare Suche durchl√§uft das Array sequenziell und vergleicht jedes Element mit dem Zielwert. Im schlimmsten Fall (Element nicht vorhanden oder am Ende) werden alle n Elemente durchlaufen. Die Zeitkomplexit√§t ist daher O(n). Bei einem sortierten Array k√∂nnte bin√§re Suche O(log n) erreichen.","points":2,"category":"Arrays"},{"id":"q16","type":"single-choice","question":"Welche Datenstruktur eignet sich am besten f√ºr die Implementierung eines Undo/Redo-Mechanismus?","options":["Stack","Queue","Hash-Tabelle","Bin√§rer Baum"],"correctAnswer":"Stack","explanation":"Ein Stack eignet sich perfekt f√ºr Undo/Redo, da die letzte Aktion zuerst r√ºckg√§ngig gemacht werden soll (LIFO). F√ºr Undo wird ein Stack mit durchgef√ºhrten Aktionen verwendet, f√ºr Redo ein Stack mit r√ºckg√§ngig gemachten Aktionen. push() f√ºgt neue Aktionen hinzu, pop() macht sie r√ºckg√§ngig.","points":1,"category":"Stack"},{"id":"q17","type":"multiple-choice","question":"Welche Operationen haben bei einer balancierten Hash-Tabelle durchschnittlich O(1) Zeitkomplexit√§t? (Mehrere Antworten m√∂glich)","options":["Einf√ºgen (Insert)","Suchen (Search)","L√∂schen (Delete)","Sortieren aller Elemente"],"correctAnswer":["Einf√ºgen (Insert)","Suchen (Search)","L√∂schen (Delete)"],"explanation":"Hash-Tabellen bieten durchschnittlich O(1) f√ºr Insert, Search und Delete, da die Hash-Funktion direkt den Index berechnet. Im schlimmsten Fall (viele Kollisionen) kann dies zu O(n) degradieren. Sortieren ist nicht in O(1) m√∂glich, da alle n Elemente betrachtet werden m√ºssen - Hash-Tabellen sind nicht sortiert.","points":2,"category":"Hash-Tables"},{"id":"q18","type":"single-choice","question":"Was ist ein Heap?","options":["Ein spezieller bin√§rer Baum, bei dem jeder Elternknoten gr√∂√üer (Max-Heap) oder kleiner (Min-Heap) als seine Kinder ist","Ein Speicherbereich f√ºr dynamisch allokierte Objekte","Eine sortierte Liste mit logarithmischem Zugriff","Ein Graph ohne Zyklen"],"correctAnswer":"Ein spezieller bin√§rer Baum, bei dem jeder Elternknoten gr√∂√üer (Max-Heap) oder kleiner (Min-Heap) als seine Kinder ist","explanation":"Ein Heap ist ein vollst√§ndiger bin√§rer Baum mit der Heap-Eigenschaft: Bei einem Max-Heap ist jeder Elternknoten gr√∂√üer oder gleich seinen Kindern, bei einem Min-Heap kleiner oder gleich. Heaps werden f√ºr Priority Queues und Heap-Sort verwendet. Einf√ºgen und L√∂schen des Maximums/Minimums sind O(log n). Nicht zu verwechseln mit dem Heap-Speicherbereich.","points":1,"category":"Trees"}]'),wr=["Datenstrukturen","Arrays","Listen","Stack","Queue","Trees","Graphs","Hash-Tables","Algorithmen","Komplexit√§t"],Ar="2025-01-10",Er={id:gr,moduleId:hr,title:pr,description:fr,category:br,difficulty:kr,examRelevance:zr,timeLimit:vr,passingScore:yr,questions:Sr,tags:wr,lastUpdated:Ar},_r=Object.freeze(Object.defineProperty({__proto__:null,category:br,default:Er,description:fr,difficulty:kr,examRelevance:zr,id:gr,lastUpdated:Ar,moduleId:hr,passingScore:yr,questions:Sr,tags:wr,timeLimit:vr,title:pr},Symbol.toStringTag,{value:"Module"})),Dr="bp-05-encapsulation-quiz",Pr="bp-05-encapsulation",Tr="Kapselung (Encapsulation) Quiz",qr="Teste dein Wissen √ºber Kapselung, Information Hiding, Getter/Setter und Access Modifiers in der objektorientierten Programmierung",Rr="BP-05",Ir="intermediate",Cr="high",Lr=25,Mr=70,Or=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist das Hauptziel der Kapselung (Encapsulation) in der objektorientierten Programmierung?","options":["Daten und Methoden in einer Klasse zusammenfassen und den Zugriff kontrollieren","Code schneller ausf√ºhren durch Optimierung","Mehrere Klassen in einer Datei speichern","Vererbung zwischen Klassen erm√∂glichen"],"correctAnswer":"Daten und Methoden in einer Klasse zusammenfassen und den Zugriff kontrollieren","explanation":"Kapselung bedeutet, dass Daten (Attribute) und die darauf operierenden Methoden in einer Klasse zusammengefasst werden. Gleichzeitig wird der Zugriff auf diese Daten durch Access Modifiers kontrolliert, um die interne Implementierung zu sch√ºtzen und eine klare Schnittstelle bereitzustellen.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Was versteht man unter Information Hiding?","options":["Das Verbergen der internen Implementierungsdetails einer Klasse vor externem Zugriff","Das Verschl√ºsseln von Daten in einer Datenbank","Das L√∂schen von Logdateien nach der Ausf√ºhrung","Das Verstecken von Klassen in privaten Packages"],"correctAnswer":"Das Verbergen der internen Implementierungsdetails einer Klasse vor externem Zugriff","explanation":"Information Hiding ist ein Kernprinzip der Kapselung. Es bedeutet, dass die interne Implementierung einer Klasse (wie Attribute und private Methoden) vor externem Zugriff verborgen wird. Nur die √∂ffentliche Schnittstelle (public methods) ist von au√üen zug√§nglich, was die Wartbarkeit und √Ñnderbarkeit des Codes verbessert.","points":1,"category":"Grundlagen"},{"id":"q3","type":"single-choice","question":"Welcher Access Modifier in Java macht ein Attribut nur innerhalb der eigenen Klasse zug√§nglich?","options":["private","public","protected","default (package-private)"],"correctAnswer":"private","explanation":"Der Access Modifier 'private' macht ein Attribut oder eine Methode nur innerhalb der eigenen Klasse zug√§nglich. Dies ist der restriktivste Modifier und wird f√ºr Attribute empfohlen, um Kapselung zu gew√§hrleisten. Der Zugriff von au√üen erfolgt dann √ºber √∂ffentliche Getter- und Setter-Methoden.","points":1,"category":"Access Modifiers"},{"id":"q4","type":"single-choice","question":"Was ist der Zweck von Getter-Methoden?","options":["Kontrollierten Lesezugriff auf private Attribute erm√∂glichen","Attribute direkt ver√§ndern ohne Validierung","Klassen initialisieren","Vererbung implementieren"],"correctAnswer":"Kontrollierten Lesezugriff auf private Attribute erm√∂glichen","explanation":"Getter-Methoden (auch Accessors genannt) erm√∂glichen den kontrollierten Lesezugriff auf private Attribute. Sie folgen der Namenskonvention 'getAttributName()' und geben den Wert des Attributs zur√ºck. Dadurch kann die Klasse kontrollieren, wie und wann auf ihre Daten zugegriffen wird, ohne die Attribute direkt √∂ffentlich zu machen.","points":1,"category":"Getter/Setter"},{"id":"q5","type":"single-choice","question":"Was ist der Vorteil von Setter-Methoden gegen√ºber direktem Attributzugriff?","options":["Validierung und Kontrolle der gesetzten Werte","Schnellere Ausf√ºhrungsgeschwindigkeit","Weniger Code schreiben","Automatische Typkonvertierung"],"correctAnswer":"Validierung und Kontrolle der gesetzten Werte","explanation":"Setter-Methoden (auch Mutators genannt) erm√∂glichen die Validierung und Kontrolle von Werten, bevor sie einem Attribut zugewiesen werden. Man kann z.B. pr√ºfen, ob ein Alter positiv ist oder ob ein String nicht leer ist. Dies verhindert ung√ºltige Zust√§nde und erh√∂ht die Datenintegrit√§t.","points":1,"category":"Getter/Setter"},{"id":"q6","type":"code","question":"Was ist an folgendem Code problematisch in Bezug auf Kapselung?","code":"public class Person {\\n    public String name;\\n    public int age;\\n}","language":"java","options":["Attribute sind public und k√∂nnen ohne Kontrolle ver√§ndert werden","Die Klasse hat keinen Konstruktor","Die Attribute haben keine Kommentare","Der Klassenname ist zu kurz"],"correctAnswer":"Attribute sind public und k√∂nnen ohne Kontrolle ver√§ndert werden","explanation":"Die Attribute sind als 'public' deklariert, was gegen das Prinzip der Kapselung verst√∂√üt. Externe Klassen k√∂nnen direkt auf die Attribute zugreifen und sie ohne jegliche Validierung √§ndern (z.B. age = -5). Besser w√§re es, die Attribute als 'private' zu deklarieren und Getter/Setter-Methoden bereitzustellen.","points":2,"category":"Code-Analyse"},{"id":"q7","type":"code","question":"Welche Implementierung zeigt korrekte Kapselung?","code":"// Option A\\npublic class BankAccount {\\n    public double balance;\\n}\\n\\n// Option B\\npublic class BankAccount {\\n    private double balance;\\n    public double getBalance() { return balance; }\\n    public void setBalance(double b) { balance = b; }\\n}\\n\\n// Option C\\npublic class BankAccount {\\n    private double balance;\\n    public double getBalance() { return balance; }\\n    public void deposit(double amount) {\\n        if (amount > 0) balance += amount;\\n    }\\n}","language":"java","options":["Option C - private Attribut mit kontrolliertem Zugriff","Option A - direkter Zugriff ist am einfachsten","Option B - Setter ohne Validierung ist ausreichend","Alle Optionen sind gleichwertig"],"correctAnswer":"Option C - private Attribut mit kontrolliertem Zugriff","explanation":"Option C zeigt die beste Kapselung: Das Attribut ist private, es gibt einen Getter f√ºr Lesezugriff, und statt eines einfachen Setters gibt es eine deposit()-Methode mit Validierung (amount > 0). Dies verhindert ung√ºltige Zust√§nde wie negative Einzahlungen. Option A verletzt Kapselung komplett, Option B hat zwar Getter/Setter, aber keine Validierung.","points":3,"category":"Code-Analyse"},{"id":"q8","type":"multiple-choice","question":"Welche Vorteile bietet Kapselung? (Mehrere Antworten m√∂glich)","options":["Bessere Wartbarkeit durch klare Schnittstellen","Schutz vor ung√ºltigen Zust√§nden durch Validierung","Flexibilit√§t bei √Ñnderungen der internen Implementierung","Automatische Performance-Optimierung"],"correctAnswer":["Bessere Wartbarkeit durch klare Schnittstellen","Schutz vor ung√ºltigen Zust√§nden durch Validierung","Flexibilit√§t bei √Ñnderungen der internen Implementierung"],"explanation":"Kapselung bietet mehrere Vorteile: 1) Wartbarkeit - klare Schnittstellen erleichtern das Verst√§ndnis und die Nutzung. 2) Datenintegrit√§t - Validierung in Settern verhindert ung√ºltige Zust√§nde. 3) Flexibilit√§t - die interne Implementierung kann ge√§ndert werden, ohne externe Klassen zu beeinflussen. Performance-Optimierung ist kein direkter Vorteil der Kapselung.","points":2,"category":"Konzepte"},{"id":"q9","type":"single-choice","question":"Was bedeutet der Access Modifier 'protected' in Java?","options":["Zugriff innerhalb der Klasse, Subklassen und im selben Package","Zugriff nur innerhalb der Klasse","Zugriff von √ºberall","Zugriff nur innerhalb des selben Packages"],"correctAnswer":"Zugriff innerhalb der Klasse, Subklassen und im selben Package","explanation":"'protected' erlaubt den Zugriff auf ein Attribut oder eine Methode innerhalb der eigenen Klasse, in allen Subklassen (auch in anderen Packages) und in allen Klassen des selben Packages. Es ist weniger restriktiv als 'private', aber restriktiver als 'public'.","points":1,"category":"Access Modifiers"},{"id":"q10","type":"single-choice","question":"Wann sollte man ein Attribut als 'public' deklarieren?","options":["Nur bei Konstanten (final static), fast nie bei ver√§nderbaren Attributen","Immer, um den Zugriff zu vereinfachen","Bei allen Attributen, die von au√üen gelesen werden sollen","Nur in abstrakten Klassen"],"correctAnswer":"Nur bei Konstanten (final static), fast nie bei ver√§nderbaren Attributen","explanation":"Public-Attribute sollten fast nie verwendet werden, da sie die Kapselung verletzen. Eine Ausnahme sind Konstanten (public static final), da diese unver√§nderlich sind und keine Validierung ben√∂tigen. F√ºr alle anderen F√§lle sollten private Attribute mit Getter/Setter-Methoden verwendet werden.","points":1,"category":"Access Modifiers"},{"id":"q11","type":"code","question":"Was gibt dieser Code aus?","code":"public class Counter {\\n    private int count = 0;\\n    public void increment() { count++; }\\n    public int getCount() { return count; }\\n}\\n\\nCounter c = new Counter();\\nc.increment();\\nc.increment();\\nSystem.out.println(c.getCount());","language":"java","options":["2","0","1","Compilerfehler"],"correctAnswer":"2","explanation":"Der Code gibt '2' aus. Das private Attribut 'count' wird durch die public Methode increment() zweimal erh√∂ht (0 ‚Üí 1 ‚Üí 2). Der Zugriff erfolgt √ºber die public Methode getCount(). Dies ist ein gutes Beispiel f√ºr Kapselung: Das Attribut ist private, aber kontrollierter Zugriff ist √ºber public Methoden m√∂glich.","points":2,"category":"Code-Analyse"},{"id":"q12","type":"single-choice","question":"Was ist ein 'Read-Only' Attribut?","options":["Ein Attribut mit Getter, aber ohne Setter","Ein Attribut mit Setter, aber ohne Getter","Ein Attribut, das nur einmal gesetzt werden kann","Ein Attribut mit dem Modifier 'readonly'"],"correctAnswer":"Ein Attribut mit Getter, aber ohne Setter","explanation":"Ein Read-Only Attribut hat einen Getter f√ºr Lesezugriff, aber keinen Setter. Dadurch kann der Wert von au√üen gelesen, aber nicht ver√§ndert werden. Dies ist n√ºtzlich f√ºr Attribute, die nur intern oder im Konstruktor gesetzt werden sollen, z.B. eine ID oder ein Erstellungsdatum.","points":1,"category":"Getter/Setter"},{"id":"q13","type":"code","question":"Welcher Code zeigt eine korrekte Validierung in einem Setter?","code":"// Option A\\npublic void setAge(int age) {\\n    this.age = age;\\n}\\n\\n// Option B\\npublic void setAge(int age) {\\n    if (age >= 0 && age <= 150) {\\n        this.age = age;\\n    } else {\\n        throw new IllegalArgumentException(\\"Ung√ºltiges Alter\\");\\n    }\\n}\\n\\n// Option C\\npublic void setAge(int age) {\\n    if (age > 0) this.age = age;\\n}","language":"java","options":["Option B - Validierung mit Exception bei ung√ºltigen Werten","Option A - keine Validierung n√∂tig","Option C - einfache Pr√ºfung ist ausreichend","Alle Optionen sind korrekt"],"correctAnswer":"Option B - Validierung mit Exception bei ung√ºltigen Werten","explanation":"Option B zeigt die beste Implementierung: Sie validiert den Wert (0-150 ist ein realistischer Bereich f√ºr Alter) und wirft eine aussagekr√§ftige Exception bei ung√ºltigen Werten. Option A hat keine Validierung. Option C ist besser als A, aber ignoriert ung√ºltige Werte stillschweigend, was zu schwer auffindbaren Bugs f√ºhren kann.","points":2,"category":"Getter/Setter"},{"id":"q14","type":"multiple-choice","question":"Welche Aussagen √ºber Access Modifiers sind korrekt? (Mehrere Antworten m√∂glich)","options":["private ist der restriktivste Access Modifier","public erm√∂glicht Zugriff von √ºberall","protected erlaubt Zugriff in Subklassen","default (package-private) ist dasselbe wie public"],"correctAnswer":["private ist der restriktivste Access Modifier","public erm√∂glicht Zugriff von √ºberall","protected erlaubt Zugriff in Subklassen"],"explanation":"Die ersten drei Aussagen sind korrekt: 'private' ist am restriktivsten (nur eigene Klasse), 'public' erlaubt Zugriff von √ºberall, 'protected' erlaubt Zugriff in Subklassen und im selben Package. Default (package-private) ist NICHT dasselbe wie public - es erlaubt nur Zugriff innerhalb des selben Packages.","points":2,"category":"Access Modifiers"},{"id":"q15","type":"single-choice","question":"Was ist der Unterschied zwischen Kapselung und Abstraktion?","options":["Kapselung verbirgt Implementierungsdetails, Abstraktion zeigt nur wesentliche Eigenschaften","Kapselung und Abstraktion sind identisch","Kapselung ist nur f√ºr Attribute, Abstraktion nur f√ºr Methoden","Abstraktion ist veraltet, Kapselung ist modern"],"correctAnswer":"Kapselung verbirgt Implementierungsdetails, Abstraktion zeigt nur wesentliche Eigenschaften","explanation":"Kapselung und Abstraktion sind verwandte, aber unterschiedliche Konzepte. Kapselung verbirgt die interne Implementierung (wie etwas gemacht wird) durch Access Modifiers. Abstraktion konzentriert sich darauf, nur die wesentlichen Eigenschaften zu zeigen (was gemacht wird) und unwichtige Details wegzulassen. Beide arbeiten zusammen f√ºr besseres Design.","points":1,"category":"Konzepte"},{"id":"q16","type":"code","question":"Was ist der Vorteil dieser Implementierung?","code":"public class Email {\\n    private String address;\\n    \\n    public void setAddress(String address) {\\n        if (address != null && address.contains(\\"@\\")) {\\n            this.address = address;\\n        } else {\\n            throw new IllegalArgumentException(\\"Ung√ºltige E-Mail\\");\\n        }\\n    }\\n}","language":"java","options":["Validierung stellt sicher, dass nur g√ºltige E-Mail-Adressen gespeichert werden","Der Code ist k√ºrzer als ohne Validierung","Die Performance ist besser","Es werden keine Exceptions geworfen"],"correctAnswer":"Validierung stellt sicher, dass nur g√ºltige E-Mail-Adressen gespeichert werden","explanation":"Der Setter validiert die E-Mail-Adresse vor dem Speichern (pr√ºft auf null und @-Zeichen). Dies ist ein Kernvorteil der Kapselung: Die Klasse kann ihre Datenintegrit√§t selbst sicherstellen. Ohne diese Validierung k√∂nnten ung√ºltige E-Mail-Adressen gespeichert werden, was sp√§ter zu Problemen f√ºhren w√ºrde.","points":2,"category":"Code-Analyse"},{"id":"q17","type":"single-choice","question":"Warum sollte man Getter nicht f√ºr Collections direkt zur√ºckgeben?","options":["Externe Klassen k√∂nnten die Collection direkt ver√§ndern und die Kapselung umgehen","Collections k√∂nnen nicht zur√ºckgegeben werden","Es ist zu langsam","Der Compiler erlaubt es nicht"],"correctAnswer":"Externe Klassen k√∂nnten die Collection direkt ver√§ndern und die Kapselung umgehen","explanation":"Wenn ein Getter eine Collection direkt zur√ºckgibt (z.B. List), kann die aufrufende Klasse Elemente hinzuf√ºgen oder entfernen, ohne dass die besitzende Klasse dies kontrollieren kann. Besser ist es, eine Kopie zur√ºckzugeben (new ArrayList<>(list)) oder eine unmodifiable Collection (Collections.unmodifiableList(list)).","points":2,"category":"Fortgeschritten"},{"id":"q18","type":"multiple-choice","question":"Welche Best Practices sollten bei Kapselung beachtet werden? (Mehrere Antworten m√∂glich)","options":["Attribute standardm√§√üig als private deklarieren","Getter/Setter nur bei Bedarf bereitstellen, nicht automatisch f√ºr alle Attribute","Validierung in Setter-Methoden implementieren","Alle Attribute als public deklarieren f√ºr einfachen Zugriff"],"correctAnswer":["Attribute standardm√§√üig als private deklarieren","Getter/Setter nur bei Bedarf bereitstellen, nicht automatisch f√ºr alle Attribute","Validierung in Setter-Methoden implementieren"],"explanation":"Best Practices f√ºr Kapselung: 1) Attribute immer private machen (Principle of Least Privilege). 2) Getter/Setter nur erstellen, wenn sie wirklich ben√∂tigt werden - nicht automatisch f√ºr alle Attribute. 3) Validierung in Settern implementieren, um Datenintegrit√§t zu gew√§hrleisten. Public-Attribute sollten vermieden werden, da sie die Kapselung verletzen.","points":2,"category":"Best Practices"}]`),Nr=["OOP","Kapselung","Encapsulation","Information Hiding","Getter","Setter","Access Modifiers","private","public","protected"],Br="2025-01-15T00:00:00Z",xr={id:Dr,moduleId:Pr,title:Tr,description:qr,category:Rr,difficulty:Ir,examRelevance:Cr,timeLimit:Lr,passingScore:Mr,questions:Or,tags:Nr,lastUpdated:Br},Vr=Object.freeze(Object.defineProperty({__proto__:null,category:Rr,default:xr,description:qr,difficulty:Ir,examRelevance:Cr,id:Dr,lastUpdated:Br,moduleId:Pr,passingScore:Mr,questions:Or,tags:Nr,timeLimit:Lr,title:Tr},Symbol.toStringTag,{value:"Module"})),Fr="bp-05-sorting-quiz",Kr="bp-05-sorting",Wr="Sortierverfahren - Bubble, Selection und Insertion Sort Quiz",jr="Teste dein Wissen √ºber Sortierverfahren - Bubble, Selection und Insertion Sort",$r="BP-05",Gr="intermediate",Ur="high",Hr=10,Qr=70,Zr=[{id:"q1",type:"single-choice",question:"Was ist Sortierverfahren - Bubble, Selection und Insertion Sort?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],Jr=["Sortieralgorithmen","Bubble Sort","Selection Sort","Insertion Sort","Zeitkomplexit√É¬§t","Big-O","Neu 2025"],Yr={id:Fr,moduleId:Kr,title:Wr,description:jr,category:$r,difficulty:Gr,examRelevance:Ur,timeLimit:Hr,passingScore:Qr,questions:Zr,tags:Jr},Xr=Object.freeze(Object.defineProperty({__proto__:null,category:$r,default:Yr,description:jr,difficulty:Gr,examRelevance:Ur,id:Fr,moduleId:Kr,passingScore:Qr,questions:Zr,tags:Jr,timeLimit:Hr,title:Wr},Symbol.toStringTag,{value:"Module"})),es="bp-05-sql-reference-quiz",ns="bp-05-sql-reference",ts="SQL-Referenz mit Verweis auf Beiblatt Quiz",is="Teste dein Wissen √ºber SQL-Syntax, Constraints, Indizes, Views und Stored Procedures - mit Fokus auf das Pr√ºfungsbeiblatt",rs="BP-05",ss="intermediate",as="high",os=25,ls=70,us=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Welcher SQL-Befehl geh√∂rt zur DDL (Data Definition Language)?","options":["CREATE TABLE","SELECT","INSERT","UPDATE"],"correctAnswer":"CREATE TABLE","explanation":"CREATE TABLE ist ein DDL-Befehl, der die Struktur der Datenbank definiert. SELECT ist DQL, INSERT und UPDATE sind DML-Befehle zur Datenmanipulation.","points":1,"category":"SQL-Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche Constraints k√∂nnen in SQL verwendet werden, um Datenintegrit√§t zu gew√§hrleisten? (Mehrere Antworten m√∂glich)","options":["PRIMARY KEY","FOREIGN KEY","UNIQUE","SELECT"],"correctAnswer":["PRIMARY KEY","FOREIGN KEY","UNIQUE"],"explanation":"PRIMARY KEY, FOREIGN KEY und UNIQUE sind Constraints zur Sicherstellung der Datenintegrit√§t. SELECT ist ein Abfragebefehl und kein Constraint.","points":2,"category":"Constraints"},{"id":"q3","type":"code","question":"Was bewirkt folgende SQL-Anweisung?","code":"CREATE INDEX idx_lastname ON employees(lastname);","language":"sql","options":["Erstellt einen Index auf der Spalte lastname zur Beschleunigung von Abfragen","Erstellt eine neue Tabelle namens idx_lastname","L√∂scht alle Eintr√§ge in der Spalte lastname","Erstellt einen Foreign Key auf lastname"],"correctAnswer":"Erstellt einen Index auf der Spalte lastname zur Beschleunigung von Abfragen","explanation":"CREATE INDEX erstellt einen Index auf einer Spalte, um Suchvorg√§nge zu beschleunigen. Indizes verbessern die Performance von SELECT-Abfragen, die diese Spalte verwenden.","points":2,"category":"Indizes"},{"id":"q4","type":"single-choice","question":"Was ist der Hauptzweck eines PRIMARY KEY Constraints?","options":["Eindeutige Identifikation jeder Zeile in einer Tabelle","Beschleunigung von Abfragen","Verkn√ºpfung mit anderen Tabellen","Sortierung der Daten"],"correctAnswer":"Eindeutige Identifikation jeder Zeile in einer Tabelle","explanation":"Ein PRIMARY KEY identifiziert jede Zeile eindeutig und erlaubt keine NULL-Werte oder Duplikate. Er ist die Grundlage f√ºr Referenzen durch Foreign Keys.","points":1,"category":"Constraints"},{"id":"q5","type":"code","question":"Welche Ausgabe liefert diese Abfrage bei einer Tabelle mit 5 Mitarbeitern in der IT-Abteilung?","code":"SELECT COUNT(*) FROM employees WHERE department = 'IT';","language":"sql","options":["5","Die Namen aller IT-Mitarbeiter","Die Anzahl aller Mitarbeiter","NULL"],"correctAnswer":"5","explanation":"COUNT(*) z√§hlt die Anzahl der Zeilen, die die WHERE-Bedingung erf√ºllen. Bei 5 IT-Mitarbeitern wird die Zahl 5 zur√ºckgegeben.","points":2,"category":"Aggregatfunktionen"},{"id":"q6","type":"single-choice","question":"Was ist eine View in SQL?","options":["Eine virtuelle Tabelle basierend auf einer SELECT-Abfrage","Ein Index zur Beschleunigung von Abfragen","Eine Stored Procedure","Ein Constraint zur Datenvalidierung"],"correctAnswer":"Eine virtuelle Tabelle basierend auf einer SELECT-Abfrage","explanation":"Eine View ist eine gespeicherte SELECT-Abfrage, die wie eine Tabelle verwendet werden kann. Sie speichert keine Daten selbst, sondern zeigt Daten aus anderen Tabellen an.","points":1,"category":"Views"},{"id":"q7","type":"code","question":"Was macht dieser SQL-Befehl?","code":"ALTER TABLE products ADD COLUMN price DECIMAL(10,2);","language":"sql","options":["F√ºgt eine neue Spalte 'price' zur Tabelle products hinzu","√Ñndert den Datentyp der Spalte price","L√∂scht die Spalte price","Erstellt eine neue Tabelle products"],"correctAnswer":"F√ºgt eine neue Spalte 'price' zur Tabelle products hinzu","explanation":"ALTER TABLE mit ADD COLUMN f√ºgt eine neue Spalte zu einer bestehenden Tabelle hinzu. DECIMAL(10,2) bedeutet maximal 10 Stellen, davon 2 Nachkommastellen.","points":2,"category":"DDL"},{"id":"q8","type":"multiple-choice","question":"Welche Aussagen √ºber FOREIGN KEY Constraints sind korrekt? (Mehrere Antworten m√∂glich)","options":["Sie stellen referenzielle Integrit√§t sicher","Sie verweisen auf einen PRIMARY KEY in einer anderen Tabelle","Sie verhindern das L√∂schen von referenzierten Datens√§tzen","Sie beschleunigen alle Abfragen automatisch"],"correctAnswer":["Sie stellen referenzielle Integrit√§t sicher","Sie verweisen auf einen PRIMARY KEY in einer anderen Tabelle","Sie verhindern das L√∂schen von referenzierten Datens√§tzen"],"explanation":"FOREIGN KEYs sichern referenzielle Integrit√§t, verweisen auf PRIMARY KEYs und verhindern inkonsistente L√∂schungen. Sie beschleunigen Abfragen nicht automatisch.","points":2,"category":"Constraints"},{"id":"q9","type":"code","question":"Was bewirkt diese Abfrage?","code":"SELECT department, AVG(salary) AS avg_salary\\nFROM employees\\nGROUP BY department\\nHAVING AVG(salary) > 50000;","language":"sql","options":["Zeigt Abteilungen mit durchschnittlichem Gehalt √ºber 50.000‚Ç¨","Zeigt alle Mitarbeiter mit Gehalt √ºber 50.000‚Ç¨","Zeigt die Anzahl der Mitarbeiter pro Abteilung","Zeigt nur die IT-Abteilung"],"correctAnswer":"Zeigt Abteilungen mit durchschnittlichem Gehalt √ºber 50.000‚Ç¨","explanation":"GROUP BY gruppiert nach Abteilung, AVG berechnet den Durchschnitt, und HAVING filtert Gruppen (hier: nur Abteilungen mit Durchschnittsgehalt > 50.000‚Ç¨).","points":3,"category":"Aggregatfunktionen"},{"id":"q10","type":"single-choice","question":"Welcher Constraint verhindert NULL-Werte in einer Spalte?","options":["NOT NULL","UNIQUE","CHECK","DEFAULT"],"correctAnswer":"NOT NULL","explanation":"NOT NULL stellt sicher, dass eine Spalte immer einen Wert enthalten muss. UNIQUE erlaubt NULL-Werte, CHECK pr√ºft Bedingungen, und DEFAULT setzt Standardwerte.","points":1,"category":"Constraints"},{"id":"q11","type":"code","question":"Was ist das Ergebnis dieser Abfrage?","code":"SELECT * FROM orders o\\nINNER JOIN customers c ON o.customer_id = c.id\\nWHERE c.country = 'Germany';","language":"sql","options":["Alle Bestellungen von Kunden aus Deutschland","Alle Kunden aus Deutschland","Alle Bestellungen unabh√§ngig vom Land","Nur die Anzahl der deutschen Kunden"],"correctAnswer":"Alle Bestellungen von Kunden aus Deutschland","explanation":"INNER JOIN verkn√ºpft orders und customers. Die WHERE-Klausel filtert nach deutschen Kunden. Das Ergebnis enth√§lt alle Bestellungen dieser Kunden.","points":2,"category":"JOINs"},{"id":"q12","type":"single-choice","question":"Was ist der Unterschied zwischen WHERE und HAVING?","options":["WHERE filtert Zeilen vor der Gruppierung, HAVING filtert Gruppen nach der Aggregation","WHERE und HAVING sind identisch","HAVING ist schneller als WHERE","WHERE kann nur mit SELECT verwendet werden"],"correctAnswer":"WHERE filtert Zeilen vor der Gruppierung, HAVING filtert Gruppen nach der Aggregation","explanation":"WHERE filtert einzelne Zeilen vor GROUP BY, HAVING filtert aggregierte Gruppen nach GROUP BY. HAVING wird mit Aggregatfunktionen verwendet.","points":1,"category":"SQL-Syntax"},{"id":"q13","type":"code","question":"Was erstellt dieser Befehl?","code":"CREATE VIEW active_employees AS\\nSELECT id, name, department\\nFROM employees\\nWHERE status = 'active';","language":"sql","options":["Eine View, die nur aktive Mitarbeiter anzeigt","Eine neue Tabelle mit aktiven Mitarbeitern","Einen Index auf der Spalte status","Eine Stored Procedure"],"correctAnswer":"Eine View, die nur aktive Mitarbeiter anzeigt","explanation":"CREATE VIEW erstellt eine virtuelle Tabelle. Diese View zeigt nur Mitarbeiter mit status='active' und kann wie eine normale Tabelle abgefragt werden.","points":2,"category":"Views"},{"id":"q14","type":"multiple-choice","question":"Welche Vorteile bieten Indizes in SQL? (Mehrere Antworten m√∂glich)","options":["Beschleunigung von SELECT-Abfragen","Beschleunigung von Suchvorg√§ngen mit WHERE","Automatische Datensicherung","Verbesserung der JOIN-Performance"],"correctAnswer":["Beschleunigung von SELECT-Abfragen","Beschleunigung von Suchvorg√§ngen mit WHERE","Verbesserung der JOIN-Performance"],"explanation":"Indizes beschleunigen Abfragen, Suchvorg√§nge und JOINs erheblich. Sie haben nichts mit Datensicherung zu tun, k√∂nnen aber INSERT/UPDATE verlangsamen.","points":2,"category":"Indizes"},{"id":"q15","type":"single-choice","question":"Was ist eine Stored Procedure?","options":["Eine gespeicherte SQL-Prozedur, die wiederverwendbare Logik enth√§lt","Ein Index zur Beschleunigung von Abfragen","Eine View auf mehrere Tabellen","Ein Constraint zur Datenvalidierung"],"correctAnswer":"Eine gespeicherte SQL-Prozedur, die wiederverwendbare Logik enth√§lt","explanation":"Stored Procedures sind gespeicherte SQL-Programme mit Parametern und Logik. Sie k√∂nnen mehrfach aufgerufen werden und kapseln komplexe Operationen.","points":1,"category":"Stored Procedures"},{"id":"q16","type":"code","question":"Was bewirkt dieser Befehl?","code":"DELETE FROM orders WHERE order_date < '2020-01-01';","language":"sql","options":["L√∂scht alle Bestellungen vor dem 1. Januar 2020","L√∂scht die Tabelle orders","L√∂scht nur die Spalte order_date","Archiviert alte Bestellungen"],"correctAnswer":"L√∂scht alle Bestellungen vor dem 1. Januar 2020","explanation":"DELETE FROM mit WHERE-Klausel l√∂scht alle Zeilen, die die Bedingung erf√ºllen. Ohne WHERE w√ºrden ALLE Zeilen gel√∂scht - daher immer vorsichtig sein!","points":2,"category":"DML"},{"id":"q17","type":"single-choice","question":"Welcher JOIN-Typ gibt alle Zeilen der linken Tabelle zur√ºck, auch wenn keine √úbereinstimmung in der rechten Tabelle existiert?","options":["LEFT JOIN","INNER JOIN","RIGHT JOIN","CROSS JOIN"],"correctAnswer":"LEFT JOIN","explanation":"LEFT JOIN (oder LEFT OUTER JOIN) gibt alle Zeilen der linken Tabelle zur√ºck. Fehlende Werte aus der rechten Tabelle werden als NULL dargestellt.","points":1,"category":"JOINs"},{"id":"q18","type":"code","question":"Was macht diese Transaktion?","code":"BEGIN TRANSACTION;\\nUPDATE accounts SET balance = balance - 100 WHERE id = 1;\\nUPDATE accounts SET balance = balance + 100 WHERE id = 2;\\nCOMMIT;","language":"sql","options":["√úberweist 100‚Ç¨ von Konto 1 zu Konto 2 als atomare Operation","L√∂scht beide Konten","Erstellt zwei neue Konten","Zeigt den Kontostand an"],"correctAnswer":"√úberweist 100‚Ç¨ von Konto 1 zu Konto 2 als atomare Operation","explanation":"Eine Transaktion gruppiert mehrere Operationen. Entweder werden alle ausgef√ºhrt (COMMIT) oder keine (ROLLBACK). Dies sichert Konsistenz bei √úberweisungen.","points":3,"category":"Transaktionen"},{"id":"q19","type":"multiple-choice","question":"Welche Aggregatfunktionen sind in SQL verf√ºgbar? (Mehrere Antworten m√∂glich)","options":["COUNT()","SUM()","AVG()","JOIN()"],"correctAnswer":["COUNT()","SUM()","AVG()"],"explanation":"COUNT, SUM, AVG, MIN und MAX sind Standard-Aggregatfunktionen. JOIN ist kein Aggregat, sondern eine Verkn√ºpfungsoperation zwischen Tabellen.","points":2,"category":"Aggregatfunktionen"},{"id":"q20","type":"single-choice","question":"Was ist der Hauptvorteil des SQL-Beiblatts in der IHK-Pr√ºfung?","options":["Man muss die SQL-Syntax nicht auswendig lernen","Es enth√§lt die L√∂sungen aller Aufgaben","Es ersetzt das Lernen komplett","Es ist nur f√ºr Fortgeschrittene gedacht"],"correctAnswer":"Man muss die SQL-Syntax nicht auswendig lernen","explanation":"Das Beiblatt enth√§lt alle wichtigen SQL-Befehle und Syntax. Man muss die Konzepte verstehen und anwenden k√∂nnen, aber nicht die exakte Syntax auswendig wissen.","points":1,"category":"Pr√ºfungsstrategie"}]`),cs=["SQL","Datenbank","Beiblatt","Pr√ºfung","DDL","DML","DQL","Constraints","Indizes","Views","Stored Procedures"],ds="2025-01-15T00:00:00Z",ms={id:es,moduleId:ns,title:ts,description:is,category:rs,difficulty:ss,examRelevance:as,timeLimit:os,passingScore:ls,questions:us,tags:cs,lastUpdated:ds},gs=Object.freeze(Object.defineProperty({__proto__:null,category:rs,default:ms,description:is,difficulty:ss,examRelevance:as,id:es,lastUpdated:ds,moduleId:ns,passingScore:ls,questions:us,tags:cs,timeLimit:os,title:ts},Symbol.toStringTag,{value:"Module"})),hs="fue-01-planning-quiz",ps="fue-01-planning",fs="F√ú-01: Planen eines Softwareproduktes Quiz",bs="Teste dein Wissen √ºber Projektplanung, Anforderungsanalyse, Wirtschaftlichkeitsberechnung und Stakeholder-Management",ks="F√ú-01",zs="intermediate",vs="high",ys=25,Ss=70,ws=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist der Hauptunterschied zwischen Lastenheft und Pflichtenheft?","options":["Das Lastenheft beschreibt WAS der Kunde ben√∂tigt, das Pflichtenheft beschreibt WIE es umgesetzt wird","Das Lastenheft wird vom Auftragnehmer erstellt, das Pflichtenheft vom Auftraggeber","Das Lastenheft enth√§lt technische Details, das Pflichtenheft die Kundenanforderungen","Das Lastenheft ist optional, das Pflichtenheft ist verpflichtend"],"correctAnswer":"Das Lastenheft beschreibt WAS der Kunde ben√∂tigt, das Pflichtenheft beschreibt WIE es umgesetzt wird","explanation":"Das Lastenheft (Requirements Specification) wird vom Auftraggeber erstellt und beschreibt die Anforderungen aus Kundensicht (WAS). Das Pflichtenheft (Functional Specification) wird vom Auftragnehmer erstellt und beschreibt die technische Umsetzung (WIE). Dies ist ein fundamentaler Unterschied in der Projektdokumentation.","points":1,"category":"Anforderungsanalyse"},{"id":"q2","type":"multiple-choice","question":"Welche der folgenden sind Methoden zur Anforderungserhebung? (Mehrere Antworten m√∂glich)","options":["Interviews mit Stakeholdern","Workshops mit allen Beteiligten","Prototyping zur Visualisierung","Gantt-Diagramme erstellen"],"correctAnswer":["Interviews mit Stakeholdern","Workshops mit allen Beteiligten","Prototyping zur Visualisierung"],"explanation":"Interviews, Workshops und Prototyping sind etablierte Methoden zur Anforderungserhebung. Gantt-Diagramme geh√∂ren zur Zeitplanung, nicht zur Anforderungserhebung. Weitere Methoden sind Frageb√∂gen und Beobachtung bestehender Arbeitsabl√§ufe.","points":2,"category":"Anforderungsanalyse"},{"id":"q3","type":"single-choice","question":"Welche Aussage beschreibt eine nicht-funktionale Anforderung?","options":["Das System muss die Seitenladezeit unter 2 Sekunden halten","Das System muss Benutzer authentifizieren k√∂nnen","Das System muss Produkte in den Warenkorb legen k√∂nnen","Das System muss Bestellbest√§tigungen per E-Mail versenden"],"correctAnswer":"Das System muss die Seitenladezeit unter 2 Sekunden halten","explanation":"Nicht-funktionale Anforderungen beschreiben WIE das System arbeiten soll (Performance, Sicherheit, Usability). Die Seitenladezeit ist eine Performance-Anforderung. Die anderen Optionen sind funktionale Anforderungen, die beschreiben WAS das System tun soll.","points":1,"category":"Anforderungsanalyse"},{"id":"q4","type":"single-choice","question":"Ein Projekt hat eine Investition von 120.000 ‚Ç¨ und erzielt einen j√§hrlichen Gewinn von 30.000 ‚Ç¨. Wie lange ist die Amortisationszeit?","options":["4 Jahre","3 Jahre","5 Jahre","2,5 Jahre"],"correctAnswer":"4 Jahre","explanation":"Die Amortisationszeit berechnet sich als: Investition / J√§hrlicher Gewinn = 120.000 ‚Ç¨ / 30.000 ‚Ç¨ = 4 Jahre. Nach 4 Jahren hat sich die Investition vollst√§ndig amortisiert und das Projekt beginnt, Gewinn zu erwirtschaften.","points":1,"category":"Wirtschaftlichkeit"},{"id":"q5","type":"single-choice","question":"Was ist der Zweck eines Projektstrukturplans (PSP)?","options":["Das Projekt in √ºberschaubare Arbeitspakete zu gliedern","Die Kosten des Projekts zu berechnen","Die Stakeholder zu identifizieren","Die Risiken des Projekts zu bewerten"],"correctAnswer":"Das Projekt in √ºberschaubare Arbeitspakete zu gliedern","explanation":"Der Projektstrukturplan (PSP) ist ein hierarchisches Werkzeug, das das Gesamtprojekt in kleinere, √ºberschaubare Arbeitspakete unterteilt. Dies erleichtert die Planung, Steuerung und Kontrolle des Projekts. Kostenberechnung, Stakeholder-Identifikation und Risikobewertung sind separate Planungsaktivit√§ten.","points":1,"category":"Projektplanung"},{"id":"q6","type":"multiple-choice","question":"Welche Kategorien geh√∂ren zu nicht-funktionalen Anforderungen? (Mehrere Antworten m√∂glich)","options":["Performance und Antwortzeiten","Sicherheit und Verschl√ºsselung","Benutzer-Registrierung","Usability und Barrierefreiheit"],"correctAnswer":["Performance und Antwortzeiten","Sicherheit und Verschl√ºsselung","Usability und Barrierefreiheit"],"explanation":"Nicht-funktionale Anforderungen umfassen Performance, Sicherheit, Usability, Zuverl√§ssigkeit und Wartbarkeit. Sie beschreiben Qualit√§tsmerkmale des Systems. Die Benutzer-Registrierung ist eine funktionale Anforderung, da sie beschreibt WAS das System tun soll.","points":2,"category":"Anforderungsanalyse"},{"id":"q7","type":"single-choice","question":"Was sind Meilensteine in der Projektplanung?","options":["Wichtige Zwischenziele im Projekt ohne Dauer","Die l√§ngsten Arbeitspakete im Projekt","Die teuersten Phasen des Projekts","Regelm√§√üige Teammeetings"],"correctAnswer":"Wichtige Zwischenziele im Projekt ohne Dauer","explanation":"Meilensteine sind wichtige Kontrollpunkte im Projekt, die den Abschluss einer Phase oder das Erreichen eines Zwischenziels markieren. Sie haben keine Dauer und dienen der Projektsteuerung. Beispiele: 'Anforderungen abgenommen', 'Design freigegeben', 'MVP fertiggestellt'.","points":1,"category":"Projektplanung"},{"id":"q8","type":"single-choice","question":"Welche Formel beschreibt den Return on Investment (ROI)?","options":["(Gewinn - Investition) / Investition √ó 100%","Investition / J√§hrlicher Gewinn","Gewinn √ó Investition / 100","(Investition - Gewinn) / Gewinn √ó 100%"],"correctAnswer":"(Gewinn - Investition) / Investition √ó 100%","explanation":"Der ROI berechnet sich als: (Gewinn - Investition) / Investition √ó 100%. Er gibt an, wie rentabel eine Investition ist. Ein positiver ROI bedeutet, dass die Investition profitabel ist. Die Formel 'Investition / J√§hrlicher Gewinn' beschreibt die Amortisationszeit.","points":1,"category":"Wirtschaftlichkeit"},{"id":"q9","type":"multiple-choice","question":"Welche Vorteile hat eine Eigenentwicklung (Make) gegen√ºber dem Kauf von Standardsoftware (Buy)? (Mehrere Antworten m√∂glich)","options":["Volle Kontrolle √ºber Funktionen und Anpassbarkeit","Schnelle Verf√ºgbarkeit und kurze Time-to-Market","Keine laufenden Lizenzgeb√ºhren","Bew√§hrte L√∂sung mit Support durch Anbieter"],"correctAnswer":["Volle Kontrolle √ºber Funktionen und Anpassbarkeit","Keine laufenden Lizenzgeb√ºhren"],"explanation":"Eigenentwicklung bietet volle Kontrolle, Anpassbarkeit und keine Lizenzgeb√ºhren. Allerdings sind die Entwicklungskosten h√∂her und die Time-to-Market l√§nger. Schnelle Verf√ºgbarkeit und bew√§hrte L√∂sungen mit Support sind Vorteile von Standardsoftware (Buy).","points":2,"category":"Wirtschaftlichkeit"},{"id":"q10","type":"single-choice","question":"Was visualisiert ein Gantt-Diagramm in der Projektplanung?","options":["Projektphasen, Abh√§ngigkeiten und den kritischen Pfad","Die Kostenverteilung √ºber die Projektlaufzeit","Die Stakeholder und ihre Interessen","Die Risikowahrscheinlichkeiten"],"correctAnswer":"Projektphasen, Abh√§ngigkeiten und den kritischen Pfad","explanation":"Ein Gantt-Diagramm ist ein Balkendiagramm, das Projektphasen zeitlich darstellt, Abh√§ngigkeiten zwischen Aufgaben zeigt und den kritischen Pfad visualisiert. Es ist ein zentrales Werkzeug der Zeitplanung und erm√∂glicht auch die Ressourcenplanung.","points":1,"category":"Projektplanung"},{"id":"q11","type":"single-choice","question":"Wie wird die Risikopriorit√§tszahl in der Risikoanalyse berechnet?","options":["Eintrittswahrscheinlichkeit √ó Auswirkung","Eintrittswahrscheinlichkeit + Auswirkung","Auswirkung / Eintrittswahrscheinlichkeit","Eintrittswahrscheinlichkeit - Auswirkung"],"correctAnswer":"Eintrittswahrscheinlichkeit √ó Auswirkung","explanation":"Die Risikopriorit√§tszahl (Risk Priority Number) wird als Produkt aus Eintrittswahrscheinlichkeit und Auswirkung berechnet. Dies erm√∂glicht eine Priorisierung der Risiken: Risiken mit hoher Wahrscheinlichkeit und hoher Auswirkung erhalten die h√∂chste Priorit√§t und m√ºssen zuerst behandelt werden.","points":1,"category":"Risikoanalyse"},{"id":"q12","type":"multiple-choice","question":"Welche geh√∂ren zu den einmaligen Kosten eines Softwareprojekts? (Mehrere Antworten m√∂glich)","options":["Entwicklungskosten","Schulungskosten","Wartung und Support","Migrationskosten"],"correctAnswer":["Entwicklungskosten","Schulungskosten","Migrationskosten"],"explanation":"Einmalige Kosten fallen nur zu Projektbeginn an: Entwicklung, Hardware-Anschaffung, Schulung und Migration. Wartung und Support sind laufende Kosten, die kontinuierlich w√§hrend des Betriebs anfallen. Diese Unterscheidung ist wichtig f√ºr die Wirtschaftlichkeitsberechnung.","points":2,"category":"Wirtschaftlichkeit"},{"id":"q13","type":"single-choice","question":"In der Macht-Interesse-Matrix des Stakeholder-Managements: Wie sollten Stakeholder mit hoher Macht und hohem Interesse behandelt werden?","options":["Eng einbinden und aktiv managen","Zufrieden stellen","Nur informiert halten","Beobachten"],"correctAnswer":"Eng einbinden und aktiv managen","explanation":"Stakeholder mit hoher Macht und hohem Interesse sind die wichtigsten Projektbeteiligten. Sie m√ºssen eng eingebunden und aktiv gemanagt werden, da sie gro√üen Einfluss auf den Projekterfolg haben. Stakeholder mit hoher Macht aber niedrigem Interesse sollten zufrieden gestellt werden.","points":1,"category":"Stakeholder-Management"},{"id":"q14","type":"multiple-choice","question":"Welche Risikokategorien gibt es in der Projektplanung? (Mehrere Antworten m√∂glich)","options":["Technische Risiken (neue Technologien, Integrationen)","Organisatorische Risiken (Ressourcenengp√§sse, Kommunikation)","Externe Risiken (Anforderungs√§nderungen, Abh√§ngigkeiten)","Finanzielle Gewinne"],"correctAnswer":["Technische Risiken (neue Technologien, Integrationen)","Organisatorische Risiken (Ressourcenengp√§sse, Kommunikation)","Externe Risiken (Anforderungs√§nderungen, Abh√§ngigkeiten)"],"explanation":"Die drei Hauptkategorien von Projektrisiken sind: technische Risiken (Technologie, Performance), organisatorische Risiken (Personal, Kommunikation) und externe Risiken (Kunde, Lieferanten, rechtliche √Ñnderungen). Finanzielle Gewinne sind keine Risikokategorie, sondern ein positives Projektergebnis.","points":2,"category":"Risikoanalyse"},{"id":"q15","type":"single-choice","question":"Was ist der Hauptzweck eines Projektauftrags?","options":["Projektziele, Umfang, Budget und Stakeholder zu definieren","Den detaillierten Zeitplan festzulegen","Die technische Architektur zu beschreiben","Die Testf√§lle zu dokumentieren"],"correctAnswer":"Projektziele, Umfang, Budget und Stakeholder zu definieren","explanation":"Der Projektauftrag ist das initiale Dokument, das die grundlegenden Rahmenbedingungen festlegt: Ziele, Umfang (Scope), Budget, Zeitrahmen und Stakeholder. Er autorisiert das Projekt und gibt dem Projektmanager die Befugnis, Ressourcen einzusetzen. Detaillierte Zeitpl√§ne und technische Details folgen sp√§ter.","points":1,"category":"Projektplanung"},{"id":"q16","type":"single-choice","question":"Welche Ressourcenart umfasst Entwickler, Designer und Tester?","options":["Personalressourcen","Technische Ressourcen","Finanzielle Ressourcen","Materielle Ressourcen"],"correctAnswer":"Personalressourcen","explanation":"Personalressourcen umfassen alle Mitarbeiter und ihre Rollen: Entwickler (Frontend, Backend, Full-Stack), Designer (UI/UX), Tester (QA), Projektmanager und Product Owner. Technische Ressourcen sind Server, Software-Lizenzen und Tools. Die richtige Ressourcenplanung ist entscheidend f√ºr den Projekterfolg.","points":1,"category":"Projektplanung"},{"id":"q17","type":"multiple-choice","question":"Welche Aussagen √ºber quantifizierbaren Nutzen sind korrekt? (Mehrere Antworten m√∂glich)","options":["Kosteneinsparungen und Zeitersparnis sind quantifizierbar","Produktivit√§tssteigerung kann in Zahlen ausgedr√ºckt werden","Verbesserte Kundenzufriedenheit ist leicht quantifizierbar","Umsatzsteigerung ist messbar"],"correctAnswer":["Kosteneinsparungen und Zeitersparnis sind quantifizierbar","Produktivit√§tssteigerung kann in Zahlen ausgedr√ºckt werden","Umsatzsteigerung ist messbar"],"explanation":"Quantifizierbarer Nutzen kann in konkreten Zahlen ausgedr√ºckt werden: Kosteneinsparungen, Zeitersparnis, Produktivit√§tssteigerung und Umsatzsteigerung. Kundenzufriedenheit, Imagegewinn und Wettbewerbsvorteile sind nicht-quantifizierbarer Nutzen, der schwer in Zahlen zu fassen ist, aber dennoch wichtig f√ºr die Projektbewertung.","points":2,"category":"Wirtschaftlichkeit"},{"id":"q18","type":"single-choice","question":"Was sollte ein Abschlussbericht am Ende eines Projekts enthalten?","options":["Zielerreichung, Lessons Learned und Empfehlungen","Nur die finalen Kosten des Projekts","Die Namen aller Projektmitarbeiter","Den vollst√§ndigen Quellcode"],"correctAnswer":"Zielerreichung, Lessons Learned und Empfehlungen","explanation":"Ein Abschlussbericht dokumentiert den Projekterfolg und dient dem organisationalen Lernen. Er enth√§lt: Zielerreichung (wurden die Projektziele erreicht?), Lessons Learned (was lief gut/schlecht?) und Empfehlungen f√ºr zuk√ºnftige Projekte. Dies ist wichtig f√ºr die kontinuierliche Verbesserung der Projektmanagement-Prozesse.","points":1,"category":"Projektplanung"}]`),As=["Projektplanung","Anforderungsanalyse","Wirtschaftlichkeit","Kundenanforderungen","Projektmanagement","Lastenheft","Pflichtenheft","ROI","Amortisation","Meilensteine","Stakeholder","Risikoanalyse","Make-or-Buy"],Es="2025-01-15T10:30:00Z",_s={id:hs,moduleId:ps,title:fs,description:bs,category:ks,difficulty:zs,examRelevance:vs,timeLimit:ys,passingScore:Ss,questions:ws,tags:As,lastUpdated:Es},Ds=Object.freeze(Object.defineProperty({__proto__:null,category:ks,default:_s,description:bs,difficulty:zs,examRelevance:vs,id:hs,lastUpdated:Es,moduleId:ps,passingScore:Ss,questions:ws,tags:As,timeLimit:ys,title:fs},Symbol.toStringTag,{value:"Module"})),Ps="fue-02-anomalies-redundancies-quiz",Ts="fue-02-anomalies-redundancies",qs="Datenbank-Anomalien und Redundanzen Quiz",Rs="Teste dein Wissen √ºber Datenbank-Anomalien, Redundanzen und Normalisierung. Verstehe Einf√ºge-, √Ñnderungs- und L√∂sch-Anomalien sowie die ersten drei Normalformen.",Is="F√ú-02",Cs="intermediate",Ls="high",Ms=!0,Os=25,Ns=70,Bs=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was versteht man unter Redundanz in einer Datenbank?","options":["Dieselben Daten werden mehrfach in der Datenbank gespeichert","Die Datenbank enth√§lt zu viele Tabellen","Die Datenbank hat zu viele Indizes","Die Datenbank verwendet zu viele Foreign Keys"],"correctAnswer":"Dieselben Daten werden mehrfach in der Datenbank gespeichert","explanation":"Redundanz bedeutet, dass identische Daten mehrfach gespeichert werden, z.B. wenn der Name eines Kunden in mehreren Zeilen wiederholt wird. Dies f√ºhrt zu Speicherverschwendung und Inkonsistenzgefahr bei √Ñnderungen.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Was ist eine Einf√ºge-Anomalie (Insert Anomaly)?","options":["Daten k√∂nnen nicht eingef√ºgt werden, ohne andere nicht verf√ºgbare Daten einzuf√ºgen","Beim Einf√ºgen werden automatisch Duplikate erstellt","Das Einf√ºgen von Daten dauert zu lange","Foreign Key Constraints verhindern das Einf√ºgen"],"correctAnswer":"Daten k√∂nnen nicht eingef√ºgt werden, ohne andere nicht verf√ºgbare Daten einzuf√ºgen","explanation":"Eine Einf√ºge-Anomalie tritt auf, wenn man z.B. einen neuen Mitarbeiter nicht speichern kann, ohne ihm gleichzeitig ein Projekt zuzuweisen, auch wenn er noch keinem Projekt zugeordnet ist. Dies ist ein Problem unnormalisierter Datenbanken.","points":1,"category":"Anomalien"},{"id":"q3","type":"single-choice","question":"Was ist eine √Ñnderungs-Anomalie (Update Anomaly)?","options":["√Ñnderungen m√ºssen an mehreren Stellen durchgef√ºhrt werden, sonst entstehen Inkonsistenzen","√Ñnderungen werden automatisch r√ºckg√§ngig gemacht","√Ñnderungen sind nicht erlaubt","√Ñnderungen werden nicht in der Datenbank gespeichert"],"correctAnswer":"√Ñnderungen m√ºssen an mehreren Stellen durchgef√ºhrt werden, sonst entstehen Inkonsistenzen","explanation":"Eine √Ñnderungs-Anomalie entsteht durch Redundanz: Wenn z.B. die Adresse eines Kunden in 5 Zeilen gespeichert ist, muss sie bei einem Umzug in allen 5 Zeilen ge√§ndert werden. Vergisst man eine Zeile, entstehen Inkonsistenzen.","points":1,"category":"Anomalien"},{"id":"q4","type":"single-choice","question":"Was ist eine L√∂sch-Anomalie (Delete Anomaly)?","options":["Beim L√∂schen von Daten gehen ungewollt andere wichtige Informationen verloren","Daten k√∂nnen nicht gel√∂scht werden","Das L√∂schen dauert zu lange","Gel√∂schte Daten werden automatisch wiederhergestellt"],"correctAnswer":"Beim L√∂schen von Daten gehen ungewollt andere wichtige Informationen verloren","explanation":"Eine L√∂sch-Anomalie tritt auf, wenn z.B. beim L√∂schen des letzten Mitarbeiters eines Projekts auch alle Informationen √ºber das Projekt selbst verloren gehen, obwohl das Projekt weiterhin existiert. Dies passiert in unnormalisierten Strukturen.","points":1,"category":"Anomalien"},{"id":"q5","type":"multiple-choice","question":"Welche Probleme entstehen durch Redundanzen in Datenbanken? (Mehrere Antworten m√∂glich)","options":["Speicherverschwendung durch mehrfache Datenspeicherung","Inkonsistenzen bei unvollst√§ndigen Updates","H√∂herer Wartungsaufwand","Verbesserte Performance bei Abfragen"],"correctAnswer":["Speicherverschwendung durch mehrfache Datenspeicherung","Inkonsistenzen bei unvollst√§ndigen Updates","H√∂herer Wartungsaufwand"],"explanation":"Redundanzen f√ºhren zu Speicherverschwendung (Daten mehrfach gespeichert), Inkonsistenzen (wenn Updates nicht √ºberall durchgef√ºhrt werden) und h√∂herem Wartungsaufwand. Performance wird durch Redundanzen nicht verbessert, sondern eher verschlechtert.","points":2,"category":"Redundanzen"},{"id":"q6","type":"single-choice","question":"Was ist das Hauptziel der Normalisierung?","options":["Redundanzen und Anomalien minimieren","Die Datenbank schneller machen","Weniger Tabellen verwenden","Mehr Indizes erstellen"],"correctAnswer":"Redundanzen und Anomalien minimieren","explanation":"Das Hauptziel der Normalisierung ist es, Redundanzen zu eliminieren und Anomalien (Einf√ºge-, √Ñnderungs-, L√∂sch-Anomalien) zu vermeiden. Dies f√ºhrt zu konsistenten, wartbaren Datenbanken, auch wenn mehr Tabellen und JOINs erforderlich sind.","points":1,"category":"Normalisierung"},{"id":"q7","type":"single-choice","question":"Was fordert die 1. Normalform (1NF)?","options":["Alle Attribute m√ºssen atomar sein (keine Listen oder zusammengesetzten Werte)","Alle Tabellen m√ºssen einen Prim√§rschl√ºssel haben","Keine Redundanzen d√ºrfen existieren","Alle Fremdschl√ºssel m√ºssen definiert sein"],"correctAnswer":"Alle Attribute m√ºssen atomar sein (keine Listen oder zusammengesetzten Werte)","explanation":"Die 1NF fordert atomare Werte: Jedes Attribut darf nur einen einzelnen Wert enthalten, keine Listen wie 'Java, Python, SQL' oder zusammengesetzte Werte. Beispiel: Telefonnummern m√ºssen in separate Zeilen aufgeteilt werden.","points":1,"category":"Normalformen"},{"id":"q8","type":"single-choice","question":"Eine Tabelle enth√§lt das Feld 'Telefonnummern' mit Werten wie '030-123, 0170-456'. Welche Normalform ist verletzt?","options":["1. Normalform (1NF) - Werte sind nicht atomar","2. Normalform (2NF) - Partielle Abh√§ngigkeit","3. Normalform (3NF) - Transitive Abh√§ngigkeit","Keine Normalform ist verletzt"],"correctAnswer":"1. Normalform (1NF) - Werte sind nicht atomar","explanation":"Die 1NF ist verletzt, weil das Feld mehrere Telefonnummern als Liste enth√§lt. L√∂sung: Separate Tabelle 'Telefonnummern' mit einer Zeile pro Nummer. Erst wenn alle Werte atomar sind, ist die 1NF erf√ºllt.","points":1,"category":"Normalformen"},{"id":"q9","type":"single-choice","question":"Was fordert die 2. Normalform (2NF)?","options":["Muss in 1NF sein + Alle Nicht-Schl√ºssel-Attribute m√ºssen voll funktional abh√§ngig vom gesamten Prim√§rschl√ºssel sein","Alle Tabellen m√ºssen mindestens zwei Spalten haben","Keine NULL-Werte d√ºrfen existieren","Alle Attribute m√ºssen eindeutig sein"],"correctAnswer":"Muss in 1NF sein + Alle Nicht-Schl√ºssel-Attribute m√ºssen voll funktional abh√§ngig vom gesamten Prim√§rschl√ºssel sein","explanation":"Die 2NF gilt nur f√ºr zusammengesetzte Prim√§rschl√ºssel und fordert, dass alle Nicht-Schl√ºssel-Attribute vom gesamten Schl√ºssel abh√§ngen, nicht nur von Teilen davon. Beispiel: Bei Prim√§rschl√ºssel (Best_ID, Produkt_ID) darf Produkt_Name nicht nur von Produkt_ID abh√§ngen.","points":1,"category":"Normalformen"},{"id":"q10","type":"code","question":"Gegeben ist folgende Tabelle mit zusammengesetztem Prim√§rschl√ºssel (Best_ID, Produkt_ID):\\n\\nBestellpositionen(Best_ID, Produkt_ID, Produkt_Name, Menge, Preis)\\n\\nWarum ist diese Tabelle nicht in 2NF?","code":"Bestellpositionen\\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\\n‚îÇ Best_ID‚îÇ Produkt_ID‚îÇ Produkt_Name ‚îÇ Menge   ‚îÇ Preis    ‚îÇ\\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\\n‚îÇ 1      ‚îÇ 101      ‚îÇ Laptop       ‚îÇ 1       ‚îÇ 999.00   ‚îÇ\\n‚îÇ 1      ‚îÇ 102      ‚îÇ Maus         ‚îÇ 2       ‚îÇ 19.99    ‚îÇ\\n‚îÇ 2      ‚îÇ 101      ‚îÇ Laptop       ‚îÇ 1       ‚îÇ 999.00   ‚îÇ\\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò","language":"text","options":["Produkt_Name und Preis h√§ngen nur von Produkt_ID ab, nicht vom gesamten Schl√ºssel (Best_ID, Produkt_ID)","Die Tabelle hat zu viele Spalten","Best_ID und Produkt_ID sollten nicht zusammen Prim√§rschl√ºssel sein","Menge sollte nicht in dieser Tabelle sein"],"correctAnswer":"Produkt_Name und Preis h√§ngen nur von Produkt_ID ab, nicht vom gesamten Schl√ºssel (Best_ID, Produkt_ID)","explanation":"Partielle Abh√§ngigkeit: Produkt_Name und Preis sind nur von Produkt_ID abh√§ngig, nicht von Best_ID. L√∂sung: Produkte in separate Tabelle auslagern. Nur Menge h√§ngt vom gesamten Schl√ºssel ab (welches Produkt in welcher Bestellung).","points":2,"category":"Normalformen"},{"id":"q11","type":"single-choice","question":"Was fordert die 3. Normalform (3NF)?","options":["Muss in 2NF sein + Keine transitiven Abh√§ngigkeiten (Nicht-Schl√ºssel-Attribute d√ºrfen nicht von anderen Nicht-Schl√ºssel-Attributen abh√§ngen)","Alle Tabellen m√ºssen genau drei Spalten haben","Maximal drei Foreign Keys pro Tabelle","Alle Attribute m√ºssen vom Typ VARCHAR sein"],"correctAnswer":"Muss in 2NF sein + Keine transitiven Abh√§ngigkeiten (Nicht-Schl√ºssel-Attribute d√ºrfen nicht von anderen Nicht-Schl√ºssel-Attributen abh√§ngen)","explanation":"Die 3NF verbietet transitive Abh√§ngigkeiten: Wenn A ‚Üí B und B ‚Üí C, dann ist C transitiv von A abh√§ngig. Beispiel: MA_ID ‚Üí Abt_ID ‚Üí Abt_Name ist transitiv. L√∂sung: Abteilungen in separate Tabelle auslagern.","points":1,"category":"Normalformen"},{"id":"q12","type":"code","question":"Gegeben ist folgende Tabelle:\\n\\nMitarbeiter(MA_ID, Name, Abt_ID, Abt_Name, Abt_Standort)\\n\\nWarum ist diese Tabelle nicht in 3NF?","code":"Mitarbeiter\\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\\n‚îÇ MA_ID‚îÇ Name   ‚îÇ Abt_ID ‚îÇ Abt_Name ‚îÇ Abt_Standort ‚îÇ\\n‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\\n‚îÇ 1    ‚îÇ Alice  ‚îÇ 10     ‚îÇ IT       ‚îÇ Berlin       ‚îÇ\\n‚îÇ 2    ‚îÇ Bob    ‚îÇ 10     ‚îÇ IT       ‚îÇ Berlin       ‚îÇ\\n‚îÇ 3    ‚îÇ Charlie‚îÇ 20     ‚îÇ HR       ‚îÇ M√ºnchen      ‚îÇ\\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò","language":"text","options":["Abt_Name und Abt_Standort h√§ngen von Abt_ID ab, nicht direkt von MA_ID (transitive Abh√§ngigkeit)","Die Tabelle hat zu viele Spalten","MA_ID sollte nicht Prim√§rschl√ºssel sein","Abt_ID sollte nicht in dieser Tabelle sein"],"correctAnswer":"Abt_Name und Abt_Standort h√§ngen von Abt_ID ab, nicht direkt von MA_ID (transitive Abh√§ngigkeit)","explanation":"Transitive Abh√§ngigkeit: MA_ID ‚Üí Abt_ID ‚Üí Abt_Name/Abt_Standort. Abteilungsdaten h√§ngen von Abt_ID ab, nicht direkt vom Mitarbeiter. L√∂sung: Separate Tabelle 'Abteilungen(Abt_ID, Abt_Name, Abt_Standort)' erstellen.","points":2,"category":"Normalformen"},{"id":"q13","type":"multiple-choice","question":"Welche Vorteile bietet die Normalisierung? (Mehrere Antworten m√∂glich)","options":["Eliminierung von Redundanzen","Vermeidung von Anomalien","Verbesserte Datenintegrit√§t und Konsistenz","Einfachere Queries ohne JOINs"],"correctAnswer":["Eliminierung von Redundanzen","Vermeidung von Anomalien","Verbesserte Datenintegrit√§t und Konsistenz"],"explanation":"Normalisierung eliminiert Redundanzen, vermeidet Anomalien und verbessert die Datenintegrit√§t. Allerdings werden Queries komplexer (mehr JOINs erforderlich), was ein Nachteil ist. Der Trade-off: Bessere Datenqualit√§t vs. komplexere Abfragen.","points":2,"category":"Normalisierung"},{"id":"q14","type":"single-choice","question":"Welcher Nachteil entsteht durch Normalisierung?","options":["Komplexere Queries mit mehr JOINs, die Performance beeintr√§chtigen k√∂nnen","Mehr Redundanzen in der Datenbank","H√∂here Wahrscheinlichkeit von Anomalien","Schlechtere Datenintegrit√§t"],"correctAnswer":"Komplexere Queries mit mehr JOINs, die Performance beeintr√§chtigen k√∂nnen","explanation":"Der Hauptnachteil der Normalisierung ist, dass Daten auf viele Tabellen verteilt sind und Queries viele JOINs ben√∂tigen, was die Performance beeintr√§chtigen kann. Deshalb wird in manchen F√§llen bewusst denormalisiert (z.B. Data Warehouses).","points":1,"category":"Normalisierung"},{"id":"q15","type":"single-choice","question":"Was ist Denormalisierung?","options":["Bewusstes Einf√ºhren von Redundanzen zur Verbesserung der Performance","Das Entfernen aller Prim√§rschl√ºssel","Das L√∂schen von Tabellen","Ein Fehler im Datenbankdesign"],"correctAnswer":"Bewusstes Einf√ºhren von Redundanzen zur Verbesserung der Performance","explanation":"Denormalisierung bedeutet, bewusst Redundanzen einzuf√ºhren, um Performance zu verbessern (weniger JOINs). Dies wird oft in Read-Heavy Systemen oder Data Warehouses gemacht. Trade-off: Schnellere Queries, aber Anomalien und Inkonsistenzen m√∂glich.","points":1,"category":"Denormalisierung"},{"id":"q16","type":"single-choice","question":"In welchem Szenario ist Denormalisierung sinnvoll?","options":["Read-Heavy Anwendungen mit vielen Lesezugriffen und wenigen Schreibzugriffen","Transaktionale Systeme mit vielen Updates","Systeme mit hohen Konsistenzanforderungen","Kleine Datenbanken mit wenigen Tabellen"],"correctAnswer":"Read-Heavy Anwendungen mit vielen Lesezugriffen und wenigen Schreibzugriffen","explanation":"Denormalisierung ist sinnvoll bei Read-Heavy Systemen (z.B. Reporting, Analytics), wo Performance wichtiger ist als perfekte Normalisierung. Bei vielen Updates w√ºrden Anomalien zu Problemen f√ºhren, daher ist Normalisierung dort wichtiger.","points":1,"category":"Denormalisierung"},{"id":"q17","type":"multiple-choice","question":"Eine Tabelle 'Bestellungen' enth√§lt redundant Kundendaten (Name, Adresse) in jeder Zeile. Welche Anomalien k√∂nnen auftreten? (Mehrere Antworten m√∂glich)","options":["√Ñnderungs-Anomalie: Adress√§nderung muss in allen Bestellungen aktualisiert werden","Einf√ºge-Anomalie: Neuer Kunde kann nicht ohne Bestellung gespeichert werden","L√∂sch-Anomalie: Beim L√∂schen der letzten Bestellung gehen Kundendaten verloren","Keine Anomalien, da Prim√§rschl√ºssel vorhanden ist"],"correctAnswer":["√Ñnderungs-Anomalie: Adress√§nderung muss in allen Bestellungen aktualisiert werden","Einf√ºge-Anomalie: Neuer Kunde kann nicht ohne Bestellung gespeichert werden","L√∂sch-Anomalie: Beim L√∂schen der letzten Bestellung gehen Kundendaten verloren"],"explanation":"Alle drei Anomalien treten auf: √Ñnderungen m√ºssen √ºberall durchgef√ºhrt werden, neue Kunden brauchen eine Bestellung, und beim L√∂schen der letzten Bestellung gehen Kundendaten verloren. L√∂sung: Separate Kunden-Tabelle erstellen.","points":2,"category":"Praxisbeispiel"},{"id":"q18","type":"code","question":"Welche SQL-Struktur l√∂st die Anomalien der unnormalisierten Bestellungen-Tabelle?","code":"-- Unnormalisiert:\\nBestellungen(Best_ID, Kunde_Name, Kunde_Adresse, Produkt_Name, Menge, Preis)\\n\\n-- Welche Struktur ist korrekt normalisiert?","language":"sql","options":["Kunden(Kunde_ID, Name, Adresse), Produkte(Produkt_ID, Name, Preis), Bestellungen(Best_ID, Kunde_ID), Bestellpositionen(Best_ID, Produkt_ID, Menge)","Bestellungen(Best_ID, Kunde_ID, Produkt_ID, Menge)","Kunden(Kunde_ID, Name), Bestellungen(Best_ID, Kunde_ID, Produkt_Name, Menge, Preis)","Bestellungen(Best_ID, Kunde_Name, Produkt_Name, Menge)"],"correctAnswer":"Kunden(Kunde_ID, Name, Adresse), Produkte(Produkt_ID, Name, Preis), Bestellungen(Best_ID, Kunde_ID), Bestellpositionen(Best_ID, Produkt_ID, Menge)","explanation":"Die korrekte L√∂sung trennt Kunden, Produkte, Bestellungen und Bestellpositionen in separate Tabellen. Dies eliminiert alle Redundanzen und Anomalien. Bestellpositionen verbindet Bestellungen mit Produkten (m:n-Beziehung).","points":2,"category":"Praxisbeispiel"},{"id":"q19","type":"single-choice","question":"Eine Tabelle ist in 2NF. Was muss zus√§tzlich erf√ºllt sein, damit sie in 3NF ist?","options":["Keine transitiven Abh√§ngigkeiten zwischen Nicht-Schl√ºssel-Attributen","Alle Attribute m√ºssen atomar sein","Keine partiellen Abh√§ngigkeiten vom Prim√§rschl√ºssel","Mindestens drei Tabellen m√ºssen existieren"],"correctAnswer":"Keine transitiven Abh√§ngigkeiten zwischen Nicht-Schl√ºssel-Attributen","explanation":"Von 2NF zu 3NF m√ºssen transitive Abh√§ngigkeiten eliminiert werden. Atomare Werte (1NF) und keine partiellen Abh√§ngigkeiten (2NF) sind bereits erf√ºllt. 3NF fordert zus√§tzlich, dass Nicht-Schl√ºssel-Attribute nur vom Prim√§rschl√ºssel abh√§ngen, nicht voneinander.","points":1,"category":"Normalformen"},{"id":"q20","type":"single-choice","question":"Welche Aussage √ºber Normalisierung ist korrekt?","options":["Normalisierung verbessert Datenintegrit√§t, kann aber Performance bei komplexen Queries verschlechtern","Normalisierung verbessert immer die Performance","Normalisierung ist nur f√ºr gro√üe Datenbanken wichtig","Normalisierung sollte immer bis zur 5. Normalform durchgef√ºhrt werden"],"correctAnswer":"Normalisierung verbessert Datenintegrit√§t, kann aber Performance bei komplexen Queries verschlechtern","explanation":"Normalisierung ist ein Trade-off: Sie verbessert Datenintegrit√§t und eliminiert Anomalien, aber komplexe JOINs k√∂nnen Performance beeintr√§chtigen. In der Praxis wird meist bis 3NF normalisiert, h√∂here Normalformen sind selten n√∂tig. Bei Performance-Problemen wird gezielt denormalisiert.","points":1,"category":"Zusammenfassung"}]`),xs=["datenbank","anomalien","redundanzen","normalisierung","normalformen","datenbankdesign","1nf","2nf","3nf","denormalisierung"],Vs="2025-01-10T14:30:00Z",Fs={id:Ps,moduleId:Ts,title:qs,description:Rs,category:Is,difficulty:Cs,examRelevance:Ls,newIn2025:Ms,timeLimit:Os,passingScore:Ns,questions:Bs,tags:xs,lastUpdated:Vs},Ks=Object.freeze(Object.defineProperty({__proto__:null,category:Is,default:Fs,description:Rs,difficulty:Cs,examRelevance:Ls,id:Ps,lastUpdated:Vs,moduleId:Ts,newIn2025:Ms,passingScore:Ns,questions:Bs,tags:xs,timeLimit:Os,title:qs},Symbol.toStringTag,{value:"Module"})),Ws="fue-02-control-structures-quiz",js="fue-02-control-structures",$s="Kontrollstrukturen: Aktivit√§tsdiagramme und Pseudocode Quiz",Gs="Teste dein Wissen √ºber Kontrollstrukturen, Aktivit√§tsdiagramme und Pseudocode. Pr√ºfungsrelevant ab 2025!",Us="F√ú-02",Hs="intermediate",Qs="high",Zs=!0,Js=25,Ys=70,Xs=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Welche Darstellungsformen f√ºr Algorithmen sind ab 2025 in der IHK-Pr√ºfung relevant?","options":["Aktivit√§tsdiagramme und Pseudocode","Struktogramme und Programmablaufpl√§ne","Nur Programmablaufpl√§ne (PAP)","Nur Struktogramme (Nassi-Shneiderman)"],"correctAnswer":"Aktivit√§tsdiagramme und Pseudocode","explanation":"Ab 2025 sind Aktivit√§tsdiagramme (UML) und Pseudocode pr√ºfungsrelevant. Struktogramme und Programmablaufpl√§ne (PAP) sind veraltet und nicht mehr Teil der Pr√ºfung.","points":1,"category":"Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche der folgenden Aussagen √ºber die drei Grundstrukturen von Algorithmen sind korrekt?","options":["Sequenz bedeutet, dass Befehle nacheinander ausgef√ºhrt werden","Verzweigung erm√∂glicht bedingte Ausf√ºhrung von Code","Wiederholung wird auch Iteration genannt","Rekursion ist eine der drei Grundstrukturen"],"correctAnswer":["Sequenz bedeutet, dass Befehle nacheinander ausgef√ºhrt werden","Verzweigung erm√∂glicht bedingte Ausf√ºhrung von Code","Wiederholung wird auch Iteration genannt"],"explanation":"Die drei Grundstrukturen sind: Sequenz (nacheinander), Verzweigung/Selektion (bedingt) und Wiederholung/Iteration (Schleifen). Rekursion ist eine Technik, aber keine Grundstruktur.","points":2,"category":"Grundlagen"},{"id":"q3","type":"single-choice","question":"Welches Symbol wird in Aktivit√§tsdiagrammen f√ºr eine Entscheidung verwendet?","options":["Raute (‚óÜ)","Rechteck mit abgerundeten Ecken","Gef√ºllter Kreis (‚óè)","Gef√ºllter Kreis mit Ring (‚óâ)"],"correctAnswer":"Raute (‚óÜ)","explanation":"In Aktivit√§tsdiagrammen wird eine Raute (‚óÜ) f√ºr Entscheidungsknoten verwendet. Rechtecke mit abgerundeten Ecken sind Aktivit√§ten, gef√ºllte Kreise sind Start-/Endknoten.","points":1,"category":"Aktivit√§tsdiagramme"},{"id":"q4","type":"single-choice","question":"Was ist der Hauptunterschied zwischen einer while-Schleife und einer do-while-Schleife?","options":["Die do-while-Schleife wird mindestens einmal ausgef√ºhrt (fu√ügesteuert)","Die while-Schleife wird mindestens einmal ausgef√ºhrt","Die do-while-Schleife kann keine Bedingung haben","Es gibt keinen Unterschied"],"correctAnswer":"Die do-while-Schleife wird mindestens einmal ausgef√ºhrt (fu√ügesteuert)","explanation":"Die do-while-Schleife ist fu√ügesteuert und pr√ºft die Bedingung am Ende, daher wird sie mindestens einmal ausgef√ºhrt. Die while-Schleife ist kopfgesteuert und pr√ºft die Bedingung am Anfang.","points":1,"category":"Schleifen"},{"id":"q5","type":"code","question":"Was gibt dieser Pseudocode aus?\\n\\nBEGIN\\n    counter = 0\\n    WHILE counter < 3 DO\\n        OUTPUT counter\\n        counter = counter + 1\\n    END WHILE\\nEND","code":"BEGIN\\n    counter = 0\\n    WHILE counter < 3 DO\\n        OUTPUT counter\\n        counter = counter + 1\\n    END WHILE\\nEND","language":"pseudocode","options":["0 1 2","1 2 3","0 1 2 3","1 2"],"correctAnswer":"0 1 2","explanation":"Die Schleife startet bei counter = 0 und l√§uft, solange counter < 3 ist. Es werden also 0, 1 und 2 ausgegeben. Bei counter = 3 wird die Bedingung false und die Schleife endet.","points":2,"category":"Pseudocode"},{"id":"q6","type":"single-choice","question":"Welche Schl√ºsselw√∂rter werden in Pseudocode typischerweise f√ºr eine Verzweigung verwendet?","options":["IF / THEN / ELSE","WHEN / DO / OTHERWISE","CHECK / TRUE / FALSE","DECIDE / YES / NO"],"correctAnswer":"IF / THEN / ELSE","explanation":"In Pseudocode werden die Schl√ºsselw√∂rter IF / THEN / ELSE f√ºr Verzweigungen verwendet. Diese sind standardisiert und werden in Gro√übuchstaben geschrieben.","points":1,"category":"Pseudocode"},{"id":"q7","type":"code","question":"Was ist das Ergebnis dieses Java-Codes?","code":"int ergebnis = 1;\\nfor (int i = 1; i <= 4; i++) {\\n    ergebnis = ergebnis * i;\\n}\\nSystem.out.println(ergebnis);","language":"java","options":["24","10","4","120"],"correctAnswer":"24","explanation":"Der Code berechnet die Fakult√§t von 4: 1 * 1 * 2 * 3 * 4 = 24. Die for-Schleife multipliziert ergebnis nacheinander mit 1, 2, 3 und 4.","points":2,"category":"Code-Analyse"},{"id":"q8","type":"single-choice","question":"Wann sollte eine for-Schleife gegen√ºber einer while-Schleife bevorzugt werden?","options":["Wenn die Anzahl der Iterationen im Voraus bekannt ist","Wenn die Bedingung komplex ist","Wenn die Schleife mindestens einmal ausgef√ºhrt werden muss","For-Schleifen sind immer besser als while-Schleifen"],"correctAnswer":"Wenn die Anzahl der Iterationen im Voraus bekannt ist","explanation":"For-Schleifen (Z√§hlschleifen) sind ideal, wenn die Anzahl der Iterationen bekannt ist. While-Schleifen werden verwendet, wenn die Anzahl unbekannt ist und von einer Bedingung abh√§ngt.","points":1,"category":"Best Practices"},{"id":"q9","type":"multiple-choice","question":"Welche Aussagen √ºber Rekursion sind korrekt?","options":["Eine rekursive Funktion ruft sich selbst auf","Rekursion ben√∂tigt immer eine Abbruchbedingung","Rekursion ist immer effizienter als Iteration","Fakult√§t und Fibonacci sind klassische Beispiele f√ºr Rekursion"],"correctAnswer":["Eine rekursive Funktion ruft sich selbst auf","Rekursion ben√∂tigt immer eine Abbruchbedingung","Fakult√§t und Fibonacci sind klassische Beispiele f√ºr Rekursion"],"explanation":"Rekursion bedeutet Selbstaufruf und ben√∂tigt eine Abbruchbedingung, um Endlosschleifen zu vermeiden. Rekursion ist nicht immer effizienter als Iteration (oft langsamer wegen Stack-Overhead), aber manchmal eleganter.","points":2,"category":"Rekursion"},{"id":"q10","type":"code","question":"Was gibt diese rekursive Funktion f√ºr fibonacci(5) zur√ºck?","code":"FUNCTION fibonacci(n)\\nBEGIN\\n    IF n <= 1 THEN\\n        RETURN n\\n    ELSE\\n        RETURN fibonacci(n-1) + fibonacci(n-2)\\n    END IF\\nEND","language":"pseudocode","options":["5","8","3","13"],"correctAnswer":"5","explanation":"fibonacci(5) = fibonacci(4) + fibonacci(3) = 3 + 2 = 5. Die Fibonacci-Folge ist: 0, 1, 1, 2, 3, 5, 8, 13... Der 5. Wert (bei Index 5) ist 5.","points":3,"category":"Rekursion"},{"id":"q11","type":"single-choice","question":"Welche Aussage √ºber switch/case-Anweisungen ist korrekt?","options":["Switch/case ist eine Mehrfachverzweigung f√ºr mehrere m√∂gliche Werte","Switch/case kann nur mit Strings verwendet werden","Switch/case ist langsamer als mehrere if-else-Anweisungen","Switch/case ben√∂tigt keine break-Anweisungen"],"correctAnswer":"Switch/case ist eine Mehrfachverzweigung f√ºr mehrere m√∂gliche Werte","explanation":"Switch/case ist eine elegante Mehrfachverzweigung, wenn eine Variable mit mehreren konstanten Werten verglichen werden soll. Break-Anweisungen sind wichtig, um Fall-Through zu vermeiden.","points":1,"category":"Verzweigung"},{"id":"q12","type":"code","question":"Was ist der Fehler in diesem Pseudocode?","code":"BEGIN\\n    i = 0\\n    WHILE i < 10\\n        OUTPUT i\\n    END WHILE\\nEND","language":"pseudocode","options":["Die Variable i wird nie erh√∂ht - Endlosschleife","Die Bedingung ist falsch","Es fehlt das DO-Schl√ºsselwort","Es gibt keinen Fehler"],"correctAnswer":"Die Variable i wird nie erh√∂ht - Endlosschleife","explanation":"Die Variable i wird in der Schleife nie erh√∂ht, daher bleibt die Bedingung i < 10 immer true und es entsteht eine Endlosschleife. Es sollte 'i = i + 1' in der Schleife stehen.","points":2,"category":"Fehleranalyse"},{"id":"q13","type":"single-choice","question":"Warum sind Struktogramme und Programmablaufpl√§ne (PAP) ab 2025 nicht mehr pr√ºfungsrelevant?","options":["Sie sind veraltet und nicht standardisiert (kein UML)","Sie sind zu einfach","Sie werden in der Praxis h√§ufiger verwendet","Sie sind nur f√ºr Anf√§nger geeignet"],"correctAnswer":"Sie sind veraltet und nicht standardisiert (kein UML)","explanation":"Struktogramme und PAP sind veraltet (aus den 1960er Jahren), nicht standardisiert und werden in der modernen Softwareentwicklung kaum noch verwendet. Aktivit√§tsdiagramme (UML) sind der moderne Standard.","points":1,"category":"Grundlagen"},{"id":"q14","type":"multiple-choice","question":"Welche Best Practices gelten f√ºr das Schreiben von Pseudocode?","options":["Konsistente Verwendung von Schl√ºsselw√∂rtern in GROSSBUCHSTABEN","Einr√ºckungen zur Darstellung der Hierarchie verwenden","Sprachunabh√§ngig formulieren, keine spezifische Syntax","M√∂glichst viele technische Details einbauen"],"correctAnswer":["Konsistente Verwendung von Schl√ºsselw√∂rtern in GROSSBUCHSTABEN","Einr√ºckungen zur Darstellung der Hierarchie verwenden","Sprachunabh√§ngig formulieren, keine spezifische Syntax"],"explanation":"Guter Pseudocode verwendet konsistente Schl√ºsselw√∂rter in Gro√übuchstaben, Einr√ºckungen f√ºr Struktur und ist sprachunabh√§ngig. Er sollte verst√§ndlich sein, ohne zu viele technische Details.","points":2,"category":"Best Practices"},{"id":"q15","type":"code","question":"Was macht dieser Java-Code?","code":"public int summe(int n) {\\n    if (n <= 0) {\\n        return 0;\\n    }\\n    return n + summe(n - 1);\\n}","language":"java","options":["Berechnet die Summe aller Zahlen von 1 bis n rekursiv","Berechnet die Fakult√§t von n","Berechnet die Fibonacci-Zahl f√ºr n","Gibt immer 0 zur√ºck"],"correctAnswer":"Berechnet die Summe aller Zahlen von 1 bis n rekursiv","explanation":"Die Funktion berechnet rekursiv die Summe: summe(5) = 5 + summe(4) = 5 + 4 + summe(3) = ... = 5 + 4 + 3 + 2 + 1 + 0 = 15. Die Abbruchbedingung ist n <= 0.","points":2,"category":"Rekursion"},{"id":"q16","type":"single-choice","question":"Welches Aktivit√§tsdiagramm-Symbol markiert den Start eines Ablaufs?","options":["Gef√ºllter Kreis (‚óè)","Gef√ºllter Kreis mit Ring (‚óâ)","Raute (‚óÜ)","Rechteck mit abgerundeten Ecken"],"correctAnswer":"Gef√ºllter Kreis (‚óè)","explanation":"Der Startknoten wird als gef√ºllter Kreis (‚óè) dargestellt. Der Endknoten ist ein gef√ºllter Kreis mit Ring (‚óâ), Rauten sind Entscheidungen und Rechtecke sind Aktivit√§ten.","points":1,"category":"Aktivit√§tsdiagramme"},{"id":"q17","type":"code","question":"Wie viele Iterationen f√ºhrt diese Schleife aus?","code":"for (int i = 5; i > 0; i--) {\\n    System.out.println(i);\\n}","language":"java","options":["5","4","6","Endlosschleife"],"correctAnswer":"5","explanation":"Die Schleife startet bei i = 5 und l√§uft, solange i > 0 ist. Sie gibt 5, 4, 3, 2, 1 aus - also 5 Iterationen. Bei i = 0 wird die Bedingung false.","points":2,"category":"Schleifen"},{"id":"q18","type":"single-choice","question":"Was ist der Vorteil von Aktivit√§tsdiagrammen gegen√ºber Pseudocode?","options":["Grafische Darstellung ist √ºbersichtlicher bei einfachen Abl√§ufen","Aktivit√§tsdiagramme sind schneller zu erstellen","Aktivit√§tsdiagramme enthalten mehr Details","Aktivit√§tsdiagramme sind besser f√ºr komplexe Algorithmen"],"correctAnswer":"Grafische Darstellung ist √ºbersichtlicher bei einfachen Abl√§ufen","explanation":"Aktivit√§tsdiagramme sind grafisch und daher √ºbersichtlicher bei einfachen Abl√§ufen. Pseudocode ist besser f√ºr komplexe Algorithmen mit vielen Details und schneller zu erstellen.","points":1,"category":"Vergleich"},{"id":"q19","type":"multiple-choice","question":"Welche Aussagen √ºber for-Schleifen sind korrekt?","options":["For-Schleifen werden auch Z√§hlschleifen genannt","For-Schleifen haben Initialisierung, Bedingung und Inkrement","For-Schleifen k√∂nnen nicht vorzeitig mit break beendet werden","For-Schleifen sind ideal, wenn die Anzahl der Iterationen bekannt ist"],"correctAnswer":["For-Schleifen werden auch Z√§hlschleifen genannt","For-Schleifen haben Initialisierung, Bedingung und Inkrement","For-Schleifen sind ideal, wenn die Anzahl der Iterationen bekannt ist"],"explanation":"For-Schleifen sind Z√§hlschleifen mit drei Teilen: Initialisierung, Bedingung und Inkrement. Sie sind ideal f√ºr bekannte Iterationszahlen und k√∂nnen mit break vorzeitig beendet werden.","points":2,"category":"Schleifen"},{"id":"q20","type":"code","question":"Was ist das Problem mit dieser rekursiven Funktion?","code":"FUNCTION fakultaet(n)\\nBEGIN\\n    RETURN n * fakultaet(n - 1)\\nEND","language":"pseudocode","options":["Es fehlt die Abbruchbedingung - f√ºhrt zu Endlosrekursion","Die Berechnung ist falsch","Rekursion kann nicht f√ºr Fakult√§t verwendet werden","Es gibt kein Problem"],"correctAnswer":"Es fehlt die Abbruchbedingung - f√ºhrt zu Endlosrekursion","explanation":"Die Funktion hat keine Abbruchbedingung (z.B. IF n <= 1 THEN RETURN 1). Ohne diese l√§uft die Rekursion endlos und f√ºhrt zu einem Stack Overflow. Jede Rekursion braucht eine Abbruchbedingung!","points":2,"category":"Fehleranalyse"}]`),ea=["kontrollstrukturen","aktivit√§tsdiagramm","pseudocode","algorithmen","uml","sequenz","verzweigung","schleife","rekursion","if-else","switch-case","while","for","do-while"],na="2025-01-05T12:00:00Z",ta={id:Ws,moduleId:js,title:$s,description:Gs,category:Us,difficulty:Hs,examRelevance:Qs,newIn2025:Zs,timeLimit:Js,passingScore:Ys,questions:Xs,tags:ea,lastUpdated:na},ia=Object.freeze(Object.defineProperty({__proto__:null,category:Us,default:ta,description:Gs,difficulty:Hs,examRelevance:Qs,id:Ws,lastUpdated:na,moduleId:js,newIn2025:Zs,passingScore:Ys,questions:Xs,tags:ea,timeLimit:Js,title:$s},Symbol.toStringTag,{value:"Module"})),ra="fue-02-development-quiz",sa="fue-02-development",aa="F√ú-02: Entwickeln und Bereitstellen von Softwareanwendungen Quiz",oa="Teste dein Wissen √ºber Entwicklungsprozesse, Versionskontrolle, CI/CD, Code-Reviews und Softwarebereitstellung",la="F√ú-02",ua="intermediate",ca="high",da=25,ma=70,ga=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist der Hauptvorteil von Continuous Integration (CI)?","options":["Fr√ºhzeitige Erkennung von Integrationsproblemen durch automatisierte Builds und Tests","Automatische Bereitstellung in die Produktionsumgebung ohne manuelle Pr√ºfung","Vermeidung von Code-Reviews durch automatische Qualit√§tspr√ºfung","Reduzierung der Entwicklungszeit durch Verzicht auf Tests"],"correctAnswer":"Fr√ºhzeitige Erkennung von Integrationsproblemen durch automatisierte Builds und Tests","explanation":"Continuous Integration bedeutet, dass Code-√Ñnderungen regelm√§√üig in das Hauptrepository integriert werden und automatisch gebaut und getestet werden. Dadurch werden Integrationsprobleme fr√ºhzeitig erkannt, bevor sie sich zu gr√∂√üeren Problemen entwickeln. CI ersetzt keine Code-Reviews und bedeutet nicht automatisch Deployment in Produktion.","points":1,"category":"CI/CD"},{"id":"q2","type":"single-choice","question":"Welches Versionskontrollsystem-Konzept beschreibt Git?","options":["Verteiltes Versionskontrollsystem (DVCS)","Zentrales Versionskontrollsystem (CVCS)","Lokales Versionskontrollsystem","Cloud-basiertes Versionskontrollsystem"],"correctAnswer":"Verteiltes Versionskontrollsystem (DVCS)","explanation":"Git ist ein verteiltes Versionskontrollsystem (Distributed Version Control System, DVCS). Jeder Entwickler hat eine vollst√§ndige Kopie des Repositories mit der gesamten Historie. Im Gegensatz zu zentralen Systemen wie SVN ist kein st√§ndiger Server-Zugriff erforderlich, und Operationen wie Commits und Branches sind lokal m√∂glich.","points":1,"category":"Versionskontrolle"},{"id":"q3","type":"multiple-choice","question":"Welche Aspekte sollten bei einem Code-Review gepr√ºft werden? (Mehrere Antworten m√∂glich)","options":["Einhaltung von Coding-Standards und Best Practices","Korrektheit der Implementierung und Logik","Pers√∂nliche Vorlieben des Reviewers bez√ºglich Variablennamen","Sicherheitsl√ºcken und potenzielle Bugs"],"correctAnswer":["Einhaltung von Coding-Standards und Best Practices","Korrektheit der Implementierung und Logik","Sicherheitsl√ºcken und potenzielle Bugs"],"explanation":"Code-Reviews sollten sich auf objektive Qualit√§tskriterien konzentrieren: Coding-Standards, korrekte Implementierung, Sicherheit, Performance und Wartbarkeit. Pers√∂nliche Vorlieben sollten keine Rolle spielen, es sei denn, sie sind in Team-Standards definiert. Code-Reviews dienen der Qualit√§tssicherung und dem Wissensaustausch im Team.","points":2,"category":"Code-Reviews"},{"id":"q4","type":"single-choice","question":"Was ist der Unterschied zwischen Continuous Delivery (CD) und Continuous Deployment?","options":["Continuous Delivery erm√∂glicht jederzeit ein Deployment, Continuous Deployment deployed automatisch","Continuous Delivery ist schneller als Continuous Deployment","Continuous Deployment erfordert manuelle Tests, Continuous Delivery nicht","Es gibt keinen Unterschied, die Begriffe sind synonym"],"correctAnswer":"Continuous Delivery erm√∂glicht jederzeit ein Deployment, Continuous Deployment deployed automatisch","explanation":"Bei Continuous Delivery ist die Software jederzeit in einem deploybaren Zustand, aber das Deployment in Produktion erfolgt manuell durch eine Freigabe-Entscheidung. Bei Continuous Deployment wird jede erfolgreiche √Ñnderung automatisch in Produktion deployed, ohne manuelle Intervention. Beide setzen umfangreiche automatisierte Tests voraus.","points":1,"category":"CI/CD"},{"id":"q5","type":"single-choice","question":"Welcher Git-Befehl wird verwendet, um √Ñnderungen aus einem Remote-Repository zu holen und mit dem lokalen Branch zu mergen?","options":["git pull","git fetch","git clone","git merge"],"correctAnswer":"git pull","explanation":"Der Befehl 'git pull' holt √Ñnderungen vom Remote-Repository und merged sie automatisch in den aktuellen lokalen Branch. Er ist eine Kombination aus 'git fetch' (√Ñnderungen holen) und 'git merge' (√Ñnderungen zusammenf√ºhren). 'git clone' wird nur einmalig zum Klonen eines Repositories verwendet.","points":1,"category":"Versionskontrolle"},{"id":"q6","type":"single-choice","question":"Was ist ein Feature-Branch in der Versionskontrolle?","options":["Ein separater Branch zur Entwicklung einer neuen Funktion, der sp√§ter in den Hauptbranch gemergt wird","Der Hauptbranch, in dem alle Features entwickelt werden","Ein Branch, der nur f√ºr Bugfixes verwendet wird","Ein tempor√§rer Branch, der nach jedem Commit gel√∂scht wird"],"correctAnswer":"Ein separater Branch zur Entwicklung einer neuen Funktion, der sp√§ter in den Hauptbranch gemergt wird","explanation":"Ein Feature-Branch ist ein separater Entwicklungszweig, in dem eine neue Funktion isoliert entwickelt wird, ohne den Hauptbranch (main/master) zu beeinflussen. Nach Fertigstellung und erfolgreichen Tests wird der Feature-Branch in den Hauptbranch gemergt. Dies erm√∂glicht parallele Entwicklung und einfaches Rollback bei Problemen.","points":1,"category":"Versionskontrolle"},{"id":"q7","type":"multiple-choice","question":"Welche Komponenten geh√∂ren typischerweise zu einer CI/CD-Pipeline? (Mehrere Antworten m√∂glich)","options":["Automatisierte Build-Prozesse","Automatisierte Tests (Unit, Integration, E2E)","Manuelle Code-Formatierung","Automatisches Deployment in verschiedene Umgebungen"],"correctAnswer":["Automatisierte Build-Prozesse","Automatisierte Tests (Unit, Integration, E2E)","Automatisches Deployment in verschiedene Umgebungen"],"explanation":"Eine CI/CD-Pipeline automatisiert den gesamten Prozess von Code-√Ñnderung bis Deployment: Build, automatisierte Tests auf verschiedenen Ebenen, Code-Qualit√§tspr√ºfung, Security-Scans und Deployment. Manuelle Schritte wie Code-Formatierung sollten durch automatische Tools (Linter, Formatter) ersetzt werden, um Konsistenz zu gew√§hrleisten.","points":2,"category":"CI/CD"},{"id":"q8","type":"single-choice","question":"Was ist der Zweck eines Pull Requests (oder Merge Requests)?","options":["Code-√Ñnderungen zur Review vorlegen, bevor sie in den Hauptbranch gemergt werden","√Ñnderungen vom Remote-Repository in das lokale Repository ziehen","Einen neuen Branch vom Hauptbranch erstellen","Konflikte zwischen Branches automatisch aufl√∂sen"],"correctAnswer":"Code-√Ñnderungen zur Review vorlegen, bevor sie in den Hauptbranch gemergt werden","explanation":"Ein Pull Request (GitHub) oder Merge Request (GitLab) ist ein Mechanismus, um Code-√Ñnderungen zur Review vorzulegen. Andere Entwickler k√∂nnen den Code pr√ºfen, kommentieren und Verbesserungen vorschlagen, bevor die √Ñnderungen in den Hauptbranch gemergt werden. Dies ist ein wichtiger Teil des Code-Review-Prozesses und der Qualit√§tssicherung.","points":1,"category":"Versionskontrolle"},{"id":"q9","type":"single-choice","question":"Welche Entwicklungsmethodik beschreibt das Wasserfallmodell?","options":["Sequenzielle Phasen: Anforderungen ‚Üí Design ‚Üí Implementierung ‚Üí Test ‚Üí Wartung","Iterative Entwicklung in kurzen Sprints mit regelm√§√üigem Feedback","Parallele Entwicklung mehrerer Features ohne feste Reihenfolge","Kontinuierliche Entwicklung ohne definierte Phasen"],"correctAnswer":"Sequenzielle Phasen: Anforderungen ‚Üí Design ‚Üí Implementierung ‚Üí Test ‚Üí Wartung","explanation":"Das Wasserfallmodell ist ein sequenzielles Vorgehensmodell, bei dem jede Phase vollst√§ndig abgeschlossen sein muss, bevor die n√§chste beginnt. Es ist wenig flexibel bei √Ñnderungen. Im Gegensatz dazu stehen agile Methoden wie Scrum, die iterativ und inkrementell arbeiten und √Ñnderungen w√§hrend der Entwicklung erm√∂glichen.","points":1,"category":"Entwicklungsprozesse"},{"id":"q10","type":"single-choice","question":"Was bedeutet 'git commit'?","options":["√Ñnderungen im lokalen Repository dauerhaft speichern mit einer Beschreibung","√Ñnderungen zum Remote-Repository hochladen","√Ñnderungen aus dem Remote-Repository herunterladen","Einen neuen Branch erstellen"],"correctAnswer":"√Ñnderungen im lokalen Repository dauerhaft speichern mit einer Beschreibung","explanation":"'git commit' speichert die im Staging-Bereich (nach 'git add') vorbereiteten √Ñnderungen dauerhaft im lokalen Repository mit einer Commit-Message. Der Commit bleibt zun√§chst lokal und wird erst mit 'git push' zum Remote-Repository hochgeladen. Jeder Commit erh√§lt einen eindeutigen Hash und ist Teil der Versionshistorie.","points":1,"category":"Versionskontrolle"},{"id":"q11","type":"multiple-choice","question":"Welche Vorteile bietet Versionskontrolle? (Mehrere Antworten m√∂glich)","options":["Nachvollziehbarkeit von √Ñnderungen durch Historie","Parallele Entwicklung durch Branches","Automatische Behebung aller Merge-Konflikte","M√∂glichkeit zum Rollback auf fr√ºhere Versionen"],"correctAnswer":["Nachvollziehbarkeit von √Ñnderungen durch Historie","Parallele Entwicklung durch Branches","M√∂glichkeit zum Rollback auf fr√ºhere Versionen"],"explanation":"Versionskontrollsysteme bieten viele Vorteile: vollst√§ndige Historie aller √Ñnderungen, parallele Entwicklung durch Branches, Rollback-M√∂glichkeiten, Zusammenarbeit im Team und Backup. Merge-Konflikte m√ºssen jedoch manuell aufgel√∂st werden, da das System nicht automatisch entscheiden kann, welche √Ñnderung korrekt ist.","points":2,"category":"Versionskontrolle"},{"id":"q12","type":"single-choice","question":"Was ist ein Build-Artefakt in einer CI/CD-Pipeline?","options":["Das kompilierte, deploybare Ergebnis des Build-Prozesses (z.B. JAR, WAR, Docker-Image)","Der Quellcode vor der Kompilierung","Die Konfigurationsdateien f√ºr den Build-Server","Die Logdateien des Build-Prozesses"],"correctAnswer":"Das kompilierte, deploybare Ergebnis des Build-Prozesses (z.B. JAR, WAR, Docker-Image)","explanation":"Ein Build-Artefakt ist das Endprodukt des Build-Prozesses ‚Äì eine deploybare Version der Anwendung. Bei Java sind das z.B. JAR- oder WAR-Dateien, bei containerisierten Anwendungen Docker-Images. Diese Artefakte werden in einem Artefakt-Repository gespeichert und k√∂nnen in verschiedene Umgebungen deployed werden.","points":1,"category":"CI/CD"},{"id":"q13","type":"single-choice","question":"Welche Aussage √ºber agile Entwicklung ist korrekt?","options":["Agile Entwicklung bevorzugt funktionierende Software √ºber umfassende Dokumentation","Agile Entwicklung erfordert vollst√§ndige Planung vor Entwicklungsbeginn","Agile Entwicklung verzichtet komplett auf Dokumentation","Agile Entwicklung erlaubt keine √Ñnderungen nach Sprint-Beginn"],"correctAnswer":"Agile Entwicklung bevorzugt funktionierende Software √ºber umfassende Dokumentation","explanation":"Das Agile Manifest besagt: 'Funktionierende Software √ºber umfassende Dokumentation'. Das bedeutet nicht, dass Dokumentation unwichtig ist, sondern dass der Fokus auf lauff√§higer Software liegt. Agile Methoden sind flexibel, erlauben √Ñnderungen und arbeiten iterativ statt mit vollst√§ndiger Vorausplanung.","points":1,"category":"Entwicklungsprozesse"},{"id":"q14","type":"single-choice","question":"Was ist der Zweck von Semantic Versioning (z.B. 2.4.1)?","options":["Strukturierte Versionsnummern: Major.Minor.Patch zur Kommunikation von √Ñnderungstypen","Automatische Versionierung durch das Build-System","Verschl√ºsselung der Versionsnummer f√ºr Sicherheit","Zuf√§llige Nummerierung zur Vermeidung von Konflikten"],"correctAnswer":"Strukturierte Versionsnummern: Major.Minor.Patch zur Kommunikation von √Ñnderungstypen","explanation":"Semantic Versioning (SemVer) verwendet das Format MAJOR.MINOR.PATCH: MAJOR wird bei inkompatiblen API-√Ñnderungen erh√∂ht, MINOR bei abw√§rtskompatiblen neuen Features, PATCH bei abw√§rtskompatiblen Bugfixes. Dies erm√∂glicht Entwicklern, die Art der √Ñnderungen auf einen Blick zu erkennen und Abh√§ngigkeiten sicher zu verwalten.","points":1,"category":"Entwicklungsprozesse"},{"id":"q15","type":"multiple-choice","question":"Welche Deployment-Strategien minimieren Ausfallzeiten? (Mehrere Antworten m√∂glich)","options":["Blue-Green Deployment","Rolling Deployment","Big Bang Deployment","Canary Deployment"],"correctAnswer":["Blue-Green Deployment","Rolling Deployment","Canary Deployment"],"explanation":"Blue-Green Deployment (zwei identische Umgebungen, Umschalten), Rolling Deployment (schrittweises Update) und Canary Deployment (schrittweise Ausrollung an Teilmenge der Nutzer) minimieren Ausfallzeiten. Big Bang Deployment bedeutet, alle Instanzen gleichzeitig zu aktualisieren, was zu Ausfallzeiten f√ºhrt und bei Problemen schwer r√ºckg√§ngig zu machen ist.","points":2,"category":"CI/CD"},{"id":"q16","type":"single-choice","question":"Was ist der Hauptzweck von Branching-Strategien wie Git Flow?","options":["Strukturierte Organisation der Entwicklung mit definierten Branch-Typen und Merge-Regeln","Automatische Erstellung von Branches f√ºr jeden Commit","Vermeidung von Merge-Konflikten durch separate Repositories","Beschleunigung des Build-Prozesses"],"correctAnswer":"Strukturierte Organisation der Entwicklung mit definierten Branch-Typen und Merge-Regeln","explanation":"Git Flow und √§hnliche Branching-Strategien definieren klare Regeln f√ºr Branch-Typen (main, develop, feature, release, hotfix) und deren Verwendung. Dies strukturiert die Zusammenarbeit im Team, macht den Entwicklungsprozess nachvollziehbar und reduziert Konflikte. Es geht um Organisation, nicht um technische Automatisierung.","points":1,"category":"Versionskontrolle"},{"id":"q17","type":"single-choice","question":"Was ist Infrastructure as Code (IaC)?","options":["Verwaltung und Bereitstellung von Infrastruktur durch maschinenlesbare Definitionsdateien","Programmierung von Netzwerk-Hardware in Assembler","Manuelle Konfiguration von Servern durch Skripte","Entwicklung von Anwendungen direkt auf Produktionsservern"],"correctAnswer":"Verwaltung und Bereitstellung von Infrastruktur durch maschinenlesbare Definitionsdateien","explanation":"Infrastructure as Code (IaC) bedeutet, dass Infrastruktur (Server, Netzwerke, Datenbanken) durch Code-Dateien definiert wird, die versioniert und automatisiert ausgef√ºhrt werden k√∂nnen. Tools wie Terraform, Ansible oder CloudFormation erm√∂glichen reproduzierbare, konsistente Infrastruktur-Deployments und behandeln Infrastruktur wie Anwendungscode.","points":1,"category":"CI/CD"},{"id":"q18","type":"single-choice","question":"Was ist ein Merge-Konflikt in Git?","options":["Situation, in der Git nicht automatisch entscheiden kann, welche √Ñnderungen √ºbernommen werden sollen","Ein Fehler beim Kompilieren des Codes nach einem Merge","Ein Problem mit der Netzwerkverbindung zum Remote-Repository","Ein Konflikt zwischen verschiedenen Git-Versionen"],"correctAnswer":"Situation, in der Git nicht automatisch entscheiden kann, welche √Ñnderungen √ºbernommen werden sollen","explanation":"Ein Merge-Konflikt tritt auf, wenn dieselben Zeilen in verschiedenen Branches unterschiedlich ge√§ndert wurden und Git nicht automatisch entscheiden kann, welche Version korrekt ist. Der Entwickler muss den Konflikt manuell aufl√∂sen, indem er entscheidet, welche √Ñnderungen √ºbernommen werden sollen. Dies ist ein normaler Teil der Zusammenarbeit im Team.","points":1,"category":"Versionskontrolle"},{"id":"q19","type":"multiple-choice","question":"Welche Aspekte geh√∂ren zu DevOps-Praktiken? (Mehrere Antworten m√∂glich)","options":["Automatisierung von Build, Test und Deployment","Enge Zusammenarbeit zwischen Entwicklung und Operations","Strikte Trennung von Entwicklungs- und Betriebsteams","Monitoring und kontinuierliches Feedback"],"correctAnswer":["Automatisierung von Build, Test und Deployment","Enge Zusammenarbeit zwischen Entwicklung und Operations","Monitoring und kontinuierliches Feedback"],"explanation":"DevOps vereint Entwicklung (Development) und Betrieb (Operations) durch Automatisierung, Zusammenarbeit und kontinuierliches Feedback. Ziel ist schnellere, zuverl√§ssigere Software-Auslieferung. Die strikte Trennung von Teams widerspricht dem DevOps-Gedanken ‚Äì stattdessen arbeiten cross-funktionale Teams zusammen.","points":2,"category":"Entwicklungsprozesse"},{"id":"q20","type":"single-choice","question":"Was ist der Zweck von Code-Linting in einer CI-Pipeline?","options":["Automatische Pr√ºfung des Codes auf Stil-Verst√∂√üe, potenzielle Fehler und Best Practices","Kompilierung des Quellcodes in ausf√ºhrbare Dateien","Ausf√ºhrung von Unit-Tests","Deployment der Anwendung in die Produktionsumgebung"],"correctAnswer":"Automatische Pr√ºfung des Codes auf Stil-Verst√∂√üe, potenzielle Fehler und Best Practices","explanation":"Linting-Tools (wie ESLint, Pylint, Checkstyle) analysieren den Quellcode statisch auf Stil-Verst√∂√üe, potenzielle Bugs, Code-Smells und Abweichungen von Best Practices. In einer CI-Pipeline sorgt Linting f√ºr konsistente Code-Qualit√§t und verhindert, dass problematischer Code in das Repository gelangt. Es ist Teil der automatischen Qualit√§tssicherung.","points":1,"category":"CI/CD"}]`),ha=["Entwicklungsprozesse","Versionskontrolle","Git","CI/CD","Code-Reviews","Deployment","DevOps","Agile","Branching"],pa="2025-01-15T10:30:00Z",fa={id:ra,moduleId:sa,title:aa,description:oa,category:la,difficulty:ua,examRelevance:ca,timeLimit:da,passingScore:ma,questions:ga,tags:ha,lastUpdated:pa},ba=Object.freeze(Object.defineProperty({__proto__:null,category:la,default:fa,description:oa,difficulty:ua,examRelevance:ca,id:ra,lastUpdated:pa,moduleId:sa,passingScore:ma,questions:ga,tags:ha,timeLimit:da,title:aa},Symbol.toStringTag,{value:"Module"})),ka="fue-03-load-performance-tests-quiz",za="fue-03-load-performance-tests",va="Last-, Performance- und Stresstests Quiz",ya="Teste dein Wissen √ºber Last-, Performance- und Stresstests",Sa="F√ú-03",wa="intermediate",Aa="high",Ea=10,_a=70,Da=[{id:"q1",type:"single-choice",question:"Was ist Last-, Performance- und Stresstests?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],Pa=["lasttest","performancetest","stresstest","testing","qualit√§tssicherung","metriken","tools"],Ta={id:ka,moduleId:za,title:va,description:ya,category:Sa,difficulty:wa,examRelevance:Aa,timeLimit:Ea,passingScore:_a,questions:Da,tags:Pa},qa=Object.freeze(Object.defineProperty({__proto__:null,category:Sa,default:Ta,description:ya,difficulty:wa,examRelevance:Aa,id:ka,moduleId:za,passingScore:_a,questions:Da,tags:Pa,timeLimit:Ea,title:va},Symbol.toStringTag,{value:"Module"})),Ra="fue-03-quality-quiz",Ia="fue-03-quality",Ca="F√ú-03: Durchf√ºhren von qualit√§tssichernden Ma√ünahmen Quiz",La="Teste dein Wissen √ºber F√ú-03: Durchf√ºhren von qualit√§tssichernden Ma√ünahmen",Ma="F√ú-03",Oa="intermediate",Na="high",Ba=10,xa=70,Va=[{id:"q1",type:"single-choice",question:"Was ist F√ú-03: Durchf√ºhren von qualit√§tssichernden Ma√ünahmen?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],Fa=["Software-Tests","Black Box","White Box","Review","Extremwertetest","Last-Tests","Performance-Tests","Qualit√§tssicherung"],Ka={id:Ra,moduleId:Ia,title:Ca,description:La,category:Ma,difficulty:Oa,examRelevance:Na,timeLimit:Ba,passingScore:xa,questions:Va,tags:Fa},Wa=Object.freeze(Object.defineProperty({__proto__:null,category:Ma,default:Ka,description:La,difficulty:Oa,examRelevance:Na,id:Ra,moduleId:Ia,passingScore:xa,questions:Va,tags:Fa,timeLimit:Ba,title:Ca},Symbol.toStringTag,{value:"Module"})),ja="fue-04-security-quiz",$a="fue-04-security",Ga="F√ú-04: Sicherstellen der Informationssicherheit Quiz",Ua="Teste dein Wissen √ºber Informationssicherheit, DSGVO, TOM, Verschl√ºsselung und Authentifizierung",Ha="F√ú-04",Qa="intermediate",Za="high",Ja=25,Ya=70,Xa=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was bedeutet das 'C' in der CIA-Triade der Informationssicherheit?","options":["Confidentiality (Vertraulichkeit)","Consistency (Konsistenz)","Compliance (Konformit√§t)","Control (Kontrolle)"],"correctAnswer":"Confidentiality (Vertraulichkeit)","explanation":"Die CIA-Triade besteht aus Confidentiality (Vertraulichkeit), Integrity (Integrit√§t) und Availability (Verf√ºgbarkeit). Vertraulichkeit bedeutet, dass nur autorisierte Personen auf Informationen zugreifen d√ºrfen.","points":1,"category":"Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche Ma√ünahmen dienen der Sicherstellung der Verf√ºgbarkeit (Availability)? (Mehrere Antworten m√∂glich)","options":["Redundante Systeme","Regelm√§√üige Backups","Verschl√ºsselung von Daten","DDoS-Schutz"],"correctAnswer":["Redundante Systeme","Regelm√§√üige Backups","DDoS-Schutz"],"explanation":"Verf√ºgbarkeit bedeutet, dass Systeme und Daten bei Bedarf verf√ºgbar sein m√ºssen. Redundante Systeme, Backups und DDoS-Schutz tragen dazu bei. Verschl√ºsselung dient prim√§r der Vertraulichkeit, nicht der Verf√ºgbarkeit.","points":2,"category":"Schutzziele"},{"id":"q3","type":"single-choice","question":"Was ist das Hauptziel der Datenschutz-Grundverordnung (DSGVO)?","options":["Schutz personenbezogener Daten und Rechte der Betroffenen","Schutz von Unternehmensdaten vor Hackern","Regulierung des internationalen Datenverkehrs","Verhinderung von Spam-E-Mails"],"correctAnswer":"Schutz personenbezogener Daten und Rechte der Betroffenen","explanation":"Die DSGVO regelt den Umgang mit personenbezogenen Daten in der EU und st√§rkt die Rechte der Betroffenen (z.B. Auskunftsrecht, Recht auf L√∂schung). Sie sch√ºtzt die Privatsph√§re nat√ºrlicher Personen.","points":1,"category":"DSGVO"},{"id":"q4","type":"multiple-choice","question":"Welche Rechte haben Betroffene nach der DSGVO? (Mehrere Antworten m√∂glich)","options":["Auskunftsrecht √ºber gespeicherte Daten","Recht auf L√∂schung (Recht auf Vergessenwerden)","Recht auf kostenlose IT-Sicherheitsberatung","Recht auf Daten√ºbertragbarkeit"],"correctAnswer":["Auskunftsrecht √ºber gespeicherte Daten","Recht auf L√∂schung (Recht auf Vergessenwerden)","Recht auf Daten√ºbertragbarkeit"],"explanation":"Die DSGVO gew√§hrt Betroffenen mehrere Rechte: Auskunftsrecht (Art. 15), Recht auf L√∂schung (Art. 17), Recht auf Daten√ºbertragbarkeit (Art. 20), Recht auf Berichtigung (Art. 16) und Widerspruchsrecht (Art. 21). Ein Recht auf kostenlose IT-Beratung ist nicht Teil der DSGVO.","points":2,"category":"DSGVO"},{"id":"q5","type":"single-choice","question":"Was bedeutet das DSGVO-Prinzip der 'Datenminimierung'?","options":["Es sollen nur die f√ºr den Zweck notwendigen Daten erhoben werden","Daten sollen auf m√∂glichst kleinen Speichermedien gespeichert werden","Daten sollen komprimiert werden, um Speicherplatz zu sparen","Es sollen m√∂glichst wenige Mitarbeiter Zugriff auf Daten haben"],"correctAnswer":"Es sollen nur die f√ºr den Zweck notwendigen Daten erhoben werden","explanation":"Datenminimierung bedeutet, dass nur die Daten erhoben und verarbeitet werden d√ºrfen, die f√ºr den festgelegten Zweck tats√§chlich erforderlich sind. Dies minimiert das Risiko bei Datenschutzverletzungen.","points":1,"category":"DSGVO"},{"id":"q6","type":"single-choice","question":"Was ist der Zweck der Zutrittskontrolle als Teil der TOM (Technisch-Organisatorische Ma√ünahmen)?","options":["Verhinderung des unbefugten physischen Zugangs zu R√§umen und Geb√§uden","Verhinderung der unbefugten Nutzung von IT-Systemen","Kontrolle, wer auf welche Daten zugreifen darf","Nachvollziehbarkeit von Daten√§nderungen"],"correctAnswer":"Verhinderung des unbefugten physischen Zugangs zu R√§umen und Geb√§uden","explanation":"Zutrittskontrolle verhindert den unbefugten physischen Zugang zu R√§umen (z.B. Serverr√§umen) durch Ma√ünahmen wie Zugangskontrollen, Chipkarten oder Alarmanlagen. Zugangskontrolle bezieht sich auf IT-Systeme, Zugriffskontrolle auf Daten.","points":1,"category":"TOM"},{"id":"q7","type":"single-choice","question":"Welche TOM-Ma√ünahme stellt sicher, dass nur autorisierte Benutzer auf bestimmte Daten zugreifen k√∂nnen?","options":["Zugriffskontrolle","Zutrittskontrolle","Weitergabekontrolle","Eingabekontrolle"],"correctAnswer":"Zugriffskontrolle","explanation":"Zugriffskontrolle regelt, wer auf welche Daten zugreifen darf (z.B. durch RBAC, Least-Privilege-Prinzip). Zutrittskontrolle bezieht sich auf physischen Zugang, Weitergabekontrolle auf Daten√ºbertragung, Eingabekontrolle auf Nachvollziehbarkeit von √Ñnderungen.","points":1,"category":"TOM"},{"id":"q8","type":"single-choice","question":"Was besagt die 3-2-1-Backup-Regel?","options":["3 Kopien der Daten, 2 verschiedene Medientypen, 1 Kopie extern","3 Backups pro Tag, 2 Backups pro Woche, 1 Backup pro Monat","3 Mitarbeiter f√ºr Backups, 2 Backup-Systeme, 1 Notfallplan","3 Stunden maximale Wiederherstellungszeit, 2 Stunden Datenverlust, 1 Backup-Server"],"correctAnswer":"3 Kopien der Daten, 2 verschiedene Medientypen, 1 Kopie extern","explanation":"Die 3-2-1-Regel ist eine bew√§hrte Backup-Strategie: 3 Kopien der Daten (Original + 2 Backups), auf 2 verschiedenen Medientypen (z.B. Festplatte und Cloud), mit 1 Kopie an einem externen Standort (Schutz vor lokalen Katastrophen).","points":1,"category":"Backup"},{"id":"q9","type":"single-choice","question":"Was ist der Hauptunterschied zwischen symmetrischer und asymmetrischer Verschl√ºsselung?","options":["Symmetrisch verwendet einen Schl√ºssel, asymmetrisch ein Schl√ºsselpaar (√∂ffentlich/privat)","Symmetrisch ist unsicher, asymmetrisch ist sicher","Symmetrisch ist langsam, asymmetrisch ist schnell","Symmetrisch wird f√ºr E-Mails verwendet, asymmetrisch f√ºr Dateien"],"correctAnswer":"Symmetrisch verwendet einen Schl√ºssel, asymmetrisch ein Schl√ºsselpaar (√∂ffentlich/privat)","explanation":"Bei symmetrischer Verschl√ºsselung wird derselbe Schl√ºssel f√ºr Ver- und Entschl√ºsselung verwendet (z.B. AES). Bei asymmetrischer Verschl√ºsselung gibt es ein Schl√ºsselpaar: √∂ffentlicher Schl√ºssel zum Verschl√ºsseln, privater Schl√ºssel zum Entschl√ºsseln (z.B. RSA). Symmetrisch ist schneller, asymmetrisch l√∂st das Schl√ºsselaustausch-Problem.","points":1,"category":"Verschl√ºsselung"},{"id":"q10","type":"single-choice","question":"Welcher Algorithmus eignet sich am besten f√ºr die sichere Speicherung von Passw√∂rtern?","options":["bcrypt oder Argon2 (Hashing mit Salt)","AES (symmetrische Verschl√ºsselung)","RSA (asymmetrische Verschl√ºsselung)","Base64 (Kodierung)"],"correctAnswer":"bcrypt oder Argon2 (Hashing mit Salt)","explanation":"Passw√∂rter sollten niemals im Klartext oder verschl√ºsselt gespeichert werden, sondern gehasht. bcrypt und Argon2 sind speziell f√ºr Passwort-Hashing entwickelte Algorithmen mit automatischem Salt und einstellbarer Rechenzeit. AES und RSA sind Verschl√ºsselungsverfahren (umkehrbar), Base64 ist nur eine Kodierung ohne Sicherheit.","points":1,"category":"Verschl√ºsselung"},{"id":"q11","type":"multiple-choice","question":"Welche Aussagen √ºber Hashing sind korrekt? (Mehrere Antworten m√∂glich)","options":["Hashing ist eine Einweg-Funktion und nicht umkehrbar","Hashing wird f√ºr Integrit√§tspr√ºfungen verwendet","Hashing ist dasselbe wie Verschl√ºsselung","SHA-256 ist ein Hashing-Algorithmus"],"correctAnswer":["Hashing ist eine Einweg-Funktion und nicht umkehrbar","Hashing wird f√ºr Integrit√§tspr√ºfungen verwendet","SHA-256 ist ein Hashing-Algorithmus"],"explanation":"Hashing ist eine Einweg-Funktion, die aus beliebigen Daten einen Hashwert fester L√§nge erzeugt. Der Prozess ist nicht umkehrbar. Hashing wird f√ºr Integrit√§tspr√ºfungen, Passwort-Speicherung und digitale Signaturen verwendet. SHA-256 ist ein weit verbreiteter Hashing-Algorithmus. Verschl√ºsselung ist umkehrbar, Hashing nicht.","points":2,"category":"Verschl√ºsselung"},{"id":"q12","type":"single-choice","question":"Was ist Multi-Faktor-Authentifizierung (MFA)?","options":["Kombination aus mindestens zwei verschiedenen Authentifizierungsfaktoren","Verwendung mehrerer Passw√∂rter gleichzeitig","Authentifizierung durch mehrere Personen","Mehrfache Eingabe desselben Passworts"],"correctAnswer":"Kombination aus mindestens zwei verschiedenen Authentifizierungsfaktoren","explanation":"MFA kombiniert mindestens zwei verschiedene Faktoren: Wissen (Passwort), Besitz (Smartphone, Token) und/oder Biometrie (Fingerabdruck). Dies erh√∂ht die Sicherheit erheblich, da ein Angreifer mehrere Faktoren kompromittieren m√ºsste.","points":1,"category":"Authentifizierung"},{"id":"q13","type":"multiple-choice","question":"Welche der folgenden sind Authentifizierungsfaktoren? (Mehrere Antworten m√∂glich)","options":["Wissen (z.B. Passwort, PIN)","Besitz (z.B. Smartphone, Hardware-Token)","Biometrie (z.B. Fingerabdruck, Gesichtserkennung)","Standort (z.B. IP-Adresse)"],"correctAnswer":["Wissen (z.B. Passwort, PIN)","Besitz (z.B. Smartphone, Hardware-Token)","Biometrie (z.B. Fingerabdruck, Gesichtserkennung)"],"explanation":"Die drei klassischen Authentifizierungsfaktoren sind: Wissen (Something you know), Besitz (Something you have) und Biometrie (Something you are). Standort kann als zus√§tzlicher Kontext verwendet werden, ist aber kein klassischer Authentifizierungsfaktor.","points":2,"category":"Authentifizierung"},{"id":"q14","type":"single-choice","question":"Was bedeutet RBAC (Role-Based Access Control)?","options":["Benutzer werden Rollen zugewiesen, die bestimmte Berechtigungen haben","Jeder Benutzer hat individuelle Berechtigungen ohne Rollen","Berechtigungen werden basierend auf dem Standort vergeben","Alle Benutzer haben dieselben Berechtigungen"],"correctAnswer":"Benutzer werden Rollen zugewiesen, die bestimmte Berechtigungen haben","explanation":"Bei RBAC werden Benutzer Rollen zugewiesen (z.B. Admin, Editor, Viewer), und diese Rollen haben definierte Berechtigungen. Dies vereinfacht die Verwaltung von Zugriffsrechten erheblich, da nicht f√ºr jeden Benutzer einzeln Berechtigungen vergeben werden m√ºssen.","points":1,"category":"Autorisierung"},{"id":"q15","type":"single-choice","question":"Was bedeutet das Least-Privilege-Prinzip?","options":["Benutzer erhalten nur die minimal notwendigen Berechtigungen f√ºr ihre Aufgaben","Benutzer erhalten m√∂glichst viele Berechtigungen f√ºr maximale Flexibilit√§t","Nur privilegierte Benutzer d√ºrfen auf das System zugreifen","Berechtigungen werden nach dem Zufallsprinzip vergeben"],"correctAnswer":"Benutzer erhalten nur die minimal notwendigen Berechtigungen f√ºr ihre Aufgaben","explanation":"Das Least-Privilege-Prinzip (Prinzip der minimalen Rechtevergabe) besagt, dass Benutzer und Prozesse nur die Berechtigungen erhalten sollten, die sie f√ºr ihre Aufgaben unbedingt ben√∂tigen. Dies minimiert das Risiko bei Sicherheitsvorf√§llen.","points":1,"category":"Autorisierung"},{"id":"q16","type":"single-choice","question":"Was ist der Unterschied zwischen RTO (Recovery Time Objective) und RPO (Recovery Point Objective)?","options":["RTO ist die maximale Ausfallzeit, RPO ist der maximale Datenverlust","RTO ist der maximale Datenverlust, RPO ist die maximale Ausfallzeit","RTO und RPO bedeuten dasselbe","RTO bezieht sich auf Backups, RPO auf Verschl√ºsselung"],"correctAnswer":"RTO ist die maximale Ausfallzeit, RPO ist der maximale Datenverlust","explanation":"RTO (Recovery Time Objective) definiert die maximale akzeptable Ausfallzeit eines Systems. RPO (Recovery Point Objective) definiert den maximalen akzeptablen Datenverlust (z.B. 1 Stunde bedeutet, dass maximal die Daten der letzten Stunde verloren gehen d√ºrfen). Beide Werte sind wichtig f√ºr Disaster Recovery Planung.","points":1,"category":"Disaster Recovery"},{"id":"q17","type":"single-choice","question":"Welche Backup-Strategie sichert nur die √Ñnderungen seit dem letzten Backup (egal ob Voll- oder Inkrementell)?","options":["Inkrementelles Backup","Vollbackup","Differentielles Backup","Snapshot-Backup"],"correctAnswer":"Inkrementelles Backup","explanation":"Inkrementelles Backup sichert nur die √Ñnderungen seit dem letzten Backup (egal welcher Art). Differentielles Backup sichert alle √Ñnderungen seit dem letzten Vollbackup. Vollbackup sichert alle Daten. Inkrementell ist am schnellsten, erfordert aber bei Wiederherstellung alle inkrementellen Backups seit dem letzten Vollbackup.","points":1,"category":"Backup"},{"id":"q18","type":"multiple-choice","question":"Welche Ma√ünahmen geh√∂ren zur Weitergabekontrolle (TOM)? (Mehrere Antworten m√∂glich)","options":["Verschl√ºsselung bei der Daten√ºbertragung (TLS/SSL)","VPN f√ºr Remote-Zugriff","Starke Passw√∂rter f√ºr Benutzerkonten","E-Mail-Verschl√ºsselung"],"correctAnswer":["Verschl√ºsselung bei der Daten√ºbertragung (TLS/SSL)","VPN f√ºr Remote-Zugriff","E-Mail-Verschl√ºsselung"],"explanation":"Weitergabekontrolle sch√ºtzt Daten bei der √úbertragung und beim Transport. Dazu geh√∂ren TLS/SSL f√ºr verschl√ºsselte Verbindungen, VPN f√ºr sicheren Remote-Zugriff und E-Mail-Verschl√ºsselung. Starke Passw√∂rter geh√∂ren zur Zugangskontrolle, nicht zur Weitergabekontrolle.","points":2,"category":"TOM"},{"id":"q19","type":"single-choice","question":"Was ist der Zweck der Eingabekontrolle als Teil der TOM?","options":["Nachvollziehbarkeit von Daten√§nderungen durch Logging und Audit-Trails","Kontrolle der Tastatureingaben von Benutzern","Verhinderung von SQL-Injection-Angriffen","Validierung von Benutzereingaben in Formularen"],"correctAnswer":"Nachvollziehbarkeit von Daten√§nderungen durch Logging und Audit-Trails","explanation":"Eingabekontrolle stellt sicher, dass nachvollziehbar ist, wer wann welche Daten eingegeben, ge√§ndert oder gel√∂scht hat. Dies wird durch Logging, Audit-Trails, Versionierung und Zeitstempel erreicht. Es geht um die Nachvollziehbarkeit von √Ñnderungen, nicht um die Validierung von Eingaben.","points":1,"category":"TOM"},{"id":"q20","type":"code","question":"Was macht der folgende Code?\\n\\nString hash = BCrypt.hashpw(password, BCrypt.gensalt(12));","code":"String hash = BCrypt.hashpw(password, BCrypt.gensalt(12));","language":"java","options":["Erstellt einen sicheren Hash des Passworts mit bcrypt und einem Salt","Verschl√ºsselt das Passwort mit AES-256","Kodiert das Passwort in Base64","Generiert ein zuf√§lliges Passwort mit 12 Zeichen"],"correctAnswer":"Erstellt einen sicheren Hash des Passworts mit bcrypt und einem Salt","explanation":"BCrypt.hashpw() erstellt einen sicheren Hash des Passworts. BCrypt.gensalt(12) generiert einen Salt mit Kostenfaktor 12 (h√∂her = sicherer, aber langsamer). Der Hash enth√§lt Salt und Kostenfaktor, sodass bei der Verifikation kein separater Salt gespeichert werden muss. Dies ist die empfohlene Methode zur Passwort-Speicherung.","points":2,"category":"Praxis"}]`),eo=["Informationssicherheit","TOM","Datenschutz","DSGVO","Verschl√ºsselung","Authentifizierung","Autorisierung","Backup","CIA-Triade"],no="2025-01-15T00:00:00Z",to={id:ja,moduleId:$a,title:Ga,description:Ua,category:Ha,difficulty:Qa,examRelevance:Za,timeLimit:Ja,passingScore:Ya,questions:Xa,tags:eo,lastUpdated:no},io=Object.freeze(Object.defineProperty({__proto__:null,category:Ha,default:to,description:Ua,difficulty:Qa,examRelevance:Za,id:ja,lastUpdated:no,moduleId:$a,passingScore:Ya,questions:Xa,tags:eo,timeLimit:Ja,title:Ga},Symbol.toStringTag,{value:"Module"})),ro="fue-04-security-threats-quiz",so="fue-04-security-threats",ao="IT-Sicherheitsbedrohungen Quiz",oo="Umfassendes Quiz zu IT-Sicherheitsbedrohungen mit 20 Fragen zu Man-in-the-Middle, SQL-Injection, DDoS und Gegenma√ünahmen.",lo="F√ú-04",uo="intermediate",co="high",mo=!0,go=30,ho=70,po=[{id:"q1",type:"single-choice",question:"Was ist ein Man-in-the-Middle (MitM) Angriff?",options:["Ein Angreifer f√§ngt Kommunikation zwischen zwei Parteien ab","Ein Angreifer l√∂scht Daten","Ein Angreifer √ºberlastet einen Server","Ein Angreifer err√§t Passw√∂rter"],correctAnswer:"Ein Angreifer f√§ngt Kommunikation zwischen zwei Parteien ab",explanation:"Bei einem Man-in-the-Middle Angriff positioniert sich der Angreifer zwischen zwei kommunizierenden Parteien und kann Daten abfangen, mitlesen oder manipulieren.",points:1,category:"Man-in-the-Middle"},{id:"q2",type:"single-choice",question:"Welches Protokoll sch√ºtzt vor Man-in-the-Middle Angriffen?",options:["HTTPS/TLS","HTTP","FTP","Telnet"],correctAnswer:"HTTPS/TLS",explanation:"HTTPS mit TLS (Transport Layer Security) verschl√ºsselt die Kommunikation und authentifiziert den Server, wodurch MitM-Angriffe verhindert werden. HTTP, FTP und Telnet sind unverschl√ºsselt.",points:1,category:"Man-in-the-Middle"},{id:"q3",type:"single-choice",question:"Wie kann ein Angreifer einen MitM-Angriff in einem WLAN durchf√ºhren?",options:["Durch Einrichten eines gef√§lschten Access Points (Evil Twin)","Durch L√∂schen von Dateien","Durch Senden von Spam","Durch Raten von Passw√∂rtern"],correctAnswer:"Durch Einrichten eines gef√§lschten Access Points (Evil Twin)",explanation:"Ein 'Evil Twin' ist ein gef√§lschter Access Point mit gleichem Namen wie ein legitimes WLAN. Nutzer verbinden sich unwissentlich und der Angreifer kann den Traffic abfangen.",points:2,category:"Man-in-the-Middle"}],fo=["Sicherheit","Man-in-the-Middle","SQL-Injection","DDoS","IHK","Neu 2025","Cyber Security"],bo="2025-01-10T12:00:00Z",ko={id:ro,moduleId:so,title:ao,description:oo,category:lo,difficulty:uo,examRelevance:co,newIn2025:mo,timeLimit:go,passingScore:ho,questions:po,tags:fo,lastUpdated:bo},zo=Object.freeze(Object.defineProperty({__proto__:null,category:lo,default:ko,description:oo,difficulty:uo,examRelevance:co,id:ro,lastUpdated:bo,moduleId:so,newIn2025:mo,passingScore:ho,questions:po,tags:fo,timeLimit:go,title:ao},Symbol.toStringTag,{value:"Module"})),vo="kerberos-quiz",yo="bp-01-kerberos",So="Kerberos-Authentifizierung Quiz",wo="Teste dein Wissen √ºber Kerberos-Authentifizierung, Tickets, KDC und Principals",Ao="BP-01",Eo="intermediate",_o="high",Do=15,Po=70,To=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist die Hauptfunktion des Key Distribution Center (KDC) in Kerberos?","options":["Zentrale Authentifizierung und Ticket-Ausgabe","Verschl√ºsselung aller Netzwerkpakete","Speicherung von Benutzerpassw√∂rtern","Verwaltung von SSL-Zertifikaten"],"correctAnswer":"Zentrale Authentifizierung und Ticket-Ausgabe","explanation":"Das KDC ist die zentrale Vertrauensinstanz in Kerberos und besteht aus dem Authentication Server (AS) und dem Ticket Granting Server (TGS). Es authentifiziert Benutzer und stellt Tickets aus.","points":1,"category":"Grundlagen"},{"id":"q2","type":"single-choice","question":"Welche zwei Komponenten bilden das KDC?","options":["Authentication Server (AS) und Ticket Granting Server (TGS)","Client Server und Application Server","Primary Server und Secondary Server","Login Server und Access Server"],"correctAnswer":"Authentication Server (AS) und Ticket Granting Server (TGS)","explanation":"Das KDC besteht aus dem AS (verifiziert Identit√§t und stellt TGTs aus) und dem TGS (stellt Service Tickets aus).","points":1,"category":"Architektur"},{"id":"q3","type":"single-choice","question":"Was ist ein Ticket Granting Ticket (TGT)?","options":["Ein Ticket, das nach erfolgreicher Anmeldung ausgestellt wird und zum Anfordern von Service Tickets dient","Ein Ticket, das direkten Zugriff auf alle Services gew√§hrt","Ein Ticket, das nur f√ºr einen spezifischen Service g√ºltig ist","Ein Ticket, das Passw√∂rter verschl√ºsselt √ºbertr√§gt"],"correctAnswer":"Ein Ticket, das nach erfolgreicher Anmeldung ausgestellt wird und zum Anfordern von Service Tickets dient","explanation":"Das TGT wird nach erfolgreicher Authentifizierung vom AS ausgestellt und erm√∂glicht es dem Client, Service Tickets vom TGS anzufordern, ohne das Passwort erneut eingeben zu m√ºssen.","points":1,"category":"Tickets"},{"id":"q4","type":"single-choice","question":"Wie lange ist ein TGT typischerweise g√ºltig?","options":["8-10 Stunden","5 Minuten","24 Stunden","1 Stunde"],"correctAnswer":"8-10 Stunden","explanation":"TGTs haben typischerweise eine G√ºltigkeitsdauer von 8-10 Stunden (eine Arbeitssession), w√§hrend Service Tickets k√ºrzer g√ºltig sind (5-60 Minuten).","points":1,"category":"Tickets"},{"id":"q5","type":"single-choice","question":"Was ist ein Principal in Kerberos?","options":["Eine eindeutige Identit√§t (Benutzer oder Service) im Format username@REALM","Der Hauptserver im Kerberos-Netzwerk","Das Hauptpasswort f√ºr alle Services","Die prim√§re Verschl√ºsselungsmethode"],"correctAnswer":"Eine eindeutige Identit√§t (Benutzer oder Service) im Format username@REALM","explanation":"Ein Principal ist eine eindeutige Identit√§t in Kerberos, z.B. alice@COMPANY.COM f√ºr Benutzer oder HTTP/webserver.company.com@COMPANY.COM f√ºr Services.","points":1,"category":"Grundlagen"},{"id":"q6","type":"multiple-choice","question":"Welche Vorteile bietet Kerberos? (Mehrere Antworten m√∂glich)","options":["Single Sign-On (SSO)","Mutual Authentication","Keine Passwort-√úbertragung √ºber Netzwerk","Automatische Passwort-Generierung","Dezentrale Verwaltung"],"correctAnswer":["Single Sign-On (SSO)","Mutual Authentication","Keine Passwort-√úbertragung √ºber Netzwerk"],"explanation":"Kerberos bietet SSO (einmalige Anmeldung), Mutual Authentication (beide Seiten authentifizieren sich) und √ºbertr√§gt nie Passw√∂rter √ºber das Netzwerk. Die Verwaltung ist zentral (nicht dezentral) und Passw√∂rter werden nicht automatisch generiert.","points":2,"category":"Vorteile"},{"id":"q7","type":"single-choice","question":"Welcher Befehl fordert ein Kerberos-Ticket unter Linux an?","options":["kinit","klist","kdestroy","kerberos-login"],"correctAnswer":"kinit","explanation":"kinit fordert ein TGT an (Login), klist zeigt aktive Tickets an, und kdestroy l√∂scht alle Tickets (Logout).","points":1,"category":"Praxis"},{"id":"q8","type":"single-choice","question":"Warum ist Zeitsynchronisation in Kerberos wichtig?","options":["Zum Schutz vor Replay-Attacken durch Zeitstempel-Validierung","Zur Optimierung der Netzwerkgeschwindigkeit","Zur Synchronisation von Passw√∂rtern","Zur Koordination von Backup-Prozessen"],"correctAnswer":"Zum Schutz vor Replay-Attacken durch Zeitstempel-Validierung","explanation":"Kerberos verwendet Zeitstempel in allen Nachrichten. Ein Zeitfenster (typisch 5 Minuten) verhindert Replay-Attacken. Deshalb m√ºssen alle Systeme synchronisierte Uhren haben (NTP).","points":1,"category":"Sicherheit"},{"id":"q9","type":"single-choice","question":"In welcher Reihenfolge erfolgt die Kerberos-Authentifizierung?","options":["1. AS Exchange (TGT anfordern), 2. TGS Exchange (Service Ticket anfordern), 3. Client-Server Exchange (Service zugreifen)","1. Service Ticket anfordern, 2. TGT anfordern, 3. Service zugreifen","1. Passwort senden, 2. Service zugreifen, 3. Ticket anfordern","1. TGT anfordern, 2. Service zugreifen, 3. Service Ticket anfordern"],"correctAnswer":"1. AS Exchange (TGT anfordern), 2. TGS Exchange (Service Ticket anfordern), 3. Client-Server Exchange (Service zugreifen)","explanation":"Der Kerberos-Prozess l√§uft in drei Schritten: 1. Client authentifiziert sich beim AS und erh√§lt TGT, 2. Client fordert mit TGT ein Service Ticket vom TGS an, 3. Client greift mit Service Ticket auf den Service zu.","points":2,"category":"Prozess"},{"id":"q10","type":"single-choice","question":"Was ist ein Nachteil von Kerberos?","options":["Single Point of Failure - KDC muss hochverf√ºgbar sein","Keine Verschl√ºsselung m√∂glich","Funktioniert nur in kleinen Netzwerken","Keine Unterst√ºtzung f√ºr Windows"],"correctAnswer":"Single Point of Failure - KDC muss hochverf√ºgbar sein","explanation":"Das KDC ist ein Single Point of Failure. Wenn es ausf√§llt, k√∂nnen sich keine Benutzer mehr authentifizieren. Deshalb werden in der Praxis mehrere KDCs f√ºr Redundanz eingesetzt.","points":1,"category":"Nachteile"},{"id":"q11","type":"single-choice","question":"Was ist ein Realm in Kerberos?","options":["Eine administrative Dom√§ne, die den G√ºltigkeitsbereich von Principals definiert","Ein verschl√ºsselter Bereich im Ticket","Eine Gruppe von Benutzern mit gleichen Rechten","Ein Backup-Server f√ºr das KDC"],"correctAnswer":"Eine administrative Dom√§ne, die den G√ºltigkeitsbereich von Principals definiert","explanation":"Ein Realm ist eine administrative Dom√§ne in Kerberos (z.B. COMPANY.COM). Jeder Principal geh√∂rt zu einem Realm, und Realms k√∂nnen Vertrauensbeziehungen untereinander haben. Realms werden konventionell in Gro√übuchstaben geschrieben.","points":1,"category":"Grundlagen"},{"id":"q12","type":"single-choice","question":"Welcher Befehl zeigt aktive Kerberos-Tickets unter Linux an?","options":["klist","kinit","kdestroy","kshow"],"correctAnswer":"klist","explanation":"Der Befehl 'klist' zeigt alle aktiven Kerberos-Tickets mit ihren G√ºltigkeitszeitr√§umen an. 'kinit' fordert neue Tickets an, 'kdestroy' l√∂scht alle Tickets, und 'kshow' existiert nicht.","points":1,"category":"Praxis"},{"id":"q13","type":"single-choice","question":"Was erm√∂glicht Cross-Realm Authentication in Kerberos?","options":["Authentifizierung √ºber verschiedene Kerberos-Realms hinweg durch Vertrauensbeziehungen","Verwendung mehrerer Passw√∂rter gleichzeitig","Zugriff auf Services ohne Tickets","Automatische Synchronisation von Benutzerdatenbanken"],"correctAnswer":"Authentifizierung √ºber verschiedene Kerberos-Realms hinweg durch Vertrauensbeziehungen","explanation":"Cross-Realm Authentication erm√∂glicht es Benutzern aus einem Realm, auf Services in einem anderen Realm zuzugreifen. Dies erfordert Vertrauensbeziehungen zwischen den Realms und spezielle Cross-Realm TGTs.","points":2,"category":"Erweitert"},{"id":"q14","type":"multiple-choice","question":"Welche Informationen sind in einem Service Principal Name (SPN) enthalten? (Mehrere Antworten m√∂glich)","options":["Service-Typ (z.B. HTTP, LDAP)","Hostname des Servers","Realm","Benutzerpasswort"],"correctAnswer":["Service-Typ (z.B. HTTP, LDAP)","Hostname des Servers","Realm"],"explanation":"Ein Service Principal Name hat das Format service/hostname@REALM (z.B. HTTP/webserver.company.com@COMPANY.COM). Er enth√§lt den Service-Typ, den Hostname und den Realm, aber niemals Passw√∂rter.","points":2,"category":"Principals"},{"id":"q15","type":"single-choice","question":"Was ist der Zweck einer Keytab-Datei in Kerberos?","options":["Speicherung von Service-Credentials f√ºr automatische Authentifizierung ohne Passwort-Eingabe","Verschl√ºsselung aller Netzwerkpakete","Backup der Kerberos-Datenbank","Verwaltung von Benutzer-Passw√∂rtern"],"correctAnswer":"Speicherung von Service-Credentials f√ºr automatische Authentifizierung ohne Passwort-Eingabe","explanation":"Eine Keytab-Datei enth√§lt verschl√ºsselte Service-Credentials (Keys), die es Services erm√∂glichen, sich automatisch beim KDC zu authentifizieren, ohne dass ein Administrator ein Passwort eingeben muss. Typisch f√ºr Server-Dienste.","points":1,"category":"Praxis"},{"id":"q16","type":"single-choice","question":"Welches Zeitfenster ist typisch f√ºr die Toleranz bei Zeitstempel-Validierung in Kerberos?","options":["5 Minuten","30 Sekunden","1 Stunde","24 Stunden"],"correctAnswer":"5 Minuten","explanation":"Kerberos verwendet typischerweise ein Zeitfenster von 5 Minuten f√ºr die Zeitstempel-Validierung. Wenn die Zeitdifferenz zwischen Client und Server gr√∂√üer ist, wird die Authentifizierung mit einem 'Clock Skew'-Fehler abgelehnt.","points":1,"category":"Sicherheit"},{"id":"q17","type":"single-choice","question":"Was bedeutet der Fehler 'Clock skew too great' in Kerberos?","options":["Die Zeitdifferenz zwischen Client und KDC ist zu gro√ü (> 5 Minuten)","Das Ticket ist abgelaufen","Der Service ist nicht erreichbar","Das Passwort ist falsch"],"correctAnswer":"Die Zeitdifferenz zwischen Client und KDC ist zu gro√ü (> 5 Minuten)","explanation":"Der 'Clock skew too great'-Fehler tritt auf, wenn die Systemuhren von Client und KDC nicht synchronisiert sind und die Differenz das erlaubte Zeitfenster (typisch 5 Minuten) √ºberschreitet. L√∂sung: NTP zur Zeitsynchronisation verwenden.","points":1,"category":"Troubleshooting"}]`),qo=["kerberos","authentifizierung","tickets","kdc","sicherheit","principals"],Ro=!0,Io="2025-01-05T12:00:00Z",Co={id:vo,moduleId:yo,title:So,description:wo,category:Ao,difficulty:Eo,examRelevance:_o,timeLimit:Do,passingScore:Po,questions:To,tags:qo,newIn2025:Ro,lastUpdated:Io},Lo=Object.freeze(Object.defineProperty({__proto__:null,category:Ao,default:Co,description:wo,difficulty:Eo,examRelevance:_o,id:vo,lastUpdated:Io,moduleId:yo,newIn2025:Ro,passingScore:Po,questions:To,tags:qo,timeLimit:Do,title:So},Symbol.toStringTag,{value:"Module"})),Mo="scrum-quiz-2025",Oo="bp-04-scrum",No="Scrum Quiz - Agile Projektmanagement",Bo="Umfassendes Quiz zu Scrum mit 20 Fragen zu Rollen, Events, Artefakten und praktischen Szenarien.",xo="BP-04",Vo="intermediate",Fo="high",Ko=!0,Wo=30,jo=70,$o=[{id:"q1",type:"single-choice",question:"Was ist Scrum?",options:["Ein agiles Framework f√ºr Projektmanagement","Eine Programmiersprache","Ein Datenbank-System","Ein Test-Framework"],correctAnswer:"Ein agiles Framework f√ºr Projektmanagement",explanation:"Scrum ist ein agiles Framework f√ºr die Entwicklung, Lieferung und Wartung komplexer Produkte. Es basiert auf iterativen und inkrementellen Ans√§tzen.",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Wie viele Rollen gibt es in Scrum?",options:["3 Rollen","5 Rollen","2 Rollen","4 Rollen"],correctAnswer:"3 Rollen",explanation:"Scrum definiert genau 3 Rollen: Product Owner, Scrum Master und Development Team. Alle anderen Personen sind Stakeholder.",points:1,category:"Rollen"},{id:"q3",type:"single-choice",question:"Wer ist f√ºr die Maximierung des Produktwerts verantwortlich?",options:["Product Owner","Scrum Master","Development Team","Stakeholder"],correctAnswer:"Product Owner",explanation:"Der Product Owner ist verantwortlich f√ºr die Maximierung des Produktwerts und das Management des Product Backlogs. Er vertritt die Interessen der Stakeholder.",points:1,category:"Rollen"}],Go=["Scrum","Agile","Projektmanagement","IHK","Neu 2025","Sprint","Product Owner","Scrum Master"],Uo="2025-01-05T12:00:00Z",Ho={id:Mo,moduleId:Oo,title:No,description:Bo,category:xo,difficulty:Vo,examRelevance:Fo,newIn2025:Ko,timeLimit:Wo,passingScore:jo,questions:$o,tags:Go,lastUpdated:Uo},Qo=Object.freeze(Object.defineProperty({__proto__:null,category:xo,default:Ho,description:Bo,difficulty:Vo,examRelevance:Fo,id:Mo,lastUpdated:Uo,moduleId:Oo,newIn2025:Ko,passingScore:jo,questions:$o,tags:Go,timeLimit:Wo,title:No},Symbol.toStringTag,{value:"Module"})),Zo="sorting-algorithms-quiz-2025",Jo="bp-05-sorting",Yo="Sortierverfahren Quiz",Xo="Umfassendes Quiz zu Sortieralgorithmen mit 17 Fragen zu Bubble Sort, Selection Sort, Insertion Sort, Komplexit√§t und Code-L√ºcken.",el="BP-05",nl="intermediate",tl="high",il=!0,rl=30,sl=70,al=[{id:"q1",type:"single-choice",question:"Was ist ein Sortieralgorithmus?",options:["Ein Algorithmus, der Elemente in eine bestimmte Reihenfolge bringt","Ein Algorithmus zum Suchen","Ein Algorithmus zum L√∂schen","Ein Algorithmus zum Kopieren"],correctAnswer:"Ein Algorithmus, der Elemente in eine bestimmte Reihenfolge bringt",explanation:"Sortieralgorithmen ordnen Elemente nach einem Kriterium (z.B. aufsteigend, absteigend). Sie sind fundamental in der Informatik.",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Welche drei Sortierverfahren sind f√ºr die IHK-Pr√ºfung 2025 relevant?",options:["Bubble Sort, Selection Sort, Insertion Sort","Quick Sort, Merge Sort, Heap Sort","Radix Sort, Bucket Sort, Counting Sort","Shell Sort, Comb Sort, Gnome Sort"],correctAnswer:"Bubble Sort, Selection Sort, Insertion Sort",explanation:"F√ºr die IHK-Pr√ºfung 2025 sind explizit Bubble Sort, Selection Sort und Insertion Sort relevant. Diese sind einfache, aber wichtige Sortierverfahren.",points:1,category:"Grundlagen"},{id:"q3",type:"single-choice",question:"Wie funktioniert Bubble Sort?",options:["Benachbarte Elemente werden verglichen und bei Bedarf getauscht","Das kleinste Element wird gesucht und an den Anfang gesetzt","Elemente werden einzeln in eine sortierte Liste eingef√ºgt","Die Liste wird rekursiv geteilt und zusammengef√ºhrt"],correctAnswer:"Benachbarte Elemente werden verglichen und bei Bedarf getauscht",explanation:"Bubble Sort vergleicht benachbarte Elemente und tauscht sie, wenn sie in falscher Reihenfolge sind. Gro√üe Werte 'blubbern' nach oben wie Blasen.",points:1,category:"Bubble Sort"}],ol=["Sortieralgorithmen","Bubble Sort","Selection Sort","Insertion Sort","Komplexit√§t","IHK","Neu 2025"],ll="2025-01-10T00:00:00Z",ul={id:Zo,moduleId:Jo,title:Yo,description:Xo,category:el,difficulty:nl,examRelevance:tl,newIn2025:il,timeLimit:rl,passingScore:sl,questions:al,tags:ol,lastUpdated:ll},cl=Object.freeze(Object.defineProperty({__proto__:null,category:el,default:ul,description:Xo,difficulty:nl,examRelevance:tl,id:Zo,lastUpdated:ll,moduleId:Jo,newIn2025:il,passingScore:sl,questions:al,tags:ol,timeLimit:rl,title:Yo},Symbol.toStringTag,{value:"Module"})),dl="sql-comprehensive-quiz-2025",ml="sql-dql-2025",gl="SQL Komplett-Quiz - IHK Pr√ºfungsvorbereitung",hl="Umfassendes Quiz zu allen SQL-Themen aus dem Pr√ºfungsbeiblatt: DDL, DML und DQL. 20 Fragen mit ausf√ºhrlichen Erkl√§rungen.",pl="F√ú-02",fl="intermediate",bl="high",kl=!0,zl=35,vl=70,yl=[{id:"q1",type:"single-choice",question:"Welcher SQL-Befehl wird verwendet, um eine neue Tabelle zu erstellen?",options:["CREATE TABLE","NEW TABLE","INSERT TABLE","MAKE TABLE"],correctAnswer:"CREATE TABLE",explanation:"CREATE TABLE ist der DDL-Befehl zum Erstellen neuer Tabellen. Die Syntax lautet: CREATE TABLE table_name (column1 datatype, column2 datatype, ...);",points:1,category:"DDL"},{id:"q2",type:"single-choice",question:"Was bewirkt der Constraint PRIMARY KEY?",options:["Die Spalte darf NULL-Werte enthalten","Die Spalte ist eindeutig und darf nicht NULL sein","Die Spalte wird automatisch sortiert","Die Spalte wird verschl√ºsselt"],correctAnswer:"Die Spalte ist eindeutig und darf nicht NULL sein",explanation:"PRIMARY KEY kombiniert UNIQUE und NOT NULL. Jede Tabelle sollte einen Prim√§rschl√ºssel haben, der jede Zeile eindeutig identifiziert.",points:1,category:"DDL"},{id:"q3",type:"code",question:"Welcher Befehl f√ºgt eine neue Spalte 'telefon' (VARCHAR(20)) zur Tabelle 'kunde' hinzu?",code:"",language:"sql",options:["ALTER TABLE kunde ADD telefon VARCHAR(20);","UPDATE TABLE kunde ADD telefon VARCHAR(20);","INSERT INTO kunde ADD telefon VARCHAR(20);","MODIFY TABLE kunde ADD telefon VARCHAR(20);"],correctAnswer:"ALTER TABLE kunde ADD telefon VARCHAR(20);",explanation:"ALTER TABLE wird verwendet, um die Struktur einer bestehenden Tabelle zu √§ndern. Mit ADD f√ºgt man neue Spalten hinzu.",points:2,category:"DDL"}],Sl=["SQL","DDL","DML","DQL","IHK","Pr√ºfung","Datenbank"],wl="2025-01-05T12:00:00Z",Al={id:dl,moduleId:ml,title:gl,description:hl,category:pl,difficulty:fl,examRelevance:bl,newIn2025:kl,timeLimit:zl,passingScore:vl,questions:yl,tags:Sl,lastUpdated:wl},El=Object.freeze(Object.defineProperty({__proto__:null,category:pl,default:Al,description:hl,difficulty:fl,examRelevance:bl,id:dl,lastUpdated:wl,moduleId:ml,newIn2025:kl,passingScore:vl,questions:yl,tags:Sl,timeLimit:zl,title:gl},Symbol.toStringTag,{value:"Module"})),_l="sql-ddl-2025-quiz",Dl="sql-ddl-2025",Pl="SQL DDL - Datenstrukturen definieren Quiz",Tl="Teste dein Wissen √ºber SQL DDL - Datenstrukturen definieren",ql="F√ú-02",Rl="beginner",Il="high",Cl=10,Ll=70,Ml=[{id:"q1",type:"single-choice",question:"Was ist SQL DDL - Datenstrukturen definieren?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],Ol=["SQL","DDL","CREATE TABLE","ALTER TABLE","CREATE INDEX","Datenbank","Pr√ºfungsbeiblatt"],Nl={id:_l,moduleId:Dl,title:Pl,description:Tl,category:ql,difficulty:Rl,examRelevance:Il,timeLimit:Cl,passingScore:Ll,questions:Ml,tags:Ol},Bl=Object.freeze(Object.defineProperty({__proto__:null,category:ql,default:Nl,description:Tl,difficulty:Rl,examRelevance:Il,id:_l,moduleId:Dl,passingScore:Ll,questions:Ml,tags:Ol,timeLimit:Cl,title:Pl},Symbol.toStringTag,{value:"Module"})),xl="sql-dml-2025-quiz",Vl="sql-dml-2025",Fl="SQL DML - Daten manipulieren Quiz",Kl="Teste dein Wissen √ºber SQL DML - Daten manipulieren",Wl="F√ú-02",jl="beginner",$l="high",Gl=10,Ul=70,Hl=[{id:"q1",type:"single-choice",question:"Was ist SQL DML - Daten manipulieren?",options:["Richtige Antwort hier einf√ºgen","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort hier einf√ºgen",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Frage 2 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Konzepte"},{id:"q3",type:"multiple-choice",question:"Welche Aussagen sind korrekt? (Mehrere Antworten m√∂glich)",options:["Richtige Aussage 1","Richtige Aussage 2","Falsche Aussage 1","Falsche Aussage 2"],correctAnswer:["Richtige Aussage 1","Richtige Aussage 2"],explanation:"Erkl√§rung hier einf√ºgen",points:2,category:"Anwendung"},{id:"q4",type:"single-choice",question:"Frage 4 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Praxis"},{id:"q5",type:"single-choice",question:"Frage 5 hier einf√ºgen",options:["Richtige Antwort","Falsche Option 1","Falsche Option 2","Falsche Option 3"],correctAnswer:"Richtige Antwort",explanation:"Erkl√§rung hier einf√ºgen",points:1,category:"Vertiefung"}],Ql=["SQL","DML","INSERT","UPDATE","DELETE","Datenbank","Pr√ºfungsbeiblatt"],Zl={id:xl,moduleId:Vl,title:Fl,description:Kl,category:Wl,difficulty:jl,examRelevance:$l,timeLimit:Gl,passingScore:Ul,questions:Hl,tags:Ql},Jl=Object.freeze(Object.defineProperty({__proto__:null,category:Wl,default:Zl,description:Kl,difficulty:jl,examRelevance:$l,id:xl,moduleId:Vl,passingScore:Ul,questions:Hl,tags:Ql,timeLimit:Gl,title:Fl},Symbol.toStringTag,{value:"Module"})),Yl="tdd-quiz-2025",Xl="bp-03-tdd",eu="Test Driven Development (TDD) Quiz",nu="Umfassendes Quiz zu Test Driven Development mit 18 Fragen zu TDD-Konzepten, Red-Green-Refactor Zyklus und praktischen Code-Beispielen.",tu="BP-03",iu="intermediate",ru="high",su=!0,au=30,ou=70,lu=[{id:"q1",type:"single-choice",question:"Was bedeutet TDD?",options:["Test Driven Development","Test Data Design","Technical Development Documentation","Test Deployment Design"],correctAnswer:"Test Driven Development",explanation:"TDD steht f√ºr Test Driven Development - eine Entwicklungsmethode, bei der Tests vor dem eigentlichen Code geschrieben werden.",points:1,category:"Grundlagen"},{id:"q2",type:"single-choice",question:"Welche drei Phasen hat der TDD-Zyklus?",options:["Red - Green - Refactor","Write - Test - Deploy","Plan - Code - Test","Design - Implement - Verify"],correctAnswer:"Red - Green - Refactor",explanation:"Der TDD-Zyklus besteht aus drei Phasen: Red (fehlschlagender Test), Green (minimale Implementierung), Refactor (Code verbessern).",points:1,category:"Grundlagen"},{id:"q3",type:"single-choice",question:"Was bedeutet die 'Red'-Phase im TDD-Zyklus?",options:["Einen fehlschlagenden Test schreiben","Fehler im Code markieren","Die Anwendung stoppen","Code l√∂schen"],correctAnswer:"Einen fehlschlagenden Test schreiben",explanation:"In der Red-Phase schreibt man zuerst einen Test, der fehlschl√§gt, weil die Funktionalit√§t noch nicht implementiert ist. Dies stellt sicher, dass der Test tats√§chlich etwas pr√ºft.",points:1,category:"Red-Green-Refactor"}],uu=["TDD","Test Driven Development","Unit-Tests","IHK","Neu 2025","Softwareentwicklung"],cu="2025-01-05T12:00:00Z",du={id:Yl,moduleId:Xl,title:eu,description:nu,category:tu,difficulty:iu,examRelevance:ru,newIn2025:su,timeLimit:au,passingScore:ou,questions:lu,tags:uu,lastUpdated:cu},mu=Object.freeze(Object.defineProperty({__proto__:null,category:tu,default:du,description:nu,difficulty:iu,examRelevance:ru,id:Yl,lastUpdated:cu,moduleId:Xl,newIn2025:su,passingScore:ou,questions:lu,tags:uu,timeLimit:au,title:eu},Symbol.toStringTag,{value:"Module"})),gu="bp-dpa-01-er-modeling-quiz",hu="bp-dpa-01-er-modeling",pu="ER-Modellierung und Datenmodellierung",fu="Umfassendes Quiz zu Entity-Relationship-Modellierung, Kardinalit√§ten, Schl√ºsseln und Datenbankdesign",bu="BP-DPA-02",ku="intermediate",zu="high",vu=!1,yu=25,Su=70,wu=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist eine Entit√§t in der ER-Modellierung?","options":["Eine Beziehung zwischen zwei Objekten","Ein Objekt oder Konzept der realen Welt, das eindeutig identifizierbar ist","Ein Attribut einer Datenbanktabelle","Eine Abfrage in SQL"],"correctAnswer":"Ein Objekt oder Konzept der realen Welt, das eindeutig identifizierbar ist","explanation":"Eine Entit√§t ist ein Objekt oder Konzept der realen Welt (z.B. Kunde, Produkt, Bestellung), das eindeutig identifizierbar ist und Eigenschaften (Attribute) besitzt. Entit√§ten werden in ER-Diagrammen als Rechtecke dargestellt.","points":1,"category":"ER-Grundlagen"},{"id":"q2","type":"single-choice","question":"Wie wird eine Beziehung (Relationship) in einem ER-Diagramm dargestellt?","options":["Als Rechteck","Als Ellipse","Als Raute","Als Kreis"],"correctAnswer":"Als Raute","explanation":"Beziehungen (Relationships) werden in ER-Diagrammen als Rauten dargestellt. Sie beschreiben Zusammenh√§nge zwischen Entit√§ten, z.B. 'Kunde bestellt Produkt'.","points":1,"category":"ER-Notation"},{"id":"q3","type":"multiple-choice","question":"Welche Arten von Attributen gibt es in der ER-Modellierung?","options":["Einfache Attribute","Zusammengesetzte Attribute","Mehrwertige Attribute","Abgeleitete Attribute"],"correctAnswer":["Einfache Attribute","Zusammengesetzte Attribute","Mehrwertige Attribute","Abgeleitete Attribute"],"explanation":"Es gibt vier Hauptarten von Attributen: Einfache (nicht weiter zerlegbar), Zusammengesetzte (aus Teilattributen bestehend), Mehrwertige (mehrere Werte m√∂glich) und Abgeleitete (aus anderen Attributen berechenbar).","points":2,"category":"Attribute"},{"id":"q4","type":"single-choice","question":"Was bedeutet die Kardinalit√§t 1:N in einer Beziehung?","options":["Eine Entit√§t steht mit genau einer anderen in Beziehung","Eine Entit√§t steht mit mehreren anderen in Beziehung, aber jede andere nur mit einer","Mehrere Entit√§ten stehen mit mehreren anderen in Beziehung","Keine Beziehung zwischen den Entit√§ten"],"correctAnswer":"Eine Entit√§t steht mit mehreren anderen in Beziehung, aber jede andere nur mit einer","explanation":"1:N (Eins-zu-Viele) bedeutet, dass eine Entit√§t der ersten Art mit mehreren Entit√§ten der zweiten Art in Beziehung stehen kann, aber jede Entit√§t der zweiten Art nur mit einer der ersten. Beispiel: Ein Kunde kann mehrere Bestellungen haben, aber jede Bestellung geh√∂rt nur zu einem Kunden.","points":1,"category":"Kardinalit√§ten"},{"id":"q5","type":"single-choice","question":"Welche Kardinalit√§t erfordert bei der Umsetzung in relationale Tabellen eine Zwischentabelle?","options":["1:1 (Eins-zu-Eins)","1:N (Eins-zu-Viele)","N:M (Viele-zu-Viele)","Alle Kardinalit√§ten"],"correctAnswer":"N:M (Viele-zu-Viele)","explanation":"N:M-Beziehungen (Viele-zu-Viele) erfordern eine Zwischentabelle, da sie nicht direkt in relationalen Tabellen dargestellt werden k√∂nnen. Die Zwischentabelle enth√§lt die Prim√§rschl√ºssel beider beteiligten Entit√§ten als Fremdschl√ºssel.","points":1,"category":"Kardinalit√§ten"},{"id":"q6","type":"single-choice","question":"Was ist ein Prim√§rschl√ºssel?","options":["Ein Attribut, das in mehreren Tabellen vorkommt","Ein Attribut oder eine Attributkombination, die eine Entit√§t eindeutig identifiziert","Ein Attribut, das aus anderen Attributen berechnet wird","Ein Attribut, das mehrere Werte haben kann"],"correctAnswer":"Ein Attribut oder eine Attributkombination, die eine Entit√§t eindeutig identifiziert","explanation":"Ein Prim√§rschl√ºssel ist ein Attribut oder eine Kombination von Attributen, die jede Entit√§t in einer Tabelle eindeutig identifiziert. Er darf nicht NULL sein und sollte unver√§nderlich sein.","points":1,"category":"Schl√ºssel"},{"id":"q7","type":"single-choice","question":"Was ist der Unterschied zwischen einem Entit√§tstyp und einer Entit√§tsauspr√§gung?","options":["Es gibt keinen Unterschied","Entit√§tstyp ist die allgemeine Beschreibung, Entit√§tsauspr√§gung ist eine konkrete Instanz","Entit√§tsauspr√§gung ist die allgemeine Beschreibung, Entit√§tstyp ist eine konkrete Instanz","Beide Begriffe beschreiben dasselbe"],"correctAnswer":"Entit√§tstyp ist die allgemeine Beschreibung, Entit√§tsauspr√§gung ist eine konkrete Instanz","explanation":"Ein Entit√§tstyp ist die allgemeine Beschreibung (z.B. 'Kunde'), w√§hrend eine Entit√§tsauspr√§gung eine konkrete Instanz dieses Typs ist (z.B. 'Max Mustermann').","points":1,"category":"ER-Grundlagen"},{"id":"q8","type":"multiple-choice","question":"Welche Aussagen √ºber Fremdschl√ºssel sind korrekt?","options":["Sie verweisen auf den Prim√§rschl√ºssel einer anderen Tabelle","Sie stellen Beziehungen zwischen Entit√§ten her","Sie m√ºssen immer eindeutig sein","Sie k√∂nnen NULL-Werte enthalten"],"correctAnswer":["Sie verweisen auf den Prim√§rschl√ºssel einer anderen Tabelle","Sie stellen Beziehungen zwischen Entit√§ten her","Sie k√∂nnen NULL-Werte enthalten"],"explanation":"Fremdschl√ºssel verweisen auf Prim√§rschl√ºssel anderer Tabellen und stellen Beziehungen her. Sie m√ºssen nicht eindeutig sein (mehrere Datens√§tze k√∂nnen denselben Fremdschl√ºssel haben) und k√∂nnen NULL-Werte enthalten, wenn die Beziehung optional ist.","points":2,"category":"Schl√ºssel"},{"id":"q9","type":"single-choice","question":"Was bedeutet die Min-Max-Notation (1,*) bei einer Kardinalit√§t?","options":["Mindestens eine, h√∂chstens eine Beziehung","Mindestens eine, beliebig viele Beziehungen","Keine bis eine Beziehung","Genau eine Beziehung"],"correctAnswer":"Mindestens eine, beliebig viele Beziehungen","explanation":"Die Min-Max-Notation (1,*) bedeutet mindestens eine (1) und h√∂chstens beliebig viele (*) Beziehungen. Das bedeutet, dass die Beziehung verpflichtend ist (mindestens eine) und nach oben unbegrenzt.","points":1,"category":"Kardinalit√§ten"},{"id":"q10","type":"single-choice","question":"Was ist eine schwache Entit√§t?","options":["Eine Entit√§t mit wenigen Attributen","Eine Entit√§t, die nicht allein durch eigene Attribute identifiziert werden kann","Eine Entit√§t ohne Beziehungen","Eine Entit√§t mit nur einem Attribut"],"correctAnswer":"Eine Entit√§t, die nicht allein durch eigene Attribute identifiziert werden kann","explanation":"Eine schwache Entit√§t kann nicht allein durch ihre eigenen Attribute eindeutig identifiziert werden und ben√∂tigt eine Beziehung zu einer starken Entit√§t. Beispiel: Zimmer (abh√§ngig von Hotel). Sie wird mit doppeltem Rechteck dargestellt.","points":1,"category":"Erweiterte Konzepte"},{"id":"q11","type":"single-choice","question":"Welche Transformationsregel gilt f√ºr 1:N-Beziehungen bei der Umsetzung in relationale Tabellen?","options":["Separate Zwischentabelle erstellen","Fremdschl√ºssel in die N-Seite einf√ºgen","Fremdschl√ºssel in die 1-Seite einf√ºgen","Beide Tabellen zusammenfassen"],"correctAnswer":"Fremdschl√ºssel in die N-Seite einf√ºgen","explanation":"Bei 1:N-Beziehungen wird der Prim√§rschl√ºssel der 1-Seite als Fremdschl√ºssel in die Tabelle der N-Seite eingef√ºgt. Beispiel: Kunde (1) - Bestellung (N) ‚Üí Kundennummer wird Fremdschl√ºssel in der Bestelltabelle.","points":1,"category":"Transformation"},{"id":"q12","type":"multiple-choice","question":"Welche Elemente geh√∂ren zu einem vollst√§ndigen ER-Diagramm?","options":["Entit√§ten (Rechtecke)","Attribute (Ellipsen)","Beziehungen (Rauten)","Kardinalit√§ten"],"correctAnswer":["Entit√§ten (Rechtecke)","Attribute (Ellipsen)","Beziehungen (Rauten)","Kardinalit√§ten"],"explanation":"Ein vollst√§ndiges ER-Diagramm enth√§lt Entit√§ten (Rechtecke), Attribute (Ellipsen), Beziehungen (Rauten) und Kardinalit√§ten, die die Anzahl der m√∂glichen Beziehungen zwischen Entit√§ten angeben.","points":2,"category":"ER-Notation"},{"id":"q13","type":"single-choice","question":"Was ist ein Kandidatenschl√ºssel?","options":["Ein Schl√ºssel, der als Prim√§rschl√ºssel gew√§hlt werden k√∂nnte","Ein Fremdschl√ºssel","Ein zusammengesetzter Schl√ºssel","Ein abgeleiteter Schl√ºssel"],"correctAnswer":"Ein Schl√ºssel, der als Prim√§rschl√ºssel gew√§hlt werden k√∂nnte","explanation":"Ein Kandidatenschl√ºssel ist ein Attribut oder eine Attributkombination, die als Prim√§rschl√ºssel geeignet w√§re (eindeutig und nicht NULL). Aus allen Kandidatenschl√ºsseln wird einer als Prim√§rschl√ºssel ausgew√§hlt.","points":1,"category":"Schl√ºssel"},{"id":"q14","type":"single-choice","question":"Wie werden abgeleitete Attribute in ER-Diagrammen dargestellt?","options":["Als normale Ellipse","Als gestrichelte Ellipse","Als Rechteck","Als Raute"],"correctAnswer":"Als gestrichelte Ellipse","explanation":"Abgeleitete Attribute, die aus anderen Attributen berechnet werden k√∂nnen (z.B. Alter aus Geburtsdatum), werden als gestrichelte Ellipsen dargestellt, um zu zeigen, dass sie nicht gespeichert werden m√ºssen.","points":1,"category":"ER-Notation"},{"id":"q15","type":"single-choice","question":"Was beschreibt eine ISA-Beziehung (Spezialisierung/Generalisierung)?","options":["Eine normale Beziehung zwischen zwei Entit√§ten","Eine 'ist-ein'-Beziehung zwischen einer allgemeinen und einer speziellen Entit√§t","Eine Aggregation","Eine N:M-Beziehung"],"correctAnswer":"Eine 'ist-ein'-Beziehung zwischen einer allgemeinen und einer speziellen Entit√§t","explanation":"Eine ISA-Beziehung (\\"ist ein\\") beschreibt Spezialisierung/Generalisierung, z.B. 'Kunde ist eine Person' oder 'PKW ist ein Fahrzeug'. Die spezialisierte Entit√§t erbt alle Attribute der allgemeinen Entit√§t.","points":1,"category":"Erweiterte Konzepte"},{"id":"q16","type":"multiple-choice","question":"Welche Schritte geh√∂ren zum ER-Modellierungsprozess?","options":["Anforderungsanalyse","Entit√§ten identifizieren","Attribute bestimmen","Beziehungen modellieren"],"correctAnswer":["Anforderungsanalyse","Entit√§ten identifizieren","Attribute bestimmen","Beziehungen modellieren"],"explanation":"Der ER-Modellierungsprozess umfasst: 1) Anforderungsanalyse, 2) Entit√§ten identifizieren, 3) Attribute bestimmen, 4) Beziehungen modellieren, 5) Validierung. Jeder Schritt baut auf dem vorherigen auf.","points":2,"category":"Modellierungsprozess"},{"id":"q17","type":"single-choice","question":"Was ist ein Superschl√ºssel?","options":["Der wichtigste Prim√§rschl√ºssel","Eine Attributkombination, die Entit√§ten eindeutig identifiziert (kann redundante Attribute enthalten)","Ein Fremdschl√ºssel","Ein zusammengesetzter Prim√§rschl√ºssel"],"correctAnswer":"Eine Attributkombination, die Entit√§ten eindeutig identifiziert (kann redundante Attribute enthalten)","explanation":"Ein Superschl√ºssel ist eine Attributkombination, die Entit√§ten eindeutig identifiziert, aber redundante Attribute enthalten kann. Kandidatenschl√ºssel sind minimale Superschl√ºssel (ohne redundante Attribute).","points":1,"category":"Schl√ºssel"},{"id":"q18","type":"single-choice","question":"Welcher Modellierungsfehler liegt vor, wenn ein Attribut als eigene Entit√§t modelliert wird, obwohl es nur eine einfache Eigenschaft ist?","options":["Untermodellierung","√úbermodellierung","Falsche Kardinalit√§t","Fehlende Beziehung"],"correctAnswer":"√úbermodellierung","explanation":"√úbermodellierung liegt vor, wenn einfache Attribute f√§lschlicherweise als eigene Entit√§ten modelliert werden. Regel: Wenn keine weiteren Attribute f√ºr das Objekt relevant sind, sollte es ein Attribut bleiben.","points":1,"category":"Modellierungsfehler"},{"id":"q19","type":"single-choice","question":"In welchem Fall sollte ein Attribut als eigene Entit√§t modelliert werden?","options":["Wenn es einen einfachen Wert hat","Wenn weitere Attribute f√ºr dieses Objekt relevant sind","Wenn es ein Prim√§rschl√ºssel ist","Wenn es ein Fremdschl√ºssel ist"],"correctAnswer":"Wenn weitere Attribute f√ºr dieses Objekt relevant sind","explanation":"Ein Attribut sollte als eigene Entit√§t modelliert werden, wenn weitere Attribute f√ºr dieses Objekt relevant sind. Beispiel: 'Adresse' als Entit√§t mit Attributen Stra√üe, PLZ, Ort statt als einfaches Attribut.","points":1,"category":"Modellierungsentscheidungen"},{"id":"q20","type":"multiple-choice","question":"Welche Vorteile bietet die ER-Modellierung?","options":["Verbesserte Kommunikation zwischen Stakeholdern","Systematisches Datenbankdesign","Dokumentation der Datenstruktur","Automatische Code-Generierung"],"correctAnswer":["Verbesserte Kommunikation zwischen Stakeholdern","Systematisches Datenbankdesign","Dokumentation der Datenstruktur"],"explanation":"ER-Modellierung verbessert die Kommunikation zwischen Stakeholdern durch visuelle Darstellung, erm√∂glicht systematisches Datenbankdesign und dokumentiert die Datenstruktur. Automatische Code-Generierung ist m√∂glich, aber nicht der Hauptvorteil.","points":2,"category":"Vorteile"}]`),Au=["ER-Modellierung","Entit√§ten","Attribute","Beziehungen","Kardinalit√§ten","Schl√ºssel","Datenbankdesign"],Eu="2025-01-20T00:00:00Z",_u={id:gu,moduleId:hu,title:pu,description:fu,category:bu,difficulty:ku,examRelevance:zu,newIn2025:vu,timeLimit:yu,passingScore:Su,questions:wu,tags:Au,lastUpdated:Eu},Du=Object.freeze(Object.defineProperty({__proto__:null,category:bu,default:_u,description:fu,difficulty:ku,examRelevance:zu,id:gu,lastUpdated:Eu,moduleId:hu,newIn2025:vu,passingScore:Su,questions:wu,tags:Au,timeLimit:yu,title:pu},Symbol.toStringTag,{value:"Module"})),Pu="bp-dpa-01-normalization-quiz",Tu="bp-dpa-01-normalization",qu="Normalisierung von Datenbanken",Ru="Umfassendes Quiz zu Normalformen, funktionalen Abh√§ngigkeiten und Normalisierungsprozess",Iu="BP-DPA-02",Cu="intermediate",Lu="high",Mu=!1,Ou=30,Nu=70,Bu=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist das Hauptziel der Normalisierung?","options":["Datenbank-Performance verbessern","Redundanzen minimieren und Anomalien vermeiden","Speicherplatz maximieren","Abfragen vereinfachen"],"correctAnswer":"Redundanzen minimieren und Anomalien vermeiden","explanation":"Das Hauptziel der Normalisierung ist die Minimierung von Redundanzen und die Vermeidung von Anomalien (Einf√ºge-, √Ñnderungs- und L√∂schanomalien), um Datenintegrit√§t zu gew√§hrleisten.","points":1,"category":"Normalisierung Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche Arten von Anomalien k√∂nnen durch schlechtes Datenbankdesign entstehen?","options":["Einf√ºgeanomalie","√Ñnderungsanomalie","L√∂schanomalie","Abfrageanomalie"],"correctAnswer":["Einf√ºgeanomalie","√Ñnderungsanomalie","L√∂schanomalie"],"explanation":"Die drei Hauptanomalien sind: Einf√ºgeanomalie (Daten k√∂nnen nicht eingef√ºgt werden ohne andere Daten), √Ñnderungsanomalie (√Ñnderungen m√ºssen an mehreren Stellen vorgenommen werden), L√∂schanomalie (beim L√∂schen gehen ungewollt andere Daten verloren).","points":2,"category":"Anomalien"},{"id":"q3","type":"single-choice","question":"Was bedeutet die funktionale Abh√§ngigkeit A ‚Üí B?","options":["A ist abh√§ngig von B","B ist funktional abh√§ngig von A (A bestimmt B)","A und B sind unabh√§ngig","A und B sind identisch"],"correctAnswer":"B ist funktional abh√§ngig von A (A bestimmt B)","explanation":"Die Notation A ‚Üí B bedeutet, dass B funktional abh√§ngig von A ist, d.h. zu jedem Wert von A geh√∂rt genau ein Wert von B. A bestimmt B eindeutig.","points":1,"category":"Funktionale Abh√§ngigkeiten"},{"id":"q4","type":"single-choice","question":"Welche Bedingung muss f√ºr die 1. Normalform (1NF) erf√ºllt sein?","options":["Keine partiellen Abh√§ngigkeiten","Keine transitiven Abh√§ngigkeiten","Alle Attributwerte sind atomar (unteilbar)","Jedes Attribut ist vom gesamten Schl√ºssel abh√§ngig"],"correctAnswer":"Alle Attributwerte sind atomar (unteilbar)","explanation":"Die 1. Normalform (1NF) erfordert, dass alle Attributwerte atomar (unteilbar) sind. Es d√ºrfen keine mehrwertigen Attribute oder Wiederholungsgruppen existieren.","points":1,"category":"1. Normalform"},{"id":"q5","type":"single-choice","question":"Eine Tabelle ist in 2NF, wenn sie in 1NF ist und zus√§tzlich:","options":["Keine transitiven Abh√§ngigkeiten hat","Keine partiellen funktionalen Abh√§ngigkeiten hat","Nur einen Prim√§rschl√ºssel hat","Keine Fremdschl√ºssel hat"],"correctAnswer":"Keine partiellen funktionalen Abh√§ngigkeiten hat","explanation":"Die 2. Normalform (2NF) erfordert, dass die Tabelle in 1NF ist und keine partiellen funktionalen Abh√§ngigkeiten hat. Jedes Nicht-Schl√ºssel-Attribut muss vollst√§ndig vom gesamten Prim√§rschl√ºssel abh√§ngig sein.","points":1,"category":"2. Normalform"},{"id":"q6","type":"single-choice","question":"Was ist eine partielle funktionale Abh√§ngigkeit?","options":["Ein Attribut ist von einem Teil des zusammengesetzten Schl√ºssels abh√§ngig","Ein Attribut ist von allen Teilen des Schl√ºssels abh√§ngig","Ein Attribut ist von einem anderen Nicht-Schl√ºssel-Attribut abh√§ngig","Ein Attribut ist von sich selbst abh√§ngig"],"correctAnswer":"Ein Attribut ist von einem Teil des zusammengesetzten Schl√ºssels abh√§ngig","explanation":"Eine partielle funktionale Abh√§ngigkeit liegt vor, wenn ein Nicht-Schl√ºssel-Attribut nur von einem Teil eines zusammengesetzten Prim√§rschl√ºssels abh√§ngig ist, nicht vom gesamten Schl√ºssel.","points":1,"category":"Funktionale Abh√§ngigkeiten"},{"id":"q7","type":"single-choice","question":"Eine Tabelle ist in 3NF, wenn sie in 2NF ist und zus√§tzlich:","options":["Keine partiellen Abh√§ngigkeiten hat","Keine transitiven Abh√§ngigkeiten hat","Nur atomare Werte hat","Keine Fremdschl√ºssel hat"],"correctAnswer":"Keine transitiven Abh√§ngigkeiten hat","explanation":"Die 3. Normalform (3NF) erfordert, dass die Tabelle in 2NF ist und keine transitiven Abh√§ngigkeiten hat. Kein Nicht-Schl√ºssel-Attribut darf transitiv vom Prim√§rschl√ºssel abh√§ngig sein.","points":1,"category":"3. Normalform"},{"id":"q8","type":"single-choice","question":"Was ist eine transitive Abh√§ngigkeit?","options":["A ‚Üí B und B ‚Üí A","A ‚Üí B und B ‚Üí C, dann A ‚Üí C","A ‚Üí B und A ‚Üí C","A ‚Üí A"],"correctAnswer":"A ‚Üí B und B ‚Üí C, dann A ‚Üí C","explanation":"Eine transitive Abh√§ngigkeit liegt vor, wenn A ‚Üí B und B ‚Üí C gilt, dann folgt daraus A ‚Üí C. Das bedeutet, A bestimmt C indirekt √ºber B als Zwischenattribut.","points":1,"category":"Funktionale Abh√§ngigkeiten"},{"id":"q9","type":"single-choice","question":"Gegeben ist die Tabelle Bestellposition(BestellNr, ProduktNr, Menge, Produktname, Preis) mit Prim√§rschl√ºssel (BestellNr, ProduktNr). Welche Normalform ist verletzt?","options":["1NF","2NF","3NF","Keine Verletzung"],"correctAnswer":"2NF","explanation":"Die 2NF ist verletzt, da Produktname und Preis nur von ProduktNr abh√§ngig sind, nicht vom gesamten zusammengesetzten Schl√ºssel (BestellNr, ProduktNr). Dies sind partielle funktionale Abh√§ngigkeiten.","points":2,"category":"Normalisierung Anwendung"},{"id":"q10","type":"multiple-choice","question":"Wie w√ºrde die Tabelle aus der vorherigen Frage korrekt normalisiert (2NF)?","options":["Bestellposition(BestellNr, ProduktNr, Menge)","Produkt(ProduktNr, Produktname, Preis)","Bestellung(BestellNr, Datum, KundenNr)","BestellungProdukt(BestellNr, ProduktNr, Menge, Produktname, Preis)"],"correctAnswer":["Bestellposition(BestellNr, ProduktNr, Menge)","Produkt(ProduktNr, Produktname, Preis)"],"explanation":"Zur Erreichung der 2NF werden die partiell abh√§ngigen Attribute in eine separate Tabelle ausgelagert: Bestellposition beh√§lt nur die vollst√§ndig abh√§ngigen Attribute, Produkt erh√§lt die nur von ProduktNr abh√§ngigen Attribute.","points":2,"category":"Normalisierung Anwendung"},{"id":"q11","type":"single-choice","question":"Gegeben ist die Tabelle Mitarbeiter(PersonalNr, Name, AbteilungsNr, Abteilungsname). Welche Normalform ist verletzt?","options":["1NF","2NF","3NF","Keine Verletzung"],"correctAnswer":"3NF","explanation":"Die 3NF ist verletzt, da eine transitive Abh√§ngigkeit vorliegt: PersonalNr ‚Üí AbteilungsNr ‚Üí Abteilungsname. Abteilungsname ist transitiv von PersonalNr abh√§ngig.","points":2,"category":"Normalisierung Anwendung"},{"id":"q12","type":"single-choice","question":"Was ist die Boyce-Codd-Normalform (BCNF)?","options":["Identisch mit 3NF","Eine Versch√§rfung der 3NF f√ºr Tabellen mit mehreren Kandidatenschl√ºsseln","Eine Abschw√§chung der 3NF","Eine Alternative zur 1NF"],"correctAnswer":"Eine Versch√§rfung der 3NF f√ºr Tabellen mit mehreren Kandidatenschl√ºsseln","explanation":"BCNF ist eine Versch√§rfung der 3NF. Sie erfordert, dass jede funktionale Abh√§ngigkeit einen Superschl√ºssel als Determinante hat. Dies ist besonders relevant bei mehreren Kandidatenschl√ºsseln.","points":1,"category":"BCNF"},{"id":"q13","type":"multiple-choice","question":"Welche Vorteile hat die Normalisierung?","options":["Reduzierte Redundanz","Vermeidung von Anomalien","Bessere Datenintegrit√§t","Immer bessere Performance"],"correctAnswer":["Reduzierte Redundanz","Vermeidung von Anomalien","Bessere Datenintegrit√§t"],"explanation":"Normalisierung reduziert Redundanz, vermeidet Anomalien und verbessert die Datenintegrit√§t. Performance ist nicht immer besser, da mehr JOINs erforderlich sein k√∂nnen.","points":2,"category":"Vor- und Nachteile"},{"id":"q14","type":"multiple-choice","question":"Welche Nachteile kann Normalisierung haben?","options":["Komplexere Abfragen durch mehr JOINs","Potentiell schlechtere Performance","H√∂here Komplexit√§t der Datenbankstruktur","Weniger Speicherplatz"],"correctAnswer":["Komplexere Abfragen durch mehr JOINs","Potentiell schlechtere Performance","H√∂here Komplexit√§t der Datenbankstruktur"],"explanation":"Nachteile der Normalisierung k√∂nnen komplexere Abfragen (mehr JOINs), potentiell schlechtere Performance und h√∂here Komplexit√§t der Datenbankstruktur sein. Normalisierung spart normalerweise Speicherplatz.","points":2,"category":"Vor- und Nachteile"},{"id":"q15","type":"single-choice","question":"Wann ist Denormalisierung sinnvoll?","options":["Immer zur Performance-Verbesserung","Bei performance-kritischen Anwendungen mit read-heavy Workloads","Niemals","Nur bei kleinen Datenbanken"],"correctAnswer":"Bei performance-kritischen Anwendungen mit read-heavy Workloads","explanation":"Denormalisierung ist sinnvoll bei performance-kritischen Anwendungen mit read-heavy Workloads, Data Warehouse Systemen oder Reporting-Datenbanken, wo Abfragegeschwindigkeit wichtiger ist als Speicherplatz.","points":1,"category":"Denormalisierung"},{"id":"q16","type":"single-choice","question":"Welche Tabelle verletzt die 1NF?","options":["Kunde(KundenNr, Name, Adresse)","Kunde(KundenNr, Name, Telefon1, Telefon2)","Kunde(KundenNr, Name, 'Telefon: 030-123, 0171-456')","Kunde(KundenNr, Name, PLZ, Ort)"],"correctAnswer":"Kunde(KundenNr, Name, 'Telefon: 030-123, 0171-456')","explanation":"Die dritte Tabelle verletzt die 1NF, da das Telefon-Attribut mehrere Werte in einem Feld enth√§lt (nicht atomar). Die korrekte L√∂sung w√§re eine separate Telefon-Tabelle oder separate Attribute.","points":1,"category":"1. Normalform"},{"id":"q17","type":"single-choice","question":"Was ist eine vollst√§ndige funktionale Abh√§ngigkeit?","options":["B ist von der gesamten Attributkombination A abh√§ngig","B ist nur von einem Teil von A abh√§ngig","A ist von B abh√§ngig","A und B sind unabh√§ngig"],"correctAnswer":"B ist von der gesamten Attributkombination A abh√§ngig","explanation":"Eine vollst√§ndige funktionale Abh√§ngigkeit liegt vor, wenn B von der gesamten Attributkombination A abh√§ngig ist und die Entfernung eines Attributs aus A die Abh√§ngigkeit aufheben w√ºrde.","points":1,"category":"Funktionale Abh√§ngigkeiten"},{"id":"q18","type":"single-choice","question":"Welcher Normalisierungsschritt ist korrekt f√ºr die Tabelle Ausleihe(AusleihNr, LeserNr, LeserName, ISBN, Buchtitel, Datum)?","options":["Keine Normalisierung n√∂tig","Aufteilen in: Ausleihe(AusleihNr, LeserNr, ISBN, Datum), Leser(LeserNr, LeserName), Buch(ISBN, Buchtitel)","Nur Leser-Daten auslagern","Nur Buch-Daten auslagern"],"correctAnswer":"Aufteilen in: Ausleihe(AusleihNr, LeserNr, ISBN, Datum), Leser(LeserNr, LeserName), Buch(ISBN, Buchtitel)","explanation":"Die Tabelle hat transitive Abh√§ngigkeiten (AusleihNr ‚Üí LeserNr ‚Üí LeserName und AusleihNr ‚Üí ISBN ‚Üí Buchtitel). Zur Erreichung der 3NF m√ºssen diese in separate Tabellen ausgelagert werden.","points":2,"category":"Normalisierung Anwendung"},{"id":"q19","type":"single-choice","question":"Was ist die 4. Normalform (4NF)?","options":["Identisch mit BCNF","Eliminiert mehrwertige Abh√§ngigkeiten","Eliminiert Verbundabh√§ngigkeiten","Eine Alternative zur 3NF"],"correctAnswer":"Eliminiert mehrwertige Abh√§ngigkeiten","explanation":"Die 4NF eliminiert mehrwertige Abh√§ngigkeiten. Sie ist erreicht, wenn die Tabelle in BCNF ist und keine mehrwertigen Abh√§ngigkeiten hat, bei denen ein Attribut mehrere unabh√§ngige Wertemengen bestimmt.","points":1,"category":"4. Normalform"},{"id":"q20","type":"multiple-choice","question":"Welche Schritte geh√∂ren zum Normalisierungsprozess?","options":["Ausgangstabelle analysieren und funktionale Abh√§ngigkeiten identifizieren","1NF erreichen durch Eliminierung mehrwertiger Attribute","2NF erreichen durch Eliminierung partieller Abh√§ngigkeiten","3NF erreichen durch Eliminierung transitiver Abh√§ngigkeiten"],"correctAnswer":["Ausgangstabelle analysieren und funktionale Abh√§ngigkeiten identifizieren","1NF erreichen durch Eliminierung mehrwertiger Attribute","2NF erreichen durch Eliminierung partieller Abh√§ngigkeiten","3NF erreichen durch Eliminierung transitiver Abh√§ngigkeiten"],"explanation":"Der Normalisierungsprozess umfasst: 1) Analyse der Ausgangstabelle, 2) 1NF durch atomare Werte, 3) 2NF durch Eliminierung partieller Abh√§ngigkeiten, 4) 3NF durch Eliminierung transitiver Abh√§ngigkeiten.","points":2,"category":"Normalisierungsprozess"}]`),xu=["Normalisierung","Normalformen","Funktionale Abh√§ngigkeiten","Anomalien","Datenbankdesign","1NF","2NF","3NF","BCNF"],Vu="2025-01-20T00:00:00Z",Fu={id:Pu,moduleId:Tu,title:qu,description:Ru,category:Iu,difficulty:Cu,examRelevance:Lu,newIn2025:Mu,timeLimit:Ou,passingScore:Nu,questions:Bu,tags:xu,lastUpdated:Vu},Ku=Object.freeze(Object.defineProperty({__proto__:null,category:Iu,default:Fu,description:Ru,difficulty:Cu,examRelevance:Lu,id:Pu,lastUpdated:Vu,moduleId:Tu,newIn2025:Mu,passingScore:Nu,questions:Bu,tags:xu,timeLimit:Ou,title:qu},Symbol.toStringTag,{value:"Module"})),Wu="bp-dpa-02-etl-quiz",ju="bp-dpa-02-etl-fundamentals",$u="ETL-Prozesse und Datenintegration",Gu="Umfassendes Quiz zu Extract, Transform, Load-Prozessen, Datenqualit√§t und ETL-Tools",Uu="BP-DPA-01",Hu="intermediate",Qu="high",Zu=!1,Ju=35,Yu=70,Xu=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Wof√ºr steht die Abk√ºrzung ETL?","options":["Extract, Transfer, Load","Extract, Transform, Load","Export, Transform, Link","Extract, Translate, Load"],"correctAnswer":"Extract, Transform, Load","explanation":"ETL steht f√ºr Extract (Extrahieren), Transform (Transformieren) und Load (Laden). Dies sind die drei Hauptphasen der Datenintegration.","points":1,"category":"ETL Grundlagen"},{"id":"q2","type":"single-choice","question":"Was ist der Hauptunterschied zwischen ETL und ELT?","options":["ETL ist schneller als ELT","Bei ETL wird vor dem Laden transformiert, bei ELT nach dem Laden","ELT ist nur f√ºr kleine Datenmengen geeignet","ETL und ELT sind identisch"],"correctAnswer":"Bei ETL wird vor dem Laden transformiert, bei ELT nach dem Laden","explanation":"Der Hauptunterschied liegt im Zeitpunkt der Transformation: ETL transformiert die Daten vor dem Laden ins Zielsystem, ELT l√§dt die Rohdaten zuerst und transformiert sie dann im Zielsystem.","points":1,"category":"ETL vs ELT"},{"id":"q3","type":"multiple-choice","question":"Welche Datenquellen k√∂nnen in ETL-Prozessen verwendet werden?","options":["Relationale Datenbanken","CSV/Excel-Dateien","REST APIs","NoSQL-Datenbanken"],"correctAnswer":["Relationale Datenbanken","CSV/Excel-Dateien","REST APIs","NoSQL-Datenbanken"],"explanation":"ETL-Prozesse k√∂nnen Daten aus verschiedensten Quellen extrahieren: relationale Datenbanken, Dateien (CSV, Excel, XML, JSON), APIs, NoSQL-Datenbanken, Streaming-Daten und viele weitere.","points":2,"category":"Datenquellen"},{"id":"q4","type":"single-choice","question":"Was ist eine Full Extraction?","options":["Extraktion nur der ge√§nderten Daten","Extraktion aller Daten aus der Quelle","Extraktion nur der neuen Daten","Extraktion nur der gel√∂schten Daten"],"correctAnswer":"Extraktion aller Daten aus der Quelle","explanation":"Full Extraction bedeutet die komplette Extraktion aller Daten aus der Quelle. Dies ist einfach zu implementieren, aber ressourcenintensiv bei gro√üen Datenmengen.","points":1,"category":"Extraktionsstrategien"},{"id":"q5","type":"single-choice","question":"Welche Extraktionsstrategie ist bei gro√üen Datenmengen effizienter?","options":["Full Extraction","Incremental Extraction","Random Extraction","Parallel Extraction"],"correctAnswer":"Incremental Extraction","explanation":"Incremental Extraction ist bei gro√üen Datenmengen effizienter, da nur ge√§nderte oder neue Daten extrahiert werden. Dies reduziert Ressourcenverbrauch und Verarbeitungszeit erheblich.","points":1,"category":"Extraktionsstrategien"},{"id":"q6","type":"multiple-choice","question":"Welche Datenqualit√§tsprobleme k√∂nnen in der Transform-Phase behandelt werden?","options":["Fehlende Werte (NULL)","Duplikate","Formatfehler","Ausrei√üer"],"correctAnswer":["Fehlende Werte (NULL)","Duplikate","Formatfehler","Ausrei√üer"],"explanation":"In der Transform-Phase k√∂nnen verschiedene Datenqualit√§tsprobleme behandelt werden: fehlende Werte, Duplikate, Formatfehler, Tippfehler, Ausrei√üer und Inkonsistenzen.","points":2,"category":"Datentransformation"},{"id":"q7","type":"single-choice","question":"Was ist Change Data Capture (CDC)?","options":["Eine Methode zur Datensicherung","Eine Technik zur Identifikation von Daten√§nderungen","Ein Datenformat","Eine Datenbank-Engine"],"correctAnswer":"Eine Technik zur Identifikation von Daten√§nderungen","explanation":"Change Data Capture (CDC) ist eine Technik zur Identifikation und Erfassung von Daten√§nderungen in Quellsystemen, um nur ge√§nderte Daten zu extrahieren und zu verarbeiten.","points":1,"category":"Extraktionstechniken"},{"id":"q8","type":"single-choice","question":"Was ist SCD Type 1?","options":["Historisierung von √Ñnderungen","√úberschreiben der aktuellen Werte","Zus√§tzliche Spalte f√ºr vorherigen Wert","Keine √Ñnderungen erlaubt"],"correctAnswer":"√úberschreiben der aktuellen Werte","explanation":"SCD (Slowly Changing Dimension) Type 1 √ºberschreibt die aktuellen Werte mit den neuen Werten. Die Historie geht dabei verloren, aber es ist die einfachste Implementierung.","points":1,"category":"Slowly Changing Dimensions"},{"id":"q9","type":"single-choice","question":"Welcher SCD-Typ beh√§lt die komplette Historie bei?","options":["SCD Type 1","SCD Type 2","SCD Type 3","SCD Type 4"],"correctAnswer":"SCD Type 2","explanation":"SCD Type 2 beh√§lt die komplette Historie bei, indem f√ºr jede √Ñnderung ein neuer Datensatz mit G√ºltigkeitszeitr√§umen erstellt wird. Dies erm√∂glicht historische Analysen.","points":1,"category":"Slowly Changing Dimensions"},{"id":"q10","type":"multiple-choice","question":"Welche ETL-Tools sind Open Source?","options":["Apache Airflow","Talend Open Studio","Pentaho Data Integration","Microsoft SSIS"],"correctAnswer":["Apache Airflow","Talend Open Studio","Pentaho Data Integration"],"explanation":"Apache Airflow, Talend Open Studio und Pentaho Data Integration (Kettle) sind Open Source ETL-Tools. Microsoft SSIS ist ein kommerzielles Tool.","points":2,"category":"ETL-Tools"},{"id":"q11","type":"single-choice","question":"Was ist ein Data Lake?","options":["Eine strukturierte Datenbank","Ein Repository f√ºr Rohdaten in verschiedenen Formaten","Ein ETL-Tool","Eine Visualisierungssoftware"],"correctAnswer":"Ein Repository f√ºr Rohdaten in verschiedenen Formaten","explanation":"Ein Data Lake ist ein Repository, das gro√üe Mengen von Rohdaten in ihrem nativen Format speichert - strukturiert, semi-strukturiert und unstrukturiert. Schema-on-Read Ansatz.","points":1,"category":"Datenarchitektur"},{"id":"q12","type":"single-choice","question":"Was bedeutet 'Schema-on-Write'?","options":["Schema wird beim Lesen definiert","Schema wird beim Schreiben definiert","Kein Schema erforderlich","Schema wird automatisch erkannt"],"correctAnswer":"Schema wird beim Schreiben definiert","explanation":"Schema-on-Write bedeutet, dass die Datenstruktur (Schema) bereits beim Schreiben/Laden der Daten definiert wird. Dies ist der traditionelle Data Warehouse Ansatz.","points":1,"category":"Datenarchitektur"},{"id":"q13","type":"multiple-choice","question":"Welche Datenqualit√§tsdimensionen gibt es?","options":["Vollst√§ndigkeit","Genauigkeit","Konsistenz","Aktualit√§t"],"correctAnswer":["Vollst√§ndigkeit","Genauigkeit","Konsistenz","Aktualit√§t"],"explanation":"Die wichtigsten Datenqualit√§tsdimensionen sind: Vollst√§ndigkeit (keine fehlenden Werte), Genauigkeit (korrekte Werte), Konsistenz (einheitliche Formate), Aktualit√§t (zeitnahe Daten) und Eindeutigkeit (keine Duplikate).","points":2,"category":"Datenqualit√§t"},{"id":"q14","type":"single-choice","question":"Was ist ein Upsert-Operation?","options":["Nur Einf√ºgen von Daten","Nur Aktualisieren von Daten","Einf√ºgen oder Aktualisieren je nach Existenz","L√∂schen von Daten"],"correctAnswer":"Einf√ºgen oder Aktualisieren je nach Existenz","explanation":"Upsert (Update + Insert) ist eine Operation, die Daten einf√ºgt, wenn sie nicht existieren, oder aktualisiert, wenn sie bereits vorhanden sind. Sehr n√ºtzlich f√ºr inkrementelle Loads.","points":1,"category":"Ladestrategien"},{"id":"q15","type":"single-choice","question":"Welche Architektur verarbeitet sowohl Batch- als auch Stream-Daten?","options":["Lambda-Architektur","Kappa-Architektur","Medallion-Architektur","Star-Architektur"],"correctAnswer":"Lambda-Architektur","explanation":"Die Lambda-Architektur verarbeitet sowohl Batch-Daten (Batch Layer) als auch Stream-Daten (Speed Layer) parallel und kombiniert die Ergebnisse im Serving Layer.","points":1,"category":"Datenarchitektur"},{"id":"q16","type":"single-choice","question":"Was ist der Vorteil der Kappa-Architektur gegen√ºber Lambda?","options":["Bessere Performance","Einfacherer Aufbau durch nur einen Stream-Processing-Pfad","Geringere Kosten","Bessere Skalierbarkeit"],"correctAnswer":"Einfacherer Aufbau durch nur einen Stream-Processing-Pfad","explanation":"Die Kappa-Architektur ist einfacher als Lambda, da sie nur einen Stream-Processing-Pfad hat. Batch-Verarbeitung wird als Replay des Streams behandelt, was die Komplexit√§t reduziert.","points":1,"category":"Datenarchitektur"},{"id":"q17","type":"multiple-choice","question":"Welche Metriken sind wichtig f√ºr ETL-Pipeline-Monitoring?","options":["Durchsatz (Records/Sekunde)","Latenz (Ende-zu-Ende Zeit)","Fehlerrate","Datenqualit√§t"],"correctAnswer":["Durchsatz (Records/Sekunde)","Latenz (Ende-zu-Ende Zeit)","Fehlerrate","Datenqualit√§t"],"explanation":"Wichtige ETL-Monitoring-Metriken sind: Durchsatz (verarbeitete Records pro Zeit), Latenz (Gesamtverarbeitungszeit), Fehlerrate (fehlgeschlagene Records) und Datenqualit√§tsmetriken.","points":2,"category":"Pipeline-Monitoring"},{"id":"q18","type":"single-choice","question":"Was ist Apache Spark haupts√§chlich optimiert f√ºr?","options":["Disk-basierte Verarbeitung","In-Memory-Verarbeitung","Netzwerk-√úbertragung","Datenspeicherung"],"correctAnswer":"In-Memory-Verarbeitung","explanation":"Apache Spark ist haupts√§chlich f√ºr In-Memory-Verarbeitung optimiert, was deutlich schnellere Datenverarbeitung erm√∂glicht als traditionelle disk-basierte Systeme wie Hadoop MapReduce.","points":1,"category":"Big Data ETL"},{"id":"q19","type":"single-choice","question":"Was ist die Medallion-Architektur?","options":["Bronze (Raw) ‚Üí Silver (Cleaned) ‚Üí Gold (Aggregated)","Extract ‚Üí Transform ‚Üí Load","Batch ‚Üí Stream ‚Üí Serving","Source ‚Üí Target ‚Üí Archive"],"correctAnswer":"Bronze (Raw) ‚Üí Silver (Cleaned) ‚Üí Gold (Aggregated)","explanation":"Die Medallion-Architektur organisiert Daten in drei Schichten: Bronze (Rohdaten), Silver (bereinigte/validierte Daten) und Gold (aggregierte/business-ready Daten).","points":1,"category":"Datenarchitektur"},{"id":"q20","type":"multiple-choice","question":"Welche Cloud ETL-Services gibt es?","options":["AWS Glue","Azure Data Factory","Google Cloud Dataflow","Apache Airflow"],"correctAnswer":["AWS Glue","Azure Data Factory","Google Cloud Dataflow"],"explanation":"AWS Glue, Azure Data Factory und Google Cloud Dataflow sind Cloud-basierte ETL-Services. Apache Airflow ist ein Open Source Workflow-Orchestrierungstool, das auch in der Cloud eingesetzt werden kann.","points":2,"category":"Cloud ETL"},{"id":"q21","type":"single-choice","question":"Was ist Data Lineage?","options":["Die Geschwindigkeit der Datenverarbeitung","Die Nachverfolgung der Datenherkunft und -transformation","Die Gr√∂√üe der Datenmengen","Die Qualit√§t der Daten"],"correctAnswer":"Die Nachverfolgung der Datenherkunft und -transformation","explanation":"Data Lineage ist die Nachverfolgung der Datenherkunft und aller Transformationsschritte, die Daten durchlaufen haben. Dies ist wichtig f√ºr Compliance, Debugging und Impact-Analysen.","points":1,"category":"Data Governance"},{"id":"q22","type":"single-choice","question":"Welche Fehlerbehandlungsstrategie ist in ETL-Pipelines √ºblich?","options":["Alle Fehler ignorieren","Bei ersten Fehler stoppen","Fehlerhafte Records in Reject-Tabelle schreiben und weitermachen","Fehlerhafte Records automatisch korrigieren"],"correctAnswer":"Fehlerhafte Records in Reject-Tabelle schreiben und weitermachen","explanation":"Eine √ºbliche Strategie ist, fehlerhafte Records in eine Reject-Tabelle zu schreiben und mit der Verarbeitung fortzufahren. Dies erm√∂glicht sp√§tere Analyse und Korrektur der Fehler ohne Pipeline-Stopp.","points":1,"category":"Fehlerbehandlung"}]`),ec=["ETL","ELT","Datenintegration","Extraktion","Transformation","Laden","Datenqualit√§t","SCD","Data Pipeline"],nc="2025-01-20T00:00:00Z",tc={id:Wu,moduleId:ju,title:$u,description:Gu,category:Uu,difficulty:Hu,examRelevance:Qu,newIn2025:Zu,timeLimit:Ju,passingScore:Yu,questions:Xu,tags:ec,lastUpdated:nc},ic=Object.freeze(Object.defineProperty({__proto__:null,category:Uu,default:tc,description:Gu,difficulty:Hu,examRelevance:Qu,id:Wu,lastUpdated:nc,moduleId:ju,newIn2025:Zu,passingScore:Yu,questions:Xu,tags:ec,timeLimit:Ju,title:$u},Symbol.toStringTag,{value:"Module"})),rc="bp-dpa-03-bpmn-quiz",sc="bp-dpa-03-bpmn-fundamentals",ac="Gesch√§ftsprozessmodellierung mit BPMN",oc="Umfassendes Quiz zu BPMN-Notation, Prozessmodellierung und Gesch√§ftsprozessoptimierung",lc="BP-DPA-03",uc="intermediate",cc="high",dc=!1,mc=30,gc=70,hc=JSON.parse('[{"id":"q1","type":"single-choice","question":"Wof√ºr steht die Abk√ºrzung BPMN?","options":["Business Process Management Notation","Business Process Model and Notation","Business Process Modeling Network","Business Process Management Network"],"correctAnswer":"Business Process Model and Notation","explanation":"BPMN steht f√ºr Business Process Model and Notation. Es ist ein internationaler Standard zur grafischen Darstellung von Gesch√§ftsprozessen, entwickelt von der Object Management Group (OMG).","points":1,"category":"BPMN Grundlagen"},{"id":"q2","type":"single-choice","question":"Wie werden Start-Ereignisse in BPMN dargestellt?","options":["Kreis mit dickem Rand","Kreis mit d√ºnnem Rand","Kreis mit doppeltem Rand","Rechteck"],"correctAnswer":"Kreis mit d√ºnnem Rand","explanation":"Start-Ereignisse werden als Kreis mit d√ºnnem Rand dargestellt. Sie markieren den Beginn eines Gesch√§ftsprozesses und k√∂nnen verschiedene Ausl√∂ser haben (Nachrichten, Zeit, Signal, etc.).","points":1,"category":"BPMN Notation"},{"id":"q3","type":"single-choice","question":"Wie werden End-Ereignisse in BPMN dargestellt?","options":["Kreis mit d√ºnnem Rand","Kreis mit dickem Rand","Kreis mit doppeltem Rand","Raute"],"correctAnswer":"Kreis mit dickem Rand","explanation":"End-Ereignisse werden als Kreis mit dickem Rand dargestellt. Sie markieren das Ende eines Gesch√§ftsprozesses oder eines Prozesszweigs.","points":1,"category":"BPMN Notation"},{"id":"q4","type":"single-choice","question":"Wie werden Aktivit√§ten (Tasks) in BPMN dargestellt?","options":["Kreis","Raute","Abgerundetes Rechteck","Dreieck"],"correctAnswer":"Abgerundetes Rechteck","explanation":"Aktivit√§ten (Tasks) werden als abgerundete Rechtecke dargestellt. Sie repr√§sentieren atomare Arbeitsschritte im Gesch√§ftsprozess.","points":1,"category":"BPMN Notation"},{"id":"q5","type":"single-choice","question":"Was ist ein exklusives Gateway (XOR)?","options":["Alle ausgehenden Pfade werden parallel ausgef√ºhrt","Ein oder mehrere Pfade werden gew√§hlt","Genau ein ausgehender Pfad wird gew√§hlt","Kein Pfad wird gew√§hlt"],"correctAnswer":"Genau ein ausgehender Pfad wird gew√§hlt","explanation":"Ein exklusives Gateway (XOR, dargestellt als Raute mit X) ist eine Entweder-oder-Entscheidung. Genau ein ausgehender Pfad wird basierend auf einer Bedingung gew√§hlt.","points":1,"category":"Gateways"},{"id":"q6","type":"single-choice","question":"Was ist ein paralleles Gateway (AND)?","options":["Genau ein Pfad wird gew√§hlt","Ein oder mehrere Pfade werden gew√§hlt","Alle ausgehenden Pfade werden parallel ausgef√ºhrt","Kein Pfad wird ausgef√ºhrt"],"correctAnswer":"Alle ausgehenden Pfade werden parallel ausgef√ºhrt","explanation":"Ein paralleles Gateway (AND, dargestellt als Raute mit Plus) f√ºhrt alle ausgehenden Pfade parallel aus. Bei der Zusammenf√ºhrung wird auf alle Pfade gewartet (Synchronisation).","points":1,"category":"Gateways"},{"id":"q7","type":"single-choice","question":"Was ist der Unterschied zwischen Sequenzfluss und Nachrichtenfluss?","options":["Kein Unterschied","Sequenzfluss ist innerhalb eines Pools, Nachrichtenfluss zwischen Pools","Nachrichtenfluss ist innerhalb eines Pools, Sequenzfluss zwischen Pools","Beide sind identisch"],"correctAnswer":"Sequenzfluss ist innerhalb eines Pools, Nachrichtenfluss zwischen Pools","explanation":"Sequenzfluss (durchgezogener Pfeil) zeigt die Reihenfolge der Aktivit√§ten innerhalb eines Pools. Nachrichtenfluss (gestrichelter Pfeil) zeigt Kommunikation zwischen verschiedenen Pools/Organisationen.","points":1,"category":"Verbindungsobjekte"},{"id":"q8","type":"multiple-choice","question":"Welche Arten von Tasks gibt es in BPMN?","options":["Benutzer-Task (User Task)","Service-Task","Skript-Task","Gesch√§ftsregel-Task (Business Rule Task)"],"correctAnswer":["Benutzer-Task (User Task)","Service-Task","Skript-Task","Gesch√§ftsregel-Task (Business Rule Task)"],"explanation":"BPMN definiert verschiedene Task-Typen: Benutzer-Task (manuell), Service-Task (automatisch), Skript-Task (Code), Gesch√§ftsregel-Task (Regeln), Sende-Task, Empfangs-Task und weitere.","points":2,"category":"Task-Typen"},{"id":"q9","type":"single-choice","question":"Was ist ein Pool in BPMN?","options":["Eine Aktivit√§t","Ein Gateway","Ein Container f√ºr einen Teilnehmer/Organisation","Ein Ereignis"],"correctAnswer":"Ein Container f√ºr einen Teilnehmer/Organisation","explanation":"Ein Pool ist ein rechteckiger Container, der einen Teilnehmer oder eine Organisation repr√§sentiert. Pools k√∂nnen mehrere Lanes enthalten und zeigen, wer f√ºr welche Aktivit√§ten verantwortlich ist.","points":1,"category":"Schwimmbahnen"},{"id":"q10","type":"single-choice","question":"Was sind Lanes in BPMN?","options":["Unterteilungen von Pools f√ºr Rollen oder Abteilungen","Verbindungslinien","Ereignisse","Gateways"],"correctAnswer":"Unterteilungen von Pools f√ºr Rollen oder Abteilungen","explanation":"Lanes sind Unterteilungen von Pools, die verschiedene Rollen, Abteilungen oder Verantwortlichkeiten innerhalb einer Organisation darstellen.","points":1,"category":"Schwimmbahnen"},{"id":"q11","type":"single-choice","question":"Wie wird ein Teilprozess (Sub-Process) in BPMN dargestellt?","options":["Abgerundetes Rechteck mit Plus-Symbol","Kreis","Raute","Normales Rechteck"],"correctAnswer":"Abgerundetes Rechteck mit Plus-Symbol","explanation":"Ein Teilprozess wird als abgerundetes Rechteck mit einem Plus-Symbol dargestellt. Er fasst mehrere Aktivit√§ten zusammen und kann kollabiert oder erweitert dargestellt werden.","points":1,"category":"Teilprozesse"},{"id":"q12","type":"multiple-choice","question":"Welche BPMN-Diagrammtypen gibt es?","options":["Prozessdiagramm","Kollaborationsdiagramm","Choreografie-Diagramm","Datenflussdiagramm"],"correctAnswer":["Prozessdiagramm","Kollaborationsdiagramm","Choreografie-Diagramm"],"explanation":"BPMN definiert drei Hauptdiagrammtypen: Prozessdiagramm (Aktivit√§ten und Reihenfolge), Kollaborationsdiagramm (Interaktion zwischen Teilnehmern), Choreografie-Diagramm (Nachrichtenaustausch). Datenflussdiagramm ist kein BPMN-Typ.","points":2,"category":"Diagrammtypen"},{"id":"q13","type":"single-choice","question":"Was ist ein inklusives Gateway (OR)?","options":["Genau ein Pfad wird gew√§hlt","Alle Pfade werden gew√§hlt","Ein oder mehrere Pfade werden gew√§hlt","Kein Pfad wird gew√§hlt"],"correctAnswer":"Ein oder mehrere Pfade werden gew√§hlt","explanation":"Ein inklusives Gateway (OR, dargestellt als Raute mit Kreis) erm√∂glicht die Auswahl von einem oder mehreren ausgehenden Pfaden. Mindestens ein Pfad muss gew√§hlt werden.","points":1,"category":"Gateways"},{"id":"q14","type":"single-choice","question":"Wie werden Zwischen-Ereignisse (Intermediate Events) dargestellt?","options":["Kreis mit d√ºnnem Rand","Kreis mit dickem Rand","Kreis mit doppeltem Rand","Rechteck"],"correctAnswer":"Kreis mit doppeltem Rand","explanation":"Zwischen-Ereignisse werden als Kreis mit doppeltem Rand dargestellt. Sie treten w√§hrend des Prozesses auf und k√∂nnen fangend (Catch) oder werfend (Throw) sein.","points":1,"category":"BPMN Notation"},{"id":"q15","type":"multiple-choice","question":"Welche Schritte geh√∂ren zum Prozessmodellierungsprozess?","options":["Prozessidentifikation","Ist-Analyse","Modellierung","Validierung"],"correctAnswer":["Prozessidentifikation","Ist-Analyse","Modellierung","Validierung"],"explanation":"Der Prozessmodellierungsprozess umfasst: 1) Prozessidentifikation (Grenzen definieren), 2) Ist-Analyse (aktuellen Prozess dokumentieren), 3) Modellierung (BPMN-Diagramm erstellen), 4) Validierung (mit Stakeholdern pr√ºfen), 5) Optimierung.","points":2,"category":"Modellierungsprozess"},{"id":"q16","type":"single-choice","question":"Was ist ein Timer-Ereignis?","options":["Ein Ereignis, das durch eine Nachricht ausgel√∂st wird","Ein zeitgesteuertes Ereignis (Uhr-Symbol)","Ein Fehler-Ereignis","Ein End-Ereignis"],"correctAnswer":"Ein zeitgesteuertes Ereignis (Uhr-Symbol)","explanation":"Ein Timer-Ereignis (dargestellt mit Uhr-Symbol) ist zeitgesteuert und kann Prozesse zu bestimmten Zeiten ausl√∂sen, Timeouts implementieren oder Fristen √ºberwachen.","points":1,"category":"Ereignistypen"},{"id":"q17","type":"single-choice","question":"Was ist ein Fehler-Ereignis?","options":["Ein normales End-Ereignis","Ein Ereignis zur Behandlung von Ausnahmesituationen (Blitz-Symbol)","Ein Start-Ereignis","Ein Timer-Ereignis"],"correctAnswer":"Ein Ereignis zur Behandlung von Ausnahmesituationen (Blitz-Symbol)","explanation":"Ein Fehler-Ereignis (dargestellt mit Blitz-Symbol) behandelt Ausnahmesituationen und Fehler im Prozess. Es kann als Start-, Zwischen- oder End-Ereignis auftreten.","points":1,"category":"Ereignistypen"},{"id":"q18","type":"multiple-choice","question":"Welche KPIs sind f√ºr Prozessanalyse wichtig?","options":["Durchlaufzeit","Bearbeitungszeit","Kosten pro Prozessinstanz","Fehlerrate"],"correctAnswer":["Durchlaufzeit","Bearbeitungszeit","Kosten pro Prozessinstanz","Fehlerrate"],"explanation":"Wichtige Prozess-KPIs sind: Durchlaufzeit (Start bis Ende), Bearbeitungszeit (reine Arbeitszeit), Kosten pro Prozessinstanz, Fehlerrate, Kundenzufriedenheit und Ressourcenauslastung.","points":2,"category":"Prozess-KPIs"},{"id":"q19","type":"multiple-choice","question":"Welche Optimierungsstrategien gibt es f√ºr Gesch√§ftsprozesse?","options":["Eliminierung √ºberfl√ºssiger Aktivit√§ten","Automatisierung manueller T√§tigkeiten","Parallelisierung sequenzieller Aktivit√§ten","Standardisierung der Prozessausf√ºhrung"],"correctAnswer":["Eliminierung √ºberfl√ºssiger Aktivit√§ten","Automatisierung manueller T√§tigkeiten","Parallelisierung sequenzieller Aktivit√§ten","Standardisierung der Prozessausf√ºhrung"],"explanation":"Hauptoptimierungsstrategien sind: Eliminierung (√ºberfl√ºssige Aktivit√§ten entfernen), Automatisierung (manuelle T√§tigkeiten automatisieren), Parallelisierung (Durchlaufzeit reduzieren), Standardisierung (einheitliche Ausf√ºhrung).","points":2,"category":"Prozessoptimierung"},{"id":"q20","type":"single-choice","question":"Was ist Robotic Process Automation (RPA) im Kontext von BPMN?","options":["Manuelle Prozessausf√ºhrung","Automatisierung repetitiver, regelbasierter Aufgaben durch Software-Roboter","Physische Roboter in der Produktion","Datenbank-Automatisierung"],"correctAnswer":"Automatisierung repetitiver, regelbasierter Aufgaben durch Software-Roboter","explanation":"RPA automatisiert repetitive, regelbasierte Aufgaben durch Software-Roboter, die menschliche Interaktionen mit Anwendungen nachahmen. Dies ist eine wichtige Optimierungsstrategie f√ºr BPMN-modellierte Prozesse.","points":1,"category":"Prozessautomatisierung"}]'),pc=["BPMN","Gesch√§ftsprozesse","Prozessmodellierung","Workflow","Gateways","Events","Tasks","Prozessoptimierung"],fc="2025-01-20T00:00:00Z",bc={id:rc,moduleId:sc,title:ac,description:oc,category:lc,difficulty:uc,examRelevance:cc,newIn2025:dc,timeLimit:mc,passingScore:gc,questions:hc,tags:pc,lastUpdated:fc},kc=Object.freeze(Object.defineProperty({__proto__:null,category:lc,default:bc,description:oc,difficulty:uc,examRelevance:cc,id:rc,lastUpdated:fc,moduleId:sc,newIn2025:dc,passingScore:gc,questions:hc,tags:pc,timeLimit:mc,title:ac},Symbol.toStringTag,{value:"Module"})),zc="bp-dpa-04-bi-quiz",vc="bp-dpa-04-bi-fundamentals",yc="Business Intelligence und Dashboards",Sc="Umfassendes Quiz zu BI-Systemen, Data Warehousing, OLAP, KPIs und Dashboard-Design",wc="BP-DPA-04",Ac="intermediate",Ec="high",_c=!1,Dc=35,Pc=70,Tc=JSON.parse('[{"id":"q1","type":"single-choice","question":"Was ist Business Intelligence (BI)?","options":["Eine Programmiersprache","Sammlung von Strategien und Technologien zur Analyse von Gesch√§ftsdaten","Eine Datenbank","Ein Betriebssystem"],"correctAnswer":"Sammlung von Strategien und Technologien zur Analyse von Gesch√§ftsdaten","explanation":"Business Intelligence (BI) umfasst Technologien, Anwendungen und Praktiken zur Sammlung, Integration, Analyse und Pr√§sentation von Gesch√§ftsinformationen zur Unterst√ºtzung datengetriebener Entscheidungen.","points":1,"category":"BI Grundlagen"},{"id":"q2","type":"single-choice","question":"Was ist der Hauptunterschied zwischen Data Warehouse und Data Lake?","options":["Data Warehouse ist gr√∂√üer als Data Lake","Data Warehouse speichert strukturierte, bereinigte Daten; Data Lake speichert Rohdaten in verschiedenen Formaten","Data Lake ist teurer als Data Warehouse","Es gibt keinen Unterschied"],"correctAnswer":"Data Warehouse speichert strukturierte, bereinigte Daten; Data Lake speichert Rohdaten in verschiedenen Formaten","explanation":"Data Warehouse speichert strukturierte, bereinigte Daten mit Schema-on-Write f√ºr Reporting. Data Lake speichert Rohdaten in verschiedenen Formaten mit Schema-on-Read f√ºr flexible Exploration.","points":1,"category":"Datenarchitektur"},{"id":"q3","type":"single-choice","question":"Was ist ein Star Schema?","options":["Ein Netzwerk-Topologie","Ein dimensionales Datenmodell mit zentraler Faktentabelle und umgebenden Dimensionstabellen","Eine Programmiersprache","Ein Dashboard-Layout"],"correctAnswer":"Ein dimensionales Datenmodell mit zentraler Faktentabelle und umgebenden Dimensionstabellen","explanation":"Ein Star Schema ist ein dimensionales Datenmodell mit einer zentralen Faktentabelle (enth√§lt Kennzahlen) und umgebenden Dimensionstabellen (enthalten beschreibende Attribute). Es √§hnelt einem Stern.","points":1,"category":"Dimensionale Modellierung"},{"id":"q4","type":"single-choice","question":"Was enthalten Faktentabellen haupts√§chlich?","options":["Beschreibende Attribute","Kennzahlen (Measures) und Fremdschl√ºssel","Nur Prim√§rschl√ºssel","Metadaten"],"correctAnswer":"Kennzahlen (Measures) und Fremdschl√ºssel","explanation":"Faktentabellen enthalten haupts√§chlich Kennzahlen (Measures) wie Umsatz, Menge, Kosten und Fremdschl√ºssel zu den Dimensionstabellen. Sie sind optimiert f√ºr Aggregationen.","points":1,"category":"Dimensionale Modellierung"},{"id":"q5","type":"single-choice","question":"Was ist der Unterschied zwischen Snowflake und Star Schema?","options":["Snowflake hat normalisierte Dimensionstabellen, Star Schema hat denormalisierte","Star Schema hat normalisierte Dimensionstabellen, Snowflake hat denormalisierte","Es gibt keinen Unterschied","Snowflake ist nur f√ºr Cloud-Datenbanken"],"correctAnswer":"Snowflake hat normalisierte Dimensionstabellen, Star Schema hat denormalisierte","explanation":"Snowflake Schema hat normalisierte Dimensionstabellen (reduzierte Redundanz, komplexere Abfragen), w√§hrend Star Schema denormalisierte Dimensionstabellen hat (einfachere Abfragen, mehr Redundanz).","points":1,"category":"Dimensionale Modellierung"},{"id":"q6","type":"multiple-choice","question":"Welche OLAP-Operationen gibt es?","options":["Drill-Down","Roll-Up","Slice","Dice"],"correctAnswer":["Drill-Down","Roll-Up","Slice","Dice"],"explanation":"Die wichtigsten OLAP-Operationen sind: Drill-Down (zu Details), Roll-Up (zu Aggregaten), Slice (eine Dimension ausw√§hlen), Dice (mehrere Dimensionen ausw√§hlen) und Pivot (Rotation der Ansicht).","points":2,"category":"OLAP"},{"id":"q7","type":"single-choice","question":"Was bedeutet Drill-Down in OLAP?","options":["Von detaillierten zu aggregierten Daten","Von aggregierten zu detaillierten Daten","Auswahl einer Dimension","Rotation der Datenansicht"],"correctAnswer":"Von aggregierten zu detaillierten Daten","explanation":"Drill-Down bedeutet von aggregierten zu detaillierten Daten zu navigieren, z.B. von Jahr zu Quartal zu Monat. Roll-Up ist die umgekehrte Operation.","points":1,"category":"OLAP"},{"id":"q8","type":"single-choice","question":"Was ist MOLAP?","options":["Multidimensional OLAP mit vorgenerierte W√ºrfeln","Relational OLAP","Hybrid OLAP","Mobile OLAP"],"correctAnswer":"Multidimensional OLAP mit vorgenerierte W√ºrfeln","explanation":"MOLAP (Multidimensional OLAP) verwendet vorberechnete, multidimensionale W√ºrfel (Cubes) f√ºr sehr schnelle Abfragen, ben√∂tigt aber mehr Speicherplatz.","points":1,"category":"OLAP"},{"id":"q9","type":"multiple-choice","question":"Welche SMART-Kriterien gelten f√ºr KPIs?","options":["Specific (Spezifisch)","Measurable (Messbar)","Achievable (Erreichbar)","Time-bound (Zeitlich definiert)"],"correctAnswer":["Specific (Spezifisch)","Measurable (Messbar)","Achievable (Erreichbar)","Time-bound (Zeitlich definiert)"],"explanation":"SMART-Kriterien f√ºr KPIs: Specific (spezifisch), Measurable (messbar), Achievable (erreichbar), Relevant (relevant f√ºr Gesch√§ftsziele), Time-bound (zeitlich definiert).","points":2,"category":"KPIs"},{"id":"q10","type":"multiple-choice","question":"Welche KPI-Kategorien gibt es?","options":["Finanz-KPIs (Umsatz, ROI)","Operative KPIs (Durchlaufzeit, Qualit√§t)","Kunden-KPIs (NPS, Churn Rate)","Mitarbeiter-KPIs (Produktivit√§t, Fluktuation)"],"correctAnswer":["Finanz-KPIs (Umsatz, ROI)","Operative KPIs (Durchlaufzeit, Qualit√§t)","Kunden-KPIs (NPS, Churn Rate)","Mitarbeiter-KPIs (Produktivit√§t, Fluktuation)"],"explanation":"KPI-Kategorien umfassen: Finanz-KPIs (Umsatz, Gewinn, ROI), Operative KPIs (Durchlaufzeit, Qualit√§t), Kunden-KPIs (NPS, Churn Rate, CLV), Mitarbeiter-KPIs (Produktivit√§t, Fluktuation).","points":2,"category":"KPIs"},{"id":"q11","type":"multiple-choice","question":"Welche Dashboard-Typen gibt es?","options":["Strategische Dashboards","Operative Dashboards","Analytische Dashboards","Mobile Dashboards"],"correctAnswer":["Strategische Dashboards","Operative Dashboards","Analytische Dashboards"],"explanation":"Dashboard-Typen: Strategische (langfristige Trends f√ºr F√ºhrungskr√§fte), Operative (Tagesgesch√§ft, Real-time), Analytische (Detailanalysen f√ºr Analysten). Mobile ist ein Bereitstellungsformat, kein Typ.","points":2,"category":"Dashboard-Design"},{"id":"q12","type":"multiple-choice","question":"Welche Design-Prinzipien gelten f√ºr Dashboards?","options":["Klarheit und Einfachheit","Visuelle Hierarchie","Interaktivit√§t","Maximale Informationsdichte"],"correctAnswer":["Klarheit und Einfachheit","Visuelle Hierarchie","Interaktivit√§t"],"explanation":"Dashboard-Design-Prinzipien: Klarheit und Einfachheit (Fokus auf Wesentliches), Visuelle Hierarchie (wichtigste KPIs prominent), Interaktivit√§t (Filter, Drill-Down). Maximale Informationsdichte f√ºhrt zu √úberladung.","points":2,"category":"Dashboard-Design"},{"id":"q13","type":"single-choice","question":"Welche Visualisierung ist am besten f√ºr Trends geeignet?","options":["Kreisdiagramm","Liniendiagramm","Balkendiagramm","Treemap"],"correctAnswer":"Liniendiagramm","explanation":"Liniendiagramme sind am besten f√ºr die Darstellung von Trends √ºber Zeit geeignet, da sie Entwicklungen und Muster klar visualisieren. Kreisdiagramme zeigen Anteile, Balkendiagramme Vergleiche.","points":1,"category":"Datenvisualisierung"},{"id":"q14","type":"single-choice","question":"Welche Visualisierung ist am besten f√ºr Anteile/Zusammensetzung geeignet?","options":["Liniendiagramm","Kreisdiagramm","Scatter-Plot","Histogramm"],"correctAnswer":"Kreisdiagramm","explanation":"Kreisdiagramme (Pie Charts) sind am besten f√ºr die Darstellung von Anteilen und Zusammensetzung geeignet, da sie zeigen, wie sich ein Ganzes in Teile aufteilt.","points":1,"category":"Datenvisualisierung"},{"id":"q15","type":"single-choice","question":"Was ist Self-Service BI?","options":["BI nur f√ºr IT-Abteilungen","Endbenutzer erstellen eigene Berichte ohne IT-Abh√§ngigkeit","Automatische BI-Systeme","Cloud-basierte BI"],"correctAnswer":"Endbenutzer erstellen eigene Berichte ohne IT-Abh√§ngigkeit","explanation":"Self-Service BI erm√∂glicht es Endbenutzern, eigene Berichte und Analysen zu erstellen, ohne auf die IT-Abteilung angewiesen zu sein. Dies erh√∂ht Agilit√§t und reduziert IT-Belastung.","points":1,"category":"Self-Service BI"},{"id":"q16","type":"multiple-choice","question":"Welche Herausforderungen hat Self-Service BI?","options":["Datenqualit√§t und -konsistenz","Governance und Compliance","Schulungsbedarf","Sicherheit und Zugriffskontrolle"],"correctAnswer":["Datenqualit√§t und -konsistenz","Governance und Compliance","Schulungsbedarf","Sicherheit und Zugriffskontrolle"],"explanation":"Self-Service BI Herausforderungen: Datenqualit√§t (inkonsistente Definitionen), Governance (Standards), Schulungsbedarf (Benutzer-Training), Sicherheit (Datenschutz, Zugriffskontrolle).","points":2,"category":"Self-Service BI"},{"id":"q17","type":"multiple-choice","question":"Welche BI-Tools sind weit verbreitet?","options":["Microsoft Power BI","Tableau","QlikView/QlikSense","Apache Superset"],"correctAnswer":["Microsoft Power BI","Tableau","QlikView/QlikSense","Apache Superset"],"explanation":"Verbreitete BI-Tools: Microsoft Power BI (Microsoft-Integration), Tableau (starke Visualisierung), QlikView/QlikSense (assoziative Modellierung), Apache Superset (Open Source).","points":2,"category":"BI-Tools"},{"id":"q18","type":"multiple-choice","question":"Welche Datenqualit√§tsdimensionen gibt es?","options":["Vollst√§ndigkeit","Genauigkeit","Konsistenz","Aktualit√§t"],"correctAnswer":["Vollst√§ndigkeit","Genauigkeit","Konsistenz","Aktualit√§t"],"explanation":"Datenqualit√§tsdimensionen: Vollst√§ndigkeit (keine fehlenden Werte), Genauigkeit (korrekte Werte), Konsistenz (einheitliche Formate), Aktualit√§t (zeitnahe Daten), Eindeutigkeit (keine Duplikate).","points":2,"category":"Datenqualit√§t"},{"id":"q19","type":"single-choice","question":"Was ist Data Lineage?","options":["Die Geschwindigkeit der Datenverarbeitung","Die Nachverfolgung der Datenherkunft und -transformation","Die Gr√∂√üe der Datenbank","Die Anzahl der Benutzer"],"correctAnswer":"Die Nachverfolgung der Datenherkunft und -transformation","explanation":"Data Lineage ist die Nachverfolgung der Datenherkunft und aller Transformationsschritte. Dies ist wichtig f√ºr Compliance, Debugging und Impact-Analysen bei √Ñnderungen.","points":1,"category":"Data Governance"},{"id":"q20","type":"single-choice","question":"Was ist eine Balanced Scorecard?","options":["Ein Dashboard-Tool","Ein strategisches Management-Framework mit vier Perspektiven","Eine Datenbank","Ein Visualisierungstyp"],"correctAnswer":"Ein strategisches Management-Framework mit vier Perspektiven","explanation":"Die Balanced Scorecard ist ein strategisches Management-Framework mit vier Perspektiven: Finanzperspektive, Kundenperspektive, Prozessperspektive und Lern-/Entwicklungsperspektive.","points":1,"category":"Strategische KPIs"},{"id":"q21","type":"single-choice","question":"Was ist ein Data Mart?","options":["Ein kleines, themenspezifisches Data Warehouse","Ein BI-Tool","Eine Visualisierung","Ein Dashboard"],"correctAnswer":"Ein kleines, themenspezifisches Data Warehouse","explanation":"Ein Data Mart ist ein kleines, themenspezifisches Data Warehouse, das auf die Bed√ºrfnisse einer bestimmten Abteilung oder eines Gesch√§ftsbereichs zugeschnitten ist.","points":1,"category":"Datenarchitektur"},{"id":"q22","type":"single-choice","question":"Was ist der Hauptvorteil von In-Memory-Technologie in BI?","options":["Geringere Kosten","Deutlich schnellere Abfragen durch Speicherung im RAM","Bessere Sicherheit","Einfachere Bedienung"],"correctAnswer":"Deutlich schnellere Abfragen durch Speicherung im RAM","explanation":"In-Memory-Technologie speichert Daten im Arbeitsspeicher (RAM) statt auf Festplatten, was zu deutlich schnelleren Abfragen und interaktiven Analysen f√ºhrt.","points":1,"category":"BI-Technologie"},{"id":"q23","type":"multiple-choice","question":"Welche Mobile BI Features sind wichtig?","options":["Responsive Design","Touch-optimierte Bedienung","Offline-Funktionalit√§t","Push-Benachrichtigungen"],"correctAnswer":["Responsive Design","Touch-optimierte Bedienung","Offline-Funktionalit√§t","Push-Benachrichtigungen"],"explanation":"Mobile BI Features: Responsive Design (Anpassung an Bildschirmgr√∂√üen), Touch-Optimierung, Offline-Funktionalit√§t (lokale Daten), Push-Benachrichtigungen (Alerts), Standortbasierte Analysen.","points":2,"category":"Mobile BI"},{"id":"q24","type":"single-choice","question":"Was ist ein KPI-Dashboard?","options":["Eine Datenbank","Eine visuelle Darstellung wichtiger Kennzahlen auf einen Blick","Ein Berichtstool","Eine Programmiersprache"],"correctAnswer":"Eine visuelle Darstellung wichtiger Kennzahlen auf einen Blick","explanation":"Ein KPI-Dashboard ist eine visuelle Darstellung der wichtigsten Kennzahlen (Key Performance Indicators) auf einen Blick, um schnelle Entscheidungen zu erm√∂glichen.","points":1,"category":"Dashboard-Design"},{"id":"q25","type":"single-choice","question":"Was ist der Unterschied zwischen ROLAP und MOLAP?","options":["ROLAP ist schneller als MOLAP","MOLAP speichert Daten in Cubes, ROLAP in relationalen Tabellen","ROLAP ist teurer als MOLAP","Es gibt keinen Unterschied"],"correctAnswer":"MOLAP speichert Daten in Cubes, ROLAP in relationalen Tabellen","explanation":"MOLAP (Multidimensional OLAP) speichert Daten in vorberechneten Cubes f√ºr schnelle Abfragen. ROLAP (Relational OLAP) nutzt relationale Datenbanken und ist flexibler, aber langsamer.","points":1,"category":"OLAP"}]'),qc=["Business Intelligence","BI","Data Warehouse","OLAP","KPIs","Dashboards","Datenvisualisierung","Self-Service BI","Star Schema"],Rc="2025-01-20T00:00:00Z",Ic={id:zc,moduleId:vc,title:yc,description:Sc,category:wc,difficulty:Ac,examRelevance:Ec,newIn2025:_c,timeLimit:Dc,passingScore:Pc,questions:Tc,tags:qc,lastUpdated:Rc},Cc=Object.freeze(Object.defineProperty({__proto__:null,category:wc,default:Ic,description:Sc,difficulty:Ac,examRelevance:Ec,id:zc,lastUpdated:Rc,moduleId:vc,newIn2025:_c,passingScore:Pc,questions:Tc,tags:qc,timeLimit:Dc,title:yc},Symbol.toStringTag,{value:"Module"})),Lc="bp-dpa-05-data-warehousing-quiz",Mc="bp-dpa-05-data-warehousing",Oc="Data Warehousing und dimensionale Modellierung",Nc="Umfassendes Quiz zu Data Warehouse Konzepten, dimensionaler Modellierung und OLAP-Systemen",Bc="BP-DPA-02",xc="intermediate",Vc="high",Fc=!1,Kc=30,Wc=70,jc=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist der Hauptunterschied zwischen einem Data Warehouse und einer operativen Datenbank?","options":["Data Warehouse ist kleiner als operative Datenbanken","Data Warehouse ist f√ºr Analysen optimiert, operative DB f√ºr Transaktionen","Data Warehouse verwendet nur NoSQL-Technologien","Es gibt keinen Unterschied"],"correctAnswer":"Data Warehouse ist f√ºr Analysen optimiert, operative DB f√ºr Transaktionen","explanation":"Data Warehouses sind f√ºr analytische Abfragen (OLAP) optimiert mit denormalisierten Strukturen, w√§hrend operative Datenbanken f√ºr Transaktionen (OLTP) mit normalisierten Strukturen optimiert sind.","points":1,"category":"Data Warehouse Grundlagen"},{"id":"q2","type":"single-choice","question":"Was charakterisiert ein Star Schema?","options":["Alle Tabellen sind normalisiert","Eine zentrale Faktentabelle umgeben von Dimensionstabellen","Nur eine gro√üe Tabelle mit allen Daten","Mehrere Faktentabellen ohne Dimensionen"],"correctAnswer":"Eine zentrale Faktentabelle umgeben von Dimensionstabellen","explanation":"Ein Star Schema hat eine zentrale Faktentabelle mit Kennzahlen und umgebende Dimensionstabellen mit beschreibenden Attributen. Die Struktur √§hnelt einem Stern.","points":1,"category":"Dimensionale Modellierung"},{"id":"q3","type":"single-choice","question":"Was enthalten Faktentabellen haupts√§chlich?","options":["Nur Prim√§rschl√ºssel","Beschreibende Attribute wie Namen und Adressen","Kennzahlen (Measures) und Fremdschl√ºssel zu Dimensionen","Nur Metadaten"],"correctAnswer":"Kennzahlen (Measures) und Fremdschl√ºssel zu Dimensionen","explanation":"Faktentabellen enthalten quantitative Kennzahlen (wie Umsatz, Menge) und Fremdschl√ºssel zu den Dimensionstabellen. Sie sind optimiert f√ºr Aggregationen und Berechnungen.","points":1,"category":"Faktentabellen"},{"id":"q4","type":"single-choice","question":"Was ist der Unterschied zwischen Snowflake und Star Schema?","options":["Snowflake hat normalisierte Dimensionen, Star Schema denormalisierte","Star Schema hat normalisierte Dimensionen, Snowflake denormalisierte","Beide sind identisch","Snowflake verwendet nur Cloud-Technologien"],"correctAnswer":"Snowflake hat normalisierte Dimensionen, Star Schema denormalisierte","explanation":"Snowflake Schema normalisiert die Dimensionstabellen (weniger Redundanz, komplexere Abfragen), w√§hrend Star Schema denormalisierte Dimensionen hat (einfachere Abfragen, mehr Redundanz).","points":1,"category":"Schema-Typen"},{"id":"q5","type":"multiple-choice","question":"Welche Arten von Faktentabellen gibt es?","options":["Transaktions-Fakten (Transaction Facts)","Snapshot-Fakten (Periodic Snapshot Facts)","Akkumulations-Fakten (Accumulating Snapshot Facts)","Master-Fakten (Master Facts)"],"correctAnswer":["Transaktions-Fakten (Transaction Facts)","Snapshot-Fakten (Periodic Snapshot Facts)","Akkumulations-Fakten (Accumulating Snapshot Facts)"],"explanation":"Es gibt drei Haupttypen von Faktentabellen: Transaktions-Fakten (einzelne Ereignisse), Snapshot-Fakten (regelm√§√üige Momentaufnahmen) und Akkumulations-Fakten (Prozess-Lebenszyklus). Master-Fakten ist kein Standard-Typ.","points":2,"category":"Faktentabellen-Typen"},{"id":"q6","type":"single-choice","question":"Was ist ein Data Mart?","options":["Ein gro√ües, unternehmensweites Data Warehouse","Ein kleines, themenspezifisches Data Warehouse f√ºr eine Abteilung","Eine operative Datenbank","Ein ETL-Tool"],"correctAnswer":"Ein kleines, themenspezifisches Data Warehouse f√ºr eine Abteilung","explanation":"Ein Data Mart ist ein kleineres, themenspezifisches Data Warehouse, das auf die Bed√ºrfnisse einer bestimmten Abteilung oder eines Gesch√§ftsbereichs zugeschnitten ist.","points":1,"category":"Data Mart"},{"id":"q7","type":"single-choice","question":"Was bedeutet 'Grain' (Granularit√§t) in einer Faktentabelle?","options":["Die Anzahl der Spalten","Die Gr√∂√üe der Tabelle","Das niedrigste Detaillevel der gespeicherten Daten","Die Anzahl der Dimensionen"],"correctAnswer":"Das niedrigste Detaillevel der gespeicherten Daten","explanation":"Grain (Granularit√§t) definiert das niedrigste Detaillevel der Daten in einer Faktentabelle, z.B. 'eine Zeile pro Verkaufstransaktion' oder 'eine Zeile pro Tag und Produkt'.","points":1,"category":"Granularit√§t"},{"id":"q8","type":"multiple-choice","question":"Welche Dimensionstypen gibt es?","options":["Konformierte Dimensionen (Conformed Dimensions)","Degenerierte Dimensionen (Degenerate Dimensions)","Junk-Dimensionen (Junk Dimensions)","Master-Dimensionen (Master Dimensions)"],"correctAnswer":["Konformierte Dimensionen (Conformed Dimensions)","Degenerierte Dimensionen (Degenerate Dimensions)","Junk-Dimensionen (Junk Dimensions)"],"explanation":"Wichtige Dimensionstypen sind: Konformierte Dimensionen (konsistent √ºber Data Marts), Degenerierte Dimensionen (Dimension als Attribut in Faktentabelle), Junk-Dimensionen (f√ºr verschiedene Flags/Indikatoren). Master-Dimensionen ist kein Standard-Begriff.","points":2,"category":"Dimensionstypen"},{"id":"q9","type":"single-choice","question":"Was ist eine Surrogate Key?","options":["Der nat√ºrliche Gesch√§ftsschl√ºssel","Ein k√ºnstlich generierter, eindeutiger Schl√ºssel f√ºr das Data Warehouse","Ein zusammengesetzter Schl√ºssel","Ein Fremdschl√ºssel"],"correctAnswer":"Ein k√ºnstlich generierter, eindeutiger Schl√ºssel f√ºr das Data Warehouse","explanation":"Ein Surrogate Key ist ein k√ºnstlich generierter, eindeutiger Schl√ºssel (meist Integer), der unabh√§ngig von Gesch√§ftsschl√ºsseln ist und Stabilit√§t sowie Performance im Data Warehouse gew√§hrleistet.","points":1,"category":"Schl√ºssel-Konzepte"},{"id":"q10","type":"single-choice","question":"Was ist der Zweck einer Bridge-Tabelle?","options":["Verbindung zwischen zwei Faktentabellen","Aufl√∂sung von Many-to-Many Beziehungen zwischen Fakten und Dimensionen","Speicherung von Metadaten","Backup-Zwecke"],"correctAnswer":"Aufl√∂sung von Many-to-Many Beziehungen zwischen Fakten und Dimensionen","explanation":"Bridge-Tabellen l√∂sen Many-to-Many Beziehungen zwischen Faktentabellen und Dimensionen auf, z.B. wenn ein Bankkonto mehrere Kontoinhaber hat.","points":1,"category":"Bridge-Tabellen"},{"id":"q11","type":"single-choice","question":"Was ist ein Cube in OLAP?","options":["Eine dreidimensionale Darstellung von Daten","Eine multidimensionale Datenstruktur f√ºr schnelle Analysen","Eine spezielle Datenbank","Ein Visualisierungstool"],"correctAnswer":"Eine multidimensionale Datenstruktur f√ºr schnelle Analysen","explanation":"Ein OLAP-Cube ist eine multidimensionale Datenstruktur, die Daten f√ºr schnelle analytische Abfragen voraggregiert und organisiert. Trotz des Namens kann er mehr als drei Dimensionen haben.","points":1,"category":"OLAP-Cubes"},{"id":"q12","type":"multiple-choice","question":"Welche Vorteile bietet ein Data Warehouse?","options":["Zentrale Datenhaltung f√ºr Analysen","Historische Daten f√ºr Trendanalysen","Optimierte Performance f√ºr Abfragen","Echtzeitverarbeitung von Transaktionen"],"correctAnswer":["Zentrale Datenhaltung f√ºr Analysen","Historische Daten f√ºr Trendanalysen","Optimierte Performance f√ºr Abfragen"],"explanation":"Data Warehouses bieten zentrale Datenhaltung, historische Daten f√ºr Trends und optimierte Performance f√ºr Analysen. Echtzeitverarbeitung von Transaktionen ist Aufgabe operativer Systeme.","points":2,"category":"Data Warehouse Vorteile"},{"id":"q13","type":"single-choice","question":"Was ist eine Slowly Changing Dimension Type 6?","options":["Kombination aus Type 1, 2 und 3","Nur historische Daten","Nur aktuelle Daten","Gibt es nicht"],"correctAnswer":"Kombination aus Type 1, 2 und 3","explanation":"SCD Type 6 (auch Hybrid genannt) kombiniert die Ans√§tze von Type 1 (√úberschreiben), Type 2 (Historisierung) und Type 3 (zus√§tzliche Spalte) f√ºr maximale Flexibilit√§t.","points":1,"category":"SCD-Typen"},{"id":"q14","type":"single-choice","question":"Was ist ein Operational Data Store (ODS)?","options":["Ein Data Warehouse","Eine Zwischenschicht zwischen operativen Systemen und Data Warehouse","Eine Backup-Datenbank","Ein OLAP-Cube"],"correctAnswer":"Eine Zwischenschicht zwischen operativen Systemen und Data Warehouse","explanation":"Ein ODS ist eine Zwischenschicht, die aktuelle, integrierte operative Daten f√ºr taktische Entscheidungen bereitstellt, bevor sie ins Data Warehouse gelangen.","points":1,"category":"ODS"},{"id":"q15","type":"multiple-choice","question":"Welche Herausforderungen gibt es beim Data Warehouse Design?","options":["Datenqualit√§t und -konsistenz","Performance bei gro√üen Datenmengen","Komplexe ETL-Prozesse","Einfache Benutzeroberfl√§chen"],"correctAnswer":["Datenqualit√§t und -konsistenz","Performance bei gro√üen Datenmengen","Komplexe ETL-Prozesse"],"explanation":"Hauptherausforderungen sind Datenqualit√§t (Integration verschiedener Quellen), Performance (gro√üe Datenmengen) und komplexe ETL-Prozesse. Einfache Benutzeroberfl√§chen sind ein Ziel, keine Herausforderung.","points":2,"category":"Design-Herausforderungen"},{"id":"q16","type":"single-choice","question":"Was ist ein Factless Fact Table?","options":["Eine Faktentabelle ohne Daten","Eine Faktentabelle ohne numerische Measures, nur zur Ereigniserfassung","Eine Dimensionstabelle","Eine fehlerhafte Tabelle"],"correctAnswer":"Eine Faktentabelle ohne numerische Measures, nur zur Ereigniserfassung","explanation":"Eine Factless Fact Table enth√§lt keine numerischen Measures, sondern erfasst nur das Auftreten von Ereignissen oder Beziehungen zwischen Dimensionen, z.B. Anwesenheit von Studenten in Kursen.","points":1,"category":"Spezielle Faktentabellen"},{"id":"q17","type":"single-choice","question":"Was bedeutet 'Conformed Dimension'?","options":["Eine normalisierte Dimension","Eine Dimension, die konsistent √ºber mehrere Data Marts verwendet wird","Eine gro√üe Dimension","Eine zeitabh√§ngige Dimension"],"correctAnswer":"Eine Dimension, die konsistent √ºber mehrere Data Marts verwendet wird","explanation":"Conformed Dimensions sind Dimensionen, die identisch √ºber mehrere Data Marts oder Faktentabellen verwendet werden, um konsistente Analysen und Drill-Across-Abfragen zu erm√∂glichen.","points":1,"category":"Konformierte Dimensionen"},{"id":"q18","type":"multiple-choice","question":"Welche Indexierungsstrategien sind f√ºr Data Warehouses wichtig?","options":["Bitmap-Indizes f√ºr niedrige Kardinalit√§t","B-Tree-Indizes f√ºr hohe Kardinalit√§t","Columnstore-Indizes f√ºr Analysen","Unique-Indizes f√ºr alle Spalten"],"correctAnswer":["Bitmap-Indizes f√ºr niedrige Kardinalit√§t","B-Tree-Indizes f√ºr hohe Kardinalit√§t","Columnstore-Indizes f√ºr Analysen"],"explanation":"Wichtige Indexstrategien: Bitmap-Indizes f√ºr Spalten mit wenigen Werten, B-Tree f√ºr eindeutige Werte, Columnstore f√ºr analytische Abfragen. Unique-Indizes auf allen Spalten w√§ren ineffizient.","points":2,"category":"Indexierung"},{"id":"q19","type":"single-choice","question":"Was ist Partitionierung in Data Warehouses?","options":["Aufteilen gro√üer Tabellen in kleinere, verwaltbare Teile","Normalisierung von Tabellen","Erstellung von Indizes","Backup-Strategie"],"correctAnswer":"Aufteilen gro√üer Tabellen in kleinere, verwaltbare Teile","explanation":"Partitionierung teilt gro√üe Tabellen in kleinere, verwaltbare Teile auf (z.B. nach Datum), um Performance zu verbessern und Wartung zu vereinfachen.","points":1,"category":"Partitionierung"},{"id":"q20","type":"single-choice","question":"Was ist der Unterschied zwischen Top-Down und Bottom-Up Ansatz beim Data Warehouse Design?","options":["Top-Down startet mit Data Marts, Bottom-Up mit Enterprise Data Warehouse","Bottom-Up startet mit Data Marts, Top-Down mit Enterprise Data Warehouse","Beide Ans√§tze sind identisch","Es gibt nur den Top-Down Ansatz"],"correctAnswer":"Bottom-Up startet mit Data Marts, Top-Down mit Enterprise Data Warehouse","explanation":"Bottom-Up (Kimball) startet mit Data Marts und integriert diese sp√§ter. Top-Down (Inmon) beginnt mit einem zentralen Enterprise Data Warehouse und erstellt dann Data Marts.","points":1,"category":"Design-Ans√§tze"}]`),$c=["Data Warehouse","Dimensionale Modellierung","Star Schema","Snowflake Schema","Faktentabellen","Dimensionstabellen","OLAP","Data Mart"],Gc="2025-01-20T00:00:00Z",Uc={id:Lc,moduleId:Mc,title:Oc,description:Nc,category:Bc,difficulty:xc,examRelevance:Vc,newIn2025:Fc,timeLimit:Kc,passingScore:Wc,questions:jc,tags:$c,lastUpdated:Gc},Hc=Object.freeze(Object.defineProperty({__proto__:null,category:Bc,default:Uc,description:Nc,difficulty:xc,examRelevance:Vc,id:Lc,lastUpdated:Gc,moduleId:Mc,newIn2025:Fc,passingScore:Wc,questions:jc,tags:$c,timeLimit:Kc,title:Oc},Symbol.toStringTag,{value:"Module"})),Qc="bp-dpa-06-data-quality-quiz",Zc="bp-dpa-06-data-quality",Jc="Datenqualit√§t und Data Governance",Yc="Umfassendes Quiz zu Datenqualit√§tsdimensionen, Data Profiling, Datenbereinigung und Governance-Strategien",Xc="BP-DPA-01",ed="intermediate",nd="high",td=!1,id=25,rd=70,sd=JSON.parse(`[{"id":"q1","type":"multiple-choice","question":"Welche sind die wichtigsten Datenqualit√§tsdimensionen?","options":["Vollst√§ndigkeit (Completeness)","Genauigkeit (Accuracy)","Konsistenz (Consistency)","Geschwindigkeit (Speed)"],"correctAnswer":["Vollst√§ndigkeit (Completeness)","Genauigkeit (Accuracy)","Konsistenz (Consistency)"],"explanation":"Die wichtigsten Datenqualit√§tsdimensionen sind Vollst√§ndigkeit (keine fehlenden Werte), Genauigkeit (korrekte Werte), Konsistenz (einheitliche Formate), Aktualit√§t und Eindeutigkeit. Geschwindigkeit ist eine Performance-Metrik, keine Qualit√§tsdimension.","points":2,"category":"Datenqualit√§tsdimensionen"},{"id":"q2","type":"single-choice","question":"Was bedeutet Datenaktualit√§t (Timeliness)?","options":["Daten sind korrekt","Daten sind vollst√§ndig","Daten sind zeitnah und aktuell verf√ºgbar","Daten sind eindeutig"],"correctAnswer":"Daten sind zeitnah und aktuell verf√ºgbar","explanation":"Datenaktualit√§t (Timeliness) bedeutet, dass Daten zeitnah verf√ºgbar sind und den aktuellen Zustand der realen Welt widerspiegeln. Veraltete Daten k√∂nnen zu falschen Entscheidungen f√ºhren.","points":1,"category":"Datenqualit√§tsdimensionen"},{"id":"q3","type":"single-choice","question":"Was ist Data Profiling?","options":["Erstellung von Benutzerprofilen","Analyse und Bewertung der Datenqualit√§t durch statistische Untersuchung","Datensicherung","Datenvisualisierung"],"correctAnswer":"Analyse und Bewertung der Datenqualit√§t durch statistische Untersuchung","explanation":"Data Profiling ist die systematische Analyse von Daten zur Bewertung ihrer Qualit√§t, Struktur und Inhalte durch statistische Methoden und Mustererkennungsverfahren.","points":1,"category":"Data Profiling"},{"id":"q4","type":"multiple-choice","question":"Welche Techniken werden beim Data Profiling eingesetzt?","options":["Statistische Analyse (Min, Max, Durchschnitt)","Musteranalyse (Pattern Analysis)","Duplikatserkennung","Datenvisualisierung"],"correctAnswer":["Statistische Analyse (Min, Max, Durchschnitt)","Musteranalyse (Pattern Analysis)","Duplikatserkennung"],"explanation":"Data Profiling umfasst statistische Analyse (Verteilungen, Ausrei√üer), Musteranalyse (Formate, Strukturen), Duplikatserkennung und Beziehungsanalyse. Datenvisualisierung ist ein Ergebnis, keine Profiling-Technik.","points":2,"category":"Data Profiling Techniken"},{"id":"q5","type":"single-choice","question":"Was sind Datenanomalien?","options":["Normale Datenwerte","Abweichungen von erwarteten Datenmustern oder -werten","Gro√üe Datenmengen","Schnelle Datenverarbeitung"],"correctAnswer":"Abweichungen von erwarteten Datenmustern oder -werten","explanation":"Datenanomalien sind unerwartete Abweichungen von normalen Datenmustern, wie Ausrei√üer, ungew√∂hnliche Werte oder Inkonsistenzen, die auf Datenqualit√§tsprobleme hinweisen k√∂nnen.","points":1,"category":"Datenanomalien"},{"id":"q6","type":"multiple-choice","question":"Welche Arten von Datenfehlern gibt es?","options":["Syntaktische Fehler (Format, Datentyp)","Semantische Fehler (Bedeutung, Gesch√§ftsregeln)","Referentielle Fehler (Beziehungen zwischen Tabellen)","Performance-Fehler"],"correctAnswer":["Syntaktische Fehler (Format, Datentyp)","Semantische Fehler (Bedeutung, Gesch√§ftsregeln)","Referentielle Fehler (Beziehungen zwischen Tabellen)"],"explanation":"Datenfehler-Kategorien: Syntaktische Fehler (Format/Struktur), Semantische Fehler (Bedeutung/Gesch√§ftslogik), Referentielle Fehler (Beziehungsintegrit√§t). Performance-Fehler sind technische, keine Datenqualit√§tsfehler.","points":2,"category":"Datenfehler-Typen"},{"id":"q7","type":"single-choice","question":"Was ist Fuzzy Matching?","options":["Exakte √úbereinstimmung von Datens√§tzen","Ungef√§hre √úbereinstimmung zur Erkennung √§hnlicher Datens√§tze","Schnelle Datensuche","Datenvisualisierung"],"correctAnswer":"Ungef√§hre √úbereinstimmung zur Erkennung √§hnlicher Datens√§tze","explanation":"Fuzzy Matching erkennt √§hnliche, aber nicht exakt √ºbereinstimmende Datens√§tze durch Algorithmen wie Levenshtein-Distanz, um Duplikate und Variationen zu identifizieren.","points":1,"category":"Duplikatserkennung"},{"id":"q8","type":"single-choice","question":"Was ist Data Lineage?","options":["Die Geschwindigkeit der Datenverarbeitung","Die Nachverfolgung der Datenherkunft und -transformation","Die Gr√∂√üe der Datenbank","Die Anzahl der Benutzer"],"correctAnswer":"Die Nachverfolgung der Datenherkunft und -transformation","explanation":"Data Lineage dokumentiert den Weg der Daten von der Quelle bis zum Ziel, einschlie√ülich aller Transformationsschritte. Dies ist wichtig f√ºr Compliance, Debugging und Impact-Analysen.","points":1,"category":"Data Lineage"},{"id":"q9","type":"multiple-choice","question":"Welche Datenbereinigungsstrategien gibt es?","options":["Standardisierung (Format vereinheitlichen)","Validierung (Gesch√§ftsregeln pr√ºfen)","Deduplizierung (Duplikate entfernen)","Komprimierung (Dateigr√∂√üe reduzieren)"],"correctAnswer":["Standardisierung (Format vereinheitlichen)","Validierung (Gesch√§ftsregeln pr√ºfen)","Deduplizierung (Duplikate entfernen)"],"explanation":"Datenbereinigungsstrategien umfassen Standardisierung (einheitliche Formate), Validierung (Gesch√§ftsregeln), Deduplizierung (Duplikate entfernen) und Anreicherung. Komprimierung ist eine Speicheroptimierung.","points":2,"category":"Datenbereinigung"},{"id":"q10","type":"single-choice","question":"Was ist ein Data Quality Score?","options":["Die Anzahl der Datens√§tze","Eine quantitative Bewertung der Datenqualit√§t","Die Verarbeitungsgeschwindigkeit","Die Speichergr√∂√üe"],"correctAnswer":"Eine quantitative Bewertung der Datenqualit√§t","explanation":"Ein Data Quality Score ist eine numerische Bewertung der Datenqualit√§t, oft als Prozentsatz, der verschiedene Qualit√§tsdimensionen kombiniert und messbar macht.","points":1,"category":"Qualit√§tsmessung"},{"id":"q11","type":"single-choice","question":"Was ist Data Governance?","options":["Technische Datenverwaltung","Strategische Verwaltung von Daten als Unternehmensressource","Datensicherung","Datenvisualisierung"],"correctAnswer":"Strategische Verwaltung von Daten als Unternehmensressource","explanation":"Data Governance ist die strategische Verwaltung von Daten als Unternehmensressource, einschlie√ülich Richtlinien, Prozessen, Rollen und Verantwortlichkeiten f√ºr Datenqualit√§t und -nutzung.","points":1,"category":"Data Governance"},{"id":"q12","type":"multiple-choice","question":"Welche Rollen gibt es in der Data Governance?","options":["Data Owner (Datenverantwortlicher)","Data Steward (Datenverwalter)","Data Custodian (Datenpfleger)","Data Viewer (Datenbetrachter)"],"correctAnswer":["Data Owner (Datenverantwortlicher)","Data Steward (Datenverwalter)","Data Custodian (Datenpfleger)"],"explanation":"Wichtige Data Governance Rollen: Data Owner (gesch√§ftliche Verantwortung), Data Steward (operative Verwaltung), Data Custodian (technische Pflege). Data Viewer ist keine Standard-Governance-Rolle.","points":2,"category":"Governance-Rollen"},{"id":"q13","type":"single-choice","question":"Was ist ein Data Quality Rule?","options":["Eine Sicherheitsrichtlinie","Eine definierte Bedingung zur Bewertung der Datenqualit√§t","Ein Backup-Verfahren","Eine Visualisierungsregel"],"correctAnswer":"Eine definierte Bedingung zur Bewertung der Datenqualit√§t","explanation":"Data Quality Rules sind definierte Bedingungen oder Gesch√§ftsregeln, die automatisch pr√ºfen, ob Daten bestimmte Qualit√§tskriterien erf√ºllen, z.B. 'E-Mail muss @-Zeichen enthalten'.","points":1,"category":"Quality Rules"},{"id":"q14","type":"single-choice","question":"Was ist Master Data Management (MDM)?","options":["Verwaltung aller Unternehmensdaten","Zentrale Verwaltung kritischer Stammdaten","Backup-Management","Performance-Optimierung"],"correctAnswer":"Zentrale Verwaltung kritischer Stammdaten","explanation":"Master Data Management (MDM) ist die zentrale Verwaltung kritischer Stammdaten (wie Kunden, Produkte, Lieferanten) zur Sicherstellung von Konsistenz und Qualit√§t √ºber alle Systeme hinweg.","points":1,"category":"Master Data Management"},{"id":"q15","type":"multiple-choice","question":"Welche Metriken werden zur Datenqualit√§tsmessung verwendet?","options":["Vollst√§ndigkeitsrate (% nicht-leere Felder)","Genauigkeitsrate (% korrekte Werte)","Duplikatsrate (% doppelte Datens√§tze)","Verarbeitungsgeschwindigkeit"],"correctAnswer":["Vollst√§ndigkeitsrate (% nicht-leere Felder)","Genauigkeitsrate (% korrekte Werte)","Duplikatsrate (% doppelte Datens√§tze)"],"explanation":"Wichtige Datenqualit√§tsmetriken: Vollst√§ndigkeitsrate, Genauigkeitsrate, Duplikatsrate, Konsistenzrate und Aktualit√§tsrate. Verarbeitungsgeschwindigkeit ist eine Performance-, keine Qualit√§tsmetrik.","points":2,"category":"Qualit√§tsmetriken"},{"id":"q16","type":"single-choice","question":"Was ist Data Cataloging?","options":["Datensicherung","Inventarisierung und Dokumentation verf√ºgbarer Datenbest√§nde","Datenvisualisierung","Performance-Optimierung"],"correctAnswer":"Inventarisierung und Dokumentation verf√ºgbarer Datenbest√§nde","explanation":"Data Cataloging ist die systematische Inventarisierung und Dokumentation aller verf√ºgbaren Datenbest√§nde mit Metadaten, um Auffindbarkeit und Verst√§ndnis zu verbessern.","points":1,"category":"Data Cataloging"},{"id":"q17","type":"single-choice","question":"Was sind Referenzdaten (Reference Data)?","options":["Alle Unternehmensdaten","Statische Daten zur Klassifizierung und Validierung anderer Daten","Transaktionsdaten","Backup-Daten"],"correctAnswer":"Statische Daten zur Klassifizierung und Validierung anderer Daten","explanation":"Referenzdaten sind relativ statische Daten, die zur Klassifizierung, Kategorisierung und Validierung anderer Daten verwendet werden, z.B. L√§ndercodes, W√§hrungen, Produktkategorien.","points":1,"category":"Referenzdaten"},{"id":"q18","type":"multiple-choice","question":"Welche Tools werden f√ºr Datenqualit√§tsmanagement eingesetzt?","options":["Data Profiling Tools (z.B. Talend Data Preparation)","Data Quality Tools (z.B. Informatica Data Quality)","Master Data Management Tools (z.B. SAP MDG)","Nur Excel"],"correctAnswer":["Data Profiling Tools (z.B. Talend Data Preparation)","Data Quality Tools (z.B. Informatica Data Quality)","Master Data Management Tools (z.B. SAP MDG)"],"explanation":"Professionelle DQ-Tools umfassen Data Profiling Tools, spezialisierte Data Quality Suites und MDM-Plattformen. Excel ist f√ºr einfache Analysen geeignet, aber nicht f√ºr Enterprise-DQ-Management.","points":2,"category":"DQ-Tools"},{"id":"q19","type":"single-choice","question":"Was ist ein Data Quality Dashboard?","options":["Ein Backup-System","Eine visuelle Darstellung von Datenqualit√§tsmetriken und -trends","Eine Datenbank","Ein ETL-Tool"],"correctAnswer":"Eine visuelle Darstellung von Datenqualit√§tsmetriken und -trends","explanation":"Ein Data Quality Dashboard visualisiert Datenqualit√§tsmetriken, Trends und Alerts in Echtzeit, um Stakeholdern einen schnellen √úberblick √ºber den Zustand der Datenqualit√§t zu geben.","points":1,"category":"DQ-Monitoring"},{"id":"q20","type":"single-choice","question":"Was ist der Unterschied zwischen Data Quality und Data Integrity?","options":["Es gibt keinen Unterschied","Data Quality bezieht sich auf Gesch√§ftsregeln, Data Integrity auf technische Konsistenz","Data Integrity ist wichtiger als Data Quality","Data Quality ist nur f√ºr gro√üe Unternehmen relevant"],"correctAnswer":"Data Quality bezieht sich auf Gesch√§ftsregeln, Data Integrity auf technische Konsistenz","explanation":"Data Quality bezieht sich auf die Eignung der Daten f√ºr Gesch√§ftszwecke (Vollst√§ndigkeit, Genauigkeit), w√§hrend Data Integrity die technische Konsistenz und Korrektheit der Datenstrukturen sicherstellt.","points":1,"category":"Konzeptabgrenzung"}]`),ad=["Datenqualit√§t","Data Quality","Data Profiling","Data Governance","Datenbereinigung","Master Data Management","Data Lineage","Qualit√§tsmetriken"],od="2025-01-20T00:00:00Z",ld={id:Qc,moduleId:Zc,title:Jc,description:Yc,category:Xc,difficulty:ed,examRelevance:nd,newIn2025:td,timeLimit:id,passingScore:rd,questions:sd,tags:ad,lastUpdated:od},ud=Object.freeze(Object.defineProperty({__proto__:null,category:Xc,default:ld,description:Yc,difficulty:ed,examRelevance:nd,id:Qc,lastUpdated:od,moduleId:Zc,newIn2025:td,passingScore:rd,questions:sd,tags:ad,timeLimit:id,title:Jc},Symbol.toStringTag,{value:"Module"})),cd="bp-dpa-07-statistical-analysis-quiz",dd="bp-dpa-07-statistical-analysis",md="Statistische Analyse und Datenauswertung",gd="Umfassendes Quiz zu statistischen Grundlagen, deskriptiver und inferenzieller Statistik f√ºr die Datenanalyse",hd="BP-DPA-01",pd="intermediate",fd="high",bd=!1,kd=30,zd=70,vd=JSON.parse('[{"id":"q1","type":"single-choice","question":"Was ist der Unterschied zwischen deskriptiver und inferenzieller Statistik?","options":["Deskriptive Statistik beschreibt Daten, inferenzielle schlie√üt auf Grundgesamtheit","Inferenzielle Statistik beschreibt Daten, deskriptive schlie√üt auf Grundgesamtheit","Beide sind identisch","Es gibt keinen Unterschied"],"correctAnswer":"Deskriptive Statistik beschreibt Daten, inferenzielle schlie√üt auf Grundgesamtheit","explanation":"Deskriptive Statistik beschreibt und zusammenfasst vorhandene Daten. Inferenzielle Statistik zieht Schl√ºsse von einer Stichprobe auf die Grundgesamtheit und testet Hypothesen.","points":1,"category":"Statistische Grundlagen"},{"id":"q2","type":"single-choice","question":"Was ist der Median?","options":["Der h√§ufigste Wert in einem Datensatz","Der mittlere Wert einer sortierten Datenreihe","Der Durchschnitt aller Werte","Die Differenz zwischen gr√∂√ütem und kleinstem Wert"],"correctAnswer":"Der mittlere Wert einer sortierten Datenreihe","explanation":"Der Median ist der mittlere Wert einer nach Gr√∂√üe sortierten Datenreihe. Bei gerader Anzahl von Werten ist es der Durchschnitt der beiden mittleren Werte.","points":1,"category":"Lagema√üe"},{"id":"q3","type":"multiple-choice","question":"Welche Lagema√üe (Ma√üe der zentralen Tendenz) gibt es?","options":["Arithmetisches Mittel (Durchschnitt)","Median (Zentralwert)","Modus (h√§ufigster Wert)","Standardabweichung"],"correctAnswer":["Arithmetisches Mittel (Durchschnitt)","Median (Zentralwert)","Modus (h√§ufigster Wert)"],"explanation":"Die drei wichtigsten Lagema√üe sind: Arithmetisches Mittel (Durchschnitt), Median (mittlerer Wert) und Modus (h√§ufigster Wert). Die Standardabweichung ist ein Streuungsma√ü.","points":2,"category":"Lagema√üe"},{"id":"q4","type":"single-choice","question":"Was ist die Standardabweichung?","options":["Der Durchschnitt aller Werte","Ein Ma√ü f√ºr die Streuung der Daten um den Mittelwert","Der h√§ufigste Wert","Die Summe aller Werte"],"correctAnswer":"Ein Ma√ü f√ºr die Streuung der Daten um den Mittelwert","explanation":"Die Standardabweichung misst, wie stark die einzelnen Werte um den Mittelwert streuen. Eine kleine Standardabweichung bedeutet, dass die Werte nahe am Mittelwert liegen.","points":1,"category":"Streuungsma√üe"},{"id":"q5","type":"single-choice","question":"Was sind Quartile?","options":["Vier gleich gro√üe Gruppen von Daten","Werte, die einen Datensatz in vier gleiche Teile teilen","Die vier h√§ufigsten Werte","Vier verschiedene Mittelwerte"],"correctAnswer":"Werte, die einen Datensatz in vier gleiche Teile teilen","explanation":"Quartile teilen einen sortierten Datensatz in vier gleiche Teile: Q1 (25%), Q2 (50% = Median), Q3 (75%). Sie sind wichtig f√ºr die Beschreibung der Datenverteilung.","points":1,"category":"Quantile"},{"id":"q6","type":"single-choice","question":"Was ist eine Normalverteilung?","options":["Eine gleichm√§√üige Verteilung","Eine glockenf√∂rmige, symmetrische Verteilung","Eine schiefe Verteilung","Eine diskrete Verteilung"],"correctAnswer":"Eine glockenf√∂rmige, symmetrische Verteilung","explanation":"Die Normalverteilung ist eine glockenf√∂rmige, symmetrische Verteilung, bei der die meisten Werte um den Mittelwert konzentriert sind. Sie ist fundamental f√ºr viele statistische Verfahren.","points":1,"category":"Verteilungen"},{"id":"q7","type":"single-choice","question":"Was besagt die 68-95-99.7-Regel bei der Normalverteilung?","options":["68% der Werte liegen innerhalb einer Standardabweichung vom Mittelwert","95% der Werte liegen innerhalb von zwei Standardabweichungen","99.7% der Werte liegen innerhalb von drei Standardabweichungen","Alle genannten Aussagen sind korrekt"],"correctAnswer":"Alle genannten Aussagen sind korrekt","explanation":"Die 68-95-99.7-Regel (Empirische Regel) besagt: 68% der Werte liegen innerhalb ¬±1œÉ, 95% innerhalb ¬±2œÉ und 99.7% innerhalb ¬±3œÉ vom Mittelwert.","points":1,"category":"Normalverteilung"},{"id":"q8","type":"single-choice","question":"Was ist eine Korrelation?","options":["Ein Ma√ü f√ºr die Ursache-Wirkung-Beziehung","Ein Ma√ü f√ºr den linearen Zusammenhang zwischen zwei Variablen","Der Durchschnitt zweier Variablen","Die Differenz zwischen zwei Variablen"],"correctAnswer":"Ein Ma√ü f√ºr den linearen Zusammenhang zwischen zwei Variablen","explanation":"Korrelation misst die St√§rke und Richtung des linearen Zusammenhangs zwischen zwei Variablen. Wichtig: Korrelation bedeutet nicht Kausalit√§t!","points":1,"category":"Korrelation"},{"id":"q9","type":"single-choice","question":"Welche Werte kann der Korrelationskoeffizient nach Pearson annehmen?","options":["0 bis 1","-1 bis +1","0 bis 100","Beliebige positive Werte"],"correctAnswer":"-1 bis +1","explanation":"Der Pearson-Korrelationskoeffizient r liegt zwischen -1 und +1. -1 bedeutet perfekte negative Korrelation, +1 perfekte positive Korrelation, 0 keine lineare Korrelation.","points":1,"category":"Korrelationskoeffizient"},{"id":"q10","type":"single-choice","question":"Was ist eine Hypothese in der Statistik?","options":["Eine bewiesene Tatsache","Eine Vermutung √ºber einen Parameter der Grundgesamtheit","Ein Messwert","Eine Grafik"],"correctAnswer":"Eine Vermutung √ºber einen Parameter der Grundgesamtheit","explanation":"Eine statistische Hypothese ist eine Vermutung oder Annahme √ºber einen Parameter (z.B. Mittelwert) der Grundgesamtheit, die mit Hilfe von Stichprobendaten getestet wird.","points":1,"category":"Hypothesentests"},{"id":"q11","type":"single-choice","question":"Was ist die Nullhypothese (H‚ÇÄ)?","options":["Die Hypothese, die wir beweisen wollen","Die Hypothese, die keinen Effekt oder Unterschied annimmt","Eine falsche Hypothese","Eine unwichtige Hypothese"],"correctAnswer":"Die Hypothese, die keinen Effekt oder Unterschied annimmt","explanation":"Die Nullhypothese (H‚ÇÄ) nimmt an, dass kein Effekt, Unterschied oder Zusammenhang existiert. Sie wird getestet und entweder verworfen oder beibehalten.","points":1,"category":"Hypothesentests"},{"id":"q12","type":"single-choice","question":"Was ist ein p-Wert?","options":["Die Wahrscheinlichkeit, dass die Nullhypothese wahr ist","Die Wahrscheinlichkeit, die beobachteten Daten zu erhalten, wenn H‚ÇÄ wahr ist","Die Wahrscheinlichkeit eines Fehlers","Ein Prozentsatz der Stichprobe"],"correctAnswer":"Die Wahrscheinlichkeit, die beobachteten Daten zu erhalten, wenn H‚ÇÄ wahr ist","explanation":"Der p-Wert ist die Wahrscheinlichkeit, die beobachteten (oder extremere) Daten zu erhalten, unter der Annahme, dass die Nullhypothese wahr ist.","points":1,"category":"p-Wert"},{"id":"q13","type":"single-choice","question":"Was bedeutet ein Signifikanzniveau von Œ± = 0.05?","options":["5% der Daten sind falsch","Wir akzeptieren ein 5%iges Risiko, die Nullhypothese f√§lschlicherweise zu verwerfen","95% der Hypothesen sind wahr","Der Test ist zu 95% genau"],"correctAnswer":"Wir akzeptieren ein 5%iges Risiko, die Nullhypothese f√§lschlicherweise zu verwerfen","explanation":"Das Signifikanzniveau Œ± = 0.05 bedeutet, dass wir ein 5%iges Risiko f√ºr einen Fehler 1. Art (f√§lschliche Verwerfung der wahren Nullhypothese) akzeptieren.","points":1,"category":"Signifikanzniveau"},{"id":"q14","type":"multiple-choice","question":"Welche Arten von Fehlern gibt es bei Hypothesentests?","options":["Fehler 1. Art (Œ±-Fehler): H‚ÇÄ wird f√§lschlicherweise verworfen","Fehler 2. Art (Œ≤-Fehler): H‚ÇÄ wird f√§lschlicherweise beibehalten","Fehler 3. Art: Falsche Daten verwendet","Fehler 4. Art: Falsche Methode gew√§hlt"],"correctAnswer":["Fehler 1. Art (Œ±-Fehler): H‚ÇÄ wird f√§lschlicherweise verworfen","Fehler 2. Art (Œ≤-Fehler): H‚ÇÄ wird f√§lschlicherweise beibehalten"],"explanation":"Es gibt zwei Hauptfehlertypen: Fehler 1. Art (Œ±-Fehler) - wahre H‚ÇÄ wird verworfen, Fehler 2. Art (Œ≤-Fehler) - falsche H‚ÇÄ wird beibehalten. Fehler 3. und 4. Art sind keine Standard-Begriffe.","points":2,"category":"Testfehler"},{"id":"q15","type":"single-choice","question":"Was ist ein t-Test?","options":["Ein Test f√ºr Korrelationen","Ein Test zum Vergleich von Mittelwerten","Ein Test f√ºr Verteilungen","Ein Test f√ºr Varianzen"],"correctAnswer":"Ein Test zum Vergleich von Mittelwerten","explanation":"Der t-Test wird verwendet, um Mittelwerte zu vergleichen - entweder einen Stichprobenmittelwert mit einem bekannten Wert oder Mittelwerte zweier Gruppen.","points":1,"category":"Statistische Tests"},{"id":"q16","type":"single-choice","question":"Was ist ein Chi-Quadrat-Test?","options":["Ein Test f√ºr Mittelwerte","Ein Test f√ºr Unabh√§ngigkeit oder Anpassungsg√ºte bei kategorialen Daten","Ein Test f√ºr Korrelationen","Ein Test f√ºr Normalverteilung"],"correctAnswer":"Ein Test f√ºr Unabh√§ngigkeit oder Anpassungsg√ºte bei kategorialen Daten","explanation":"Der Chi-Quadrat-Test wird f√ºr kategoriale Daten verwendet, um Unabh√§ngigkeit zwischen Variablen zu testen oder die Anpassungsg√ºte an eine erwartete Verteilung zu pr√ºfen.","points":1,"category":"Statistische Tests"},{"id":"q17","type":"single-choice","question":"Was ist ein Konfidenzintervall?","options":["Ein Bereich, der den wahren Parameter mit einer bestimmten Wahrscheinlichkeit enth√§lt","Der Bereich aller m√∂glichen Werte","Die Standardabweichung","Der Mittelwert plus/minus Fehler"],"correctAnswer":"Ein Bereich, der den wahren Parameter mit einer bestimmten Wahrscheinlichkeit enth√§lt","explanation":"Ein Konfidenzintervall ist ein Bereich um eine Sch√§tzung, der den wahren Parameter der Grundgesamtheit mit einer bestimmten Wahrscheinlichkeit (z.B. 95%) enth√§lt.","points":1,"category":"Konfidenzintervalle"},{"id":"q18","type":"single-choice","question":"Was ist eine Regression?","options":["Ein Verfahren zur Vorhersage einer abh√§ngigen Variable","Ein Mittelwert","Eine Korrelation","Eine Verteilung"],"correctAnswer":"Ein Verfahren zur Vorhersage einer abh√§ngigen Variable","explanation":"Regression ist ein statistisches Verfahren zur Modellierung der Beziehung zwischen einer abh√§ngigen Variable und einer oder mehreren unabh√§ngigen Variablen f√ºr Vorhersagezwecke.","points":1,"category":"Regression"},{"id":"q19","type":"single-choice","question":"Was ist R¬≤ (Bestimmtheitsma√ü) in der Regression?","options":["Der Korrelationskoeffizient","Der Anteil der erkl√§rten Varianz der abh√§ngigen Variable","Die Standardabweichung","Der p-Wert"],"correctAnswer":"Der Anteil der erkl√§rten Varianz der abh√§ngigen Variable","explanation":"R¬≤ (Bestimmtheitsma√ü) gibt an, welcher Anteil der Varianz der abh√§ngigen Variable durch das Regressionsmodell erkl√§rt wird. Werte zwischen 0 und 1, h√∂here Werte bedeuten bessere Anpassung.","points":1,"category":"Regressionsanalyse"},{"id":"q20","type":"multiple-choice","question":"Welche Annahmen gelten f√ºr die lineare Regression?","options":["Linearit√§t der Beziehung","Normalverteilung der Residuen","Homoskedastizit√§t (konstante Varianz)","Unabh√§ngigkeit der Beobachtungen"],"correctAnswer":["Linearit√§t der Beziehung","Normalverteilung der Residuen","Homoskedastizit√§t (konstante Varianz)","Unabh√§ngigkeit der Beobachtungen"],"explanation":"Die wichtigsten Annahmen der linearen Regression sind: Linearit√§t, Normalverteilung der Residuen, Homoskedastizit√§t (konstante Varianz der Fehler) und Unabh√§ngigkeit der Beobachtungen.","points":2,"category":"Regressionsannahmen"}]'),yd=["Statistik","Deskriptive Statistik","Inferenzielle Statistik","Hypothesentests","Korrelation","Regression","Normalverteilung","t-Test","Chi-Quadrat"],Sd="2025-01-20T00:00:00Z",wd={id:cd,moduleId:dd,title:md,description:gd,category:hd,difficulty:pd,examRelevance:fd,newIn2025:bd,timeLimit:kd,passingScore:zd,questions:vd,tags:yd,lastUpdated:Sd},Ad=Object.freeze(Object.defineProperty({__proto__:null,category:hd,default:wd,description:gd,difficulty:pd,examRelevance:fd,id:cd,lastUpdated:Sd,moduleId:dd,newIn2025:bd,passingScore:zd,questions:vd,tags:yd,timeLimit:kd,title:md},Symbol.toStringTag,{value:"Module"})),Ed="bp-dpa-08-process-optimization-quiz",_d="bp-dpa-08-process-optimization",Dd="Prozessoptimierung und Lean Management",Pd="Umfassendes Quiz zu Prozessoptimierungsstrategien, Lean Management, Six Sigma und kontinuierlicher Verbesserung",Td="BP-DPA-03",qd="intermediate",Rd="high",Id=!1,Cd=25,Ld=70,Md=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist das Hauptziel der Prozessoptimierung?","options":["Mehr Mitarbeiter einstellen","Effizienz steigern und Verschwendung reduzieren","Neue Software kaufen","Mehr Meetings abhalten"],"correctAnswer":"Effizienz steigern und Verschwendung reduzieren","explanation":"Das Hauptziel der Prozessoptimierung ist die Steigerung der Effizienz durch Reduzierung von Verschwendung, Verk√ºrzung von Durchlaufzeiten und Verbesserung der Qualit√§t.","points":1,"category":"Prozessoptimierung Grundlagen"},{"id":"q2","type":"multiple-choice","question":"Welche sind die 7 Arten der Verschwendung (Muda) im Lean Management?","options":["√úberproduktion","Wartezeiten","Transport","√úberbearbeitung"],"correctAnswer":["√úberproduktion","Wartezeiten","Transport","√úberbearbeitung"],"explanation":"Die 7 Mudas sind: √úberproduktion, Wartezeiten, Transport, √úberbearbeitung, Best√§nde, Bewegung und Fehler. Sp√§ter wurde als 8. Muda die ungenutzte Kreativit√§t der Mitarbeiter hinzugef√ºgt.","points":2,"category":"Lean Management"},{"id":"q3","type":"single-choice","question":"Was bedeutet 'Kaizen'?","options":["Gro√üe, revolution√§re Ver√§nderungen","Kontinuierliche, kleine Verbesserungen","Kostensenkung","Qualit√§tskontrolle"],"correctAnswer":"Kontinuierliche, kleine Verbesserungen","explanation":"Kaizen bedeutet 'Ver√§nderung zum Besseren' und steht f√ºr kontinuierliche, kleine Verbesserungen durch alle Mitarbeiter, anstatt gro√üer, revolution√§rer Ver√§nderungen.","points":1,"category":"Kaizen"},{"id":"q4","type":"single-choice","question":"Was ist der PDCA-Zyklus?","options":["Plan-Do-Check-Act","Process-Design-Control-Analyze","Prepare-Develop-Create-Apply","Plan-Develop-Control-Assess"],"correctAnswer":"Plan-Do-Check-Act","explanation":"Der PDCA-Zyklus (Plan-Do-Check-Act) ist ein iterativer Verbesserungsprozess: Planen, Umsetzen, √úberpr√ºfen, Handeln. Er ist fundamental f√ºr kontinuierliche Verbesserung.","points":1,"category":"PDCA-Zyklus"},{"id":"q5","type":"single-choice","question":"Was ist Six Sigma?","options":["Eine Software","Eine Qualit√§tsmanagement-Methodik zur Reduzierung von Fehlern","Ein Mitarbeitertyp","Eine Organisationsstruktur"],"correctAnswer":"Eine Qualit√§tsmanagement-Methodik zur Reduzierung von Fehlern","explanation":"Six Sigma ist eine datengetriebene Qualit√§tsmanagement-Methodik, die darauf abzielt, Prozessvariationen zu reduzieren und die Fehlerrate auf maximal 3,4 Fehler pro Million M√∂glichkeiten zu senken.","points":1,"category":"Six Sigma"},{"id":"q6","type":"single-choice","question":"Was bedeutet DMAIC in Six Sigma?","options":["Define-Measure-Analyze-Improve-Control","Design-Make-Analyze-Implement-Check","Develop-Monitor-Assess-Integrate-Complete","Data-Method-Analysis-Implementation-Conclusion"],"correctAnswer":"Define-Measure-Analyze-Improve-Control","explanation":"DMAIC ist die strukturierte Probleml√∂sungsmethodik in Six Sigma: Define (Definieren), Measure (Messen), Analyze (Analysieren), Improve (Verbessern), Control (Kontrollieren).","points":1,"category":"DMAIC"},{"id":"q7","type":"single-choice","question":"Was ist ein Wertstrom (Value Stream)?","options":["Der Geldfluss im Unternehmen","Die Abfolge aller Aktivit√§ten zur Erstellung eines Produkts oder einer Dienstleistung","Die Mitarbeiterstruktur","Das IT-System"],"correctAnswer":"Die Abfolge aller Aktivit√§ten zur Erstellung eines Produkts oder einer Dienstleistung","explanation":"Ein Wertstrom umfasst alle Aktivit√§ten (wertsch√∂pfend und nicht-wertsch√∂pfend), die zur Erstellung eines Produkts oder einer Dienstleistung vom Rohstoff bis zum Kunden erforderlich sind.","points":1,"category":"Value Stream Mapping"},{"id":"q8","type":"single-choice","question":"Was ist Value Stream Mapping (VSM)?","options":["Eine Finanzanalyse","Eine visuelle Darstellung des Wertstroms zur Identifikation von Verschwendung","Eine Mitarbeiterbewertung","Eine Marktanalyse"],"correctAnswer":"Eine visuelle Darstellung des Wertstroms zur Identifikation von Verschwendung","explanation":"Value Stream Mapping ist eine Lean-Technik zur visuellen Darstellung des Material- und Informationsflusses, um Verschwendung zu identifizieren und Verbesserungsm√∂glichkeiten aufzuzeigen.","points":1,"category":"Value Stream Mapping"},{"id":"q9","type":"multiple-choice","question":"Welche Kennzahlen sind wichtig f√ºr die Prozessoptimierung?","options":["Durchlaufzeit (Lead Time)","Zykluszeit (Cycle Time)","Durchsatz (Throughput)","Mitarbeiteranzahl"],"correctAnswer":["Durchlaufzeit (Lead Time)","Zykluszeit (Cycle Time)","Durchsatz (Throughput)"],"explanation":"Wichtige Kennzahlen sind: Durchlaufzeit (Zeit von Start bis Ende), Zykluszeit (Zeit f√ºr eine Einheit), Durchsatz (Einheiten pro Zeit), Qualit√§tsrate und Kapazit√§tsauslastung. Mitarbeiteranzahl allein ist keine Prozessleistungskennzahl.","points":2,"category":"Prozesskennzahlen"},{"id":"q10","type":"single-choice","question":"Was ist ein Engpass (Bottleneck)?","options":["Ein defektes Ger√§t","Die Aktivit√§t mit der geringsten Kapazit√§t, die den Gesamtdurchsatz begrenzt","Ein Qualit√§tsproblem","Ein Mitarbeitermangel"],"correctAnswer":"Die Aktivit√§t mit der geringsten Kapazit√§t, die den Gesamtdurchsatz begrenzt","explanation":"Ein Engpass ist die Aktivit√§t oder Ressource mit der geringsten Kapazit√§t in einem Prozess, die den Gesamtdurchsatz des Systems begrenzt. Nach der Theory of Constraints bestimmt der Engpass die Systemleistung.","points":1,"category":"Engpasstheorie"},{"id":"q11","type":"single-choice","question":"Was ist die 5S-Methodik?","options":["Ein Qualit√§tsstandard","Eine Arbeitsplatzorganisationsmethode","Ein Finanzmodell","Eine Personalstrategie"],"correctAnswer":"Eine Arbeitsplatzorganisationsmethode","explanation":"5S ist eine Methodik zur Arbeitsplatzorganisation: Seiri (Sortieren), Seiton (Systematisieren), Seiso (S√§ubern), Seiketsu (Standardisieren), Shitsuke (Selbstdisziplin).","points":1,"category":"5S-Methodik"},{"id":"q12","type":"multiple-choice","question":"Welche Optimierungsstrategien gibt es?","options":["Eliminierung (Eliminate)","Automatisierung (Automate)","Parallelisierung (Parallelize)","Komplizierung (Complicate)"],"correctAnswer":["Eliminierung (Eliminate)","Automatisierung (Automate)","Parallelisierung (Parallelize)"],"explanation":"Hauptoptimierungsstrategien sind: Eliminierung (√ºberfl√ºssige Schritte entfernen), Automatisierung (manuelle Arbeit automatisieren), Parallelisierung (gleichzeitige Ausf√ºhrung), Standardisierung und Integration. Komplizierung ist keine Optimierungsstrategie.","points":2,"category":"Optimierungsstrategien"},{"id":"q13","type":"single-choice","question":"Was ist Poka-Yoke?","options":["Ein japanisches Spiel","Ein Prinzip zur Fehlervermeidung durch Design","Eine Kostensenkungsmethode","Ein Managementstil"],"correctAnswer":"Ein Prinzip zur Fehlervermeidung durch Design","explanation":"Poka-Yoke (\\"Fehler vermeiden\\") ist ein Lean-Prinzip, das darauf abzielt, Fehler durch intelligentes Design von Prozessen und Produkten zu verhindern oder sofort erkennbar zu machen.","points":1,"category":"Poka-Yoke"},{"id":"q14","type":"single-choice","question":"Was ist Takt Time?","options":["Die Zeit f√ºr eine Pause","Die verf√ºgbare Zeit geteilt durch die Kundennachfrage","Die Arbeitszeit pro Tag","Die R√ºstzeit einer Maschine"],"correctAnswer":"Die verf√ºgbare Zeit geteilt durch die Kundennachfrage","explanation":"Takt Time ist die verf√ºgbare Arbeitszeit geteilt durch die Kundennachfrage. Sie gibt den Rhythmus vor, in dem Produkte hergestellt werden m√ºssen, um die Nachfrage zu erf√ºllen.","points":1,"category":"Takt Time"},{"id":"q15","type":"single-choice","question":"Was ist ein Kanban-System?","options":["Ein Computerprogramm","Ein Pull-System zur Steuerung der Produktion basierend auf tats√§chlicher Nachfrage","Ein Qualit√§tskontrollsystem","Ein Mitarbeiterbewertungssystem"],"correctAnswer":"Ein Pull-System zur Steuerung der Produktion basierend auf tats√§chlicher Nachfrage","explanation":"Kanban ist ein Pull-System, das die Produktion basierend auf tats√§chlicher Nachfrage steuert. Signalkarten zeigen an, wann und wie viel produziert werden soll, um √úberproduktion zu vermeiden.","points":1,"category":"Kanban"},{"id":"q16","type":"single-choice","question":"Was ist der Unterschied zwischen Push- und Pull-System?","options":["Push produziert auf Vorrat, Pull produziert auf Nachfrage","Pull produziert auf Vorrat, Push produziert auf Nachfrage","Beide sind identisch","Es gibt keinen Unterschied"],"correctAnswer":"Push produziert auf Vorrat, Pull produziert auf Nachfrage","explanation":"Push-Systeme produzieren auf Vorrat basierend auf Prognosen. Pull-Systeme produzieren nur auf tats√§chliche Nachfrage, was Best√§nde reduziert und Flexibilit√§t erh√∂ht.","points":1,"category":"Push vs Pull"},{"id":"q17","type":"single-choice","question":"Was ist Total Productive Maintenance (TPM)?","options":["Nur Reparaturen durchf√ºhren","Pr√§ventive Wartung zur Maximierung der Anlageneffektivit√§t","Neue Maschinen kaufen","Wartung outsourcen"],"correctAnswer":"Pr√§ventive Wartung zur Maximierung der Anlageneffektivit√§t","explanation":"TPM ist ein ganzheitlicher Ansatz zur Wartung, der darauf abzielt, die Gesamtanlageneffektivit√§t (OEE) durch pr√§ventive Wartung, autonome Wartung durch Bediener und kontinuierliche Verbesserung zu maximieren.","points":1,"category":"TPM"},{"id":"q18","type":"single-choice","question":"Was ist OEE (Overall Equipment Effectiveness)?","options":["Ein Mitarbeiter-KPI","Eine Kennzahl f√ºr die Gesamtanlageneffektivit√§t","Ein Qualit√§tsstandard","Ein Kostenfaktor"],"correctAnswer":"Eine Kennzahl f√ºr die Gesamtanlageneffektivit√§t","explanation":"OEE misst die Gesamtanlageneffektivit√§t als Produkt aus Verf√ºgbarkeit, Leistung und Qualit√§t. Es ist eine wichtige Kennzahl zur Bewertung der Produktionseffizienz.","points":1,"category":"OEE"},{"id":"q19","type":"multiple-choice","question":"Welche Faktoren beeinflussen die OEE?","options":["Verf√ºgbarkeit (Availability)","Leistung (Performance)","Qualit√§t (Quality)","Kosten (Cost)"],"correctAnswer":["Verf√ºgbarkeit (Availability)","Leistung (Performance)","Qualit√§t (Quality)"],"explanation":"OEE = Verf√ºgbarkeit √ó Leistung √ó Qualit√§t. Verf√ºgbarkeit ber√ºcksichtigt Ausf√§lle, Leistung die Geschwindigkeit im Vergleich zur Idealgeschwindigkeit, Qualit√§t den Anteil fehlerfreier Produkte. Kosten sind nicht Teil der OEE-Berechnung.","points":2,"category":"OEE-Faktoren"},{"id":"q20","type":"single-choice","question":"Was ist Change Management im Kontext der Prozessoptimierung?","options":["Geld wechseln","Systematische Herangehensweise zur Einf√ºhrung von Ver√§nderungen","Mitarbeiter austauschen","Software aktualisieren"],"correctAnswer":"Systematische Herangehensweise zur Einf√ºhrung von Ver√§nderungen","explanation":"Change Management ist die systematische Herangehensweise zur Planung, Einf√ºhrung und Verankerung von Ver√§nderungen, um Widerstand zu minimieren und Akzeptanz zu f√∂rdern.","points":1,"category":"Change Management"}]`),Od=["Prozessoptimierung","Lean Management","Six Sigma","Kaizen","PDCA","Value Stream Mapping","5S","Kanban","TPM","OEE"],Nd="2025-01-20T00:00:00Z",Bd={id:Ed,moduleId:_d,title:Dd,description:Pd,category:Td,difficulty:qd,examRelevance:Rd,newIn2025:Id,timeLimit:Cd,passingScore:Ld,questions:Md,tags:Od,lastUpdated:Nd},xd=Object.freeze(Object.defineProperty({__proto__:null,category:Td,default:Bd,description:Pd,difficulty:qd,examRelevance:Rd,id:Ed,lastUpdated:Nd,moduleId:_d,newIn2025:Id,passingScore:Ld,questions:Md,tags:Od,timeLimit:Cd,title:Dd},Symbol.toStringTag,{value:"Module"})),Vd="bp-dpa-09-advanced-bi-quiz",Fd="bp-dpa-09-advanced-bi",Kd="Erweiterte Business Intelligence und Analytics",Wd="Umfassendes Quiz zu fortgeschrittenen BI-Konzepten, Predictive Analytics, Machine Learning und Big Data Analytics",jd="BP-DPA-04",$d="advanced",Gd="high",Ud=!1,Hd=35,Qd=70,Zd=JSON.parse(`[{"id":"q1","type":"single-choice","question":"Was ist der Unterschied zwischen deskriptiver, pr√§diktiver und pr√§skriptiver Analytics?","options":["Alle sind identisch","Deskriptiv: Was ist passiert, Pr√§diktiv: Was wird passieren, Pr√§skriptiv: Was sollte getan werden","Nur deskriptive Analytics ist wichtig","Es gibt nur deskriptive Analytics"],"correctAnswer":"Deskriptiv: Was ist passiert, Pr√§diktiv: Was wird passieren, Pr√§skriptiv: Was sollte getan werden","explanation":"Deskriptive Analytics beschreibt vergangene Ereignisse, Pr√§diktive Analytics sagt zuk√ºnftige Ereignisse vorher, Pr√§skriptive Analytics empfiehlt Handlungen zur Optimierung von Ergebnissen.","points":1,"category":"Analytics-Typen"},{"id":"q2","type":"single-choice","question":"Was ist Predictive Analytics?","options":["Analyse vergangener Daten","Verwendung statistischer Modelle zur Vorhersage zuk√ºnftiger Ereignisse","Echtzeit-Monitoring","Datenvisualisierung"],"correctAnswer":"Verwendung statistischer Modelle zur Vorhersage zuk√ºnftiger Ereignisse","explanation":"Predictive Analytics nutzt historische Daten, statistische Algorithmen und Machine Learning-Techniken, um die Wahrscheinlichkeit zuk√ºnftiger Ereignisse vorherzusagen.","points":1,"category":"Predictive Analytics"},{"id":"q3","type":"multiple-choice","question":"Welche Machine Learning-Ans√§tze gibt es?","options":["Supervised Learning (√úberwachtes Lernen)","Unsupervised Learning (Un√ºberwachtes Lernen)","Reinforcement Learning (Verst√§rkendes Lernen)","Emotional Learning"],"correctAnswer":["Supervised Learning (√úberwachtes Lernen)","Unsupervised Learning (Un√ºberwachtes Lernen)","Reinforcement Learning (Verst√§rkendes Lernen)"],"explanation":"Die drei Hauptans√§tze sind: Supervised Learning (mit Trainingsdaten), Unsupervised Learning (Muster in Daten finden), Reinforcement Learning (Lernen durch Belohnung). Emotional Learning ist kein Standard-ML-Ansatz.","points":2,"category":"Machine Learning"},{"id":"q4","type":"single-choice","question":"Was ist ein Data Lake?","options":["Ein strukturiertes Data Warehouse","Ein Repository f√ºr Rohdaten in verschiedenen Formaten","Eine Datenbank nur f√ºr strukturierte Daten","Ein Backup-System"],"correctAnswer":"Ein Repository f√ºr Rohdaten in verschiedenen Formaten","explanation":"Ein Data Lake speichert gro√üe Mengen von Rohdaten in ihrem nativen Format (strukturiert, semi-strukturiert, unstrukturiert) und erm√∂glicht flexible Analysen mit Schema-on-Read.","points":1,"category":"Data Lake"},{"id":"q5","type":"single-choice","question":"Was bedeutet 'Schema-on-Read' vs. 'Schema-on-Write'?","options":["Schema-on-Read definiert Struktur beim Lesen, Schema-on-Write beim Schreiben","Schema-on-Write definiert Struktur beim Lesen, Schema-on-Read beim Schreiben","Beide sind identisch","Es gibt keinen Unterschied"],"correctAnswer":"Schema-on-Read definiert Struktur beim Lesen, Schema-on-Write beim Schreiben","explanation":"Schema-on-Write (Data Warehouse) definiert die Datenstruktur beim Laden. Schema-on-Read (Data Lake) definiert die Struktur erst beim Zugriff, was mehr Flexibilit√§t bietet.","points":1,"category":"Schema-Ans√§tze"},{"id":"q6","type":"single-choice","question":"Was ist Big Data charakterisiert durch die 5 V's?","options":["Volume, Velocity, Variety, Veracity, Value","Vision, Voice, Video, Virtual, Vertical","Vendor, Version, Validation, Verification, View","Variable, Vector, Vertex, Vertical, Virtual"],"correctAnswer":"Volume, Velocity, Variety, Veracity, Value","explanation":"Die 5 V's von Big Data sind: Volume (Datenmenge), Velocity (Geschwindigkeit), Variety (Vielfalt), Veracity (Wahrhaftigkeit/Qualit√§t), Value (Wert).","points":1,"category":"Big Data"},{"id":"q7","type":"single-choice","question":"Was ist Apache Spark?","options":["Eine Datenbank","Ein verteiltes Computing-Framework f√ºr Big Data-Verarbeitung","Ein Visualisierungstool","Ein ETL-Tool"],"correctAnswer":"Ein verteiltes Computing-Framework f√ºr Big Data-Verarbeitung","explanation":"Apache Spark ist ein schnelles, verteiltes Computing-Framework f√ºr Big Data-Verarbeitung mit In-Memory-Computing-F√§higkeiten, das Batch- und Stream-Processing unterst√ºtzt.","points":1,"category":"Big Data Tools"},{"id":"q8","type":"single-choice","question":"Was ist ein Recommendation System?","options":["Ein System zur Mitarbeiterempfehlung","Ein System, das Benutzern relevante Inhalte oder Produkte vorschl√§gt","Ein Qualit√§tsmanagementsystem","Ein Backup-System"],"correctAnswer":"Ein System, das Benutzern relevante Inhalte oder Produkte vorschl√§gt","explanation":"Recommendation Systems analysieren Benutzerverhalten und -pr√§ferenzen, um personalisierte Empfehlungen f√ºr Produkte, Inhalte oder Services zu geben (z.B. Netflix, Amazon).","points":1,"category":"Recommendation Systems"},{"id":"q9","type":"multiple-choice","question":"Welche Arten von Recommendation Systems gibt es?","options":["Content-based Filtering","Collaborative Filtering","Hybrid Systems","Random Filtering"],"correctAnswer":["Content-based Filtering","Collaborative Filtering","Hybrid Systems"],"explanation":"Haupttypen sind: Content-based (basierend auf Artikeleigenschaften), Collaborative Filtering (basierend auf Nutzerverhalten), Hybrid (Kombination beider Ans√§tze). Random Filtering ist kein systematischer Ansatz.","points":2,"category":"Recommendation Types"},{"id":"q10","type":"single-choice","question":"Was ist A/B Testing?","options":["Ein Softwaretest","Ein experimenteller Ansatz zum Vergleich zweier Versionen","Ein Qualit√§tstest","Ein Sicherheitstest"],"correctAnswer":"Ein experimenteller Ansatz zum Vergleich zweier Versionen","explanation":"A/B Testing ist eine experimentelle Methode, bei der zwei Versionen (A und B) einer Webseite, App oder Kampagne gleichzeitig getestet werden, um zu bestimmen, welche besser performt.","points":1,"category":"A/B Testing"},{"id":"q11","type":"single-choice","question":"Was ist Customer Lifetime Value (CLV)?","options":["Das Alter eines Kunden","Der prognostizierte Gesamtwert eines Kunden √ºber die gesamte Gesch√§ftsbeziehung","Die Anzahl der K√§ufe","Die Kundenzufriedenheit"],"correctAnswer":"Der prognostizierte Gesamtwert eines Kunden √ºber die gesamte Gesch√§ftsbeziehung","explanation":"CLV ist eine Kennzahl, die den prognostizierten Gesamtwert (Umsatz minus Kosten) eines Kunden √ºber die gesamte Dauer der Gesch√§ftsbeziehung berechnet.","points":1,"category":"Customer Analytics"},{"id":"q12","type":"single-choice","question":"Was ist Churn Analysis?","options":["Analyse der Kundenzufriedenheit","Analyse der Kundenabwanderung und deren Vorhersage","Analyse der Verkaufszahlen","Analyse der Mitarbeiterleistung"],"correctAnswer":"Analyse der Kundenabwanderung und deren Vorhersage","explanation":"Churn Analysis identifiziert Kunden, die wahrscheinlich abwandern werden, und analysiert die Faktoren, die zur Kundenabwanderung f√ºhren, um Retention-Strategien zu entwickeln.","points":1,"category":"Churn Analysis"},{"id":"q13","type":"single-choice","question":"Was ist Real-time Analytics?","options":["Analyse historischer Daten","Sofortige Analyse von Daten bei deren Entstehung","W√∂chentliche Berichte","Manuelle Datenanalyse"],"correctAnswer":"Sofortige Analyse von Daten bei deren Entstehung","explanation":"Real-time Analytics verarbeitet und analysiert Daten sofort bei deren Entstehung, um sofortige Einblicke und Reaktionen zu erm√∂glichen (z.B. Fraud Detection, Live-Dashboards).","points":1,"category":"Real-time Analytics"},{"id":"q14","type":"multiple-choice","question":"Welche Technologien werden f√ºr Real-time Analytics verwendet?","options":["Apache Kafka (Streaming)","Apache Storm (Stream Processing)","Apache Spark Streaming","Traditional Batch Processing"],"correctAnswer":["Apache Kafka (Streaming)","Apache Storm (Stream Processing)","Apache Spark Streaming"],"explanation":"Real-time Analytics nutzt Streaming-Technologien wie Apache Kafka (Message Streaming), Apache Storm, Spark Streaming und Flink. Traditional Batch Processing ist nicht f√ºr Real-time geeignet.","points":2,"category":"Streaming Technologies"},{"id":"q15","type":"single-choice","question":"Was ist Natural Language Processing (NLP) in BI?","options":["Programmierung in nat√ºrlicher Sprache","Analyse und Verarbeitung menschlicher Sprache durch Computer","√úbersetzung von Programmcode","Spracherkennung f√ºr Meetings"],"correctAnswer":"Analyse und Verarbeitung menschlicher Sprache durch Computer","explanation":"NLP erm√∂glicht es Computern, menschliche Sprache zu verstehen, zu interpretieren und zu generieren. In BI wird es f√ºr Textanalyse, Sentiment Analysis und nat√ºrlichsprachliche Abfragen verwendet.","points":1,"category":"NLP"},{"id":"q16","type":"single-choice","question":"Was ist Sentiment Analysis?","options":["Analyse von Verkaufszahlen","Analyse der emotionalen Einstellung in Texten","Analyse von Webseitenbesuchen","Analyse von Mitarbeiterdaten"],"correctAnswer":"Analyse der emotionalen Einstellung in Texten","explanation":"Sentiment Analysis verwendet NLP-Techniken, um die emotionale Einstellung (positiv, negativ, neutral) in Texten wie Social Media Posts, Bewertungen oder Kommentaren zu identifizieren.","points":1,"category":"Sentiment Analysis"},{"id":"q17","type":"single-choice","question":"Was ist ein Data Scientist?","options":["Ein Datenbankadministrator","Ein Experte, der Daten analysiert, um Gesch√§ftserkenntnisse zu gewinnen","Ein Softwareentwickler","Ein Netzwerkadministrator"],"correctAnswer":"Ein Experte, der Daten analysiert, um Gesch√§ftserkenntnisse zu gewinnen","explanation":"Ein Data Scientist kombiniert Statistik, Programmierung und Dom√§nenwissen, um aus gro√üen Datenmengen verwertbare Gesch√§ftserkenntnisse zu extrahieren und Vorhersagemodelle zu entwickeln.","points":1,"category":"Data Science Rollen"},{"id":"q18","type":"multiple-choice","question":"Welche F√§higkeiten ben√∂tigt ein Data Scientist?","options":["Statistik und Mathematik","Programmierung (Python, R, SQL)","Dom√§nenwissen","Nur Excel-Kenntnisse"],"correctAnswer":["Statistik und Mathematik","Programmierung (Python, R, SQL)","Dom√§nenwissen"],"explanation":"Data Scientists ben√∂tigen: Statistik/Mathematik (f√ºr Modelle), Programmierung (Python, R, SQL), Dom√§nenwissen (Gesch√§ftsverst√§ndnis), Datenvisualisierung und Kommunikationsf√§higkeiten. Excel allein reicht nicht aus.","points":2,"category":"Data Science Skills"},{"id":"q19","type":"single-choice","question":"Was ist AutoML (Automated Machine Learning)?","options":["Manuelle Modellerstellung","Automatisierung des Machine Learning-Prozesses","Nur f√ºr Experten geeignet","Ein spezifischer Algorithmus"],"correctAnswer":"Automatisierung des Machine Learning-Prozesses","explanation":"AutoML automatisiert den Machine Learning-Prozess, einschlie√ülich Feature Engineering, Modellauswahl, Hyperparameter-Tuning und Modellbewertung, um ML f√ºr Nicht-Experten zug√§nglicher zu machen.","points":1,"category":"AutoML"},{"id":"q20","type":"single-choice","question":"Was ist Edge Analytics?","options":["Analyse in der Cloud","Datenanalyse am Rand des Netzwerks, nahe der Datenquelle","Analyse auf dem Server","Manuelle Analyse"],"correctAnswer":"Datenanalyse am Rand des Netzwerks, nahe der Datenquelle","explanation":"Edge Analytics verarbeitet Daten lokal an der Datenquelle (IoT-Ger√§te, Sensoren) statt in der Cloud, um Latenz zu reduzieren und Echtzeitentscheidungen zu erm√∂glichen.","points":1,"category":"Edge Analytics"},{"id":"q21","type":"single-choice","question":"Was ist ein Digital Twin in der Datenanalyse?","options":["Eine Kopie der Datenbank","Ein digitales Abbild eines physischen Objekts oder Prozesses","Ein Backup-System","Eine Visualisierung"],"correctAnswer":"Ein digitales Abbild eines physischen Objekts oder Prozesses","explanation":"Ein Digital Twin ist eine digitale Repr√§sentation eines physischen Objekts, Prozesses oder Systems, die Echtzeitdaten nutzt, um Verhalten zu simulieren, zu √ºberwachen und zu optimieren.","points":1,"category":"Digital Twin"},{"id":"q22","type":"multiple-choice","question":"Welche Herausforderungen gibt es bei Big Data Analytics?","options":["Datenqualit√§t und -integration","Skalierbarkeit und Performance","Datenschutz und Compliance","Einfache Implementierung"],"correctAnswer":["Datenqualit√§t und -integration","Skalierbarkeit und Performance","Datenschutz und Compliance"],"explanation":"Hauptherausforderungen sind: Datenqualit√§t (verschiedene Quellen), Skalierbarkeit (gro√üe Datenmengen), Performance (schnelle Verarbeitung), Datenschutz (DSGVO), Kosten und Fachkr√§ftemangel. Einfache Implementierung ist keine Herausforderung, sondern ein Ziel.","points":2,"category":"Big Data Challenges"}]`),Jd=["Advanced BI","Predictive Analytics","Machine Learning","Big Data","Data Science","Real-time Analytics","NLP","Recommendation Systems","AutoML","Edge Analytics"],Yd="2025-01-20T00:00:00Z",Xd={id:Vd,moduleId:Fd,title:Kd,description:Wd,category:jd,difficulty:$d,examRelevance:Gd,newIn2025:Ud,timeLimit:Hd,passingScore:Qd,questions:Zd,tags:Jd,lastUpdated:Yd},em=Object.freeze(Object.defineProperty({__proto__:null,category:jd,default:Xd,description:Wd,difficulty:$d,examRelevance:Gd,id:Vd,lastUpdated:Yd,moduleId:Fd,newIn2025:Ud,passingScore:Qd,questions:Zd,tags:Jd,timeLimit:Hd,title:Kd},Symbol.toStringTag,{value:"Module"})),nm="bp-dpa-03-process-mining-quiz",tm="bp-dpa-03-process-mining",im="Process Mining Discovery & Conformance",rm="Quiz zu Event Logs, Discovery-, Conformance- und Enhancement-Konzepten sowie KPI-Auswertung",sm="BP-DPA-03",am="intermediate",om="high",lm=!0,um=25,cm=70,dm=[{id:"q1",type:"single-choice",question:"Welche Minimalfelder ben√∂tigt ein Event Log f√ºr grundlegendes Process Mining?",options:["Case ID, Activity, Timestamp","Activity, Resource","Case ID, Kostenstelle","Timestamp, Kosten"],correctAnswer:"Case ID, Activity, Timestamp",explanation:"Die drei Kernfelder Case (Instanz), Activity (Schritt) und Timestamp (Zeit) sind Grundlage f√ºr Sequenz und Zeitberechnungen.",points:1,category:"Event Log"},{id:"q2",type:"multiple-choice",question:"Welche Ziele hat Conformance Checking?",options:["Abgleich Soll vs. Ist","Erkennen nicht zugelassener Pfade","Optimierte Ressourcenallokation automatisch umsetzen","Identifikation fehlender Aktivit√§ten"],correctAnswer:["Abgleich Soll vs. Ist","Erkennen nicht zugelassener Pfade","Identifikation fehlender Aktivit√§ten"],explanation:"Conformance pr√ºft √úbereinstimmung. Automatische Ressourcenoptimierung ist kein direktes Ziel.",points:2,category:"Conformance"},{id:"q3",type:"single-choice",question:"Welches Kriterium beschreibt wie gut ein modelliertes Prozessmodell die beobachteten Log-Daten abdeckt?",options:["Pr√§zision","Einfachheit","Fitness","Generalisierung"],correctAnswer:"Fitness",explanation:"Fitness misst den Grad, zu dem die Log-Ereignisse im Modell abspielbar sind.",points:1,category:"Qualit√§tskriterien"},{id:"q4",type:"single-choice",question:"Welcher Ansatz ist robuster gegen√ºber Rauschen bei der Modellentdeckung?",options:["Alpha-Miner","Heuristics Miner","Inductive Miner (balanciert)","Zufallsbasierter Miner"],correctAnswer:"Inductive Miner (balanciert)",explanation:"Der Inductive Miner bietet robuste Balance zwischen Pr√§zision und Generalisierung.",points:1,category:"Discovery"},{id:"q5",type:"multiple-choice",question:"Welche typischen Datenqualit√§tsprobleme f√ºhren zu verf√§lschten Variantenanalysen?",options:["Inkonsistente Aktivit√§tslabels","Doppelte Events","Fehlende Timestamps","UTF-8 Kodierung"],correctAnswer:["Inkonsistente Aktivit√§tslabels","Doppelte Events","Fehlende Timestamps"],explanation:"Diese Probleme verzerren Sequenzen und Zeitberechnungen. UTF-8 ist hier irrelevant sofern korrekt decodiert.",points:2,category:"Datenqualit√§t"},{id:"q6",type:"single-choice",question:"Welche KPI beschreibt die Zeit vom ersten bis zum letzten Event einer Instanz?",options:["Aktivit√§tsdauer","Durchlaufzeit","Wartezeit","Service Level"],correctAnswer:"Durchlaufzeit",explanation:"Durchlaufzeit (Lead/Cycle Time im Kontext Gesamtablauf) misst Start bis Ende.",points:1,category:"KPIs"},{id:"q7",type:"single-choice",question:"Was kennzeichnet eine hohe Variantenanzahl?",options:["Hohe Standardisierung","Geringe Prozessstabilit√§t","Immer bessere Performance","Zwangsl√§ufig niedrige Fehlerrate"],correctAnswer:"Geringe Prozessstabilit√§t",explanation:"Viele Varianten weisen h√§ufig auf mangelnde Standardisierung hin.",points:1,category:"Varianten"},{id:"q8",type:"multiple-choice",question:"Welche Nutzen liefert Enhancement im Process Mining?",options:["Performancekennzahlen ins Modell integrieren","Engpassvisualisierung","Automatische Personalentlassung","Zeitliche SLA-Analyse"],correctAnswer:["Performancekennzahlen ins Modell integrieren","Engpassvisualisierung","Zeitliche SLA-Analyse"],explanation:"Enhancement reichert Modell um Zeit/Performanceinformationen an.",points:2,category:"Enhancement"},{id:"q9",type:"single-choice",question:"Welches Feld ist notwendig zur Berechnung der Aktivit√§tsdauer einzelner Schritte?",options:["Separater Start- und End-Timestamp oder Ableitungslogik","Nur Case ID","Nur Activity","Nur Resource"],correctAnswer:"Separater Start- und End-Timestamp oder Ableitungslogik",explanation:"Ohne Start/Ende oder rekonstruierbare Paare kann Dauer nicht bestimmt werden.",points:1,category:"Zeit"},{id:"q10",type:"single-choice",question:"Welches Anti-Pattern bei Process Mining f√ºhrt zu Fehlschl√ºssen?",options:["Vor Datenbereinigung modellieren","Datenprofilierung vorab","Median statt Mittelwert nutzen","Varianzbetrachtung"],correctAnswer:"Vor Datenbereinigung modellieren",explanation:"Unbereinigte Logs verf√§lschen Discovery-Ergebnisse.",points:1,category:"Fehler"},{id:"q11",type:"multiple-choice",question:"Welche Kennzahlen unterst√ºtzen Engpassidentifikation?",options:["Wartezeit","Durchlaufzeit","Aktivit√§tswarte-Queue-L√§nge","Dateigr√∂√üe des Logs"],correctAnswer:["Wartezeit","Durchlaufzeit","Aktivit√§tswarte-Queue-L√§nge"],explanation:"Warte- und Durchlaufzeit plus Queue-Indikatoren deuten Engp√§sse an.",points:2,category:"Engpass"},{id:"q12",type:"single-choice",question:"Warum ist der Median oft aussagekr√§ftiger als der Mittelwert bei Durchlaufzeiten?",options:["Median reagiert st√§rker auf Ausrei√üer","Median ignoriert alle Werte","Median ist robuster gegen Ausrei√üer","Median ist immer kleiner"],correctAnswer:"Median ist robuster gegen Ausrei√üer",explanation:"Der Median reduziert Verzerrung durch extreme Laufzeiten.",points:1,category:"Statistik"},{id:"q13",type:"single-choice",question:"Welche Phase folgt in einem PDCA-integrierten Mining-Ansatz nach Implementierung einer Ma√ünahme?",options:["Plan","Check","Act","Discovery"],correctAnswer:"Check",explanation:"Nach Umsetzung (Do) erfolgt Pr√ºfung (Check) zur Wirksamkeit.",points:1,category:"Kontinuierliche Verbesserung"}],mm=["process-mining","event-log","discovery","conformance","enhancement","kpi","prozessanalyse"],gm="2025-10-07T00:00:00Z",hm=["DPA"],pm={id:nm,moduleId:tm,title:im,description:rm,category:sm,difficulty:am,examRelevance:om,newIn2025:lm,timeLimit:um,passingScore:cm,questions:dm,tags:mm,lastUpdated:gm,tracks:hm},fm=Object.freeze(Object.defineProperty({__proto__:null,category:sm,default:pm,description:rm,difficulty:am,examRelevance:om,id:nm,lastUpdated:gm,moduleId:tm,newIn2025:lm,passingScore:cm,questions:dm,tags:mm,timeLimit:um,title:im,tracks:hm},Symbol.toStringTag,{value:"Module"})),bm="bp-dpa-03-kpi-measurement-quiz",km="bp-dpa-03-kpi-measurement",zm="Prozess-KPI Messung & Auswertung",vm="Quiz zu Definition, Berechnung und Governance von Prozess-KPIs",ym="BP-DPA-03",Sm="intermediate",wm="high",Am=!0,Em=20,_m=70,Dm=[{id:"q1",type:"single-choice",question:"Welche Bestandteile sollte eine vollst√§ndige KPI-Definition enthalten?",options:["Name, Formel, Quelle, Frequenz, Verantwortlich","Name und √úberschrift","Nur Formel","Nur Diagrammtyp"],correctAnswer:"Name, Formel, Quelle, Frequenz, Verantwortlich",explanation:"Ohne Quelle, Frequenz und Verantwortlichkeit fehlt Governance.",points:1,category:"Definition"},{id:"q2",type:"single-choice",question:"Welche Kennzahl ist am robustesten gegen√ºber Ausrei√üern?",options:["Mittelwert","Median","Summe","Maximum"],correctAnswer:"Median",explanation:"Median reduziert Verzerrung durch extreme Werte.",points:1,category:"Statistik"},{id:"q3",type:"multiple-choice",question:"Welche Kennzahlen messen Zeitdimensionen?",options:["Durchlaufzeit","Bearbeitungszeit","Wartezeit","Kosten je Case"],correctAnswer:["Durchlaufzeit","Bearbeitungszeit","Wartezeit"],explanation:"Kosten je Case ist Kostendimension, keine Zeit.",points:2,category:"Zeit"},{id:"q4",type:"single-choice",question:"Was ist Rework-Quote?",options:["Anteil F√§lle ohne Fehler","Verh√§ltnis wiederholter Aktivit√§ten zu Gesamtaktivit√§ten","Zeit pro Aktivit√§t","Kosten pro Aktivit√§t"],correctAnswer:"Verh√§ltnis wiederholter Aktivit√§ten zu Gesamtaktivit√§ten",explanation:"Rework signalisiert Nacharbeit / Qualit√§tsthemen.",points:1,category:"Qualit√§t"},{id:"q5",type:"multiple-choice",question:"Welche Risiken entstehen bei reinem Fokus auf Durchschnittswerte?",options:["Ausrei√üer werden verschleiert","Varianz bleibt unber√ºcksichtigt","Median wird automatisch kleiner","Segmentunterschiede k√∂nnen verdeckt sein"],correctAnswer:["Ausrei√üer werden verschleiert","Varianz bleibt unber√ºcksichtigt","Segmentunterschiede k√∂nnen verdeckt sein"],explanation:"Durchschnitt gl√§ttet Extreme, Segmentunterschiede (Simpson) bleiben verborgen.",points:2,category:"Interpretation"},{id:"q6",type:"single-choice",question:"Welche Datenplattform-Eigenschaft unterst√ºtzt revisionssichere KPI-Historien?",options:["ACID & Time Travel","Komprimierung","UI-Theming","Mehrsprachigkeit"],correctAnswer:"ACID & Time Travel",explanation:"ACID + Time Travel sichern Integrit√§t und rekonstruierbare St√§nde.",points:1,category:"Plattform"},{id:"q7",type:"single-choice",question:"Welche KPI zeigt Puffer und Engp√§sse, wenn sie stark w√§chst?",options:["Bearbeitungszeit","Wartezeit","Rework-Quote","Kosten je Case"],correctAnswer:"Wartezeit",explanation:"Steigende Wartezeit deutet auf Stau vor Engp√§ssen.",points:1,category:"Analyse"},{id:"q8",type:"multiple-choice",question:"Welche Governance-Praktiken erh√∂hen KPI-Verl√§sslichkeit?",options:["Versionierung von Definitionen","Zugriffskontrolle","Dokumentation von Formeln","Ignorieren von Datenqualit√§tspr√ºfungen"],correctAnswer:["Versionierung von Definitionen","Zugriffskontrolle","Dokumentation von Formeln"],explanation:"Verl√§sslichkeit braucht kontrollierte √Ñnderung und Transparenz.",points:2,category:"Governance"},{id:"q9",type:"single-choice",question:"Warum wird h√§ufig der Median f√ºr Durchlaufzeiten genutzt?",options:["Weil er alle Extremwerte verst√§rkt","Weil er einfacher zu berechnen ist","Weil er robust gegen Ausrei√üer ist","Weil er gr√∂√üer als das Maximum ist"],correctAnswer:"Weil er robust gegen Ausrei√üer ist",explanation:"Robustheit bei schiefen Verteilungen.",points:1,category:"Statistik"},{id:"q10",type:"single-choice",question:"Welche Kennzahl misst Prozessstabilit√§t √ºber Varianten?",options:["Variantenanzahl","Kosten je Case","Rework-Quote","Durchlaufzeit"],correctAnswer:"Variantenanzahl",explanation:"Viele Varianten k√∂nnen mangelnde Standardisierung anzeigen.",points:1,category:"Stabilit√§t"},{id:"q11",type:"multiple-choice",question:"Welche Bestandteile geh√∂ren zur KPI-Steuerung auf Dashboards?",options:["Drill-Down","SLA-Linien","Kontextperiode","Zwang zu 20 Kennzahlen"],correctAnswer:["Drill-Down","SLA-Linien","Kontextperiode"],explanation:"√úberladung vermindert Nutzbarkeit; Fokus ist wichtig.",points:2,category:"Visualisierung"},{id:"q12",type:"single-choice",question:"Simpson-Paradox bedeutet?",options:["Aggregattrend kehrt sich in Segmenten um","Immer gleiche Richtung","Varianz steigt automatisch","Median = Mittelwert"],correctAnswer:"Aggregattrend kehrt sich in Segmenten um",explanation:"Segmentierte Analyse kann gegenteilige Trends offenlegen.",points:1,category:"Statistik"}],Pm=["kpi","prozesskennzahlen","durchlaufzeit","governance","rework","median","steuerung"],Tm="2025-10-07T00:00:00Z",qm=["DPA"],Rm={id:bm,moduleId:km,title:zm,description:vm,category:ym,difficulty:Sm,examRelevance:wm,newIn2025:Am,timeLimit:Em,passingScore:_m,questions:Dm,tags:Pm,lastUpdated:Tm,tracks:qm},Im=Object.freeze(Object.defineProperty({__proto__:null,category:ym,default:Rm,description:vm,difficulty:Sm,examRelevance:wm,id:bm,lastUpdated:Tm,moduleId:km,newIn2025:Am,passingScore:_m,questions:Dm,tags:Pm,timeLimit:Em,title:zm,tracks:qm},Symbol.toStringTag,{value:"Module"})),Cm="bp-dpa-03-lean-six-sigma-quiz",Lm="bp-dpa-03-lean-six-sigma",Mm="Lean & Six Sigma Integration",Om="Quiz zu Verschwendungsarten, DMAIC, Lean-Werkzeugen und kombinierter Anwendung",Nm="BP-DPA-03",Bm="intermediate",xm="high",Vm=!0,Fm=20,Km=70,Wm=[{id:"q1",type:"single-choice",question:"Welches Ziel adressiert Lean prim√§r?",options:["Varianzreduktion","Verschwendungsreduktion","Statistische Signifikanz","Kostenverrechnung"],correctAnswer:"Verschwendungsreduktion",explanation:"Lean fokussiert auf Eliminierung nicht-wertsch√∂pfender Aktivit√§ten.",points:1,category:"Lean"},{id:"q2",type:"single-choice",question:"Welche Phase folgt in DMAIC nach Analyze?",options:["Measure","Improve","Define","Control"],correctAnswer:"Improve",explanation:"Reihenfolge: Define, Measure, Analyze, Improve, Control.",points:1,category:"DMAIC"},{id:"q3",type:"multiple-choice",question:"Welche geh√∂ren zu den klassischen 7 Verschwendungsarten (ohne Skills)?",options:["√úberproduktion","Wartezeiten","Transport","Bewegung"],correctAnswer:["√úberproduktion","Wartezeiten","Transport","Bewegung"],explanation:"Alle vier sind klassische Muda-Kategorien.",points:2,category:"Muda"},{id:"q4",type:"single-choice",question:"Welches Werkzeug dient zur Abgrenzung des Prozessumfangs?",options:["SIPOC","5S","Kanban","Poka-Yoke"],correctAnswer:"SIPOC",explanation:"SIPOC definiert Supplier, Input, Process, Output, Customer.",points:1,category:"Werkzeuge"},{id:"q5",type:"multiple-choice",question:"Welche Lean-Werkzeuge unterst√ºtzen Flussverbesserung?",options:["Kanban","Value Stream Mapping","5S","Poka-Yoke"],correctAnswer:["Kanban","Value Stream Mapping","5S"],explanation:"Poka-Yoke fokussiert Fehlervermeidung, nicht prim√§r Flusssteuerung.",points:2,category:"Werkzeuge"},{id:"q6",type:"single-choice",question:"Was kombiniert die Synergie Lean + Six Sigma?",options:["Schnelle Verschwendungsreduktion + variabilit√§tsfokussierte Stabilisierung","Nur Statistik","Nur visuelle Boards","Nur Qualit√§tszirkel"],correctAnswer:"Schnelle Verschwendungsreduktion + variabilit√§tsfokussierte Stabilisierung",explanation:"Lean liefert Geschwindigkeit, Six Sigma nachhaltige Stabilit√§t.",points:1,category:"Synergie"},{id:"q7",type:"single-choice",question:"Welches Anti-Pattern f√ºhrt zu Strohfeuer-Effekten?",options:["Quick Wins + Control-Phase","Nur kurzfristige Kaizen ohne Control","DMAIC mit Daten","Standardisierte KPI-Nachverfolgung"],correctAnswer:"Nur kurzfristige Kaizen ohne Control",explanation:"Ohne Control verfl√ºchtigen sich Verbesserungen.",points:1,category:"Fehler"},{id:"q8",type:"multiple-choice",question:"Welche Elemente enth√§lt ein Value Stream Mapping typischerweise?",options:["Materialfluss","Informationsfluss","Prozesszeiten","ASCII Art"],correctAnswer:["Materialfluss","Informationsfluss","Prozesszeiten"],explanation:"Ziel ist Visualisierung von Fluss & Zeit; ASCII Art ist kein fachliches Element.",points:2,category:"VSM"},{id:"q9",type:"single-choice",question:"Welches Ziel verfolgt Poka-Yoke?",options:["Fehlervermeidung durch Design","Visualisierung von WIP","Kapazit√§tsplanung","Statistische Testplanung"],correctAnswer:"Fehlervermeidung durch Design",explanation:"Poka-Yoke verhindert oder macht Fehler sofort sichtbar.",points:1,category:"Qualit√§t"},{id:"q10",type:"single-choice",question:"Wof√ºr steht das C in DMAIC?",options:["Calculate","Control","Check","Calibrate"],correctAnswer:"Control",explanation:"Control verankert die erreichten Verbesserungen.",points:1,category:"DMAIC"},{id:"q11",type:"multiple-choice",question:"Welche Kennzahlen belegen nachhaltige Lean+Six Sigma Wirkung?",options:["Reduzierte Durchlaufzeit","Sinkende Fehlerrate","Steigende Variantenstabilit√§t","Erh√∂hte Rework-Quote"],correctAnswer:["Reduzierte Durchlaufzeit","Sinkende Fehlerrate","Steigende Variantenstabilit√§t"],explanation:"Rework sollte sinken, nicht steigen.",points:2,category:"KPIs"},{id:"q12",type:"single-choice",question:"Welches Werkzeug priorisiert wenige Ursachen mit gr√∂√ütem Effekt?",options:["Pareto Analyse","5S","Kanban","SIPOC"],correctAnswer:"Pareto Analyse",explanation:"Pareto (80/20) fokussiert auf dominante Ursachen.",points:1,category:"Analyse"}],jm=["lean","six-sigma","dmaic","verschwendung","vsm","kaizen","poka-yoke"],$m="2025-10-07T00:00:00Z",Gm=["DPA"],Um={id:Cm,moduleId:Lm,title:Mm,description:Om,category:Nm,difficulty:Bm,examRelevance:xm,newIn2025:Vm,timeLimit:Fm,passingScore:Km,questions:Wm,tags:jm,lastUpdated:$m,tracks:Gm},Hm=Object.freeze(Object.defineProperty({__proto__:null,category:Nm,default:Um,description:Om,difficulty:Bm,examRelevance:xm,id:Cm,lastUpdated:$m,moduleId:Lm,newIn2025:Vm,passingScore:Km,questions:Wm,tags:jm,timeLimit:Fm,title:Mm,tracks:Gm},Symbol.toStringTag,{value:"Module"})),Qm="bp-dpa-03-automation-orchestration-quiz",Zm="bp-dpa-03-automation-orchestration",Jm="Prozessautomatisierung & Orchestrierung",Ym="Quiz zu Automatisierungskriterien, Technologien, Orchestrierung vs Choreographie und Governance",Xm="BP-DPA-03",eg="advanced",ng="high",tg=!0,ig=25,rg=70,sg=[{id:"q1",type:"single-choice",question:"Welches Kriterium spricht typischerweise F√úR RPA?",options:["Hoher Interpretationsbedarf","Stark schwankender Prozess","Regelbasiert und hohes Volumen","Unstrukturierte handschriftliche Dokumente"],correctAnswer:"Regelbasiert und hohes Volumen",explanation:"RPA zielt auf repetitive, regelbasierte T√§tigkeiten mit Volumen.",points:1,category:"Kriterien"},{id:"q2",type:"single-choice",question:"Was unterscheidet Orchestrierung von Choreographie?",options:["Orchestrierung ist dezentral, Choreographie zentral","Orchestrierung hat zentrale Steuerung, Choreographie verteilt","Beide identisch","Choreographie ben√∂tigt zwingend RPA"],correctAnswer:"Orchestrierung hat zentrale Steuerung, Choreographie verteilt",explanation:"Orchestrierung = zentrale Engine; Choreographie = verteilte Koordination via Nachrichten.",points:1,category:"Architektur"},{id:"q3",type:"multiple-choice",question:"Welche Risiken bestehen bei ungeplanter RPA-Einf√ºhrung?",options:["Fragile UI-Skripte","Skalierungsprobleme","Technische Schulden","Automatische Prozessstabilisierung"],correctAnswer:["Fragile UI-Skripte","Skalierungsprobleme","Technische Schulden"],explanation:"Ohne Governance entstehen Wartungsaufwand und Instabilit√§t; Stabilisierung ist nicht garantiert.",points:2,category:"Risiken"},{id:"q4",type:"single-choice",question:"Welche Metrik eignet sich zur Erfolgsmessung nach Automatisierung?",options:["Automatisierungsquote","Anzahl Sitzpl√§tze im B√ºro","B√ºrofl√§che","Kalenderfarben"],correctAnswer:"Automatisierungsquote",explanation:"Automatisierungsquote zeigt Anteil automatisierter Prozessanteile.",points:1,category:"Metriken"},{id:"q5",type:"multiple-choice",question:"Welche Governance-Praktiken sind wesentlich?",options:["Versionierung von Prozessdefinitionen","Monitoring von SLA und Fehlerrate","Audit Logs","Verzicht auf Zugriffskontrolle"],correctAnswer:["Versionierung von Prozessdefinitionen","Monitoring von SLA und Fehlerrate","Audit Logs"],explanation:"Zugriffskontrolle bleibt erforderlich; deren Verzicht ist Risiko.",points:2,category:"Governance"},{id:"q6",type:"single-choice",question:"Welches Anti-Pattern beschreibt 'Automate the chaos'?",options:["Stabile Prozesse vor Automatisierung pr√ºfen","Instabile Prozesse ohne Redesign automatisieren","Refactoring vor Automatisierung","Konformes Deployment"],correctAnswer:"Instabile Prozesse ohne Redesign automatisieren",explanation:"Instabile Prozesse verschlimmern sich unter Automatisierung.",points:1,category:"Fehler"},{id:"q7",type:"single-choice",question:"Wann bietet eine Workflow Engine Vorteile gegen√ºber reinem Scripting?",options:["Bei einmaligem Ad-hoc Task","Bei Bedarf an Transparenz, Skalierung, Modellversionierung","Bei v√∂llig unstrukturierten Gespr√§chen","Wenn keine Prozessdefinition vorhanden ist"],correctAnswer:"Bei Bedarf an Transparenz, Skalierung, Modellversionierung",explanation:"Engines liefern Modellsteuerung, Monitoring und Governance.",points:1,category:"Technologie"},{id:"q8",type:"multiple-choice",question:"Welche Faktoren flie√üen in ein Automatisierungsscore ein?",options:["Volumen","Stabilit√§t","Ausnahmequote (invertiert)","UI-Farbschema"],correctAnswer:["Volumen","Stabilit√§t","Ausnahmequote (invertiert)"],explanation:"Visuelles Farbschema ist irrelevant f√ºr Eignung.",points:2,category:"Scoring"},{id:"q9",type:"single-choice",question:"Warum kann reine RPA bei UI-√Ñnderungen fehlschlagen?",options:["Weil RPA semantisch abstrahiert","Weil Selektoren brechen","Weil Engines automatisch adaptieren","Weil keine Logiken ausgef√ºhrt werden"],correctAnswer:"Weil Selektoren brechen",explanation:"UI-abh√§ngige Selektoren verlieren Referenz bei √Ñnderungen.",points:1,category:"Risiken"},{id:"q10",type:"single-choice",question:"Welche Rolle hat Process Mining nach Automatisierung?",options:["Nachweis der Wirksamkeit durch KPI-Vergleich","Ersetzt Orchestrierung","Reduziert Governance Bedarf auf Null","Entfernt Sicherheitsanforderungen"],correctAnswer:"Nachweis der Wirksamkeit durch KPI-Vergleich",explanation:"Vergleich Vor/Nach zeigt realisierte Einsparungen & Abweichungen.",points:1,category:"Monitoring"},{id:"q11",type:"multiple-choice",question:"Welche Post-Go-Live Metriken sind relevant?",options:["Fehlerrate","MTTR","Automatisierungsquote","Anzahl Kaffeepausen"],correctAnswer:["Fehlerrate","MTTR","Automatisierungsquote"],explanation:"Kaffeepausen sind kein Prozessleistungsindikator.",points:2,category:"Monitoring"},{id:"q12",type:"single-choice",question:"Wann ist Choreographie besonders geeignet?",options:["Monolith ohne externe Partner","Multi-Organisation mit lose gekoppeltem Nachrichtenaustausch","Einzelnutzer-Skript","Ohne Kommunikationsbedarf"],correctAnswer:"Multi-Organisation mit lose gekoppeltem Nachrichtenaustausch",explanation:"Choreographie eignet sich bei verteilten Teilnehmern ohne zentrale Kontrolle.",points:1,category:"Architektur"},{id:"q13",type:"single-choice",question:"Welche Security-Praxis ist grundlegend?",options:["Least Privilege","Alle Dienste als Admin","Hartcodierte Secrets","Deaktiviertes Logging"],correctAnswer:"Least Privilege",explanation:"Minimale Berechtigungen reduzieren Angriffsfl√§che.",points:1,category:"Security"}],ag=["automatisierung","rpa","workflow","orchestrierung","choreographie","governance","process-mining"],og="2025-10-07T00:00:00Z",lg=["DPA"],ug={id:Qm,moduleId:Zm,title:Jm,description:Ym,category:Xm,difficulty:eg,examRelevance:ng,newIn2025:tg,timeLimit:ig,passingScore:rg,questions:sg,tags:ag,lastUpdated:og,tracks:lg},cg=Object.freeze(Object.defineProperty({__proto__:null,category:Xm,default:ug,description:Ym,difficulty:eg,examRelevance:ng,id:Qm,lastUpdated:og,moduleId:Zm,newIn2025:tg,passingScore:rg,questions:sg,tags:ag,timeLimit:ig,title:Jm,tracks:lg},Symbol.toStringTag,{value:"Module"}));class eP{constructor(e,n,t,i,s,a){this.stateManager=e,this.storage=n||new P("ihk-content"),this.specializationService=t,this.categoryMappingService=i,this.performanceOptimizationService=s,this.performanceMonitoringService=a,this.categories=null,this.examChanges=null,this.modules=new Map,this.quizzes=new Map,this.learningPaths=new Map,this.categorizedContentCache=new Map,this.categoryIndexCache=new Map}loadCategories(){return d(this,null,function*(){return this.categories||(this.categories=te),this.categories})}loadExamChanges(){return d(this,null,function*(){return this.examChanges||(this.examChanges=Hg),this.examChanges})}getModulesByCategory(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid category ID");this.categories||(yield this.loadCategories()),yield this._loadAllModules();const n=Array.from(this.modules.values()).filter(t=>t.categoryId===e);return this._enrichModulesWithProgress(n)}catch(n){throw console.error(`Error getting modules for category ${e}:`,n),n}})}getNewTopics2025(){return d(this,null,function*(){try{yield this._loadAllModules();const e=Array.from(this.modules.values()).filter(n=>n.newIn2025===!0&&n.categoryId!==void 0);return e.sort((n,t)=>{if(n.important&&!t.important)return-1;if(!n.important&&t.important)return 1;const i={high:0,medium:1,low:2};return i[n.examRelevance]-i[t.examRelevance]}),this._enrichModulesWithProgress(e)}catch(e){throw console.error("Error getting new topics 2025:",e),new Error("Failed to load new topics for 2025")}})}getRemovedTopics2025(){return d(this,null,function*(){try{return this.examChanges||(yield this.loadExamChanges()),this.examChanges.removedTopics||[]}catch(e){throw console.error("Error getting removed topics 2025:",e),new Error("Failed to load removed topics for 2025")}})}searchContent(t){return d(this,arguments,function*(e,n={}){try{yield this._loadAllModules();let i=Array.from(this.modules.values());if(e&&e.trim()){const s=e.toLowerCase().trim();i=i.filter(a=>a.title.toLowerCase().includes(s)||a.description.toLowerCase().includes(s)||a.tags.some(o=>o.toLowerCase().includes(s))||a.content.toLowerCase().includes(s))}if(n.category&&(i=i.filter(s=>s.category===n.category)),n.difficulty&&(i=i.filter(s=>s.difficulty===n.difficulty)),n.examRelevance&&(i=i.filter(s=>s.examRelevance===n.examRelevance)),n.newIn2025!==void 0&&(i=i.filter(s=>s.newIn2025===n.newIn2025)),n.important!==void 0&&(i=i.filter(s=>s.important===n.important)),n.learningStatus){const s=this.stateManager.getState("progress")||{},a=s.modulesCompleted||[],o=s.modulesInProgress||[];i=i.filter(l=>{switch(n.learningStatus){case"completed":return a.includes(l.id);case"in-progress":return o.includes(l.id);case"not-started":return!a.includes(l.id)&&!o.includes(l.id);default:return!0}})}return this._enrichModulesWithProgress(i)}catch(i){throw console.error("Error searching content:",i),new Error("Failed to search content")}})}getLearningPath(e){return d(this,null,function*(){const t={"ap2-complete":sh,"sql-mastery":fh,"new-topics-2025":Dh,"oop-fundamentals":Bh}[e];if(!t)throw new Error(`Learning path "${e}" not found`);return t})}getRecommendations(){return d(this,null,function*(){try{const e=this.stateManager.getState("progress")||{},n=e.modulesCompleted||[],t=e.modulesInProgress||[];yield this._loadAllModules();const i=[],s=Array.from(this.modules.values()).filter(u=>t.includes(u.id)).slice(0,3);s.length>0&&i.push({type:"continue",title:"Fortsetzen",modules:s});const o=(yield this.getNewTopics2025()).filter(u=>!n.includes(u.id)&&!t.includes(u.id)).slice(0,3);o.length>0&&i.push({type:"new-2025",title:"Neue Themen 2025",modules:o});const l=Array.from(this.modules.values()).filter(u=>u.examRelevance==="high"&&!n.includes(u.id)&&!t.includes(u.id)).slice(0,3);return l.length>0&&i.push({type:"high-relevance",title:"Hohe Pr√ºfungsrelevanz",modules:l}),i}catch(e){throw console.error("Error getting recommendations:",e),new Error("Failed to generate recommendations")}})}_loadAllModules(){return d(this,null,function*(){if(!(this.modules.size>0))try{const e=[cp,Op,uf,Mf,ob,Cb,ak,Ik,Lk,az,Iz,rv,qv,ty,Py,eS,_S,YS,Aw,Zw,SA,HA,vE,GE,k0,j0,f_,W_,fD,WD,$D,UD,QD,JD,XD],n=[];e.forEach(t=>{t.modules&&Array.isArray(t.modules)?n.push(...t.modules):t.id?n.push(t):console.warn("Invalid module structure:",t)}),n.forEach(t=>{const i=t.category||t.categoryId;if(this.categoryMappingService)try{const s=this.categoryMappingService.mapToThreeTierCategory(t),a=v(z({},t),{category:i,categoryId:i,threeTierCategory:s.threeTierCategory,categoryMapping:{threeTierCategory:s.threeTierCategory,categoryInfo:s.categoryInfo,mappingRule:s.appliedRule,mappingReason:s.reason,mappingTimestamp:s.timestamp}});this.modules.set(t.id,a)}catch(s){console.warn(`Failed to map module ${t.id} to three-tier category:`,s),this.modules.set(t.id,v(z({},t),{category:i,categoryId:i,threeTierCategory:"allgemein",categoryMapping:{threeTierCategory:"allgemein",mappingRule:null,mappingReason:"Mapping failed, using default",mappingTimestamp:new Date().toISOString()}}))}else this.modules.set(t.id,v(z({},t),{category:i,categoryId:i}))}),this.clearCategorizedContentCache()}catch(e){throw console.error("Error loading modules:",e),new Error("Failed to load IHK modules")}})}_enrichModulesWithProgress(e){const n=this.stateManager.getState("progress")||{},t=n.modulesCompleted||[],i=n.modulesInProgress||[];return e.map(s=>v(z({},s),{completed:t.includes(s.id),inProgress:i.includes(s.id),status:t.includes(s.id)?"completed":i.includes(s.id)?"in-progress":"not-started"}))}getCategories(){return this.categories?this.categories.categories||[]:[]}getRecommendedLearningPaths(){return[{id:"ap2-complete",title:"AP2 Komplett",description:"Vollst√§ndige Vorbereitung auf die Abschlusspr√ºfung Teil 2",difficulty:"intermediate",estimatedDuration:120},{id:"sql-mastery",title:"SQL Mastery",description:"Alle SQL-Befehle aus dem Pr√ºfungsbeiblatt meistern",difficulty:"beginner",estimatedDuration:20},{id:"new-topics-2025",title:"Neue Themen 2025",description:"Alle neuen Themen ab 2025 (TDD, Scrum, Sortierverfahren, etc.)",difficulty:"intermediate",estimatedDuration:30},{id:"oop-fundamentals",title:"OOP Fundamentals",description:"Objektorientierte Programmierung von Grund auf",difficulty:"beginner",estimatedDuration:25}]}getModuleById(e){return d(this,null,function*(){yield this._loadAllModules();const n=this.modules.get(e);return n?this._enrichModulesWithProgress([n])[0]:null})}getAllModules(){return d(this,null,function*(){return yield this._loadAllModules(),Array.from(this.modules.values())})}getAllQuizzes(){return d(this,null,function*(){return this.quizzes.size===0&&(yield this._loadAllQuizzes()),Array.from(this.quizzes.values())})}getQuizById(e){return d(this,null,function*(){try{if(this.quizzes.size===0&&(yield this._loadAllQuizzes()),this.quizzes.has(e))return this.quizzes.get(e);const t=(yield ne(Object.assign({"../data/ihk/quizzes/bp-01-conception-quiz.json":()=>r(()=>Promise.resolve().then(()=>be),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-documentation-110---2024-12-15-micro-1.json":()=>r(()=>import("./bp-01-documentation-110---2024-12-15-micro-1-Dn42FgRA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-120---2025-01-10-micro-1.json":()=>r(()=>import("./bp-01-documentation-120---2025-01-10-micro-1-VHX5bjlM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-architektur-dokumentation-micro-1.json":()=>r(()=>import("./bp-01-documentation-architektur-dokumentation-micro-1-Cs5BBwRx.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-arten-der-dokumentation-micro-1.json":()=>r(()=>import("./bp-01-documentation-arten-der-dokumentation-micro-1-Bsdtk4YE.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-best-practices-micro-1.json":()=>r(()=>import("./bp-01-documentation-best-practices-micro-1-y5wTMav2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-changelog-micro-1.json":()=>r(()=>import("./bp-01-documentation-changelog-micro-1-CTVj6sUT.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-deployment-dokumentation-micro-1.json":()=>r(()=>import("./bp-01-documentation-deployment-dokumentation-micro-1-B0ZJw08T.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-dokumentations-standards-micro-1.json":()=>r(()=>import("./bp-01-documentation-dokumentations-standards-micro-1-Bnv9bY39.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-dokumentations-tools-micro-1.json":()=>r(()=>import("./bp-01-documentation-dokumentations-tools-micro-1-DQ4wq4MA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-documentation-einfuhrung-micro-1-DzUoTKUs.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-features-micro-1.json":()=>r(()=>import("./bp-01-documentation-features-micro-1-BFxS5z6v.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-get-apiusersid-micro-1.json":()=>r(()=>import("./bp-01-documentation-get-apiusersid-micro-1-gJgbjjOR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-installation-micro-1.json":()=>r(()=>import("./bp-01-documentation-installation-micro-1-5M4Dqndz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-konfiguration-micro-1.json":()=>r(()=>import("./bp-01-documentation-konfiguration-micro-1-WN1zmG_Q.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-lizenz-micro-1.json":()=>r(()=>import("./bp-01-documentation-lizenz-micro-1-BOHNyfqw.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-monitoring-micro-1.json":()=>r(()=>import("./bp-01-documentation-monitoring-micro-1-edK_2mdi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-documentation-prufungsrelevante-aspekte-micro-1-DGiC9BSX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ie),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-documentation-start-micro-1.json":()=>r(()=>import("./bp-01-documentation-start-micro-1-BngOgNOz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-tests-micro-1.json":()=>r(()=>import("./bp-01-documentation-tests-micro-1-CD0oSQy1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-umgebungsvariablen-micro-1.json":()=>r(()=>import("./bp-01-documentation-umgebungsvariablen-micro-1-1QNPnxc0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-verwendung-micro-1.json":()=>r(()=>import("./bp-01-documentation-verwendung-micro-1-CijWhErP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-voraussetzungen-micro-1.json":()=>r(()=>import("./bp-01-documentation-voraussetzungen-micro-1-BvvlAgVO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-best-practices-micro-1.json":()=>r(()=>import("./bp-01-kerberos-best-practices-micro-1-CsVcRo_o.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-kerberos-authentifizierungsprozess-micro-1.json":()=>r(()=>import("./bp-01-kerberos-kerberos-authentifizierungsprozess-micro-1-BGol0Cjq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-kerberos-vs-andere-authentifizierungsmethoden-micro-1.json":()=>r(()=>import("./bp-01-kerberos-kerberos-vs-andere-authentifizierungsmethoden-micro-1-C166jHdL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-kernkomponenten-von-kerberos-micro-1.json":()=>r(()=>import("./bp-01-kerberos-kernkomponenten-von-kerberos-micro-1-91OvBIep.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-konfigurationsbeispiel-micro-1.json":()=>r(()=>import("./bp-01-kerberos-konfigurationsbeispiel-micro-1-D82iCKu_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-nachteile-und-herausforderungen-micro-1.json":()=>r(()=>import("./bp-01-kerberos-nachteile-und-herausforderungen-micro-1-CUuQA_5f.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-praktische-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-01-kerberos-praktische-anwendungsfalle-micro-1-CbVZu_Kz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-sicherheitsmechanismen-micro-1.json":()=>r(()=>import("./bp-01-kerberos-sicherheitsmechanismen-micro-1-8g6aV0lU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-troubleshooting-micro-1.json":()=>r(()=>import("./bp-01-kerberos-troubleshooting-micro-1-DNDcfJzt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-vorteile-von-kerberos-micro-1.json":()=>r(()=>import("./bp-01-kerberos-vorteile-von-kerberos-micro-1-B8w-J7Ii.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-was-ist-kerberos-micro-1.json":()=>r(()=>import("./bp-01-kerberos-was-ist-kerberos-micro-1-uQEfYKuU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-01-kerberos-zusammenfassung-micro-1-BHbp9Ulr.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-alerting-micro-1.json":()=>r(()=>import("./bp-01-monitoring-alerting-micro-1-1xoQLGzp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-dashboards-micro-1.json":()=>r(()=>import("./bp-01-monitoring-dashboards-micro-1-lBU-E4VI.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-monitoring-einfuhrung-micro-1-DgiGEyCz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-health-checks-micro-1.json":()=>r(()=>import("./bp-01-monitoring-health-checks-micro-1-BmKiGVI5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-logging-best-practices-micro-1.json":()=>r(()=>import("./bp-01-monitoring-logging-best-practices-micro-1-3P8KGFaX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-metriken-sammeln-micro-1.json":()=>r(()=>import("./bp-01-monitoring-metriken-sammeln-micro-1-Y9oCqoVr.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-monitoring-bereiche-micro-1.json":()=>r(()=>import("./bp-01-monitoring-monitoring-bereiche-micro-1-CrPdk1w3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-monitoring-metriken-micro-1.json":()=>r(()=>import("./bp-01-monitoring-monitoring-metriken-micro-1-DMxtxpO5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-monitoring-tools-micro-1.json":()=>r(()=>import("./bp-01-monitoring-monitoring-tools-micro-1-BUHy5nsb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-monitoring-prufungsrelevante-aspekte-micro-1-DyV6DF64.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ue),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-sla-und-slo-micro-1.json":()=>r(()=>import("./bp-01-monitoring-sla-und-slo-micro-1-_ssb5FAR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-osi-modell-und-tcpip-modell-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-osi-modell-und-tcpip-modell-micro-1-CpyUhCh6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-ports-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-ports-micro-1-BdtdyQJU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-prufungsrelevante-aspekte-micro-1-CZUiy7Li.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-wichtige-protokolle-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-wichtige-protokolle-micro-1-aYir2nzb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-einfuhrung-micro-1-DEug_Doq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-netzwerktypen-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-netzwerktypen-micro-1-DdKdFLDx.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-netzwerktypen-micro-3.json":()=>r(()=>import("./bp-01-networks-basics-netzwerktypen-micro-3-D9kvESMt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-prufungsrelevante-aspekte-micro-1-BxN2ZUYL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-prufungsrelevante-aspekte-micro-4.json":()=>r(()=>import("./bp-01-networks-basics-prufungsrelevante-aspekte-micro-4-BN7cA6VC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-vergleich-wichtiger-topologien-micro-2.json":()=>r(()=>import("./bp-01-networks-basics-vergleich-wichtiger-topologien-micro-2-7iWT430V.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-wichtige-netzwerktopologien-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-wichtige-netzwerktopologien-micro-1-Dw6rSY0P.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-architektur-micro-1.json":()=>r(()=>import("./bp-01-odbc-architektur-micro-1-BkGIjptE.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-connection-pooling-micro-1.json":()=>r(()=>import("./bp-01-odbc-connection-pooling-micro-1-C33qSisA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-dsn-data-source-name-micro-1.json":()=>r(()=>import("./bp-01-odbc-dsn-data-source-name-micro-1-DAm25Mea.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-odbc-einfuhrung-micro-1-DXjGg3Ct.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-fehlerbehandlung-micro-1.json":()=>r(()=>import("./bp-01-odbc-fehlerbehandlung-micro-1-C7btM3iH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-odbc-funktionen-micro-1.json":()=>r(()=>import("./bp-01-odbc-odbc-funktionen-micro-1-P1XjGK3o.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-odbc-in-verschiedenen-sprachen-micro-1.json":()=>r(()=>import("./bp-01-odbc-odbc-in-verschiedenen-sprachen-micro-1-CWwxV8jG.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-odbc-vs-native-treiber-micro-1.json":()=>r(()=>import("./bp-01-odbc-odbc-vs-native-treiber-micro-1-DJxMPjmJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-odbc-prufungsrelevante-aspekte-micro-1-0PfNu6oR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-quiz.json":()=>r(()=>Promise.resolve().then(()=>on),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-odbc-vorteile-von-odbc-micro-1.json":()=>r(()=>import("./bp-01-odbc-vorteile-von-odbc-micro-1-Dd0SnM4a.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-cloud-service-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-cloud-service-modelle-micro-1-BK6Qvs-P.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-deployment-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-deployment-modelle-micro-1-CboQ-i_J.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-einfuhrung-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-einfuhrung-micro-1-CMyizBlT.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-iaas-infrastructure-as-a-service-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-iaas-infrastructure-as-a-service-micro-1-CWukNkud.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-kostenmodelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-kostenmodelle-micro-1-Bhw9qwLJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-paas-platform-as-a-service-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-paas-platform-as-a-service-micro-1-CCo7O7LS.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-prufungsrelevante-aspekte-micro-1-DREHEMfB.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-quiz.json":()=>r(()=>Promise.resolve().then(()=>yn),void 0,import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-saas-software-as-a-service-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-saas-software-as-a-service-micro-1-CmFbxa4f.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-sicherheit-in-der-cloud-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-sicherheit-in-der-cloud-micro-1-DdzozhYs.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-vergleich-der-service-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-vergleich-der-service-modelle-micro-1-B4E_unS0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-weitere-cloud-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-weitere-cloud-modelle-micro-1-BhF8kvkS.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-02-data-formats-anwendungsfalle-micro-1-_2XLP8ea.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-csv-comma-separated-values-micro-1.json":()=>r(()=>import("./bp-02-data-formats-csv-comma-separated-values-micro-1-Dloewnrt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-einfuhrung-micro-1.json":()=>r(()=>import("./bp-02-data-formats-einfuhrung-micro-1-po-cyPHf.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-format-vergleich-micro-1.json":()=>r(()=>import("./bp-02-data-formats-format-vergleich-micro-1-Cr1EoTdH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-json-javascript-object-notation-micro-1.json":()=>r(()=>import("./bp-02-data-formats-json-javascript-object-notation-micro-1-BCuMSNB3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-konvertierung-micro-1.json":()=>r(()=>import("./bp-02-data-formats-konvertierung-micro-1-CjWJGO2m.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-02-data-formats-prufungsrelevante-aspekte-micro-1-BCiN5dF8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-quiz.json":()=>r(()=>Promise.resolve().then(()=>Mn),void 0,import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-xml-extensible-markup-language-micro-1.json":()=>r(()=>import("./bp-02-data-formats-xml-extensible-markup-language-micro-1-Ck3OzSXK.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-02-nas-san-anwendungsfalle-micro-1-CS4H0JZZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-best-practices-micro-1.json":()=>r(()=>import("./bp-02-nas-san-best-practices-micro-1-BDe4uGGg.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-hybrid-ansatze-micro-1.json":()=>r(()=>import("./bp-02-nas-san-hybrid-ansatze-micro-1-5WLv1P5B.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-konfigurationsbeispiele-micro-1.json":()=>r(()=>import("./bp-02-nas-san-konfigurationsbeispiele-micro-1-DPzjRu8Q.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1.json":()=>r(()=>import("./bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1-BQRVoYLW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-network-attached-storage-nas-micro-1.json":()=>r(()=>import("./bp-02-nas-san-network-attached-storage-nas-micro-1-DiUASTT9.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-performance-vergleich-micro-1.json":()=>r(()=>import("./bp-02-nas-san-performance-vergleich-micro-1-Cd2FqHmc.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-quiz.json":()=>r(()=>Promise.resolve().then(()=>Qn),void 0,import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-storage-area-network-san-micro-1.json":()=>r(()=>import("./bp-02-nas-san-storage-area-network-san-micro-1-DRe24iYT.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-ubersicht-micro-1.json":()=>r(()=>import("./bp-02-nas-san-ubersicht-micro-1-BnewtUPP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-02-nas-san-zusammenfassung-micro-1-C-6Y35Xk.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-quality-assurance-quiz.json":()=>r(()=>Promise.resolve().then(()=>ct),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-cps-abfragerhythmus-planen-micro-1.json":()=>r(()=>import("./bp-03-cps-abfragerhythmus-planen-micro-1-CdR5buNX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-beispiele-fur-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-beispiele-fur-cps-micro-1-h-LtO0LO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-bibliotheken-und-frameworks-fur-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-bibliotheken-und-frameworks-fur-cps-micro-1-Bt0JBjoM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-cps-architektur-micro-1.json":()=>r(()=>import("./bp-03-cps-cps-architektur-micro-1-CEu10RT1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-herausforderungen-bei-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-herausforderungen-bei-cps-micro-1-DJWcRD79.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-komponenten-von-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-komponenten-von-cps-micro-1-Bm1Xbgb0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-praktische-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-03-cps-praktische-anwendungsfalle-micro-1-B6rs4e3y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-quiz.json":()=>r(()=>Promise.resolve().then(()=>At),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-cps-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-03-cps-ubungsaufgaben-micro-1-F3_HSty5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-was-sind-cyber-physische-systeme-micro-1.json":()=>r(()=>import("./bp-03-cps-was-sind-cyber-physische-systeme-micro-1-BiRsPFuD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-03-cps-zusammenfassung-micro-1-DHuA3Ra8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-authentifizierung-micro-1.json":()=>r(()=>import("./bp-03-rest-api-authentifizierung-micro-1-CMRXLLUd.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-cors-cross-origin-resource-sharing-micro-1.json":()=>r(()=>import("./bp-03-rest-api-cors-cross-origin-resource-sharing-micro-1-DqVQPgae.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-einfuhrung-micro-1.json":()=>r(()=>import("./bp-03-rest-api-einfuhrung-micro-1-BRMwoR5j.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-http-methoden-micro-1.json":()=>r(()=>import("./bp-03-rest-api-http-methoden-micro-1-Bt-21ZGO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-http-status-codes-micro-1.json":()=>r(()=>import("./bp-03-rest-api-http-status-codes-micro-1-Bq-CZWil.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-pagination-micro-1.json":()=>r(()=>import("./bp-03-rest-api-pagination-micro-1-YvL4b4Oo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-03-rest-api-prufungsrelevante-aspekte-micro-1-DrBnKvtG.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-quiz.json":()=>r(()=>Promise.resolve().then(()=>Bt),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-rate-limiting-micro-1.json":()=>r(()=>import("./bp-03-rest-api-rate-limiting-micro-1-D4ZhRZJx.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-requestresponse-format-micro-1.json":()=>r(()=>import("./bp-03-rest-api-requestresponse-format-micro-1-B1iN2zcv.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-rest-api-beispiel-python-flask-micro-1.json":()=>r(()=>import("./bp-03-rest-api-rest-api-beispiel-python-flask-micro-1-Cx_gyMzp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-rest-prinzipien-micro-1.json":()=>r(()=>import("./bp-03-rest-api-rest-prinzipien-micro-1-Cskm3-1Q.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-url-design-micro-1.json":()=>r(()=>import("./bp-03-rest-api-url-design-micro-1-DJiCt58I.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-die-8-qualitatsmerkmale-micro-1.json":()=>r(()=>import("./bp-03-software-quality-die-8-qualitatsmerkmale-micro-1-BbY_m3wQ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-einfuhrung-micro-1.json":()=>r(()=>import("./bp-03-software-quality-einfuhrung-micro-1-_UgQeSoa.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-03-software-quality-prufungsrelevante-aspekte-micro-1-BwJMBKHP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-qualitatssicherung-micro-1.json":()=>r(()=>import("./bp-03-software-quality-qualitatssicherung-micro-1-DSTCAunj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-quiz.json":()=>r(()=>Promise.resolve().then(()=>Yt),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-tdd-best-practices-micro-1.json":()=>r(()=>import("./bp-03-tdd-best-practices-micro-1-DqxvYEBy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-der-red-green-refactor-zyklus-micro-1.json":()=>r(()=>import("./bp-03-tdd-der-red-green-refactor-zyklus-micro-1-DYXkoYwN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-nachteile-von-tdd-micro-1.json":()=>r(()=>import("./bp-03-tdd-nachteile-von-tdd-micro-1-kW1EH-UB.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-quiz.json":()=>r(()=>Promise.resolve().then(()=>di),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-tdd-tdd-in-der-praxis-micro-1.json":()=>r(()=>import("./bp-03-tdd-tdd-in-der-praxis-micro-1-BYDK4MXP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-03-tdd-ubungsaufgaben-micro-1-BZbIiiuW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-vorteile-von-tdd-micro-1.json":()=>r(()=>import("./bp-03-tdd-vorteile-von-tdd-micro-1-t6WvR0l8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-was-ist-test-driven-development-micro-1.json":()=>r(()=>import("./bp-03-tdd-was-ist-test-driven-development-micro-1-BHLfFNxo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-03-tdd-zusammenfassung-micro-1-Ct5kJ6FD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-1-model-view-controller-mvc-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-1-model-view-controller-mvc-micro-1-4C0dzwmD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-2-layered-architecture-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-2-layered-architecture-micro-1-CeJ7t5AF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-3-microservices-architecture-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-3-microservices-architecture-micro-1-BCT1KY2f.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-einfuhrung-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-einfuhrung-micro-1-CMkklpOp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ei),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-behavioral-patterns-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-behavioral-patterns-micro-1-603QppDP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-creational-patterns-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-creational-patterns-micro-1-B-dnoKLt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-einfuhrung-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-einfuhrung-micro-1-04lQmyCZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-kategorien-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-kategorien-micro-1-BC_mZ2Uu.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-prufungsrelevante-aspekte-micro-1-DzyZ77GL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-quiz.json":()=>r(()=>Promise.resolve().then(()=>xi),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-structural-patterns-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-structural-patterns-micro-1-5yQpAKhR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-as-i-hinweis-nicht-mehr-prufungsrelevant-ab-2025-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-as-i-hinweis-nicht-mehr-prufungsrelevant-ab-2025-micro-1-B0853eZF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-deklarative-programmierung-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-deklarative-programmierung-micro-1-BQX1We1y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-funktionale-programmierung-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-funktionale-programmierung-micro-1-B94nmpjD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-imperative-programmierung-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-imperative-programmierung-micro-1-a2TgWxYM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-objektorientierte-programmierung-oop-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-objektorientierte-programmierung-oop-micro-1-CEtFgLsm.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-prufungshinweis-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-prufungshinweis-micro-1-BQ8BR9Jy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-quiz.json":()=>r(()=>Promise.resolve().then(()=>Xi),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-ubersicht-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-ubersicht-micro-1-BIcX7UHN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-definition-of-done-dod-micro-1.json":()=>r(()=>import("./bp-04-scrum-definition-of-done-dod-micro-1-CJiTajpF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-die-drei-scrum-artefakte-micro-1.json":()=>r(()=>import("./bp-04-scrum-die-drei-scrum-artefakte-micro-1-B0aNYOQC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-die-drei-scrum-rollen-micro-1.json":()=>r(()=>import("./bp-04-scrum-die-drei-scrum-rollen-micro-1-CTkI6B2N.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-die-funf-scrum-events-micro-1.json":()=>r(()=>import("./bp-04-scrum-die-funf-scrum-events-micro-1-DlBlSVA3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-haufige-fehler-anti-patterns-micro-1.json":()=>r(()=>import("./bp-04-scrum-haufige-fehler-anti-patterns-micro-1-D9mV_hn4.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-praktische-szenarien-micro-1.json":()=>r(()=>import("./bp-04-scrum-praktische-szenarien-micro-1-oUxu91Z9.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-quiz.json":()=>r(()=>Promise.resolve().then(()=>mr),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-scrum-scrum-ablauf-visualisierung-micro-1.json":()=>r(()=>import("./bp-04-scrum-scrum-ablauf-visualisierung-micro-1-BxGAyV2N.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-story-points-micro-1.json":()=>r(()=>import("./bp-04-scrum-story-points-micro-1-DgWZf2Hp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-04-scrum-ubungsaufgaben-micro-1-DekP6wYp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-user-stories-micro-1.json":()=>r(()=>import("./bp-04-scrum-user-stories-micro-1-BZ7dS3cQ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-vorteile-von-scrum-micro-1.json":()=>r(()=>import("./bp-04-scrum-vorteile-von-scrum-micro-1-BRmGI-Hk.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-was-ist-scrum-micro-1.json":()=>r(()=>import("./bp-04-scrum-was-ist-scrum-micro-1-CBzsRfht.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-04-scrum-zusammenfassung-micro-1-38RqdtXj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-arrays-micro-1.json":()=>r(()=>import("./bp-05-data-structures-arrays-micro-1-DPxPszme.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-einfuhrung-micro-1.json":()=>r(()=>import("./bp-05-data-structures-einfuhrung-micro-1-BG85vDQE.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-hash-table-hash-map-micro-1.json":()=>r(()=>import("./bp-05-data-structures-hash-table-hash-map-micro-1-DS-jmf8N.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-komplexitatsvergleich-micro-1.json":()=>r(()=>import("./bp-05-data-structures-komplexitatsvergleich-micro-1-BLxK5f21.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-listen-micro-1.json":()=>r(()=>import("./bp-05-data-structures-listen-micro-1-Dm6AouwZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-05-data-structures-prufungsrelevante-aspekte-micro-1-DN-cP2kO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-queue-warteschlange-micro-1.json":()=>r(()=>import("./bp-05-data-structures-queue-warteschlange-micro-1-B0tmQYVu.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-quiz.json":()=>r(()=>Promise.resolve().then(()=>_r),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-stack-stapel-micro-1.json":()=>r(()=>import("./bp-05-data-structures-stack-stapel-micro-1-DadcMCi0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-trees-baume-micro-1.json":()=>r(()=>import("./bp-05-data-structures-trees-baume-micro-1-CATDhu1s.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-encapsulation-einfuhrung-micro-1.json":()=>r(()=>import("./bp-05-encapsulation-einfuhrung-micro-1-BN6Up80k.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-encapsulation-konzept-micro-1.json":()=>r(()=>import("./bp-05-encapsulation-konzept-micro-1-Jhlph07X.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-encapsulation-quiz.json":()=>r(()=>Promise.resolve().then(()=>Vr),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-sorting-1-bubble-sort-blasensortierung-micro-1.json":()=>r(()=>import("./bp-05-sorting-1-bubble-sort-blasensortierung-micro-1-D-Gvf9wM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-2-selection-sort-auswahlsortierung-micro-1.json":()=>r(()=>import("./bp-05-sorting-2-selection-sort-auswahlsortierung-micro-1-D-PFMyGH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-3-insertion-sort-einfugesortierung-micro-1.json":()=>r(()=>import("./bp-05-sorting-3-insertion-sort-einfugesortierung-micro-1-DbEGAdMM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-einfuhrung-micro-1.json":()=>r(()=>import("./bp-05-sorting-einfuhrung-micro-1-B-rLOkKi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-quiz.json":()=>r(()=>Promise.resolve().then(()=>Xr),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-sorting-stabilitat-bei-sortieralgorithmen-micro-1.json":()=>r(()=>import("./bp-05-sorting-stabilitat-bei-sortieralgorithmen-micro-1-DDhNRVAl.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-05-sorting-ubungsaufgaben-micro-1-BWLYtGl3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-vergleich-der-sortierverfahren-micro-1.json":()=>r(()=>import("./bp-05-sorting-vergleich-der-sortierverfahren-micro-1-DzLm1IJf.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-wann-welchen-algorithmus-verwenden-micro-1.json":()=>r(()=>import("./bp-05-sorting-wann-welchen-algorithmus-verwenden-micro-1-CfOsKHC8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-warum-sortieren-wichtig-ist-micro-1.json":()=>r(()=>import("./bp-05-sorting-warum-sortieren-wichtig-ist-micro-1-r1oucJBN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-zeitkomplexitat---big-o-notation-micro-1.json":()=>r(()=>import("./bp-05-sorting-zeitkomplexitat---big-o-notation-micro-1-D30GHUeQ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-05-sorting-zusammenfassung-micro-1-DstMN2NF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-checkliste-fur-die-prufung-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-checkliste-fur-die-prufung-micro-1-7TUj_Zlr.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-haufige-fehler-vermeiden-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-haufige-fehler-vermeiden-micro-1-BYWBriM3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-prufungsrelevante-aspekte-micro-1-D2O161qN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-prufungsstrategie-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-prufungsstrategie-micro-1-DZk5S48Y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-quiz.json":()=>r(()=>Promise.resolve().then(()=>gs),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-typische-prufungsaufgaben-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-typische-prufungsaufgaben-micro-1-Cens-DWi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-verfugbare-sql-module-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-verfugbare-sql-module-micro-1-Dy4W-Ggf.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-was-sie-konnen-sollten-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-was-sie-konnen-sollten-micro-1-8Xf-gmL8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-weiterfuhrende-module-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-weiterfuhrende-module-micro-1-9PYoiAdo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-wichtiger-hinweis-zur-prufung-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-wichtiger-hinweis-zur-prufung-micro-1-BfCMmwwm.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-einfuhrung-micro-1-D5Hdp3XM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-er-diagramm-notation-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-er-diagramm-notation-micro-1-BTKJ8or1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-erweiterte-konzepte-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-erweiterte-konzepte-micro-1-CndY6brW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-grundkonzepte-der-er-modellierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-grundkonzepte-der-er-modellierung-micro-1-D-boydf2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-haufige-modellierungsfehler-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-haufige-modellierungsfehler-micro-1-DcrRjEXe.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-modellierungsprozess-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-modellierungsprozess-micro-1-CilScF_U.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-praktisches-beispiel-online-shop-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-praktisches-beispiel-online-shop-micro-1-BnS253ci.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-prufungsrelevante-aspekte-micro-1-LtS4ZA8c.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-quiz.json":()=>r(()=>Promise.resolve().then(()=>Du),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-ubergang-zum-relationalen-modell-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-ubergang-zum-relationalen-modell-micro-1-BX_-d5XW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-denormalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-denormalisierung-micro-1-DCMaft1E.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-die-normalformen-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-die-normalformen-micro-1-DjLjvcC_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-einfuhrung-micro-1-D3_DeTlH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-funktionale-abhangigkeiten-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-funktionale-abhangigkeiten-micro-1-CZ6RpRRH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-normalisierungsprozess-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-normalisierungsprozess-micro-1-TwmQQIIC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-praktisches-beispiel-bibliothekssystem-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-praktisches-beispiel-bibliothekssystem-micro-1-CT0GgAET.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-prufungsrelevante-aspekte-micro-1-Db_Fw0OZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ku),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-vor--und-nachteile-der-normalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-vor--und-nachteile-der-normalisierung-micro-1-UwaC79UA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-ziele-der-normalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-ziele-der-normalisierung-micro-1-Rbs04bh-.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-datenqualitat-in-etl-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-datenqualitat-in-etl-micro-1-CyWcUX1h.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-einfuhrung-micro-1-B5dCOj94.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-etl-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-etl-grundlagen-micro-1-DkXNQXV3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-etl-pipeline-design-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-etl-pipeline-design-micro-1-pdOywHel.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-etl-tools-und-technologien-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-etl-tools-und-technologien-micro-1-BZGIycOy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-extract-datenextraktion-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-extract-datenextraktion-micro-1-XJ8cS_Zc.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-load-datenladen-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-load-datenladen-micro-1-COygRbQj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-prufungsrelevante-aspekte-micro-1-Cff5bARv.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-transform-datentransformation-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-transform-datentransformation-micro-1-Pe1fPcuj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-quiz.json":()=>r(()=>Promise.resolve().then(()=>ic),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-einfuhrung-micro-1-CRLqXNUa.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-governance-betriebsaspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-governance-betriebsaspekte-micro-1-bie6OXd_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-identifikation-von-automatisierungspotenzialen-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-identifikation-von-automatisierungspotenzialen-micro-1-DJicYSQb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-kontinuierliche-verbesserung-feedback-loops-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-kontinuierliche-verbesserung-feedback-loops-micro-1-CFo3E4CW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-orchestrierung-vs-choreographie-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-orchestrierung-vs-choreographie-micro-1-BaHzLU3E.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-prufungsrelevante-aspekte-micro-1-u7tG1lb5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-quiz.json":()=>r(()=>Promise.resolve().then(()=>cg),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-technologien-abgrenzung-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-technologien-abgrenzung-micro-1-CeSioKgv.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-bpmn-grundelemente-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-bpmn-grundelemente-micro-1-BdexWBBC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-bpmn-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-bpmn-grundlagen-micro-1-vCBlcYCs.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-bpmn-tools-und-software-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-bpmn-tools-und-software-micro-1-YCjeMRs_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-compliance-und-governance-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-compliance-und-governance-micro-1-Bcq1wGtg.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-einfuhrung-micro-1-wQ40VQOR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-erweiterte-bpmn-konzepte-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-erweiterte-bpmn-konzepte-micro-1-ls13TwgX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-prozessanalyse-und--optimierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-prozessanalyse-und--optimierung-micro-1-tLrQav57.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-prozessmodellierung-in-der-praxis-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-prozessmodellierung-in-der-praxis-micro-1-BolntWM5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-prufungsrelevante-aspekte-micro-1-CghZjW-T.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-quiz.json":()=>r(()=>Promise.resolve().then(()=>kc),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-auswertung-interpretation-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-auswertung-interpretation-micro-1-DwDLPuYi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-datenerhebung-plattformaspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-datenerhebung-plattformaspekte-micro-1-BM3C5NKU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-definition-operationalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-definition-operationalisierung-micro-1-JMlW4Qhq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-einfuhrung-micro-1-FBdmqIL2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-kpi-rahmenwerk-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-kpi-rahmenwerk-micro-1-CTC8XTHq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-prufungsrelevante-aspekte-micro-1-QyyzqPkZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-quiz.json":()=>r(()=>Promise.resolve().then(()=>Im),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-steuerung-visualisierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-steuerung-visualisierung-micro-1-BZEDZro1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-einfuhrung-micro-1-p5awiDAV.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-integration-lean-six-sigma-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-integration-lean-six-sigma-micro-1-CLOQDYq6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-kontinuierliche-verbesserung-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-kontinuierliche-verbesserung-micro-1-Ruks6UDI.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-lean-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-lean-grundlagen-micro-1-DlD5-gLA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-prufungsrelevante-aspekte-micro-1-B83oNw02.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-quiz.json":()=>r(()=>Promise.resolve().then(()=>Hm),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-six-sigma-uberblick-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-six-sigma-uberblick-micro-1-SBBRipIV.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-werkzeuge-auswahl-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-werkzeuge-auswahl-micro-1-B8wxYiVk.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-conformance-checking-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-conformance-checking-micro-1-B8Xuup0Y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-discovery-prozessentdeckung-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-discovery-prozessentdeckung-micro-1-CB6Wa5YN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-einfuhrung-micro-1-825yoXiL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-enhancement-optimierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-enhancement-optimierung-micro-1-Cf-hZsG1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-event-logs-datenqualitat-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-event-logs-datenqualitat-micro-1-BdUOCWRq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-kpi-analyse-varianten-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-kpi-analyse-varianten-micro-1-G0-AlA4B.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-prufungsrelevante-aspekte-micro-1-hrah-Z_2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-quiz.json":()=>r(()=>Promise.resolve().then(()=>fm),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-bi-tools-und-technologien-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-bi-tools-und-technologien-micro-1-BDOj80oD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-business-intelligence-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-business-intelligence-grundlagen-micro-1-D9ULkp0c.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-dashboard-design-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-dashboard-design-micro-1-BiNf9LKl.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-data-warehouse-konzepte-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-data-warehouse-konzepte-micro-1-DAGTdu6_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-datenqualitat-und--governance-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-datenqualitat-und--governance-micro-1-9l9n4fSy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-einfuhrung-micro-1-DdaAtJLA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-key-performance-indicators-kpis-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-key-performance-indicators-kpis-micro-1-h_Q3yD_l.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-mobile-bi-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-mobile-bi-micro-1-BUcnd8I_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-olap-online-analytical-processing-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-olap-online-analytical-processing-micro-1-CvCxlhPP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-prufungsrelevante-aspekte-micro-1-B7X1yuWR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-self-service-bi-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-self-service-bi-micro-1-BaeFauM6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-quiz.json":()=>r(()=>Promise.resolve().then(()=>Cc),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-dimensionale-modellierung-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-dimensionale-modellierung-micro-1-mpmZdKY9.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-einfuhrung-micro-1-DxgqTq0J.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-etl-prozesse-und-qualitatssicherung-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-etl-prozesse-und-qualitatssicherung-micro-1-DeGr_dCH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-kernkomponenten-einer-data-warehouse-architektur-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-kernkomponenten-einer-data-warehouse-architektur-micro-1-B0m0714Y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-performance--und-architekturentscheidungen-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-performance--und-architekturentscheidungen-micro-1-CLtdj4r5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-prufungsrelevante-aspekte-micro-1-CzaQvoMJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-quiz.json":()=>r(()=>Promise.resolve().then(()=>Hc),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-ubungen-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-ubungen-micro-1-C0Zt0x6J.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-einfuhrung-micro-1-DEuLy0ab.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-operationalisierung-von-data-quality-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-operationalisierung-von-data-quality-micro-1-21AXLdla.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-prufungsrelevante-aspekte-micro-1-Ba5C23wb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-quiz.json":()=>r(()=>Promise.resolve().then(()=>ud),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-strategien-der-datenbereinigung-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-strategien-der-datenbereinigung-micro-1-LE4EYbJM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-wichtige-metriken-und-checks-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-wichtige-metriken-und-checks-micro-1-HnCK4G6V.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-deskriptive-statistik-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-deskriptive-statistik-micro-1-CwEZ_4ut.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-hypothesentests-grundprinzipien-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-hypothesentests-grundprinzipien-micro-1-Cn9RE609.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-praktische-anwendung-in-prozessen-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-praktische-anwendung-in-prozessen-micro-1-lXK_7adR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-prufungsrelevante-aspekte-micro-1-CQcrXhHR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ad),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-wahrscheinlichkeitsbegriffe-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-wahrscheinlichkeitsbegriffe-micro-1-CJT7U5o8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-kpi-definition-und-performance-messung-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-kpi-definition-und-performance-messung-micro-1-CMW6ReiM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-lean-prinzipien-und-verbesserungstechniken-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-lean-prinzipien-und-verbesserungstechniken-micro-1-BHSbC-yK.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-manahmenplanung-und-umsetzung-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-manahmenplanung-und-umsetzung-micro-1-C86YS5Uo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-prozessanalyse-mit-bpmn-und-process-mining-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-prozessanalyse-mit-bpmn-und-process-mining-micro-1-Dk3-1JWJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-prufungsrelevante-aspekte-micro-1-BTluUtd6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-quiz.json":()=>r(()=>Promise.resolve().then(()=>xd),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-dashboard-design-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-dashboard-design-micro-1-B7Da69bA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-data-governance-und-datenschutz-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-data-governance-und-datenschutz-micro-1-DxH4nOuU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-prufungsrelevante-aspekte-micro-1-B4UEm_XG.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-quiz.json":()=>r(()=>Promise.resolve().then(()=>em),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-self-service-analytics-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-self-service-analytics-micro-1-DB5equlN.js"),[],import.meta.url),"../data/ihk/quizzes/demo-mq1.json":()=>r(()=>import("./demo-mq1-Dp6YgLcC.js"),[],import.meta.url),"../data/ihk/quizzes/demo-mq2.json":()=>r(()=>import("./demo-mq2-CbNhnk9h.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-1-kundenanforderungen-analysieren-micro-1.json":()=>r(()=>import("./fue-01-planning-1-kundenanforderungen-analysieren-micro-1-DF5WdB-8.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-2-projektplanung-micro-1.json":()=>r(()=>import("./fue-01-planning-2-projektplanung-micro-1-u1F7se7T.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-3-wirtschaftlichkeitsberechnung-micro-1.json":()=>r(()=>import("./fue-01-planning-3-wirtschaftlichkeitsberechnung-micro-1-CqMgki11.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-4-projektdokumentation-micro-1.json":()=>r(()=>import("./fue-01-planning-4-projektdokumentation-micro-1-DHP0GFlH.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-5-stakeholder-management-micro-1.json":()=>r(()=>import("./fue-01-planning-5-stakeholder-management-micro-1-BbiBzFUF.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-einfuhrung-micro-1.json":()=>r(()=>import("./fue-01-planning-einfuhrung-micro-1-D5QD7okJ.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-prufungsrelevante-punkte-micro-1.json":()=>r(()=>import("./fue-01-planning-prufungsrelevante-punkte-micro-1-CJwAkSnc.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ds),void 0,import.meta.url),"../data/ihk/quizzes/fue-01-planning-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-01-planning-zusammenfassung-micro-1-BVNhlXp4.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-datenbank-anomalien-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-datenbank-anomalien-micro-1-BmGCF5Az.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-denormalisierung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-denormalisierung-micro-1-CBzKdnML.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-normalisierung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-normalisierung-micro-1-B6T4fKca.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ks),void 0,import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-ubersicht-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-ubersicht-micro-1-CzEfPDst.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-vor--und-nachteile-der-normalisierung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-vor--und-nachteile-der-normalisierung-micro-1-cyql_zLS.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-was-sind-redundanzen-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-was-sind-redundanzen-micro-1-BqIphg2T.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-zusammenfassung-micro-1-DLhddOaS.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-aktivitatsdiagramme-uml-micro-1.json":()=>r(()=>import("./fue-02-control-structures-aktivitatsdiagramme-uml-micro-1-CdRcm9C9.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-best-practices-micro-1.json":()=>r(()=>import("./fue-02-control-structures-best-practices-micro-1-BcRjzqLA.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-die-drei-grundstrukturen-micro-1.json":()=>r(()=>import("./fue-02-control-structures-die-drei-grundstrukturen-micro-1-BGyR1-wy.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-praktische-beispiele-micro-1.json":()=>r(()=>import("./fue-02-control-structures-praktische-beispiele-micro-1-D3yiYUSD.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-pseudocode-konventionen-micro-1.json":()=>r(()=>import("./fue-02-control-structures-pseudocode-konventionen-micro-1-BoO0fcQN.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-quiz.json":()=>r(()=>Promise.resolve().then(()=>ia),void 0,import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-ubersicht-micro-1.json":()=>r(()=>import("./fue-02-control-structures-ubersicht-micro-1-Dh8dKuLn.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-vergleich-aktivitatsdiagramm-vs-pseudocode-micro-1.json":()=>r(()=>import("./fue-02-control-structures-vergleich-aktivitatsdiagramm-vs-pseudocode-micro-1-vgxrcufO.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-warum-struktogramme-und-pap-veraltet-sind-micro-1.json":()=>r(()=>import("./fue-02-control-structures-warum-struktogramme-und-pap-veraltet-sind-micro-1-BI9VWA2L.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-02-control-structures-zusammenfassung-micro-1-ByZ3yKrL.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-1-kontrollstrukturen-micro-1.json":()=>r(()=>import("./fue-02-development-1-kontrollstrukturen-micro-1-CruHhcCj.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-2-datenbank-anomalien-und-redundanzen-micro-1.json":()=>r(()=>import("./fue-02-development-2-datenbank-anomalien-und-redundanzen-micro-1-DAvh-bF5.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-3-praktische-ubungen-micro-1.json":()=>r(()=>import("./fue-02-development-3-praktische-ubungen-micro-1-D4eI5J-i.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-einfuhrung-micro-1.json":()=>r(()=>import("./fue-02-development-einfuhrung-micro-1-DskigGUu.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-prufungsrelevante-punkte-micro-1.json":()=>r(()=>import("./fue-02-development-prufungsrelevante-punkte-micro-1-BIdxotu8.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-quiz.json":()=>r(()=>Promise.resolve().then(()=>ba),void 0,import.meta.url),"../data/ihk/quizzes/fue-02-development-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-02-development-zusammenfassung-micro-1-Bc5BK9qW.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-arten-von-performance-tests-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-arten-von-performance-tests-micro-1-jJMZp0-q.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-best-practices-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-best-practices-micro-1-DjkgLIG-.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-haufige-bottlenecks-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-haufige-bottlenecks-micro-1-Z7TudVV2.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-performance-testing-tools-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-performance-testing-tools-micro-1-CUHKFhAr.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-quiz.json":()=>r(()=>Promise.resolve().then(()=>qa),void 0,import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-test-strategie-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-test-strategie-micro-1-B5WcYEYK.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-ubersicht-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-ubersicht-micro-1-CVlbm0PL.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-wichtige-metriken-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-wichtige-metriken-micro-1-DvsxlbSN.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-zusammenfassung-micro-1-BkKyXlcE.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-1-software-tests-micro-1.json":()=>r(()=>import("./fue-03-quality-1-software-tests-micro-1-DFXRiFQz.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-2-black-box-testing-micro-1.json":()=>r(()=>import("./fue-03-quality-2-black-box-testing-micro-1-D_E4dvGi.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-3-white-box-testing-micro-1.json":()=>r(()=>import("./fue-03-quality-3-white-box-testing-micro-1-V_WsC2b8.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-4-code-review-micro-1.json":()=>r(()=>import("./fue-03-quality-4-code-review-micro-1-RWmQcQth.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-5-last--und-performancetests-micro-1.json":()=>r(()=>import("./fue-03-quality-5-last--und-performancetests-micro-1-BrfYXGJn.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-6-testpyramide-micro-1.json":()=>r(()=>import("./fue-03-quality-6-testpyramide-micro-1-DSPKl4Xn.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-7-praktische-beispiele-micro-1.json":()=>r(()=>import("./fue-03-quality-7-praktische-beispiele-micro-1-DER6rMxA.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-einfuhrung-micro-1.json":()=>r(()=>import("./fue-03-quality-einfuhrung-micro-1-D-r3UTAO.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-prufungsrelevante-punkte-micro-1.json":()=>r(()=>import("./fue-03-quality-prufungsrelevante-punkte-micro-1-DkjqjpiW.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-quiz.json":()=>r(()=>Promise.resolve().then(()=>Wa),void 0,import.meta.url),"../data/ihk/quizzes/fue-03-quality-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-03-quality-zusammenfassung-micro-1-DNFOh5rb.js"),[],import.meta.url),"../data/ihk/quizzes/fue-04-security-quiz.json":()=>r(()=>Promise.resolve().then(()=>io),void 0,import.meta.url),"../data/ihk/quizzes/fue-04-security-threats-einfuhrung-micro-1.json":()=>r(()=>import("./fue-04-security-threats-einfuhrung-micro-1-C5zso6I7.js"),[],import.meta.url),"../data/ihk/quizzes/fue-04-security-threats-haufige-bedrohungen-micro-1.json":()=>r(()=>import("./fue-04-security-threats-haufige-bedrohungen-micro-1-B0uNpvtm.js"),[],import.meta.url),"../data/ihk/quizzes/fue-04-security-threats-quiz.json":()=>r(()=>Promise.resolve().then(()=>zo),void 0,import.meta.url),"../data/ihk/quizzes/kerberos-quiz.json":()=>r(()=>Promise.resolve().then(()=>Lo),void 0,import.meta.url),"../data/ihk/quizzes/scrum-quiz-2025.json":()=>r(()=>import("./scrum-quiz-2025-C24KUtaZ.js"),[],import.meta.url),"../data/ihk/quizzes/scrum-quiz.json":()=>r(()=>Promise.resolve().then(()=>Qo),void 0,import.meta.url),"../data/ihk/quizzes/sorting-algorithms-quiz-2025.json":()=>r(()=>import("./sorting-algorithms-quiz-2025-DzKT45hA.js"),[],import.meta.url),"../data/ihk/quizzes/sorting-algorithms-quiz.json":()=>r(()=>Promise.resolve().then(()=>cl),void 0,import.meta.url),"../data/ihk/quizzes/sql-comprehensive-quiz-2025.json":()=>r(()=>import("./sql-comprehensive-quiz-2025-CKWXJa4u.js"),[],import.meta.url),"../data/ihk/quizzes/sql-comprehensive-quiz.json":()=>r(()=>Promise.resolve().then(()=>El),void 0,import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-alter-table---tabellen-andern-micro-1.json":()=>r(()=>import("./sql-ddl-2025-alter-table---tabellen-andern-micro-1-BToq8ZrM.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-create-index---indizes-erstellen-micro-1.json":()=>r(()=>import("./sql-ddl-2025-create-index---indizes-erstellen-micro-1-Cf41EiKr.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-create-table---tabellen-erstellen-micro-1.json":()=>r(()=>import("./sql-ddl-2025-create-table---tabellen-erstellen-micro-1-BkZeDTXB.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-einfuhrung-micro-1.json":()=>r(()=>import("./sql-ddl-2025-einfuhrung-micro-1-DwMTLGnb.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-praxisbeispiel-projektdatenbank-micro-1.json":()=>r(()=>import("./sql-ddl-2025-praxisbeispiel-projektdatenbank-micro-1-hfXztrZr.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-quiz.json":()=>r(()=>Promise.resolve().then(()=>Bl),void 0,import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-wichtige-hinweise-fur-die-prufung-micro-1.json":()=>r(()=>import("./sql-ddl-2025-wichtige-hinweise-fur-die-prufung-micro-1-DHc1BJp_.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-zusammenfassung-micro-1.json":()=>r(()=>import("./sql-ddl-2025-zusammenfassung-micro-1-G6sIoDly.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-delete---daten-loschen-micro-1.json":()=>r(()=>import("./sql-dml-2025-delete---daten-loschen-micro-1-DbqkrXNo.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-einfuhrung-micro-1.json":()=>r(()=>import("./sql-dml-2025-einfuhrung-micro-1-C5JXF2gJ.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-insert---daten-einfugen-micro-1.json":()=>r(()=>import("./sql-dml-2025-insert---daten-einfugen-micro-1-BT_oTRo9.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-praxisbeispiel-online-shop-micro-1.json":()=>r(()=>import("./sql-dml-2025-praxisbeispiel-online-shop-micro-1-BBmzUB0z.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-quiz.json":()=>r(()=>Promise.resolve().then(()=>Jl),void 0,import.meta.url),"../data/ihk/quizzes/sql-dml-2025-transaktionen-bonus-wissen-micro-1.json":()=>r(()=>import("./sql-dml-2025-transaktionen-bonus-wissen-micro-1-gFx0lIUa.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-update---daten-andern-micro-1.json":()=>r(()=>import("./sql-dml-2025-update---daten-andern-micro-1-CcDu3-Gr.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-wichtige-hinweise-fur-die-prufung-micro-1.json":()=>r(()=>import("./sql-dml-2025-wichtige-hinweise-fur-die-prufung-micro-1-uPETeL1D.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-zusammenfassung-micro-1.json":()=>r(()=>import("./sql-dml-2025-zusammenfassung-micro-1-CoQW2GpP.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-aggregatfunktionen-micro-1.json":()=>r(()=>import("./sql-dql-2025-aggregatfunktionen-micro-1-Di2d4LeZ.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-distinct---duplikate-entfernen-micro-1.json":()=>r(()=>import("./sql-dql-2025-distinct---duplikate-entfernen-micro-1-D5uVQsAX.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-einfuhrung-micro-1.json":()=>r(()=>import("./sql-dql-2025-einfuhrung-micro-1-cgG2zWzp.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-group-by---gruppieren-micro-1.json":()=>r(()=>import("./sql-dql-2025-group-by---gruppieren-micro-1-bWUV2O5K.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-join---tabellen-verknupfen-micro-1.json":()=>r(()=>import("./sql-dql-2025-join---tabellen-verknupfen-micro-1-BQw6HfRL.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-komplexes-praxisbeispiel-micro-1.json":()=>r(()=>import("./sql-dql-2025-komplexes-praxisbeispiel-micro-1-k5lZSBZ6.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-limit---anzahl-begrenzen-micro-1.json":()=>r(()=>import("./sql-dql-2025-limit---anzahl-begrenzen-micro-1-lCpA4JHV.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-order-by---sortieren-micro-1.json":()=>r(()=>import("./sql-dql-2025-order-by---sortieren-micro-1-DwWmRb-M.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-select---grundlagen-micro-1.json":()=>r(()=>import("./sql-dql-2025-select---grundlagen-micro-1-B-Kd--Lw.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-subqueries-unterabfragen-micro-1.json":()=>r(()=>import("./sql-dql-2025-subqueries-unterabfragen-micro-1-CGEKrjQt.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-where---daten-filtern-selektion-micro-1.json":()=>r(()=>import("./sql-dql-2025-where---daten-filtern-selektion-micro-1-BPVPU4SU.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-wichtige-hinweise-fur-die-prufung-micro-1.json":()=>r(()=>import("./sql-dql-2025-wichtige-hinweise-fur-die-prufung-micro-1-DWC-EizH.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-zusammenfassung-micro-1.json":()=>r(()=>import("./sql-dql-2025-zusammenfassung-micro-1-CzzyXdLG.js"),[],import.meta.url),"../data/ihk/quizzes/tdd-quiz-2025.json":()=>r(()=>import("./tdd-quiz-2025-4RRwJxyp.js"),[],import.meta.url),"../data/ihk/quizzes/tdd-quiz.json":()=>r(()=>Promise.resolve().then(()=>mu),void 0,import.meta.url)}),`../data/ihk/quizzes/${e}.json`,5)).default;return this.quizzes.set(t.id,t),t}catch(n){return console.error(`Error getting quiz ${e}:`,n),null}})}getRelatedQuizzes(e){return Array.from(this.quizzes.values()).filter(t=>t.moduleId===e)}_loadAllQuizzes(){return d(this,null,function*(){[fe,Re,Ge,an,vn,Ln,Hn,ut,wt,Nt,Jt,ci,Ai,Bi,Yi,dr,Er,xr,Yr,ms,_s,Fs,ta,fa,Ta,Ka,to,ko,Co,Ho,ul,Al,Nl,Zl,du,_u,Fu,tc,bc,Ic,Uc,ld,wd,Bd,Xd,pm,Rm,Um,ug].forEach(n=>{const t=n.category||n.categoryId;if(this.categoryMappingService)try{const i=this.categoryMappingService.mapToThreeTierCategory(n),s=v(z({},n),{category:t,categoryId:t,threeTierCategory:i.threeTierCategory,categoryMapping:{threeTierCategory:i.threeTierCategory,categoryInfo:i.categoryInfo,mappingRule:i.appliedRule,mappingReason:i.reason,mappingTimestamp:i.timestamp}});this.quizzes.set(n.id,s)}catch(i){console.warn(`Failed to map quiz ${n.id} to three-tier category:`,i),this.quizzes.set(n.id,v(z({},n),{category:t,categoryId:t,threeTierCategory:"allgemein",categoryMapping:{threeTierCategory:"allgemein",mappingRule:null,mappingReason:"Mapping failed, using default",mappingTimestamp:new Date().toISOString()}}))}else this.quizzes.set(n.id,v(z({},n),{category:t,categoryId:t}))}),this.clearCategorizedContentCache()})}getContentStats(){return{totalModules:this.modules.size,totalQuizzes:this.quizzes.size,totalLearningPaths:4}}getThreeTierCategoryStats(){return d(this,arguments,function*(e={}){try{const{includeSpecializationRelevance:n=!0,includeDifficultyDistribution:t=!0,includeContentTypes:i=!0,includeProgressStats:s=!1,specializationId:a=null}=e;yield this._loadAllModules(),yield this._loadAllQuizzes();const o=Array.from(this.modules.values()),l=Array.from(this.quizzes.values()),u=[...o,...l],c={overview:{totalContent:u.length,totalModules:o.length,totalQuizzes:l.length,generatedAt:new Date().toISOString()},categories:{}},h=["daten-prozessanalyse","anwendungsentwicklung","allgemein"];for(const m of h){const g=u.filter(k=>k.threeTierCategory===m),p=g.filter(k=>k.type==="module"||!k.questions),b=g.filter(k=>k.type==="quiz"||k.questions),S={metadata:this._getCategoryMetadata(m),contentCounts:{total:g.length,modules:p.length,quizzes:b.length,percentage:u.length>0?Math.round(g.length/u.length*100):0}};t&&(S.difficultyDistribution=this._calculateDifficultyDistribution(g)),i&&(S.contentTypes=this._calculateContentTypeBreakdown(g)),n&&(S.specializationRelevance=this._calculateSpecializationRelevance(g,a)),s&&a&&(S.progressStats=yield this._calculateProgressStats(g,a)),c.categories[m]=S}return c.insights=this._generateCategoryInsights(c.categories),c}catch(n){throw console.error("Error calculating three-tier category stats:",n),n}})}getCategoryStatsForSpecialization(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const n=yield this.getThreeTierCategoryStats({includeSpecializationRelevance:!0,includeDifficultyDistribution:!0,includeContentTypes:!0,includeProgressStats:!0,specializationId:e});return n.specializationInsights=this._generateSpecializationInsights(n.categories,e),n.categoryRanking=this._rankCategoriesByRelevance(n.categories,e),n}catch(n){throw console.error("Error calculating specialization category stats:",n),n}})}getModulesBySpecialization(t){return d(this,arguments,function*(e,n={}){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");yield this._loadAllModules();const i=Array.from(this.modules.values());if(!this.specializationService)return console.warn("SpecializationService not available, returning all modules"),this._enrichModulesWithProgress(i);const s=this.specializationService.filterContentBySpecialization(i,e,{minRelevance:n.minRelevance||"low",includeGeneral:n.includeGeneral!==!1});return this._enrichModulesWithProgress(s)}catch(i){throw console.error(`Error getting modules by specialization ${e}:`,i),i}})}getQuizzesBySpecialization(t){return d(this,arguments,function*(e,n={}){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");yield this._loadAllQuizzes();const i=Array.from(this.quizzes.values());return this.specializationService?this.specializationService.filterContentBySpecialization(i,e,{minRelevance:n.minRelevance||"low",includeGeneral:n.includeGeneral!==!1}):(console.warn("SpecializationService not available, returning all quizzes"),i)}catch(i){throw console.error(`Error getting quizzes by specialization ${e}:`,i),i}})}getContentStatsBySpecialization(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");yield this._loadAllModules(),yield this._loadAllQuizzes();const n=Array.from(this.modules.values()),t=Array.from(this.quizzes.values()),i={specialization:e,modules:{total:n.length,byRelevance:{high:0,medium:0,low:0,none:0},byCategory:{}},quizzes:{total:t.length,byRelevance:{high:0,medium:0,low:0,none:0},byCategory:{}}};return this.specializationService?(n.forEach(s=>{const a=s.category||s.categoryId;if(a){const o=this.specializationService.getCategoryRelevance(a,e);i.modules.byRelevance[o]!==void 0&&i.modules.byRelevance[o]++,i.modules.byCategory[a]||(i.modules.byCategory[a]={count:0,relevance:o}),i.modules.byCategory[a].count++}else i.modules.byRelevance.none++}),t.forEach(s=>{const a=s.category||s.categoryId;if(a){const o=this.specializationService.getCategoryRelevance(a,e);i.quizzes.byRelevance[o]!==void 0&&i.quizzes.byRelevance[o]++,i.quizzes.byCategory[a]||(i.quizzes.byCategory[a]={count:0,relevance:o}),i.quizzes.byCategory[a].count++}else i.quizzes.byRelevance.none++}),i):(console.warn("SpecializationService not available, returning basic statistics"),i)}catch(n){throw console.error(`Error getting content statistics for specialization ${e}:`,n),n}})}getContentByRelevance(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");yield this._loadAllModules(),yield this._loadAllQuizzes();const n=Array.from(this.modules.values()),t=Array.from(this.quizzes.values()),i={high:{modules:[],quizzes:[]},medium:{modules:[],quizzes:[]},low:{modules:[],quizzes:[]}};return this.specializationService?(n.forEach(s=>{const a=s.category||s.categoryId;if(a){const o=this.specializationService.getCategoryRelevance(a,e);i[o]&&i[o].modules.push(s)}}),t.forEach(s=>{const a=s.category||s.categoryId;if(a){const o=this.specializationService.getCategoryRelevance(a,e);i[o]&&i[o].quizzes.push(s)}}),Object.keys(i).forEach(s=>{i[s].modules=this._enrichModulesWithProgress(i[s].modules)}),i):(console.warn("SpecializationService not available"),i)}catch(n){throw console.error(`Error getting content by relevance for specialization ${e}:`,n),n}})}getContentByThreeTierCategory(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid three-tier category ID");const n=["daten-prozessanalyse","anwendungsentwicklung","allgemein"];if(!n.includes(e))throw new Error(`Invalid three-tier category: ${e}. Must be one of: ${n.join(", ")}`);const t=`three-tier-${e}`;if(this.categorizedContentCache.has(t))return this.categorizedContentCache.get(t);yield this._loadAllModules(),yield this._loadAllQuizzes();const i=this._getCategoryContentIds(e,"content");let s=[];if(i.size>0)i.forEach(o=>{const l=this.modules.get(o),u=this.quizzes.get(o);l&&l.threeTierCategory===e?s.push(v(z({},l),{contentType:"module"})):u&&u.threeTierCategory===e&&s.push(v(z({},u),{contentType:"quiz"}))});else{if(!this.categoryMappingService)return console.warn("CategoryMappingService not available, returning empty array"),[];s=[...Array.from(this.modules.values()),...Array.from(this.quizzes.values())].filter(l=>l.threeTierCategory?l.threeTierCategory===e:this.categoryMappingService.mapToThreeTierCategory(l).threeTierCategory===e).map(l=>v(z({},l),{contentType:l.content||l.sections?"module":"quiz"}))}const a=s.map(o=>o.contentType==="module"?this._enrichModulesWithProgress([o])[0]:o);return this.categorizedContentCache.set(t,a),a}catch(n){throw console.error(`Error getting content by three-tier category ${e}:`,n),n}})}getContentWithCategoryInfo(e){return d(this,null,function*(){try{if(yield this._loadAllModules(),yield this._loadAllQuizzes(),!this.categoryMappingService)return console.warn("CategoryMappingService not available, returning empty structure"),this._getEmptyCategorizedContent();const n=Array.from(this.modules.values()),t=Array.from(this.quizzes.values()),i={"daten-prozessanalyse":{modules:[],quizzes:[],relevance:"none",metadata:null},anwendungsentwicklung:{modules:[],quizzes:[],relevance:"none",metadata:null},allgemein:{modules:[],quizzes:[],relevance:"none",metadata:null}};return this.categoryMappingService.getThreeTierCategories().forEach(a=>{i[a.id]&&(i[a.id].metadata=a,e&&this.categoryMappingService&&(i[a.id].relevance=this.categoryMappingService.getCategoryRelevance(a.id,e)))}),n.forEach(a=>{const o=this.categoryMappingService.mapToThreeTierCategory(a),l=o.threeTierCategory;i[l]&&i[l].modules.push(v(z({},a),{threeTierCategory:l,mappingInfo:o}))}),t.forEach(a=>{const o=this.categoryMappingService.mapToThreeTierCategory(a),l=o.threeTierCategory;i[l]&&i[l].quizzes.push(v(z({},a),{threeTierCategory:l,mappingInfo:o}))}),Object.keys(i).forEach(a=>{i[a].modules=this._enrichModulesWithProgress(i[a].modules)}),i}catch(n){throw console.error("Error getting content with category info:",n),n}})}searchInCategory(e,n){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid search query");if(!n||typeof n!="string")throw new Error("Invalid category ID");if(!["daten-prozessanalyse","anwendungsentwicklung","allgemein"].includes(n))throw new Error(`Invalid three-tier category: ${n}`);const i=yield this.getContentByThreeTierCategory(n),s=e.toLowerCase().trim();return i.filter(o=>o.title&&o.title.toLowerCase().includes(s)||o.description&&o.description.toLowerCase().includes(s)||o.tags&&Array.isArray(o.tags)&&o.tags.some(l=>l.toLowerCase().includes(s))||o.content&&o.content.toLowerCase().includes(s)?!0:o.questions&&Array.isArray(o.questions)?o.questions.some(l=>l.question&&l.question.toLowerCase().includes(s)):!1).map(o=>v(z({},o),{searchRelevance:this._calculateSearchRelevance(o,s)})).sort((o,l)=>l.searchRelevance-o.searchRelevance)}catch(t){throw console.error(`Error searching in category ${n}:`,t),t}})}searchWithCategoryFiltering(t){return d(this,arguments,function*(e,n={}){try{const{categories:i=["daten-prozessanalyse","anwendungsentwicklung","allgemein"],contentTypes:s=["module","quiz"],maxResultsPerCategory:a=10,minRelevanceScore:o=1,includeMetadata:l=!0,sortBy:u="relevance",specializationId:c=null}=n;if(!e||typeof e!="string")throw new Error("Invalid search query");const h=e.toLowerCase().trim(),m={query:e,totalResults:0,categories:{},suggestions:[]};for(const g of i)try{let b=(yield this.searchInCategory(e,g)).filter(k=>{const E=k.type||(k.questions?"quiz":"module");return s.includes(E)});b=b.filter(k=>(k.searchRelevance||0)>=o),c&&(b=b.map(k=>v(z({},k),{searchRelevance:this._boostRelevanceForSpecialization(k,c)}))),b=this._sortSearchResults(b,u),b=b.slice(0,a);const S={results:b,totalFound:b.length};l&&(S.metadata=this._getCategoryMetadata(g)),m.categories[g]=S,m.totalResults+=b.length}catch(p){console.warn(`Error searching in category ${g}:`,p),m.categories[g]={results:[],totalFound:0,error:p.message}}return m.totalResults===0&&(m.suggestions=yield this._generateSearchSuggestions(e)),m}catch(i){throw console.error("Error in enhanced search:",i),i}})}searchAllCategories(t){return d(this,arguments,function*(e,n={}){try{const{maxResults:i=20,groupByCategory:s=!0,includeEmptyCategories:a=!1}=n,o=yield this.searchWithCategoryFiltering(e,v(z({},n),{maxResultsPerCategory:Math.ceil(i/3)}));if(!s){const c=[];return Object.values(o.categories).forEach(h=>{c.push(...h.results)}),c.sort((h,m)=>(m.searchRelevance||0)-(h.searchRelevance||0)).slice(0,i)}const l=[],u=["daten-prozessanalyse","anwendungsentwicklung","allgemein"];for(const c of u){const h=o.categories[c];!h||!a&&h.totalFound===0||l.push({category:c,categoryName:this._getCategoryMetadata(c).name,results:h.results||[],totalFound:h.totalFound||0})}return l}catch(i){return console.error("Error in searchAllCategories:",i),[]}})}_generateSearchSuggestions(e){return d(this,null,function*(){try{const n=[],t=e.toLowerCase().trim();yield this._loadAllModules(),yield this._loadAllQuizzes();const i=[...Array.from(this.modules.values()),...Array.from(this.quizzes.values())],s=new Set;return i.forEach(o=>{`${o.title||""} ${o.description||""}`.toLowerCase().split(/\s+/).filter(c=>c.length>2).forEach(c=>{(c.includes(t)||t.includes(c))&&s.add(c),c.startsWith(t)&&c!==t&&s.add(c)})}),Array.from(s).slice(0,5).forEach(o=>{n.push({text:o,type:"similar_term"})}),["daten-prozessanalyse","anwendungsentwicklung","allgemein"].forEach(o=>{const l=this._getCategoryMetadata(o);n.push({text:`${e} in ${l.name}`,type:"category_filter",categoryId:o})}),n.slice(0,8)}catch(n){return console.error("Error generating search suggestions:",n),[]}})}_calculateSearchRelevance(e,n){let t=0;if(e.title&&e.title.toLowerCase().includes(n)&&(t+=10,e.title.toLowerCase()===n&&(t+=5)),e.description&&e.description.toLowerCase().includes(n)&&(t+=5),e.tags&&Array.isArray(e.tags)){const i=e.tags.filter(s=>s.toLowerCase().includes(n)).length;t+=i*3}if(e.content&&e.content.toLowerCase().includes(n)&&(t+=2),e.questions&&Array.isArray(e.questions)){const i=e.questions.filter(s=>s.question&&s.question.toLowerCase().includes(n)).length;t+=i*2}return t}_boostRelevanceForSpecialization(e,n){let t=e.searchRelevance||0;if(e.specializationRelevance&&e.specializationRelevance[n]){const i=e.specializationRelevance[n];t+=i==="high"?5:i==="medium"?3:1}return t}_sortSearchResults(e,n){switch(n){case"title":return e.sort((t,i)=>(t.title||"").localeCompare(i.title||""));case"difficulty":{const t={beginner:1,intermediate:2,advanced:3};return e.sort((i,s)=>{const a=t[i.difficulty]||2,o=t[s.difficulty]||2;return a-o})}case"relevance":default:return e.sort((t,i)=>(i.searchRelevance||0)-(t.searchRelevance||0))}}_getCategoryMetadata(e){const n={"daten-prozessanalyse":{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Daten- und Prozessanalyse",color:"#3b82f6",icon:"üìä"},anwendungsentwicklung:{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Anwendungsentwicklung",color:"#10b981",icon:"üíª"},allgemein:{id:"allgemein",name:"Allgemein",description:"Allgemeine Inhalte relevant f√ºr beide Fachrichtungen",color:"#6b7280",icon:"üìö"}};return n[e]||n.allgemein}_calculateDifficultyDistribution(e){const n={beginner:0,intermediate:0,advanced:0,unknown:0};e.forEach(s=>{const a=s.difficulty||"unknown";Object.prototype.hasOwnProperty.call(n,a)?n[a]++:n.unknown++});const t=e.length,i={};return Object.keys(n).forEach(s=>{i[s]=t>0?Math.round(n[s]/t*100):0}),{counts:n,percentages:i,total:t}}_calculateContentTypeBreakdown(e){const n={modules:0,quizzes:0,other:0};e.forEach(s=>{s.type==="module"||!s.questions&&!s.type?n.modules++:s.type==="quiz"||s.questions?n.quizzes++:n.other++});const t=e.length,i={};return Object.keys(n).forEach(s=>{i[s]=t>0?Math.round(n[s]/t*100):0}),{counts:n,percentages:i,total:t}}_calculateSpecializationRelevance(e,n=null){const t={anwendungsentwicklung:{high:0,medium:0,low:0,none:0},"daten-prozessanalyse":{high:0,medium:0,low:0,none:0}};e.forEach(s=>{s.specializationRelevance?Object.keys(t).forEach(a=>{const o=s.specializationRelevance[a]||"none";t[a][o]!==void 0?t[a][o]++:t[a].none++}):Object.keys(t).forEach(a=>{t[a].none++})});const i={};return Object.keys(t).forEach(s=>{const a=t[s],o=e.length,l={};Object.keys(a).forEach(u=>{l[u]=o>0?Math.round(a[u]/o*100):0}),i[s]={counts:a,percentages:l,total:o,isCurrentSpecialization:s===n}}),i}_calculateProgressStats(e,n){return d(this,null,function*(){try{const t=this.stateManager.getState("progress")||{},i=t.completedModules||[],s=t.quizAttempts||{},a={modules:{total:0,completed:0,inProgress:0,notStarted:0},quizzes:{total:0,attempted:0,passed:0,notAttempted:0}};e.forEach(u=>{if(u.type==="module"||!u.questions&&!u.type)a.modules.total++,i.includes(u.id)?a.modules.completed++:a.modules.notStarted++;else if(u.type==="quiz"||u.questions)if(a.quizzes.total++,s[u.id]){a.quizzes.attempted++;const c=s[u.id],h=Math.max(...c.map(p=>p.score||0)),m=u.questions?u.questions.length:1;h/m*100>=70&&a.quizzes.passed++}else a.quizzes.notAttempted++});const o=a.modules.total,l=a.quizzes.total;return a.modules.percentages={completed:o>0?Math.round(a.modules.completed/o*100):0,inProgress:o>0?Math.round(a.modules.inProgress/o*100):0,notStarted:o>0?Math.round(a.modules.notStarted/o*100):0},a.quizzes.percentages={attempted:l>0?Math.round(a.quizzes.attempted/l*100):0,passed:l>0?Math.round(a.quizzes.passed/l*100):0,notAttempted:l>0?Math.round(a.quizzes.notAttempted/l*100):0},a}catch(t){return console.error("Error calculating progress stats:",t),{modules:{total:0,completed:0,inProgress:0,notStarted:0,percentages:{}},quizzes:{total:0,attempted:0,passed:0,notAttempted:0,percentages:{}}}}})}_generateCategoryInsights(e){const n={mostPopulousCategory:null,mostDiverseCategory:null,recommendedStartingCategory:null,categoryBalance:"balanced"};let t=0;Object.keys(e).forEach(g=>{const p=e[g].contentCounts.total;p>t&&(t=p,n.mostPopulousCategory={id:g,name:e[g].metadata.name,count:p})});const i=Object.values(e).map(g=>g.contentCounts.total),a=i.reduce((g,p)=>g+p,0)/i.length,o=i.reduce((g,p)=>g+Math.pow(p-a,2),0)/i.length,l=Math.sqrt(o),u=a>0?l/a:0;u<.2?n.categoryBalance="balanced":u<.5?n.categoryBalance="skewed":n.categoryBalance="heavily_skewed";let c=null,h=1/0;Object.keys(e).forEach(g=>{const p=e[g];if(p.difficultyDistribution){const b=Object.values(p.difficultyDistribution.counts),S=b.reduce((k,E)=>k+E,0);if(S>0){const k=S/b.length,E=b.reduce((T,I)=>T+Math.pow(I-k,2),0)/b.length;E<h&&(h=E,c={id:g,name:p.metadata.name,variance:E})}}}),n.mostDiverseCategory=c;let m=0;return Object.keys(e).forEach(g=>{const p=e[g];if(p.difficultyDistribution){const b=p.difficultyDistribution.percentages.beginner||0;b>m&&(m=b,n.recommendedStartingCategory={id:g,name:p.metadata.name,beginnerPercentage:b})}}),n}_generateSpecializationInsights(e,n){const t={primaryCategory:null,secondaryCategories:[],contentDistribution:{},recommendedFocus:[]},i={};Object.keys(e).forEach(o=>{const l=e[o];let u=0;if(l.specializationRelevance&&l.specializationRelevance[n]){const c=l.specializationRelevance[n];u=c.counts.high*3+c.counts.medium*2+c.counts.low*1}i[o]={score:u,name:l.metadata.name,totalContent:l.contentCounts.total}});const s=Object.keys(i).sort((o,l)=>i[l].score-i[o].score);s.length>0&&(t.primaryCategory=z({id:s[0]},i[s[0]]),t.secondaryCategories=s.slice(1).map(o=>z({id:o},i[o])));const a=Object.values(i).reduce((o,l)=>o+l.totalContent,0);return Object.keys(i).forEach(o=>{const l=i[o];t.contentDistribution[o]={percentage:a>0?Math.round(l.totalContent/a*100):0,relevanceScore:l.score,name:l.name}}),t.primaryCategory&&t.primaryCategory.score>0&&t.recommendedFocus.push({category:t.primaryCategory.id,reason:"Highest relevance for your specialization",priority:"high"}),t.secondaryCategories.forEach((o,l)=>{o.score>0&&l<2&&t.recommendedFocus.push({category:o.id,reason:"Complementary content for your specialization",priority:l===0?"medium":"low"})}),t}_rankCategoriesByRelevance(e,n){const t=[];return Object.keys(e).forEach(i=>{const s=e[i];let a=0,o=0;if(s.specializationRelevance&&s.specializationRelevance[n]){const l=s.specializationRelevance[n];a=l.counts.high*3+l.counts.medium*2+l.counts.low*1,o=l.counts.high}t.push({categoryId:i,categoryName:s.metadata.name,relevanceScore:a,highRelevanceCount:o,totalContent:s.contentCounts.total,relevancePercentage:s.contentCounts.total>0?Math.round(a/(s.contentCounts.total*3)*100):0})}),t.sort((i,s)=>s.relevanceScore-i.relevanceScore)}_getEmptyCategorizedContent(){return{"daten-prozessanalyse":{modules:[],quizzes:[],relevance:"none",metadata:{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Daten- und Prozessanalyse",color:"#3b82f6",icon:"üìä"}},anwendungsentwicklung:{modules:[],quizzes:[],relevance:"none",metadata:{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Anwendungsentwicklung",color:"#10b981",icon:"üíª"}},allgemein:{modules:[],quizzes:[],relevance:"none",metadata:{id:"allgemein",name:"Allgemein",description:"Fachrichtungs√ºbergreifende Inhalte und Grundlagen f√ºr beide Spezialisierungen",color:"#6b7280",icon:"üìö"}}}}clearCategorizedContentCache(){this.categorizedContentCache.clear(),this.categoryIndexCache.clear()}_buildCategoryIndexes(){if(!(this.categoryIndexCache.size>0))try{const e={"daten-prozessanalyse":{modules:new Set,quizzes:new Set},anwendungsentwicklung:{modules:new Set,quizzes:new Set},allgemein:{modules:new Set,quizzes:new Set}};this.modules.forEach((n,t)=>{const i=n.threeTierCategory||"allgemein";e[i]&&e[i].modules.add(t)}),this.quizzes.forEach((n,t)=>{const i=n.threeTierCategory||"allgemein";e[i]&&e[i].quizzes.add(t)}),Object.keys(e).forEach(n=>{this.categoryIndexCache.set(`modules-${n}`,e[n].modules),this.categoryIndexCache.set(`quizzes-${n}`,e[n].quizzes)}),Object.keys(e).forEach(n=>{const t=new Set([...e[n].modules,...e[n].quizzes]);this.categoryIndexCache.set(`content-${n}`,t)})}catch(e){console.error("Error building category indexes:",e)}}_getCategoryContentIds(e,n="content"){this._buildCategoryIndexes();const t=`${n}-${e}`;return this.categoryIndexCache.get(t)||new Set}invalidateCategoryCache(e){e?(this.categorizedContentCache.delete(`three-tier-${e}`),this.categoryIndexCache.delete(`modules-${e}`),this.categoryIndexCache.delete(`quizzes-${e}`),this.categoryIndexCache.delete(`content-${e}`)):this.clearCategorizedContentCache()}preloadCategorizedContent(){return d(this,null,function*(){try{yield this._loadAllModules(),yield this._loadAllQuizzes(),this._buildCategoryIndexes();const e=["daten-prozessanalyse","anwendungsentwicklung","allgemein"];for(const n of e)yield this.getContentByThreeTierCategory(n);console.warn("Categorized content preloaded successfully")}catch(e){console.error("Error preloading categorized content:",e)}})}getCacheStats(){return{modules:{total:this.modules.size,cached:this.modules.size},quizzes:{total:this.quizzes.size,cached:this.quizzes.size},categorizedContent:{cacheSize:this.categorizedContentCache.size,cachedCategories:Array.from(this.categorizedContentCache.keys())},categoryIndexes:{indexCount:this.categoryIndexCache.size,indexes:Array.from(this.categoryIndexCache.keys())},memoryUsage:{modulesMemory:this._estimateMapMemoryUsage(this.modules),quizzesMemory:this._estimateMapMemoryUsage(this.quizzes),categorizedCacheMemory:this._estimateMapMemoryUsage(this.categorizedContentCache),indexCacheMemory:this._estimateMapMemoryUsage(this.categoryIndexCache)}}}_estimateMapMemoryUsage(e){try{const n=JSON.stringify(Array.from(e.entries())),t=new Blob([n]).size;return t<1024?`${t} B`:t<1024*1024?`${(t/1024).toFixed(1)} KB`:`${(t/(1024*1024)).toFixed(1)} MB`}catch(n){return"Unknown"}}optimizeCache(){try{this.categoryIndexCache.clear(),this._buildCategoryIndexes();const e=["three-tier-daten-prozessanalyse","three-tier-anwendungsentwicklung","three-tier-allgemein"];Array.from(this.categorizedContentCache.keys()).forEach(t=>{e.includes(t)||this.categorizedContentCache.delete(t)}),console.warn("Cache optimization completed")}catch(e){console.error("Error optimizing cache:",e)}}getThreeTierCategories(){return d(this,null,function*(){try{return this.categoryMappingService?this.categoryMappingService.getThreeTierCategories():(console.warn("CategoryMappingService not available, returning default categories"),this._getDefaultThreeTierCategories())}catch(e){return console.error("Error getting three-tier categories:",e),this._getDefaultThreeTierCategories()}})}getModulesByThreeTierCategory(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid three-tier category ID");const n=["daten-prozessanalyse","anwendungsentwicklung","allgemein"];if(!n.includes(e))throw new Error(`Invalid three-tier category: ${e}. Must be one of: ${n.join(", ")}`);return(yield this.getContentByThreeTierCategory(e)).filter(s=>s.contentType==="module"||s.content||s.sections)}catch(n){throw console.error(`Error getting modules by three-tier category ${e}:`,n),n}})}getQuizzesByThreeTierCategory(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid three-tier category ID");const n=["daten-prozessanalyse","anwendungsentwicklung","allgemein"];if(!n.includes(e))throw new Error(`Invalid three-tier category: ${e}. Must be one of: ${n.join(", ")}`);return(yield this.getContentByThreeTierCategory(e)).filter(s=>s.contentType==="quiz"||s.questions)}catch(n){throw console.error(`Error getting quizzes by three-tier category ${e}:`,n),n}})}getThreeTierCategoryStatistics(){return d(this,arguments,function*(e={}){try{return yield this.getThreeTierCategoryStats(e)}catch(n){throw console.error("Error getting three-tier category statistics:",n),n}})}getThreeTierCategoryMetadata(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid three-tier category ID");if(!["daten-prozessanalyse","anwendungsentwicklung","allgemein"].includes(e))throw new Error(`Invalid three-tier category: ${e}`);if(!this.categoryMappingService)return console.warn("CategoryMappingService not available, returning default metadata"),this._getDefaultCategoryMetadata(e);const i=this.categoryMappingService.getThreeTierCategories().find(a=>a.id===e);if(!i)throw new Error(`Category metadata not found for: ${e}`);const s=yield this.getThreeTierCategoryStats({includeSpecializationRelevance:!0,includeDifficultyDistribution:!0,includeContentTypes:!0});return v(z({},i),{statistics:s.categories[e]||null,lastUpdated:new Date().toISOString()})}catch(n){throw console.error(`Error getting three-tier category metadata for ${e}:`,n),n}})}searchThreeTierCategories(t){return d(this,arguments,function*(e,n={}){try{const i=n,{categories:s=["daten-prozessanalyse","anwendungsentwicklung","allgemein"]}=i,a=H(i,["categories"]),o=["daten-prozessanalyse","anwendungsentwicklung","allgemein"],l=s.filter(u=>o.includes(u));if(l.length===0)throw new Error("No valid three-tier categories specified for search");return yield this.searchWithCategoryFiltering(e,z({categories:l},a))}catch(s){throw console.error("Error searching three-tier categories:",s),s}})}getRelatedContentAcrossCategories(t){return d(this,arguments,function*(e,n={}){try{if(!e||typeof e!="string")throw new Error("Invalid content ID");const{maxRelatedPerCategory:i=3,includeAllCategories:s=!0,relationshipTypes:a=["prerequisite","related","advanced"]}=n,o=this.modules.get(e),l=this.quizzes.get(e),u=o||l;if(!u)throw new Error(`Content not found: ${e}`);if(this.contentRelationshipService)return yield this.contentRelationshipService.getRelatedContentAcrossCategories(e,n);console.warn("ContentRelationshipService not available, using basic relationship detection");const c={sourceContent:u,relatedContent:{"daten-prozessanalyse":[],anwendungsentwicklung:[],allgemein:[]},relationshipSummary:{totalRelated:0,byType:{},byCategory:{}}},h=[...Array.from(this.modules.values()),...Array.from(this.quizzes.values())],m=u.tags||[],g=u.threeTierCategory||"allgemein";return h.forEach(p=>{if(p.id===e)return;const b=p.threeTierCategory||"allgemein",S=p.tags||[],k=m.filter(T=>S.includes(T)),E=k.length;E>0&&c.relatedContent[b].length<i&&c.relatedContent[b].push(v(z({},p),{relationshipScore:E,relationshipType:"related",commonTags:k}))}),Object.keys(c.relatedContent).forEach(p=>{c.relatedContent[p].sort((b,S)=>S.relationshipScore-b.relationshipScore)}),Object.keys(c.relatedContent).forEach(p=>{const b=c.relatedContent[p];c.relationshipSummary.totalRelated+=b.length,c.relationshipSummary.byCategory[p]=b.length}),c}catch(i){throw console.error(`Error getting related content for ${e}:`,i),i}})}getModulesByLegacyCategory(e){return d(this,null,function*(){console.warn("getModulesByLegacyCategory() is deprecated. Use getModulesByThreeTierCategory() instead.");try{if(this.categoryMappingService){const n=this.categoryMappingService.mapLegacyCategoryToThreeTier(e);if(n)return yield this.getModulesByThreeTierCategory(n.threeTierCategory)}return yield this.getModulesByCategory(e)}catch(n){throw console.error(`Error in legacy category method for ${e}:`,n),n}})}searchContentLegacy(t){return d(this,arguments,function*(e,n={}){console.warn("searchContentLegacy() is deprecated. Use searchThreeTierCategories() instead.");try{const i={};if(n.category&&this.categoryMappingService){const s=this.categoryMappingService.mapLegacyCategoryToThreeTier(n.category);s&&(i.categories=[s.threeTierCategory])}return i.categories?yield this.searchThreeTierCategories(e,i):yield this.searchContent(e,n)}catch(i){throw console.error("Error in legacy search method:",i),i}})}_getDefaultThreeTierCategories(){return[{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",description:"Inhalte mit hoher Relevanz f√ºr die DPA-Spezialisierung",color:"#2563eb",icon:"database"},{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",description:"Inhalte mit hoher Relevanz f√ºr die AE-Spezialisierung",color:"#dc2626",icon:"code"},{id:"allgemein",name:"Allgemein",description:"Allgemeine IT-Inhalte f√ºr beide Spezialisierungen",color:"#059669",icon:"book"}]}_getDefaultCategoryMetadata(e){return this._getDefaultThreeTierCategories().find(i=>i.id===e)||{id:e,name:e,description:"Category metadata not available",color:"#6b7280",icon:"folder"}}getContentByThreeTierCategoryOptimized(t){return d(this,arguments,function*(e,n={}){const i=performance.now();try{if(this.performanceOptimizationService){const s=yield this.performanceOptimizationService.getContentByThreeTierCategory(e,n);return this.performanceMonitoringService&&this.performanceMonitoringService.recordMetric("categoryFilter",{duration:performance.now()-i,parameters:z({categoryId:e},n),resultCount:s.length,cacheHit:!0}),s}return this.getContentByThreeTierCategory(e,n)}catch(s){throw this.performanceMonitoringService&&this.performanceMonitoringService.recordMetric("categoryFilter",{duration:performance.now()-i,parameters:z({categoryId:e},n),resultCount:0,error:!0,errorMessage:s.message}),console.error("Error in optimized category filtering:",s),s}})}searchInCategoryOptimized(i,s){return d(this,arguments,function*(e,n,t={}){const a=performance.now();try{if(this.performanceOptimizationService){const o=yield this.performanceOptimizationService.searchInCategory(e,n,t);return this.performanceMonitoringService&&this.performanceMonitoringService.recordMetric("categorySearch",{duration:performance.now()-a,parameters:z({query:e==null?void 0:e.substring(0,50),categoryId:n},t),resultCount:o.length,cacheHit:!0}),o}return this.searchInCategory(e,n,t)}catch(o){throw this.performanceMonitoringService&&this.performanceMonitoringService.recordMetric("categorySearch",{duration:performance.now()-a,parameters:z({query:e==null?void 0:e.substring(0,50),categoryId:n},t),resultCount:0,error:!0,errorMessage:o.message}),console.error("Error in optimized category search:",o),o}})}getPerformanceMetrics(){return this.performanceMonitoringService?this.performanceMonitoringService.getDashboardData():{message:"Performance monitoring not available",optimizationService:!!this.performanceOptimizationService,monitoringService:!!this.performanceMonitoringService}}getPerformanceReport(e={}){return this.performanceMonitoringService?this.performanceMonitoringService.getPerformanceReport(e):{message:"Performance monitoring not available",generatedAt:Date.now(),options:e}}invalidatePerformanceCache(){return d(this,null,function*(){this.performanceOptimizationService&&(yield this.performanceOptimizationService.invalidateCache()),this.clearCategorizedContentCache()})}configurePerformanceOptimization(e){this.performanceOptimizationService&&this.performanceOptimizationService.configure(e),this.performanceMonitoringService&&e.monitoring&&this.performanceMonitoringService.configureMonitoring(e.monitoring),e.thresholds&&this.performanceMonitoringService&&this.performanceMonitoringService.updateThresholds(e.thresholds)}}const O=JSON.parse('[{"id":"module-1","title":"Introduction to JavaScript","description":"Learn the fundamentals of JavaScript programming, including variables, data types, and basic syntax.","category":"Programming","duration":30,"prerequisites":[],"content":"# Introduction to JavaScript\\n\\nJavaScript is a versatile programming language that powers the web. Let\'s explore the basics!\\n\\n## Variables and Data Types\\n\\nIn JavaScript, you can declare variables using `let`, `const`, or `var`:\\n\\n```javascript\\nlet name = \'Alice\';\\nconst age = 25;\\nvar isStudent = true;\\n```\\n\\n### Primitive Data Types\\n\\n- **String**: Text data\\n- **Number**: Numeric values\\n- **Boolean**: true or false\\n- **Undefined**: Variable declared but not assigned\\n- **Null**: Intentional absence of value\\n\\n## Functions\\n\\nFunctions are reusable blocks of code:\\n\\n```javascript\\nfunction greet(name) {\\n  return `Hello, ${name}!`;\\n}\\n\\nconsole.log(greet(\'World\')); // Output: Hello, World!\\n```\\n\\n## Arrays\\n\\nArrays store multiple values:\\n\\n```javascript\\nconst fruits = [\'apple\', \'banana\', \'orange\'];\\nconsole.log(fruits[0]); // Output: apple\\n```\\n\\n<!-- micro-quiz:demo-mq1 -->\\n\\n## Objects\\n\\nObjects store key-value pairs:\\n\\n```javascript\\nconst person = {\\n  name: \'John\',\\n  age: 30,\\n  greet() {\\n    console.log(`Hi, I\'m ${this.name}`);\\n  }\\n};\\n```\\n\\n<!-- micro-quiz:demo-mq2 -->\\n\\n## Practice Exercise\\n\\nTry creating a function that takes an array of numbers and returns their sum!","completed":false,"lastAccessed":null,"microQuizzes":["demo-mq1"],"requiredSections":[]},{"id":"module-2","title":"Working with Arrays","description":"Master array methods and learn how to manipulate collections of data effectively.","category":"Programming","duration":45,"prerequisites":["module-1"],"content":"# Working with Arrays\\n\\nArrays are one of the most important data structures in JavaScript. Let\'s dive deep!\\n\\n## Array Methods\\n\\n### map()\\n\\nTransform each element in an array:\\n\\n```javascript\\nconst numbers = [1, 2, 3, 4, 5];\\nconst doubled = numbers.map(num => num * 2);\\nconsole.log(doubled); // [2, 4, 6, 8, 10]\\n```\\n\\n### filter()\\n\\nSelect elements that meet a condition:\\n\\n```javascript\\nconst numbers = [1, 2, 3, 4, 5, 6];\\nconst evens = numbers.filter(num => num % 2 === 0);\\nconsole.log(evens); // [2, 4, 6]\\n```\\n\\n### reduce()\\n\\nReduce an array to a single value:\\n\\n```javascript\\nconst numbers = [1, 2, 3, 4, 5];\\nconst sum = numbers.reduce((acc, num) => acc + num, 0);\\nconsole.log(sum); // 15\\n```\\n\\n### find() and findIndex()\\n\\nFind specific elements:\\n\\n```javascript\\nconst users = [\\n  { id: 1, name: \'Alice\' },\\n  { id: 2, name: \'Bob\' }\\n];\\n\\nconst user = users.find(u => u.id === 2);\\nconsole.log(user); // { id: 2, name: \'Bob\' }\\n```\\n\\n## Chaining Methods\\n\\nCombine multiple array methods:\\n\\n```javascript\\nconst numbers = [1, 2, 3, 4, 5, 6];\\nconst result = numbers\\n  .filter(num => num % 2 === 0)\\n  .map(num => num * 2)\\n  .reduce((acc, num) => acc + num, 0);\\n\\nconsole.log(result); // 24\\n```\\n\\n## Spread Operator\\n\\nCopy and merge arrays:\\n\\n```javascript\\nconst arr1 = [1, 2, 3];\\nconst arr2 = [4, 5, 6];\\nconst combined = [...arr1, ...arr2];\\nconsole.log(combined); // [1, 2, 3, 4, 5, 6]\\n```","completed":false,"lastAccessed":null},{"id":"module-3","title":"Asynchronous JavaScript","description":"Understand promises, async/await, and how to handle asynchronous operations.","category":"Programming","duration":60,"prerequisites":["module-1"],"content":"# Asynchronous JavaScript\\n\\nJavaScript is single-threaded, but it can handle asynchronous operations efficiently!\\n\\n## Callbacks\\n\\nThe traditional way to handle async operations:\\n\\n```javascript\\nfunction fetchData(callback) {\\n  setTimeout(() => {\\n    callback(\'Data loaded!\');\\n  }, 1000);\\n}\\n\\nfetchData(data => {\\n  console.log(data);\\n});\\n```\\n\\n## Promises\\n\\nA better way to handle async code:\\n\\n```javascript\\nfunction fetchData() {\\n  return new Promise((resolve, reject) => {\\n    setTimeout(() => {\\n      resolve(\'Data loaded!\');\\n    }, 1000);\\n  });\\n}\\n\\nfetchData()\\n  .then(data => console.log(data))\\n  .catch(error => console.error(error));\\n```\\n\\n## Async/Await\\n\\nThe modern, cleaner syntax:\\n\\n```javascript\\nasync function loadData() {\\n  try {\\n    const data = await fetchData();\\n    console.log(data);\\n  } catch (error) {\\n    console.error(error);\\n  }\\n}\\n\\nloadData();\\n```\\n\\n## Fetching Data from APIs\\n\\n```javascript\\nasync function getUsers() {\\n  try {\\n    const response = await fetch(\'https://api.example.com/users\');\\n    const users = await response.json();\\n    return users;\\n  } catch (error) {\\n    console.error(\'Failed to fetch users:\', error);\\n  }\\n}\\n```\\n\\n## Promise.all()\\n\\nRun multiple promises in parallel:\\n\\n```javascript\\nconst promise1 = fetch(\'/api/users\');\\nconst promise2 = fetch(\'/api/posts\');\\n\\nconst [users, posts] = await Promise.all([promise1, promise2]);\\n```\\n\\n## Error Handling\\n\\nAlways handle errors in async code:\\n\\n```javascript\\nasync function safeOperation() {\\n  try {\\n    const result = await riskyOperation();\\n    return result;\\n  } catch (error) {\\n    console.error(\'Operation failed:\', error);\\n    return null;\\n  }\\n}\\n```","completed":false,"lastAccessed":null},{"id":"module-4","title":"DOM Manipulation","description":"Learn how to interact with and modify HTML elements using JavaScript.","category":"Web Development","duration":40,"prerequisites":["module-1"],"content":"# DOM Manipulation\\n\\nThe Document Object Model (DOM) allows JavaScript to interact with HTML!\\n\\n## Selecting Elements\\n\\n```javascript\\n// By ID\\nconst header = document.getElementById(\'header\');\\n\\n// By class\\nconst buttons = document.getElementsByClassName(\'btn\');\\n\\n// By CSS selector\\nconst firstButton = document.querySelector(\'.btn\');\\nconst allButtons = document.querySelectorAll(\'.btn\');\\n```\\n\\n## Modifying Elements\\n\\n### Changing Content\\n\\n```javascript\\nconst heading = document.querySelector(\'h1\');\\nheading.textContent = \'New Title\';\\nheading.innerHTML = \'<strong>Bold Title</strong>\';\\n```\\n\\n### Changing Styles\\n\\n```javascript\\nconst box = document.querySelector(\'.box\');\\nbox.style.backgroundColor = \'blue\';\\nbox.style.padding = \'20px\';\\n```\\n\\n### Adding/Removing Classes\\n\\n```javascript\\nconst element = document.querySelector(\'.item\');\\nelement.classList.add(\'active\');\\nelement.classList.remove(\'hidden\');\\nelement.classList.toggle(\'selected\');\\n```\\n\\n## Creating Elements\\n\\n```javascript\\nconst newDiv = document.createElement(\'div\');\\nnewDiv.textContent = \'Hello!\';\\nnewDiv.classList.add(\'message\');\\n\\nconst container = document.querySelector(\'.container\');\\ncontainer.appendChild(newDiv);\\n```\\n\\n## Event Listeners\\n\\n```javascript\\nconst button = document.querySelector(\'#myButton\');\\n\\nbutton.addEventListener(\'click\', () => {\\n  console.log(\'Button clicked!\');\\n});\\n\\n// Remove event listener\\nfunction handleClick() {\\n  console.log(\'Clicked!\');\\n}\\n\\nbutton.addEventListener(\'click\', handleClick);\\nbutton.removeEventListener(\'click\', handleClick);\\n```\\n\\n## Event Delegation\\n\\nHandle events on multiple elements efficiently:\\n\\n```javascript\\nconst list = document.querySelector(\'#myList\');\\n\\nlist.addEventListener(\'click\', (event) => {\\n  if (event.target.tagName === \'LI\') {\\n    console.log(\'List item clicked:\', event.target.textContent);\\n  }\\n});\\n```","completed":false,"lastAccessed":null},{"id":"module-5","title":"ES6+ Features","description":"Explore modern JavaScript features including destructuring, spread operator, and more.","category":"Programming","duration":50,"prerequisites":["module-1","module-2"],"content":"# ES6+ Features\\n\\nModern JavaScript includes many powerful features that make code cleaner and more efficient!\\n\\n## Destructuring\\n\\n### Array Destructuring\\n\\n```javascript\\nconst colors = [\'red\', \'green\', \'blue\'];\\nconst [first, second] = colors;\\nconsole.log(first); // \'red\'\\n```\\n\\n### Object Destructuring\\n\\n```javascript\\nconst user = { name: \'Alice\', age: 25, city: \'NYC\' };\\nconst { name, age } = user;\\nconsole.log(name); // \'Alice\'\\n```\\n\\n## Template Literals\\n\\n```javascript\\nconst name = \'World\';\\nconst greeting = `Hello, ${name}!`;\\n\\n// Multi-line strings\\nconst message = `\\n  This is a\\n  multi-line\\n  string\\n`;\\n```\\n\\n## Arrow Functions\\n\\n```javascript\\n// Traditional function\\nfunction add(a, b) {\\n  return a + b;\\n}\\n\\n// Arrow function\\nconst add = (a, b) => a + b;\\n\\n// With single parameter\\nconst double = x => x * 2;\\n```\\n\\n## Default Parameters\\n\\n```javascript\\nfunction greet(name = \'Guest\') {\\n  return `Hello, ${name}!`;\\n}\\n\\nconsole.log(greet()); // \'Hello, Guest!\'\\n```\\n\\n## Rest and Spread\\n\\n### Rest Parameters\\n\\n```javascript\\nfunction sum(...numbers) {\\n  return numbers.reduce((acc, num) => acc + num, 0);\\n}\\n\\nconsole.log(sum(1, 2, 3, 4)); // 10\\n```\\n\\n### Spread Operator\\n\\n```javascript\\nconst arr1 = [1, 2, 3];\\nconst arr2 = [...arr1, 4, 5];\\n\\nconst obj1 = { a: 1, b: 2 };\\nconst obj2 = { ...obj1, c: 3 };\\n```\\n\\n## Optional Chaining\\n\\n```javascript\\nconst user = { profile: { name: \'Alice\' } };\\nconsole.log(user?.profile?.name); // \'Alice\'\\nconsole.log(user?.address?.city); // undefined\\n```\\n\\n## Nullish Coalescing\\n\\n```javascript\\nconst value = null ?? \'default\';\\nconsole.log(value); // \'default\'\\n\\nconst count = 0 ?? 10;\\nconsole.log(count); // 0 (not 10!)\\n```\\n\\n## Modules\\n\\n```javascript\\n// export.js\\nexport const PI = 3.14159;\\nexport function square(x) {\\n  return x * x;\\n}\\n\\n// import.js\\nimport { PI, square } from \'./export.js\';\\n```","completed":false,"lastAccessed":null},{"id":"module-6","title":"Object-Oriented JavaScript","description":"Learn about classes, inheritance, and object-oriented programming patterns in JavaScript.","category":"Programming","duration":55,"prerequisites":["module-1","module-5"],"content":"# Object-Oriented JavaScript\\n\\nJavaScript supports object-oriented programming with classes and prototypes!\\n\\n## Classes\\n\\n### Basic Class\\n\\n```javascript\\nclass Person {\\n  constructor(name, age) {\\n    this.name = name;\\n    this.age = age;\\n  }\\n\\n  greet() {\\n    return `Hi, I\'m ${this.name}`;\\n  }\\n\\n  get info() {\\n    return `${this.name} is ${this.age} years old`;\\n  }\\n}\\n\\nconst person = new Person(\'Alice\', 25);\\nconsole.log(person.greet());\\n```\\n\\n## Inheritance\\n\\n```javascript\\nclass Animal {\\n  constructor(name) {\\n    this.name = name;\\n  }\\n\\n  speak() {\\n    return `${this.name} makes a sound`;\\n  }\\n}\\n\\nclass Dog extends Animal {\\n  constructor(name, breed) {\\n    super(name);\\n    this.breed = breed;\\n  }\\n\\n  speak() {\\n    return `${this.name} barks!`;\\n  }\\n}\\n\\nconst dog = new Dog(\'Rex\', \'Labrador\');\\nconsole.log(dog.speak()); // \'Rex barks!\'\\n```\\n\\n## Static Methods\\n\\n```javascript\\nclass MathUtils {\\n  static add(a, b) {\\n    return a + b;\\n  }\\n\\n  static multiply(a, b) {\\n    return a * b;\\n  }\\n}\\n\\nconsole.log(MathUtils.add(5, 3)); // 8\\n```\\n\\n## Private Fields\\n\\n```javascript\\nclass BankAccount {\\n  #balance = 0;\\n\\n  deposit(amount) {\\n    this.#balance += amount;\\n  }\\n\\n  getBalance() {\\n    return this.#balance;\\n  }\\n}\\n\\nconst account = new BankAccount();\\naccount.deposit(100);\\nconsole.log(account.getBalance()); // 100\\n```\\n\\n## Composition over Inheritance\\n\\n```javascript\\nconst canEat = {\\n  eat(food) {\\n    return `Eating ${food}`;\\n  }\\n};\\n\\nconst canWalk = {\\n  walk() {\\n    return \'Walking...\';\\n  }\\n};\\n\\nclass Person {\\n  constructor(name) {\\n    this.name = name;\\n    Object.assign(this, canEat, canWalk);\\n  }\\n}\\n\\nconst person = new Person(\'Alice\');\\nconsole.log(person.eat(\'pizza\'));\\nconsole.log(person.walk());\\n```\\n\\n## Design Patterns\\n\\n### Singleton\\n\\n```javascript\\nclass Database {\\n  static instance = null;\\n\\n  constructor() {\\n    if (Database.instance) {\\n      return Database.instance;\\n    }\\n    Database.instance = this;\\n  }\\n}\\n```\\n\\n### Factory\\n\\n```javascript\\nclass UserFactory {\\n  static createUser(type, name) {\\n    if (type === \'admin\') {\\n      return new Admin(name);\\n    }\\n    return new RegularUser(name);\\n  }\\n}\\n```","completed":false,"lastAccessed":null}]');class nP{constructor(e,n,t,i){this.stateManager=e,this.storage=n||new P,this.ihkContentService=t,this.specializationService=i,this.modules=O,this.ihkModulesLoaded=!1}getModules(){return d(this,null,function*(){try{let e=[];if(this.ihkContentService)try{e=yield this.ihkContentService.searchContent("",{}),console.warn("Raw IHK modules loaded:",e.length),e=e.map((t,i)=>((!t.title||!t.description)&&console.warn(`Module at index ${i} has undefined properties:`,{id:t.id,title:t.title,description:t.description,module:t}),v(z({},t),{source:"ihk",duration:t.estimatedTime||t.estimatedDuration||30})));const n=e.filter(t=>t&&t.id&&t.title&&t.description);return n.length!==e.length&&console.warn(`Filtered out ${e.length-n.length} invalid modules`),console.warn("Valid IHK modules after filtering:",n.length),n}catch(n){throw console.error("Could not load IHK modules:",n),n}return e}catch(e){throw console.error("Error getting modules:",e),new Error("Failed to load modules")}})}getModuleById(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid module ID");let n=null;if(this.ihkContentService)try{n=yield this.ihkContentService.getModuleById(e)}catch(o){console.error("Module not found in IHK content:",o)}if(!n)throw new Error(`Module with ID "${e}" not found`);const t=this.stateManager.getState("progress")||{},i=t.modulesCompleted||[],s=t.modulesInProgress||[],a=v(z({},n),{completed:i.includes(n.id),inProgress:s.includes(n.id),lastAccessed:new Date().toISOString(),source:"ihk",duration:n.estimatedDuration||30});return!i.includes(e)&&!s.includes(e)&&this._markModuleInProgress(e),a}catch(n){throw console.error(`Error getting module ${e}:`,n),n}})}_markModuleInProgress(e){const t=(this.stateManager.getState("progress")||{}).modulesInProgress||[];t.includes(e)||this.stateManager.setState("progress.modulesInProgress",[...t,e])}markModuleComplete(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid module ID");let n=this.modules.find(a=>a.id===e);if(!n&&this.ihkContentService)try{n=yield this.ihkContentService.getModuleById(e),console.warn(`Module ${e} found via IHKContentService`)}catch(a){}if(!n)throw new Error(`Module with ID "${e}" not found`);const t=this.stateManager.getState("progress")||{},i=t.modulesCompleted||[],s=t.modulesInProgress||[];return i.includes(e)||this.stateManager.setState("progress.modulesCompleted",[...i,e]),s.includes(e)&&this.stateManager.setState("progress.modulesInProgress",s.filter(a=>a!==e)),this.stateManager.setState("progress.lastActivity",new Date().toISOString()),!0}catch(n){throw console.error(`Error marking module ${e} as complete:`,n),n}})}getModuleProgress(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid module ID");let n=this.modules.find(a=>a.id===e);if(!n&&this.ihkContentService)try{n=yield this.ihkContentService.getModuleById(e),console.warn(`Module ${e} found via IHKContentService (progress check)`)}catch(a){}if(!n)throw new Error(`Module with ID "${e}" not found`);const t=this.stateManager.getState("progress")||{},i=t.modulesCompleted||[],s=t.modulesInProgress||[];return{moduleId:e,completed:i.includes(e),inProgress:s.includes(e),status:i.includes(e)?"completed":s.includes(e)?"in-progress":"not-started"}}catch(n){throw console.error(`Error getting progress for module ${e}:`,n),n}})}getModulesBySpecialization(t){return d(this,arguments,function*(e,n={}){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const i=yield this.getModules();return this.specializationService?this.specializationService.filterContentBySpecialization(i,e,{minRelevance:n.minRelevance||"low",includeGeneral:n.includeGeneral!==!1}):(console.warn("SpecializationService not available, returning all modules"),i)}catch(i){throw console.error(`Error getting modules by specialization ${e}:`,i),i}})}getCategorizedModules(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const n=yield this.getModules();if(!this.specializationService)return console.warn("SpecializationService not available, returning uncategorized modules"),{all:n};const t=this.specializationService.getContentCategories(e),i={};return t.forEach(s=>{i[s.id]=[]}),i.all=n,n.forEach(s=>{const a=s.category||s.categoryId;if(a){const o=this.specializationService.getCategoryRelevance(a,e);if(o==="high"||o==="medium"){const l=t.find(u=>u.id===a);l?i[l.id].push(s):this._isGeneralContent(a)&&(i.general||(i.general=[]),i.general.push(s))}}else i.general&&i.general.push(s)}),i}catch(n){throw console.error(`Error getting categorized modules for specialization ${e}:`,n),n}})}getModulesByCategory(e,n){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid category ID");if(!n||typeof n!="string")throw new Error("Invalid specialization ID");const i=(yield this.getModules()).filter(a=>(a.category||a.categoryId)===e);return this.specializationService?this.specializationService.filterContentBySpecialization(i,n,{minRelevance:"low",includeGeneral:!0}):(console.warn("SpecializationService not available, returning unfiltered category modules"),i)}catch(t){throw console.error(`Error getting modules by category ${e} for specialization ${n}:`,t),t}})}_isGeneralContent(e){return this.specializationService?this.specializationService._isGeneralContent(e):!1}getCurrentSpecializationModules(){return d(this,arguments,function*(e={}){try{if(!this.specializationService)return console.warn("SpecializationService not available, returning all modules"),yield this.getModules();const n=this.specializationService.getCurrentSpecialization();return n?yield this.getModulesBySpecialization(n,e):yield this.getModules()}catch(n){throw console.error("Error getting current specialization modules:",n),n}})}getModuleStatistics(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const n=yield this.getModules(),t={total:n.length,byRelevance:{high:0,medium:0,low:0,none:0},byCategory:{},specialization:e};return this.specializationService?(n.forEach(i=>{const s=i.category||i.categoryId;if(s){const a=this.specializationService.getCategoryRelevance(s,e);t.byRelevance[a]!==void 0&&t.byRelevance[a]++,t.byCategory[s]||(t.byCategory[s]={count:0,relevance:a}),t.byCategory[s].count++}else t.byRelevance.none++}),t):(console.warn("SpecializationService not available, returning basic statistics"),t)}catch(n){throw console.error(`Error getting module statistics for specialization ${e}:`,n),n}})}}const Y={NOT_FOUND:404},tP={YEAR_2025:2025,PASSING_SCORE_PERCENTAGE:70,GOOD_SCORE_PERCENTAGE:85,EXCELLENT_SCORE_PERCENTAGE:90},X={MODULE_COMPLETION:.7,QUIZ_AVERAGE:.3},R={FIVE_SECONDS:5e3,SEVEN_SECONDS:7e3,TEN_SECONDS:1e4},iP={ANIMATION_DURATION_MS:300},C={MAX_ATTEMPTS:3,INITIAL_DELAY_MS:1e3,BACKOFF_MULTIPLIER:2},L={NOT_STARTED:"not-started",IN_PROGRESS:"in-progress",COMPLETED:"completed"};class rP{constructor(e,n,t,i,s){this.stateManager=e,this.storage=n||new P,this.moduleService=t,this.quizService=i,this.specializationService=s,this.totalModules=O.length}getOverallProgress(e=null){return d(this,null,function*(){try{const n=e||(this.specializationService?this.specializationService.getCurrentSpecialization():null),t=this.stateManager.getState("progress")||{},i=t.modulesCompleted||[],s=t.quizAttempts||[];let a=this.totalModules,o=0,l=[],u=[];try{if(this.moduleService){const k=yield this.moduleService.getModules();a=k.length,n&&this.specializationService?l=this.specializationService.filterContentBySpecialization(k,n,{minRelevance:"low",includeGeneral:!0}):l=k}}catch(k){console.warn("Could not get module count, using fallback:",k)}try{if(this.quizService){const k=yield this.quizService.getQuizzes();o=k.length,n&&this.specializationService?u=this.specializationService.filterContentBySpecialization(k,n,{minRelevance:"low",includeGeneral:!0}):u=k}}catch(k){console.warn("Could not get quiz count:",k)}const c=l.map(k=>k.id),h=u.map(k=>k.id),m=i.filter(k=>c.includes(k)),g=s.filter(k=>h.includes(k.quizId)),p=l.length>0?Math.round(m.length/l.length*100):0;let b=0;if(g.length>0){const k=g.reduce((E,T)=>E+T.score,0);b=Math.round(k/g.length)}return{overallPercentage:Math.round(p*X.MODULE_COMPLETION+b*X.QUIZ_AVERAGE),modulesCompleted:m.length,totalModules:l.length,totalQuizzes:u.length,moduleCompletionPercentage:p,quizzesTaken:g.length,averageQuizScore:b,lastActivity:t.lastActivity||null,specialization:n,categoryBreakdown:this._getCategoryBreakdown(m,g,n)}}catch(n){throw console.error("Error getting overall progress:",n),new Error("Failed to calculate overall progress")}})}getModuleProgress(e){try{if(!e||typeof e!="string")throw new Error("Invalid module ID");const n=this.stateManager.getState("progress")||{},t=n.modulesCompleted||[],i=n.modulesInProgress||[],s=t.includes(e),a=i.includes(e);return{moduleId:e,completed:s,inProgress:a,status:s?L.COMPLETED:a?L.IN_PROGRESS:L.NOT_STARTED}}catch(n){throw console.error(`Error getting module progress for ${e}:`,n),n}}getQuizHistory(){try{return[...(this.stateManager.getState("progress")||{}).quizAttempts||[]].sort((i,s)=>new Date(s.date)-new Date(i.date)).map(i=>({quizId:i.quizId,score:i.score,totalQuestions:i.totalQuestions,correctAnswers:i.correctAnswers,date:i.date,passed:i.score>=tP.PASSING_SCORE_PERCENTAGE}))}catch(e){throw console.error("Error getting quiz history:",e),new Error("Failed to retrieve quiz history")}}updateProgress(e,n,t){try{if(!e||!n)throw new Error("Invalid parameters: type and id are required");const i=this.stateManager.getState("progress")||{};switch(e){case"module-complete":{const s=i.modulesCompleted||[],a=i.modulesInProgress||[];s.includes(n)||this.stateManager.setState("progress.modulesCompleted",[...s,n]),a.includes(n)&&this.stateManager.setState("progress.modulesInProgress",a.filter(o=>o!==n))}break;case"module-start":{const s=i.modulesCompleted||[],a=i.modulesInProgress||[];!s.includes(n)&&!a.includes(n)&&this.stateManager.setState("progress.modulesInProgress",[...a,n])}break;case"quiz-complete":{if(!t||!t.score||!t.answers)throw new Error("Quiz completion requires score and answers data");const s=i.quizAttempts||[],a={quizId:n,score:t.score,totalQuestions:t.totalQuestions||t.answers.length,correctAnswers:t.correctAnswers||0,date:new Date().toISOString(),answers:t.answers};this.stateManager.setState("progress.quizAttempts",[...s,a])}break;default:throw new Error(`Unknown progress type: ${e}`)}return this.stateManager.setState("progress.lastActivity",new Date().toISOString()),!0}catch(i){throw console.error(`Error updating progress for ${e} ${n}:`,i),i}}_getCategoryBreakdown(e,n,t){if(!this.specializationService||!t)return{};try{const i=this.specializationService.getContentCategories(t),s={};return i.forEach(a=>{const o=e.filter(u=>this._isModuleInCategory(u,a.id)),l=n.filter(u=>this._isQuizInCategory(u.quizId,a.id));s[a.id]={name:a.name,modulesCompleted:o.length,quizzesTaken:l.length,averageQuizScore:l.length>0?Math.round(l.reduce((u,c)=>u+c.score,0)/l.length):0,relevance:a.relevance}}),s}catch(i){return console.error("Error calculating category breakdown:",i),{}}}_isModuleInCategory(e,n){return n==="general"?e.includes("fue-")||e.includes("general-")||!e.includes("bp-ae-")&&!e.includes("bp-dpa-"):n.includes("BP-AE")||n.includes("ae")?e.includes("bp-ae-")||e.includes("ae-"):n.includes("BP-DPA")||n.includes("dpa")?e.includes("bp-dpa-")||e.includes("dpa-"):!1}_isQuizInCategory(e,n){return n==="general"?e.includes("fue-")||e.includes("general-")||!e.includes("bp-ae-")&&!e.includes("bp-dpa-"):n.includes("BP-AE")||n.includes("ae")?e.includes("bp-ae-")||e.includes("ae-"):n.includes("BP-DPA")||n.includes("dpa")?e.includes("bp-dpa-")||e.includes("dpa-"):!1}getSpecializationProgress(e){return d(this,null,function*(){try{if(!e)throw new Error("Specialization ID is required");const i=((this.stateManager.getState("progress")||{}).specializationProgress||{})[e],s=yield this.getOverallProgress(e);return{specializationId:e,current:s,saved:i||null,lastSwitched:(i==null?void 0:i.savedAt)||null}}catch(n){throw console.error(`Error getting specialization progress for ${e}:`,n),n}})}getProgressComparison(){return d(this,null,function*(){try{if(!this.specializationService)return{};const e=this.specializationService.getAvailableSpecializations(),n={};for(const t of e)try{n[t.id]=yield this.getSpecializationProgress(t.id)}catch(i){console.warn(`Could not get progress for ${t.id}:`,i),n[t.id]=null}return n}catch(e){throw console.error("Error getting progress comparison:",e),new Error("Failed to get progress comparison")}})}preserveProgressAcrossSpecializations(e,n){try{const t=this.stateManager.getState("progress")||{};if(t.specializationProgress||(t.specializationProgress={}),e&&(t.specializationProgress[e]={modulesCompleted:[...t.modulesCompleted||[]],modulesInProgress:[...t.modulesInProgress||[]],quizAttempts:[...t.quizAttempts||[]],lastActivity:t.lastActivity,savedAt:new Date().toISOString()}),t.specializationProgress[n]){const i=t.specializationProgress[n],s=this._getGeneralModules(t.modulesCompleted||[]),a=this._getGeneralModules(t.modulesInProgress||[]),o=this._getGeneralQuizAttempts(t.quizAttempts||[]);t.modulesCompleted=[...s,...i.modulesCompleted.filter(l=>!s.includes(l))],t.modulesInProgress=[...a,...i.modulesInProgress.filter(l=>!a.includes(l))],t.quizAttempts=[...o,...i.quizAttempts.filter(l=>!o.some(u=>u.quizId===l.quizId))]}return this.stateManager.setState("progress",t),!0}catch(t){return console.error("Error preserving progress across specializations:",t),!1}}_getGeneralModules(e){return e.filter(n=>!n.includes("bp-ae-")&&!n.includes("bp-dpa-")||n.includes("fue-")||n.includes("general-"))}_getGeneralQuizAttempts(e){return e.filter(n=>!n.quizId.includes("bp-ae-")&&!n.quizId.includes("bp-dpa-")||n.quizId.includes("fue-")||n.quizId.includes("general-"))}getSpecializationStatistics(e){return d(this,null,function*(){try{if(!e)throw new Error("Specialization ID is required");const n=yield this.getOverallProgress(e),t=n.categoryBreakdown||{},i={specializationId:e,overallCompletion:n.overallPercentage,moduleCompletion:n.moduleCompletionPercentage,averageQuizScore:n.averageQuizScore,totalModulesCompleted:n.modulesCompleted,totalQuizzesTaken:n.quizzesTaken,categoryStats:{},strengths:[],improvementAreas:[]};return Object.entries(t).forEach(([s,a])=>{const o=a.modulesCompleted>0?Math.round(a.modulesCompleted/(a.modulesCompleted+1)*100):0;i.categoryStats[s]={name:a.name,completion:o,averageQuizScore:a.averageQuizScore,modulesCompleted:a.modulesCompleted,quizzesTaken:a.quizzesTaken},a.averageQuizScore>=80?i.strengths.push(a.name):a.averageQuizScore>0&&a.averageQuizScore<60&&i.improvementAreas.push(a.name)}),i}catch(n){throw console.error(`Error getting specialization statistics for ${e}:`,n),n}})}exportProgress(){return d(this,null,function*(){try{const e=this.stateManager.getState("progress")||{},n=this.specializationService?this.specializationService.getCurrentSpecialization():null,t=yield this.getOverallProgress(),i=n?yield this.getSpecializationProgress(n):null,s={exportDate:new Date().toISOString(),currentSpecialization:n,summary:t,specializationSpecific:i,details:{modulesCompleted:e.modulesCompleted||[],modulesInProgress:e.modulesInProgress||[],quizAttempts:e.quizAttempts||[],lastActivity:e.lastActivity,specializationProgress:e.specializationProgress||{}}},a=JSON.stringify(s,null,2),o=new Blob([a],{type:"application/json"}),l=URL.createObjectURL(o),u=document.createElement("a");return u.href=l,u.download=`learning-progress-${n||"general"}-${new Date().toISOString().split("T")[0]}.json`,document.body.appendChild(u),u.click(),document.body.removeChild(u),URL.revokeObjectURL(l),s}catch(e){throw console.error("Error exporting progress:",e),new Error("Failed to export progress data")}})}}class sP{constructor(e,n,t,i){this.stateManager=e,this.storage=n||new P,this.ihkContentService=t,this.specializationService=i}getQuizzes(){return d(this,null,function*(){return yield this.ihkContentService.getAllQuizzes()})}getQuizById(e){return d(this,null,function*(){const n=yield this.ihkContentService.getQuizById(e);if(!n)throw new Error(`Quiz with ID "${e}" not found`);return n})}submitAnswer(e,n,t){return d(this,null,function*(){try{if(!e||!n||t===void 0)throw new Error("Invalid parameters: quizId, questionId, and answer are required");const s=(yield this.getQuizById(e)).questions.find(o=>o.id===n);if(!s)throw new Error(`Question with ID "${n}" not found in quiz "${e}"`);if(!s.options.includes(t))throw new Error("Invalid answer: answer must be one of the provided options");const a=t===s.correctAnswer;return{questionId:n,userAnswer:t,correctAnswer:s.correctAnswer,isCorrect:a,explanation:s.explanation}}catch(i){throw console.error(`Error submitting answer for quiz ${e}, question ${n}:`,i),i}})}calculateScore(e,n){return d(this,null,function*(){try{if(!e||!n||!Array.isArray(n))throw new Error("Invalid parameters: quizId and answers array are required");const t=yield this.getQuizById(e);let i=0;const s=[];for(const l of n){const u=t.questions.find(h=>h.id===l.questionId);if(!u){console.warn(`Question ${l.questionId} not found in quiz ${e}`);continue}const c=l.userAnswer===u.correctAnswer;c&&i++,s.push({questionId:l.questionId,userAnswer:l.userAnswer,correctAnswer:u.correctAnswer,isCorrect:c,explanation:u.explanation})}const a=t.questions.length,o=a>0?Math.round(i/a*100):0;return{quizId:e,totalQuestions:a,correctAnswers:i,incorrectAnswers:a-i,score:o,results:s}}catch(t){throw console.error(`Error calculating score for quiz ${e}:`,t),t}})}saveQuizAttempt(e,n,t){return d(this,null,function*(){try{if(!e||n===void 0||!t)throw new Error("Invalid parameters: quizId, score, and answers are required");const s=(this.stateManager.getState("progress")||{}).quizAttempts||[],a={quizId:e,score:n.score||n,totalQuestions:n.totalQuestions||t.length,correctAnswers:n.correctAnswers||0,date:new Date().toISOString(),answers:t.map(o=>({questionId:o.questionId,userAnswer:o.userAnswer,correct:o.isCorrect||!1}))};return this.stateManager.setState("progress.quizAttempts",[...s,a]),this.stateManager.setState("progress.lastActivity",new Date().toISOString()),a}catch(i){throw console.error(`Error saving quiz attempt for ${e}:`,i),i}})}getQuizzesBySpecialization(t){return d(this,arguments,function*(e,n={}){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const i=yield this.getQuizzes();return this.specializationService?this.specializationService.filterContentBySpecialization(i,e,{minRelevance:n.minRelevance||"low",includeGeneral:n.includeGeneral!==!1}):(console.warn("SpecializationService not available, returning all quizzes"),i)}catch(i){throw console.error(`Error getting quizzes by specialization ${e}:`,i),i}})}getCategorizedQuizzes(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const n=yield this.getQuizzes();if(!this.specializationService)return console.warn("SpecializationService not available, returning uncategorized quizzes"),{all:n};const t=this.specializationService.getContentCategories(e),i={};return t.forEach(s=>{i[s.id]=[]}),i.all=n,n.forEach(s=>{const a=s.category||s.categoryId;if(a){const o=this.specializationService.getCategoryRelevance(a,e);if(o==="high"||o==="medium"){const l=t.find(u=>u.id===a);l?i[l.id].push(s):this._isGeneralContent(a)&&(i.general||(i.general=[]),i.general.push(s))}}else i.general&&i.general.push(s)}),i}catch(n){throw console.error(`Error getting categorized quizzes for specialization ${e}:`,n),n}})}getQuizzesByCategory(e,n){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid category ID");if(!n||typeof n!="string")throw new Error("Invalid specialization ID");const i=(yield this.getQuizzes()).filter(a=>(a.category||a.categoryId)===e);return this.specializationService?this.specializationService.filterContentBySpecialization(i,n,{minRelevance:"low",includeGeneral:!0}):(console.warn("SpecializationService not available, returning unfiltered category quizzes"),i)}catch(t){throw console.error(`Error getting quizzes by category ${e} for specialization ${n}:`,t),t}})}_isGeneralContent(e){return this.specializationService?this.specializationService._isGeneralContent(e):!1}getCurrentSpecializationQuizzes(){return d(this,arguments,function*(e={}){try{if(!this.specializationService)return console.warn("SpecializationService not available, returning all quizzes"),yield this.getQuizzes();const n=this.specializationService.getCurrentSpecialization();return n?yield this.getQuizzesBySpecialization(n,e):yield this.getQuizzes()}catch(n){throw console.error("Error getting current specialization quizzes:",n),n}})}getQuizStatistics(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const n=yield this.getQuizzes(),t={total:n.length,byRelevance:{high:0,medium:0,low:0,none:0},byCategory:{},specialization:e};return this.specializationService?(n.forEach(i=>{const s=i.category||i.categoryId;if(s){const a=this.specializationService.getCategoryRelevance(s,e);t.byRelevance[a]!==void 0&&t.byRelevance[a]++,t.byCategory[s]||(t.byCategory[s]={count:0,relevance:a}),t.byCategory[s].count++}else t.byRelevance.none++}),t):(console.warn("SpecializationService not available, returning basic statistics"),t)}catch(n){throw console.error(`Error getting quiz statistics for specialization ${e}:`,n),n}})}getQuizAttemptsBySpecialization(e){return d(this,null,function*(){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const t=(this.stateManager.getState("progress")||{}).quizAttempts||[];if(!this.specializationService)return console.warn("SpecializationService not available, returning all quiz attempts"),t;const i=yield this.getQuizzes(),s={};return i.forEach(o=>{s[o.id]=o.category||o.categoryId}),t.filter(o=>{const l=s[o.quizId];return l?this.specializationService.getCategoryRelevance(l,e)!=="none"||this.specializationService._isGeneralContent(l):!0})}catch(n){throw console.error(`Error getting quiz attempts by specialization ${e}:`,n),n}})}}class aP{constructor(){this.liveRegion=null,this.focusHistory=[]}init(){this.liveRegion=document.getElementById("live-region"),this.liveRegion||(this.liveRegion=this._createLiveRegion())}_createLiveRegion(){const e=document.createElement("div");return e.id="live-region",e.className="live-region",e.setAttribute("role","status"),e.setAttribute("aria-live","polite"),e.setAttribute("aria-atomic","true"),document.body.appendChild(e),e}announce(e,n="polite"){this.liveRegion||this.init(),this.liveRegion.setAttribute("aria-live",n),this.liveRegion.textContent="",setTimeout(()=>{this.liveRegion.textContent=e},100),setTimeout(()=>{this.liveRegion.textContent=""},3e3)}setFocus(e){const n=typeof e=="string"?document.querySelector(e):e;n&&(!n.hasAttribute("tabindex")&&!this._isFocusable(n)&&n.setAttribute("tabindex","-1"),n.focus())}_isFocusable(e){return["A","BUTTON","INPUT","SELECT","TEXTAREA"].includes(e.tagName)||e.hasAttribute("tabindex")}saveFocus(){this.focusHistory.push(document.activeElement)}restoreFocus(){const e=this.focusHistory.pop();e&&e.focus&&e.focus()}trapFocus(e){const n=this._getFocusableElements(e);if(n.length===0)return;const t=n[0],i=n[n.length-1],s=a=>{a.key==="Tab"&&(a.shiftKey?document.activeElement===t&&(a.preventDefault(),i.focus()):document.activeElement===i&&(a.preventDefault(),t.focus()))};return e.addEventListener("keydown",s),()=>{e.removeEventListener("keydown",s)}}_getFocusableElements(e){return Array.from(e.querySelectorAll('a[href], button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex="-1"])')).filter(t=>!t.hasAttribute("disabled")&&t.offsetParent!==null)}setupListNavigation(e,n){const t=Array.from(e.querySelectorAll(n));t.length!==0&&(t.forEach((i,s)=>{i.setAttribute("role","listitem"),i.setAttribute("tabindex",s===0?"0":"-1"),i.addEventListener("keydown",a=>{let o=s;switch(a.key){case"ArrowDown":case"ArrowRight":a.preventDefault(),o=(s+1)%t.length;break;case"ArrowUp":case"ArrowLeft":a.preventDefault(),o=(s-1+t.length)%t.length;break;case"Home":a.preventDefault(),o=0;break;case"End":a.preventDefault(),o=t.length-1;break;default:return}t.forEach((l,u)=>{l.setAttribute("tabindex",u===o?"0":"-1")}),t[o].focus()})}),e.setAttribute("role","list"))}makeKeyboardAccessible(e,n){e.hasAttribute("role")||e.setAttribute("role","button"),e.hasAttribute("tabindex")||e.setAttribute("tabindex","0"),e.addEventListener("keydown",t=>{(t.key==="Enter"||t.key===" ")&&(t.preventDefault(),n(t))})}prefersReducedMotion(){return window.matchMedia("(prefers-reduced-motion: reduce)").matches}getAnimationDuration(e=300){return this.prefersReducedMotion()?0:e}}const w=new aP;class oP{constructor(e){this.routes=new Map,this.appContainer=e,this.currentView=null,this.currentRoute=null,this.notFoundHandler=null,this.specializationService=null}setSpecializationService(e){this.specializationService=e}register(e,n){if(typeof e!="string"||!e)throw new Error("Route path must be a non-empty string");if(typeof n!="function")throw new Error("View factory must be a function");this.routes.set(e,n)}registerNotFound(e){this.notFoundHandler=e}init(){window.addEventListener("hashchange",()=>this._handleRouteChange()),this._handleRouteChange()}navigate(e,n={},t={}){e||(e="/");const{preserveSpecialization:i=!0}=t;if(i&&this.specializationService){const a=this.specializationService.getCurrentSpecialization();a&&!n.specialization&&(n.specialization=a)}let s=`#${e}`;if(Object.keys(n).length>0){const a=new URLSearchParams(n).toString();s+=`?${a}`}window.location.hash=s}_handleRouteChange(){const{path:e,params:n}=this._parseHash(),t=this._matchRoute(e);t?this._renderView(t,e,n):this._handle404(e)}_parseHash(){const e=window.location.hash.slice(1)||"/",[n,t]=e.split("?"),i={};if(t){const a=new URLSearchParams(t);for(const[o,l]of a)i[o]=l}const s=this._extractPathParams(n);return this._handleSpecializationContext(i),{path:n||"/",params:z(z({},i),s)}}_handleSpecializationContext(e){this.specializationService&&e.specialization&&(this.specializationService.getAvailableSpecializations().some(i=>i.id===e.specialization)?this.specializationService.getCurrentSpecialization()!==e.specialization&&(console.warn(`üîÑ Switching specialization from URL: ${e.specialization}`),this.specializationService.setSpecialization(e.specialization,{preserveProgress:!0})):(console.warn(`‚ö†Ô∏è Invalid specialization in URL: ${e.specialization}`),delete e.specialization,this._cleanupInvalidSpecializationUrl()))}_cleanupInvalidSpecializationUrl(){try{const e=window.location.hash,[n,t]=e.slice(1).split("?");if(t){const i=new URLSearchParams(t);i.delete("specialization");const s=i.toString(),a=s?`#${n}?${s}`:`#${n}`;window.history.replaceState(null,"",a)}}catch(e){console.error("Error cleaning up invalid specialization URL:",e)}}_extractPathParams(e){const n={};for(const[t]of this.routes){const i=this._routeToRegex(t),s=e.match(i);if(s){this._getParamNames(t).forEach((o,l)=>{n[o]=s[l+1]});break}}return n}_routeToRegex(e){const n=e.replace(/:[^/]+/g,"([^/]+)").replace(/\//g,"\\/");return new RegExp(`^${n}$`)}_getParamNames(e){const n=e.match(/:([^/]+)/g);return n?n.map(t=>t.slice(1)):[]}_matchRoute(e){if(this.routes.has(e))return{path:e,viewFactory:this.routes.get(e)};for(const[n,t]of this.routes)if(n.includes(":")&&this._routeToRegex(n).test(e))return{path:n,viewFactory:t};return null}_renderView(e,n,t){return d(this,null,function*(){try{this.currentView&&typeof this.currentView.cleanup=="function"&&this.currentView.cleanup(),this.appContainer.innerHTML='<div class="loading" role="status" aria-live="polite">Loading...</div>';const i=e.viewFactory(t),s=i instanceof Promise?yield i:i;if(this.appContainer.innerHTML="",this.appContainer.style.animation="none",this.appContainer.offsetWidth,this.appContainer.style.animation="",typeof s=="string")this.appContainer.innerHTML=s;else if(s instanceof HTMLElement)this.appContainer.appendChild(s);else if(s&&typeof s.render=="function"){const l=s.render(),u=l instanceof Promise?yield l:l;typeof u=="string"?this.appContainer.innerHTML=u:u instanceof HTMLElement&&this.appContainer.appendChild(u)}this.currentView=s,this.currentRoute={path:n,params:t};const a=w.prefersReducedMotion()?"auto":"smooth";window.scrollTo({top:0,behavior:a}),this._updateActiveNav(n),setTimeout(()=>{const l=document.getElementById("main-content");l&&w.setFocus(l)},100);const o=this._getPageName(n);w.announce(`Navigated to ${o}`)}catch(i){console.error("Error rendering view:",i),this._renderError(i)}})}_handle404(e){return d(this,null,function*(){if(console.warn(`Route not found: ${e}`),this.notFoundHandler)try{const n=this.notFoundHandler({path:e}),t=n instanceof Promise?yield n:n;this.appContainer.innerHTML="",this.appContainer.style.animation="none",this.appContainer.offsetWidth,this.appContainer.style.animation="",typeof t=="string"?this.appContainer.innerHTML=t:t instanceof HTMLElement&&this.appContainer.appendChild(t);const i=w.prefersReducedMotion()?"auto":"smooth";window.scrollTo({top:0,behavior:i}),w.announce("Page not found")}catch(n){console.error("Error rendering 404 view:",n),this.navigate("/")}else this.navigate("/")})}_renderError(e){this.appContainer.innerHTML=`
      <div class="error-view">
        <h1>Oops! Something went wrong</h1>
        <p>${e.message}</p>
        <button onclick="window.location.hash = '#/'">Go Home</button>
      </div>
    `}_updateActiveNav(e){document.querySelectorAll("[data-nav-link]").forEach(t=>{t.classList.remove("active")});const n=document.querySelector(`[data-nav-link="${e}"]`);n&&n.classList.add("active")}getCurrentRoute(){return this.currentRoute}refresh(){this._handleRouteChange()}generateUrl(e,n={},t=!0){const i=z({},n);if(t&&this.specializationService){const a=this.specializationService.getCurrentSpecialization();a&&!i.specialization&&(i.specialization=a)}let s=`#${e}`;if(Object.keys(i).length>0){const a=new URLSearchParams(i).toString();s+=`?${a}`}return s}hasSpecializationContext(){const{params:e}=this._parseHash();return!!e.specialization}getUrlSpecialization(){const{params:e}=this._parseHash();return e.specialization||null}_getPageName(e){const n={"/":"Home","/modules":"Learning Modules","/quizzes":"Quizzes","/progress":"Progress"};return n[e]?n[e]:e.startsWith("/module/")?"Module Details":e.startsWith("/quizzes/")?"Quiz":"Page"}}class lP{constructor(e,n,t=null){this.stateManager=e,this.storage=n,this.categoryMappingService=t,this.categoriesData=te,this._initializeSpecializationState()}_initializeSpecializationState(){this.stateManager.getState().specialization||this.stateManager.setState("specialization",{current:null,hasSelected:!1,preferences:{showAllContent:!1,preferredCategories:[]}})}getAvailableSpecializations(){return(this.categoriesData.supportedSpecializations||[]).map(n=>{const t=this._getSpecializationConfigFromCategories(n);return{id:n,name:t.name,shortName:t.shortName,description:t.description,color:t.color,icon:t.icon,examCode:t.examCode}})}_getSpecializationConfigFromCategories(e){return{anwendungsentwicklung:{name:"Anwendungsentwicklung",shortName:"AE",description:"Fachinformatiker f√ºr Anwendungsentwicklung",color:"#10b981",icon:"üíª",examCode:"AP2-AE"},"daten-prozessanalyse":{name:"Daten- und Prozessanalyse",shortName:"DPA",description:"Fachinformatiker f√ºr Daten- und Prozessanalyse",color:"#3b82f6",icon:"üìä",examCode:"AP2-DPA"}}[e]||{name:e,shortName:e.toUpperCase(),description:`Fachinformatiker f√ºr ${e}`,color:"#6b7280",icon:"‚öôÔ∏è",examCode:"AP2"}}getCurrentSpecialization(){const e=this.stateManager.getState("specialization");return(e==null?void 0:e.current)||null}hasSelectedSpecialization(){const e=this.stateManager.getState("specialization");return(e==null?void 0:e.hasSelected)||!1}setSpecialization(e,n={}){try{if(!e||typeof e!="string")throw new Error("Invalid specialization ID");const{preserveProgress:t=!0}=n;if(!this.getAvailableSpecializations().some(o=>o.id===e))throw new Error(`Unsupported specialization: ${e}`);const a=this.getCurrentSpecialization();return t&&a&&a!==e&&this._preserveProgressAcrossSpecializations(a,e),this.stateManager.setState("specialization.current",e),this.stateManager.setState("specialization.hasSelected",!0),this.stateManager.setState("progress.lastActivity",new Date().toISOString()),this._logSpecializationChange(a,e),!0}catch(t){return console.error("Error setting specialization:",t),!1}}_preserveProgressAcrossSpecializations(e,n){try{const t=this.stateManager.getState("progress")||{};if(t.specializationProgress||(t.specializationProgress={}),t.threeTierCategoryProgress||(t.threeTierCategoryProgress={}),e){const i={modulesCompleted:[...t.modulesCompleted||[]],modulesInProgress:[...t.modulesInProgress||[]],quizAttempts:[...t.quizAttempts||[]],lastActivity:t.lastActivity,savedAt:new Date().toISOString(),threeTierBreakdown:this._categorizeProgressByThreeTier(t)};t.specializationProgress[e]=i}if(t.specializationProgress[n]){const i=t.specializationProgress[n],s=this._getGeneralModules(t.modulesCompleted||[]),a=this._getGeneralModules(t.modulesInProgress||[]),o=this._getGeneralQuizAttempts(t.quizAttempts||[]);t.modulesCompleted=[...s,...i.modulesCompleted.filter(l=>!s.includes(l))],t.modulesInProgress=[...a,...i.modulesInProgress.filter(l=>!a.includes(l))],t.quizAttempts=[...o,...i.quizAttempts.filter(l=>!o.some(u=>u.quizId===l.quizId))],i.threeTierBreakdown&&this._restoreThreeTierProgress(t,i.threeTierBreakdown)}this.stateManager.setState("progress",t)}catch(t){console.error("Error preserving progress across specializations:",t)}}_categorizeProgressByThreeTier(e){const n={"daten-prozessanalyse":{modules:[],quizzes:[]},anwendungsentwicklung:{modules:[],quizzes:[]},allgemein:{modules:[],quizzes:[]}};return(e.modulesCompleted||[]).forEach(t=>{const i=this._inferThreeTierCategoryFromId(t);n[i].modules.push(t)}),(e.modulesInProgress||[]).forEach(t=>{const i=this._inferThreeTierCategoryFromId(t);n[i].modules.includes(t)||n[i].modules.push(t)}),(e.quizAttempts||[]).forEach(t=>{const i=this._inferThreeTierCategoryFromId(t.quizId);n[i].quizzes.push(t)}),n}_inferThreeTierCategoryFromId(e){if(!e)return"allgemein";const n=e.toLowerCase();return n.includes("bp-dpa-")||n.includes("dpa-")?"daten-prozessanalyse":n.includes("bp-ae-")||n.includes("ae-")?"anwendungsentwicklung":"allgemein"}_restoreThreeTierProgress(e,n){e.threeTierCategoryProgress||(e.threeTierCategoryProgress={}),Object.keys(n).forEach(t=>{e.threeTierCategoryProgress[t]=v(z({},n[t]),{lastUpdated:new Date().toISOString()})})}_getGeneralModules(e){return e.filter(n=>!n.includes("bp-ae-")&&!n.includes("bp-dpa-")||n.includes("fue-")||n.includes("general-"))}_getGeneralQuizAttempts(e){return e.filter(n=>!n.quizId.includes("bp-ae-")&&!n.quizId.includes("bp-dpa-")||n.quizId.includes("fue-")||n.quizId.includes("general-"))}_logSpecializationChange(e,n){try{const t={timestamp:new Date().toISOString(),from:e,to:n,userAgent:navigator.userAgent,sessionId:this._getSessionId()},i=this.stateManager.getState("analytics.specializationChanges")||[];i.push(t),i.length>10&&i.splice(0,i.length-10),this.stateManager.setState("analytics.specializationChanges",i)}catch(t){console.error("Error logging specialization change:",t)}}_getSessionId(){let e=this.stateManager.getState("session.id");return e||(e="session_"+Date.now()+"_"+Math.random().toString(36).substring(2,11),this.stateManager.setState("session.id",e)),e}getSpecializationConfig(e){return this.getAvailableSpecializations().find(t=>t.id===e)||null}getCategoryRelevance(e,n,t={}){if(!e||!n)return"none";const{useThreeTierCategories:i=!1}=t;if(i||this._isThreeTierCategory(e))return this._getThreeTierCategoryRelevance(e,n);if(this.categoryMappingService){const a=this.categoryMappingService.getCategoryRelevance(e,n);if(a!=="none")return a}const s=this._findCategoryById(e);return!s||!s.relevance?this._inferRelevanceFromCategoryName(e,n):s.relevance[n]||"none"}_isThreeTierCategory(e){return["daten-prozessanalyse","anwendungsentwicklung","allgemein"].includes(e)}_inferRelevanceFromCategoryName(e,n){const t=e.toLowerCase();return n==="daten-prozessanalyse"&&(t.includes("dpa")||t.includes("data")||t.includes("process")||t.includes("bi")||t.includes("etl")||t.includes("warehouse"))||n==="anwendungsentwicklung"&&(t.includes("ae")||t.includes("app")||t.includes("dev")||t.includes("programming")||t.includes("software")||t.includes("code"))?"high":t.includes("fue")||t.includes("general")||t.includes("grundlagen")||t.includes("basic")?"medium":t.includes("security")||t.includes("network")||t.includes("system")||t.includes("project")?"low":"none"}getEnhancedCategoryRelevance(e,n,t={}){const{includeScore:i=!1,includeReason:s=!1}=t;if(!i&&!s)return this.getCategoryRelevance(e,n);const a=this.getCategoryRelevance(e,n),o={relevance:a};if(i){const l={high:3,medium:2,low:1,none:0};o.score=l[a]||0}return s&&(o.reason=this._getRelevanceReason(e,n,a)),o}_getRelevanceReason(e,n,t){if(this._isThreeTierCategory(e))return e===n?"Direct specialization match in three-tier system":e==="allgemein"?"General content relevant to all specializations":"Cross-specialization content in three-tier system";if(this.categoryMappingService)return"Calculated using category mapping service";const i=this._findCategoryById(e);return i&&i.relevance&&i.relevance[n]?"Defined in category metadata":"Inferred from category naming patterns"}calculateRelevanceMapping(e,n,t={}){const{useThreeTierCategories:i=!1,includeScores:s=!1}=t,a={};return e.forEach(o=>{a[o]={},n.forEach(l=>{const u={useThreeTierCategories:i},c=this.getCategoryRelevance(o,l,u);if(s){const h={high:3,medium:2,low:1,none:0};a[o][l]={relevance:c,score:h[c]||0}}else a[o][l]=c})}),a}validateRelevanceConsistency(e,n){const t={isConsistent:!0,inconsistencies:[],recommendations:[]};if(!e)return t.isConsistent=!1,t.inconsistencies.push("No content item provided"),t;const i=e.category||e.categoryId,s=e.threeTierCategory||this._inferThreeTierCategory(e);return n.forEach(a=>{const o=i?this.getCategoryRelevance(i,a):"none",l=this._getThreeTierCategoryRelevance(s,a),u={high:3,medium:2,low:1,none:0},c=u[o]||0,h=u[l]||0,m=Math.abs(c-h);m>1&&(t.isConsistent=!1,t.inconsistencies.push({specializationId:a,originalCategory:i,originalRelevance:o,threeTierCategory:s,threeTierRelevance:l,scoreDifference:m}),c>h?t.recommendations.push(`Consider reviewing three-tier mapping for ${e.id}: original relevance (${o}) higher than three-tier (${l})`):t.recommendations.push(`Consider reviewing original category for ${e.id}: three-tier relevance (${l}) higher than original (${o})`))}),t}_findCategoryById(e){for(const n of this.categoriesData.categories){if(n.id===e)return n;if(n.subcategories){for(const t of n.subcategories)if(t.id===e)return t}}return null}filterContentBySpecialization(e,n,t={}){if(!Array.isArray(e)||!n)return e||[];const{minRelevance:i="low",includeGeneral:s=!0,useThreeTierCategories:a=!1}=t,o={high:3,medium:2,low:1,none:0},l=o[i]||1;return e.filter(u=>{if(!u.category&&!u.categoryId&&!u.threeTierCategory)return!0;let c,h;return a&&u.threeTierCategory?(h=u.threeTierCategory,c=this.categoryMappingService?this.categoryMappingService.getCategoryRelevance(h,n):this._getThreeTierCategoryRelevance(h,n)):(h=u.category||u.categoryId,c=this.getCategoryRelevance(h,n)),!!((o[c]||0)>=l||s&&this._isGeneralContent(h,a))})}filterContentByThreeTierCategory(e,n,t={}){if(!Array.isArray(e)||!n)return e||[];const{minRelevance:i="low",includeGeneral:s=!0,threeTierCategory:a=null}=t;return a?e.filter(o=>(o.threeTierCategory||this._inferThreeTierCategory(o))===a):this.filterContentBySpecialization(e,n,v(z({},t),{useThreeTierCategories:!0}))}_inferThreeTierCategory(e){if(this.categoryMappingService)return this.categoryMappingService.mapToThreeTierCategory(e).threeTierCategory;const n=e.category||e.categoryId||"";return/^(BP-DPA-|bp-dpa-)/i.test(n)?"daten-prozessanalyse":/^(BP-AE-|bp-ae-)/i.test(n)?"anwendungsentwicklung":"allgemein"}_isGeneralContent(e,n=!1){if(n)return e==="allgemein";const t=this._findCategoryById(e);return t?(this.categoriesData.supportedSpecializations||[]).every(s=>{var o;const a=(o=t.relevance)==null?void 0:o[s];return a==="high"||a==="medium"}):!1}getContentStatsBySpecialization(e,n,t={}){if(!Array.isArray(e)||!n)return{totalItems:0,categories:{},relevanceDistribution:{},contentTypes:{}};const{useThreeTierCategories:i=!1,includeProgress:s=!1}=t,a={totalItems:e.length,categories:{},relevanceDistribution:{high:0,medium:0,low:0,none:0},contentTypes:{modules:0,quizzes:0,other:0}};let o=null;return s&&(o=this.stateManager.getState("progress")||{}),e.forEach(l=>{var m,g;let u,c;i?(u=l.threeTierCategory||this._inferThreeTierCategory(l),c=this.categoryMappingService?this.categoryMappingService.getCategoryRelevance(u,n):this._getThreeTierCategoryRelevance(u,n)):(u=l.category||l.categoryId||"unknown",c=this.getCategoryRelevance(u,n)),a.categories[u]||(a.categories[u]={count:0,relevance:c,items:[]}),a.categories[u].count++,a.categories[u].items.push(l.id||"unknown"),a.relevanceDistribution[c]=(a.relevanceDistribution[c]||0)+1;const h=this._inferContentType(l);if(a.contentTypes[h]=(a.contentTypes[h]||0)+1,s&&o){a.categories[u].progress||(a.categories[u].progress={completed:0,inProgress:0,notStarted:0});const p=l.id;(m=o.modulesCompleted)!=null&&m.includes(p)?a.categories[u].progress.completed++:(g=o.modulesInProgress)!=null&&g.includes(p)?a.categories[u].progress.inProgress++:a.categories[u].progress.notStarted++}}),a.specializationRelevance={highRelevancePercentage:(a.relevanceDistribution.high/a.totalItems*100).toFixed(1),mediumRelevancePercentage:(a.relevanceDistribution.medium/a.totalItems*100).toFixed(1),lowRelevancePercentage:(a.relevanceDistribution.low/a.totalItems*100).toFixed(1)},i&&(a.categoryMetadata=this._getThreeTierCategoryMetadata(n)),a}_getThreeTierCategoryMetadata(e){const n=this.getThreeTierContentCategories(e),t={};return n.forEach(i=>{t[i.id]={name:i.name,description:i.description,color:i.color,icon:i.icon,relevance:i.relevance,isSpecializationSpecific:i.id===e,isGeneral:i.id==="allgemein"}}),t}_inferContentType(e){return e.questions&&Array.isArray(e.questions)?"quizzes":e.content||e.sections||e.modules?"modules":"other"}getContentCategories(e){if(!e)return[];const n=[];n.push({id:"general",name:"Allgemein",description:"Fachrichtungs√ºbergreifende Inhalte",color:"#6b7280",relevance:"high"});for(const t of this.categoriesData.categories){const i=this.getCategoryRelevance(t.id,e);i!=="none"&&n.push({id:t.id,name:t.name,description:t.description,color:t.color,relevance:i})}return n}getThreeTierContentCategories(e){return e?this.categoryMappingService?this.categoryMappingService.getThreeTierCategories().map(i=>({id:i.id,name:i.name,description:i.description,color:i.color,icon:i.icon,relevance:this.categoryMappingService.getCategoryRelevance(i.id,e)})):[{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Daten- und Prozessanalyse",color:"#3b82f6",icon:"üìä"},{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",description:"Inhalte mit hoher Relevanz f√ºr die Fachrichtung Anwendungsentwicklung",color:"#10b981",icon:"üíª"},{id:"allgemein",name:"Allgemein",description:"Fachrichtungs√ºbergreifende Inhalte und Grundlagen f√ºr beide Spezialisierungen",color:"#6b7280",icon:"üìö"}].map(t=>v(z({},t),{relevance:this._getThreeTierCategoryRelevance(t.id,e)})):[]}_getThreeTierCategoryRelevance(e,n){var i;return((i={"daten-prozessanalyse":{"daten-prozessanalyse":"high",anwendungsentwicklung:"low"},anwendungsentwicklung:{anwendungsentwicklung:"high","daten-prozessanalyse":"low"},allgemein:{anwendungsentwicklung:"high","daten-prozessanalyse":"high"}}[e])==null?void 0:i[n])||"none"}getPreferences(){const e=this.stateManager.getState("specialization");return(e==null?void 0:e.preferences)||{showAllContent:!1,preferredCategories:[]}}setPreferences(e){try{if(!e||typeof e!="object")throw new Error("Invalid preferences object");const n=this.getPreferences(),t=z(z({},n),e);return this.stateManager.setState("specialization.preferences",t),!0}catch(n){return console.error("Error setting preferences:",n),!1}}resetSpecialization(){try{return this.stateManager.setState("specialization",{current:null,hasSelected:!1,preferences:{showAllContent:!1,preferredCategories:[]}}),!0}catch(e){return console.error("Error resetting specialization:",e),!1}}migrateExistingUser(e="anwendungsentwicklung"){try{const n=this.stateManager.getState("migration.specialization");if(n&&n.completed)return{performed:!1,reason:"already_migrated",timestamp:n.timestamp,version:n.version};const t=this.stateManager.getState("specialization"),i=this.stateManager.getState("progress"),s=i&&(i.modulesCompleted&&i.modulesCompleted.length>0||i.modulesInProgress&&i.modulesInProgress.length>0||i.quizAttempts&&i.quizAttempts.length>0),a=this._hasExistingUserData();if((s||a)&&(!t||!t.hasSelected)){const l=this._performMigration(e,{hasExistingProgress:s,hasExistingSettings:a,progressData:i});return this._recordMigrationStatus(l),console.warn(`‚úÖ Migrated existing user to specialization: ${e}`),{performed:!0,reason:"existing_user_detected",specialization:e,preservedProgress:l.preservedProgress,timestamp:new Date().toISOString()}}return{performed:!1,reason:t!=null&&t.hasSelected?"already_has_specialization":"new_user",currentSpecialization:(t==null?void 0:t.current)||null}}catch(n){return console.error("‚ùå Error migrating existing user:",n),this._recordMigrationStatus({success:!1,error:n.message,timestamp:new Date().toISOString()}),{performed:!1,reason:"migration_error",error:n.message}}}_hasExistingUserData(){try{const e=this.storage.get("theme-preference"),n=this.storage.get("app-state"),t=this.stateManager.getState("session"),i=this.stateManager.getState("analytics"),s=this.stateManager.getState("examProgress");return!!(e||n||t||i||s)}catch(e){return console.warn("Error checking existing user data:",e),!1}}_performMigration(e,n){const{hasExistingProgress:t,progressData:i}=n;if(!this.setSpecialization(e,{preserveProgress:!0}))throw new Error("Failed to set specialization during migration");const a=this._analyzeExistingProgress(i);let o=null;if(this.categoryMappingService&&t&&(o=this._migrateToThreeTierCategories(i)),t){const l=this.stateManager.getState("progress")||{};l.migrationInfo={migratedAt:new Date().toISOString(),originalProgress:a,assignedSpecialization:e,preservedItems:{modules:a.totalModules,quizzes:a.totalQuizAttempts},threeTierMigration:o},this.stateManager.setState("progress",l)}return{success:!0,preservedProgress:a,assignedSpecialization:e,threeTierMigration:o,timestamp:new Date().toISOString()}}_migrateToThreeTierCategories(e){if(!e||!this.categoryMappingService)return null;const n={status:"success",migratedItems:0,categoryMapping:{},errors:[]};try{const t={"daten-prozessanalyse":{modules:[],quizzes:[]},anwendungsentwicklung:{modules:[],quizzes:[]},allgemein:{modules:[],quizzes:[]}};(e.modulesCompleted||[]).forEach(s=>{try{const a={id:s,category:this._extractCategoryFromId(s)},l=this.categoryMappingService.mapToThreeTierCategory(a).threeTierCategory;t[l].modules.push(s),n.categoryMapping[s]=l,n.migratedItems++}catch(a){n.errors.push(`Failed to migrate module ${s}: ${a.message}`)}}),(e.modulesInProgress||[]).forEach(s=>{try{const a={id:s,category:this._extractCategoryFromId(s)},l=this.categoryMappingService.mapToThreeTierCategory(a).threeTierCategory;t[l].modules.includes(s)||t[l].modules.push(s),n.categoryMapping[s]||(n.categoryMapping[s]=l,n.migratedItems++)}catch(a){n.errors.push(`Failed to migrate in-progress module ${s}: ${a.message}`)}}),(e.quizAttempts||[]).forEach(s=>{try{const a={id:s.quizId,category:this._extractCategoryFromId(s.quizId)},l=this.categoryMappingService.mapToThreeTierCategory(a).threeTierCategory;t[l].quizzes.push(s),n.categoryMapping[s.quizId]=l,n.migratedItems++}catch(a){n.errors.push(`Failed to migrate quiz ${s.quizId}: ${a.message}`)}});const i=this.stateManager.getState("progress")||{};i.threeTierCategoryProgress=t,this.stateManager.setState("progress",i),n.errors.length>0&&(n.status=n.errors.length===n.migratedItems?"failed":"partial"),n.threeTierProgress=t}catch(t){n.status="failed",n.errors.push(`Migration failed: ${t.message}`)}return n}_extractCategoryFromId(e){if(!e)return"";const n=[/^(BP-[A-Z]+-\d+)/i,/^(bp-[a-z]+-\d+)/i,/^(F√ú-\d+)/i,/^(fue-\d+)/i];for(const i of n){const s=e.match(i);if(s)return s[1]}const t=e.split(/[-_]/);return t.length>1?t.slice(0,2).join("-"):e}_analyzeExistingProgress(e){if(!e)return{totalModules:0,totalQuizAttempts:0,generalContent:0,specializationContent:0};const n=e.modulesCompleted||[],t=e.modulesInProgress||[],i=e.quizAttempts||[],s=[...new Set([...n,...t])],a=this._getGeneralModules(s),o=s.filter(c=>!a.includes(c)),l=this._getGeneralQuizAttempts(i),u=i.filter(c=>!l.some(h=>h.quizId===c.quizId));return{totalModules:s.length,totalQuizAttempts:i.length,generalContent:a.length+l.length,specializationContent:o.length+u.length,breakdown:{modules:{completed:n.length,inProgress:t.length,general:a.length,specialization:o.length},quizzes:{total:i.length,general:l.length,specialization:u.length}}}}_recordMigrationStatus(e){try{const n={completed:e.success,timestamp:e.timestamp||new Date().toISOString(),version:"1.0.0",result:e,userAgent:navigator.userAgent,sessionId:this._getSessionId()};this.stateManager.setState("migration.specialization",n);const t=this.stateManager.getState("migration.history")||[];t.push(n),t.length>5&&t.splice(0,t.length-5),this.stateManager.setState("migration.history",t)}catch(n){console.error("Error recording migration status:",n)}}getMigrationStatus(){return this.stateManager.getState("migration.specialization")||null}hasMigrated(){const e=this.getMigrationStatus();return e&&e.completed}filterContentBySpecializationLegacy(e,n,t={}){const i=v(z({},t),{useThreeTierCategories:!1});return this.filterContentBySpecialization(e,n,i)}getContentCategoriesLegacy(e){return this.getContentCategories(e)}isThreeTierSystemAvailable(){return this.categoryMappingService!==null}getThreeTierMigrationSupport(){var t;const e=this.stateManager.getState("progress")||{},n=e.migrationInfo||{};return{isAvailable:this.isThreeTierSystemAvailable(),hasMigrated:!!n.threeTierMigration,migrationStatus:((t=n.threeTierMigration)==null?void 0:t.status)||"not_started",lastMigration:n.migratedAt||null,progressPreserved:!!e.threeTierCategoryProgress}}validateBackwardCompatibility(){const e={status:"success",tests:[],errors:[],warnings:[]};try{const n="anwendungsentwicklung",t=this.getAvailableSpecializations();e.tests.push({name:"getAvailableSpecializations",passed:Array.isArray(t)&&t.length>0,result:`Found ${t.length} specializations`});const i=this.getCurrentSpecialization();e.tests.push({name:"getCurrentSpecialization",passed:typeof i=="string"||i===null,result:`Current: ${i}`});const s=this.getCategoryRelevance("BP-AE-01",n);e.tests.push({name:"getCategoryRelevance (legacy)",passed:["high","medium","low","none"].includes(s),result:`Relevance: ${s}`});const a=this.getContentCategories(n);e.tests.push({name:"getContentCategories",passed:Array.isArray(a),result:`Found ${a.length} categories`});const o=[{id:"test1",category:"BP-AE-01"},{id:"test2",category:"BP-DPA-01"},{id:"test3",category:"F√ú-01"}],l=this.filterContentBySpecialization(o,n);e.tests.push({name:"filterContentBySpecialization",passed:Array.isArray(l),result:`Filtered ${o.length} to ${l.length} items`});const u=e.tests.filter(c=>!c.passed);if(u.length>0&&(e.status="error",e.errors.push(`${u.length} backward compatibility tests failed`)),this.isThreeTierSystemAvailable()){const c=this.getThreeTierContentCategories(n);e.tests.push({name:"getThreeTierContentCategories",passed:Array.isArray(c)&&c.length===3,result:`Found ${c.length} three-tier categories`});const h=this.filterContentByThreeTierCategory(o,n);e.tests.push({name:"filterContentByThreeTierCategory",passed:Array.isArray(h),result:"Three-tier filtering works"})}else e.warnings.push("Three-tier category system not available - some new features disabled")}catch(n){e.status="error",e.errors.push(`Validation failed: ${n.message}`)}return e}setCategoryMappingService(e){this.categoryMappingService=e}}class uP{constructor(){this.state={modules:[],quizzes:[],progress:{modulesCompleted:[],modulesInProgress:[],quizAttempts:[],lastActivity:null},currentUser:null},this.listeners=new Map,this.storage=new P}getState(e){if(e===void 0)return this.state;const n=e.split(".");let t=this.state;for(const i of n)if(t&&typeof t=="object"&&i in t)t=t[i];else return;return t}setState(e,n){if(!e||typeof e!="string")throw new Error("Invalid key: key must be a non-empty string");const t=e.split(".");let i=this.state;for(let o=0;o<t.length-1;o++){const l=t[o];l in i||(i[l]={}),i=i[l]}const s=t[t.length-1],a=i[s];i[s]=n,this._notifyListeners(e,n,a),this.saveToStorage()}subscribe(e,n){if(typeof n!="function")throw new Error("Callback must be a function");return this.listeners.has(e)||this.listeners.set(e,new Set),this.listeners.get(e).add(n),()=>this.unsubscribe(e,n)}unsubscribe(e,n){this.listeners.has(e)&&(this.listeners.get(e).delete(n),this.listeners.get(e).size===0&&this.listeners.delete(e))}_notifyListeners(e,n,t){this.listeners.has(e)&&this.listeners.get(e).forEach(i=>{try{i(n,t)}catch(s){console.error(`Error in state listener for "${e}":`,s)}}),this.listeners.has("*")&&this.listeners.get("*").forEach(i=>{try{i(e,n,t)}catch(s){console.error("Error in wildcard state listener:",s)}})}loadFromStorage(){try{const e=this.storage.get("appState");return e&&typeof e=="object"?(this.state=v(z(z({},this.state),e),{progress:z(z({},this.state.progress),e.progress||{})}),!0):!1}catch(e){return console.error("Error loading state from storage:",e),!1}}saveToStorage(){try{return this.storage.set("appState",this.state),!0}catch(e){if(console.error("Error saving state to storage:",e),e.name==="QuotaExceededError"||e.message.includes("quota"))try{const n={progress:this.state.progress};this.storage.set("appState",n),console.warn("Saved minimal state due to storage quota"),window.dispatchEvent(new CustomEvent("storage-quota-warning",{detail:{error:e,minimalStateSaved:!0}}))}catch(n){console.error("Failed to save even minimal state:",n),window.dispatchEvent(new CustomEvent("storage-quota-error",{detail:{error:n}}))}return!1}}reset(){this.state={modules:[],quizzes:[],progress:{modulesCompleted:[],modulesInProgress:[],quizAttempts:[],lastActivity:null},currentUser:null},this.storage.clear(),this._notifyListeners("*",this.state,null)}}class cP{constructor(){this.storage=new P,this.currentTheme="light",this.STORAGE_KEY="theme",this.THEME_ATTRIBUTE="data-theme"}init(){const e=this.storage.get(this.STORAGE_KEY);e&&(e==="light"||e==="dark")?this.currentTheme=e:this.currentTheme=this._detectSystemPreference(),this.applyTheme()}_detectSystemPreference(){return window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}getTheme(){return this.currentTheme}setTheme(e){return e!=="light"&&e!=="dark"?(console.error(`Invalid theme: ${e}. Must be 'light' or 'dark'.`),!1):(this.currentTheme=e,this.applyTheme(),this._saveTheme(),!0)}toggleTheme(){const e=this.currentTheme==="light"?"dark":"light";return this.setTheme(e)}applyTheme(){document.documentElement.setAttribute(this.THEME_ATTRIBUTE,this.currentTheme),document.documentElement.classList.remove("light","dark","light-theme","dark-theme"),document.documentElement.classList.add(this.currentTheme),document.documentElement.classList.add(`${this.currentTheme}-theme`),window.dispatchEvent(new CustomEvent("themechange",{detail:{theme:this.currentTheme}}))}_saveTheme(){try{this.storage.set(this.STORAGE_KEY,this.currentTheme)}catch(e){console.error("Error saving theme preference:",e)}}watchSystemPreference(){window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",n=>{if(!this.storage.get(this.STORAGE_KEY)){const i=n.matches?"dark":"light";this.setTheme(i)}})}}class D{constructor(){this.hasError=!1,this.error=null}static wrap(e,n={}){return(...t)=>d(null,null,function*(){try{return yield e.apply(n,t)}catch(i){return console.error("Error in view:",i),D.renderError(i,n)}})}static renderError(e){var c,h,m,g,p,b;const n=document.createElement("div");n.className="error-boundary",n.setAttribute("role","alert"),n.setAttribute("aria-live","assertive");const t=e.message||"An unexpected error occurred",i=((c=e.message)==null?void 0:c.includes("quota"))||((h=e.message)==null?void 0:h.includes("storage")),s=((m=e.message)==null?void 0:m.includes("network"))||((g=e.message)==null?void 0:g.includes("fetch")),a=((p=e.message)==null?void 0:p.includes("not found"))||((b=e.message)==null?void 0:b.includes(String(Y.NOT_FOUND)));let o=t,l="",u="‚ö†Ô∏è";return i?(o="Storage is full. Please clear some data or export your progress.",u="üíæ",l=`
        <button class="btn-primary" onclick="window.location.hash = '#/progress'">
          Go to Progress
        </button>
      `):s?(o="Unable to load data. Please check your connection and try again.",u="üåê",l=`
        <button class="btn-primary" onclick="window.location.reload()">
          Retry
        </button>
      `):a?(o="The requested content was not found.",u="üîç",l=`
        <button class="btn-primary" onclick="window.location.hash = '#/'">
          Go Home
        </button>
      `):l=`
        <button class="btn-primary" onclick="window.location.reload()">
          Refresh Page
        </button>
        <button class="btn-secondary" onclick="window.location.hash = '#/'">
          Go Home
        </button>
      `,n.innerHTML=`
      <div class="error-boundary-content">
        <div class="error-icon" aria-hidden="true">${u}</div>
        <h2 class="error-title">Something went wrong</h2>
        <p class="error-message">${o}</p>
        <div class="error-actions">
          ${l}
        </div>
        <details class="error-details">
          <summary>Technical Details</summary>
          <pre class="error-stack">${e.stack||e.message}</pre>
        </details>
      </div>
    `,n}static isNonRetryableError(e){return["not found",String(Y.NOT_FOUND),"validation"].some(t=>{var i;return(i=e.message)==null?void 0:i.includes(t)})}static calculateBackoffDelay(e,n,t){return n*Math.pow(t,e)}static wait(e){return d(this,null,function*(){return new Promise(n=>setTimeout(n,e))})}static withRetry(e,n={}){const{maxRetries:t=C.MAX_ATTEMPTS,delay:i=C.INITIAL_DELAY_MS,backoff:s=C.BACKOFF_MULTIPLIER,onRetry:a=null}=n;return function(...l){return d(this,null,function*(){let u;for(let c=0;c<=t;c++)try{return yield e.apply(this,l)}catch(h){if(u=h,c<t){if(D.isNonRetryableError(h))throw h;const m=D.calculateBackoffDelay(c,i,s);a&&a(c+1,t,m,h),yield D.wait(m)}}throw u})}}}class dP{constructor(){this.container=null,this.toasts=new Map,this.nextId=1,this.init()}init(){this.container||(this.container=document.createElement("div"),this.container.className="toast-container",this.container.setAttribute("aria-live","polite"),this.container.setAttribute("aria-atomic","false"),document.body.appendChild(this.container))}show(e={}){const{type:n="info",message:t="",duration:i=R.FIVE_SECONDS,dismissible:s=!0,action:a=null}=e,o=this.nextId++,l=this._createToast(o,n,t,s,a);return this.toasts.set(o,l),this.container.appendChild(l),requestAnimationFrame(()=>{l.classList.add("toast-show")}),i>0&&setTimeout(()=>{this.dismiss(o)},i),o}success(e,n={}){return this.show(z({type:"success",message:e},n))}error(e,n={}){return this.show(z({type:"error",message:e,duration:R.SEVEN_SECONDS},n))}warning(e,n={}){return this.show(z({type:"warning",message:e},n))}info(e,n={}){return this.show(z({type:"info",message:e},n))}dismiss(e){const n=this.toasts.get(e);n&&(n.classList.remove("toast-show"),n.classList.add("toast-hide"),setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n),this.toasts.delete(e)},iP.ANIMATION_DURATION_MS))}dismissAll(){this.toasts.forEach((e,n)=>{this.dismiss(n)})}_createToast(e,n,t,i,s){const a=document.createElement("div");a.className=`toast toast-${n}`,a.setAttribute("role","status"),a.setAttribute("aria-live",n==="error"?"assertive":"polite"),a.dataset.toastId=e;const o=this._getIcon(n),l=i?`<button class="toast-dismiss" aria-label="Dismiss notification" data-dismiss="${e}">√ó</button>`:"",u=s?`<button class="toast-action" data-action="${e}">${s.label}</button>`:"";return a.innerHTML=`
      <div class="toast-content">
        <span class="toast-icon" aria-hidden="true">${o}</span>
        <span class="toast-message">${t}</span>
      </div>
      ${u}
      ${l}
    `,i&&a.querySelector(".toast-dismiss").addEventListener("click",()=>{this.dismiss(e)}),s&&a.querySelector(".toast-action").addEventListener("click",()=>{s.onClick&&s.onClick(),this.dismiss(e)}),a}_getIcon(e){const n={success:"‚úì",error:"‚úï",warning:"‚ö†",info:"‚Ñπ"};return n[e]||n.info}handleStorageError(e){this.error("Storage is full. Please export your progress or clear some data.",{duration:R.TEN_SECONDS,action:{label:"Go to Progress",onClick:()=>{window.location.hash="#/progress"}}})}handleNetworkError(){this.error("Unable to load data. Please check your connection.",{duration:R.SEVEN_SECONDS,action:{label:"Retry",onClick:()=>{window.location.reload()}}})}handleError(e,n=""){const t=e.message||"An unexpected error occurred",i=n?`${n}: ${t}`:t;t.includes("quota")||t.includes("storage")?this.handleStorageError(e):t.includes("network")||t.includes("fetch")?this.handleNetworkError(e):this.error(i)}}const y=new dP;class mP{constructor(e,n,t=null,i=null){this.themeManager=e,this.router=n,this.specializationService=t,this.specializationSelector=i,this.element=null,this.mobileMenuOpen=!1}_renderSpecializationIndicator(){return""}render(){const e=this.themeManager.getTheme(),n=e==="dark"?"‚òÄÔ∏è":"üåô",t=e==="dark"?"Switch to light mode":"Switch to dark mode";return this.element=document.createElement("nav"),this.element.className="navigation",this.element.setAttribute("role","navigation"),this.element.setAttribute("aria-label","Main navigation"),this.element.innerHTML=`
      <div class="nav-container">
        <div class="nav-brand">
          <a href="#/" class="nav-logo" aria-label="LearnApp home">
            <span class="logo-icon" aria-hidden="true">üìö</span>
            <span class="logo-text">LearnApp</span>
          </a>
        </div>

        <button class="nav-toggle" aria-label="Toggle navigation menu" aria-expanded="false" aria-controls="nav-menu">
          <span class="hamburger"></span>
          <span class="sr-only">Menu</span>
        </button>

        <div class="nav-menu" id="nav-menu">
          <ul class="nav-links" role="list">
            <li><a href="#/" data-nav-link="/" class="nav-link" aria-label="Go to home page">Home</a></li>
            <li><a href="#/modules" data-nav-link="/modules" class="nav-link" aria-label="Browse all learning modules including IHK content">Modules</a></li>
            <li><a href="#/quizzes" data-nav-link="/quizzes" class="nav-link" aria-label="View all available quizzes including IHK quizzes">Quizzes</a></li>
            <li><a href="#/wheel" data-nav-link="/wheel" class="nav-link" aria-label="Spin the wheel to discover a random learning module">üéØ Lern-Modul</a></li>
            <li><a href="#/progress" data-nav-link="/progress" class="nav-link" aria-label="View your progress">Progress</a></li>
          </ul>

          <div class="nav-actions">
            ${this._renderSpecializationIndicator()}
            <button class="theme-toggle" aria-label="${t}" title="${t}">
              <span class="theme-icon" aria-hidden="true">${n}</span>
              <span class="sr-only">${t}</span>
            </button>
          </div>
        </div>
      </div>
      <div class="nav-scroll-progress" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0" aria-hidden="false">
        <div class="bar" aria-hidden="true"></div>
      </div>
    `,this._attachEventListeners(),this._updateActiveLink(),this.element}_attachEventListeners(){this.element.querySelector(".theme-toggle").addEventListener("click",()=>this._handleThemeToggle());const n=this.element.querySelector(".specialization-selector");n&&n.addEventListener("click",()=>this._handleSpecializationSelector()),this.element.querySelector(".nav-toggle").addEventListener("click",()=>this._toggleMobileMenu()),this.element.querySelectorAll(".nav-link").forEach(o=>{o.addEventListener("click",l=>{if(this.mobileMenuOpen){l.preventDefault();const u=this.element.querySelector(".nav-menu"),c=this.element.querySelector(".nav-toggle");u&&u.classList.remove("active"),c&&(c.classList.remove("active"),c.setAttribute("aria-expanded","false")),this.mobileMenuOpen=!1,document.body.style.overflow="",setTimeout(()=>{window.location.href=o.href},100)}})});const s=this.element.querySelector(".nav-logo");s&&s.addEventListener("click",()=>{this._closeMobileMenu()});const a=this.element.querySelector(".nav-menu");a&&a.addEventListener("click",o=>{const l=o.target.tagName==="A"?o.target:o.target.closest("a");if(l&&this.mobileMenuOpen){o.preventDefault(),a.classList.remove("active");const u=this.element.querySelector(".nav-toggle");u&&(u.classList.remove("active"),u.setAttribute("aria-expanded","false")),this.mobileMenuOpen=!1,document.body.style.overflow="",setTimeout(()=>{window.location.href=l.href},100)}}),document.addEventListener("click",o=>{this.mobileMenuOpen&&!this.element.contains(o.target)&&this._closeMobileMenu()}),document.addEventListener("keydown",o=>{o.key==="Escape"&&this.mobileMenuOpen&&this._closeMobileMenu()}),window.addEventListener("resize",()=>{window.innerWidth>768&&this.mobileMenuOpen&&this._closeMobileMenu()}),window.addEventListener("hashchange",()=>{this._updateActiveLink(),this._closeMobileMenu()}),document.addEventListener("click",o=>{const l=o.target.tagName==="A"?o.target:o.target.closest("a");if(l&&l.href&&l.href.includes("#")&&this.mobileMenuOpen){const u=this.element.querySelector(".nav-menu"),c=this.element.querySelector(".nav-toggle");u&&(u.classList.remove("active"),u.style.transform="translateX(-100%)",u.style.visibility="hidden"),c&&(c.classList.remove("active"),c.setAttribute("aria-expanded","false")),this.mobileMenuOpen=!1,document.body.style.overflow=""}}),window.addEventListener("themechange",o=>{const l=o.detail.theme==="dark"?"‚òÄÔ∏è":"üåô",u=this.element.querySelector(".theme-icon");u&&(u.textContent=l)}),window.addEventListener("specialization-changed",()=>{this._updateSpecializationIndicator()})}_handleSpecializationSelector(){var n;if(!this.specializationSelector){console.warn("SpecializationSelector not available");return}((n=this.specializationService)==null?void 0:n.hasSelectedSpecialization())?this.specializationSelector.showSpecializationModal(!1):this.specializationSelector.showSpecializationModal(!1)}_handleThemeToggle(){this.themeManager.toggleTheme();const n=this.themeManager.getTheme()==="dark"?"Switch to light mode":"Switch to dark mode",t=this.element.querySelector(".theme-toggle");if(t){t.setAttribute("aria-label",n),t.setAttribute("title",n);const i=t.querySelector(".sr-only");i&&(i.textContent=n)}}_toggleMobileMenu(){this.mobileMenuOpen=!this.mobileMenuOpen;const e=this.element.querySelector(".nav-menu"),n=this.element.querySelector(".nav-toggle");if(this.mobileMenuOpen){e.classList.add("active"),n.classList.add("active"),n.setAttribute("aria-expanded","true"),document.body.style.overflow="hidden";const t=e.querySelector(".nav-link");t&&setTimeout(()=>t.focus(),100)}else e.classList.remove("active"),n.classList.remove("active"),n.setAttribute("aria-expanded","false"),document.body.style.overflow=""}_closeMobileMenu(){if(this.mobileMenuOpen){this.mobileMenuOpen=!1;const e=this.element.querySelector(".nav-menu"),n=this.element.querySelector(".nav-toggle");e&&e.classList.remove("active"),n&&(n.classList.remove("active"),n.setAttribute("aria-expanded","false")),document.body.style.overflow=""}}_updateSpecializationIndicator(){if(!this.specializationService)return;const e=this.element.querySelector(".nav-actions");if(!e)return;const n=e.querySelector(".specialization-indicator, .specialization-selector");if(n){const t=this._renderSpecializationIndicator(),i=document.createElement("div");i.innerHTML=t;const s=i.firstElementChild;if(s){n.replaceWith(s);const a=e.querySelector(".specialization-selector");a&&a.addEventListener("click",()=>this._handleSpecializationSelector())}}}_updateActiveLink(){const e=window.location.hash.slice(1).split("?")[0]||"/";this.element.querySelectorAll(".nav-link").forEach(t=>{const i=t.getAttribute("data-nav-link");i===e||i!=="/"&&e.startsWith(i)?(t.classList.add("active"),t.setAttribute("aria-current","page")):(t.classList.remove("active"),t.removeAttribute("aria-current"))})}updateSpecialization(e){this._updateSpecializationIndicator()}cleanup(){this.mobileMenuOpen&&(document.body.style.overflow="")}}function M(f,e="de-DE"){if(!f)return"N/A";try{const n=new Date(f);return isNaN(n.getTime())?"Invalid Date":n.toLocaleDateString(e,{year:"numeric",month:"short",day:"numeric"})}catch(n){return console.error("Error formatting date:",n),"Invalid Date"}}function ee(f){if(!f)return"Recently";try{const e=new Date(f);if(isNaN(e.getTime()))return"Recently";const t=new Date-e,i=Math.floor(t/(1e3*60)),s=Math.floor(t/(1e3*60*60)),a=Math.floor(t/(1e3*60*60*24));return i<1?"Just now":i<60?`${i} minute${i>1?"s":""} ago`:s<24?`${s} hour${s>1?"s":""} ago`:a===1?"Yesterday":a<7?`${a} days ago`:M(f)}catch(e){return console.error("Error formatting time:",e),"Recently"}}class gP{constructor(e){this.progressService=e.progressService,this.moduleService=e.moduleService,this.stateManager=e.stateManager,this.router=e.router}render(){return d(this,null,function*(){const e=document.createElement("main");e.className="home-view",e.setAttribute("role","main"),e.setAttribute("aria-label","Home page");try{const n=yield this.progressService.getOverallProgress(),t=yield this.moduleService.getModules(),i=this._getRecentActivity();e.innerHTML=`
        ${this._renderHero(n)}
        ${this._renderQuickStats(n,t)}
        ${this._renderQuickActions()}
        ${this._renderRecentActivity(i)}
      `,this._attachEventListeners(e)}catch(n){console.error("Error rendering home view:",n),e.innerHTML=this._renderError()}return e})}_renderHero(e){const n=this._getGreeting(),t=e.overallPercentage||0;return`
      <section class="hero" aria-labelledby="hero-title">
        <div class="hero-content">
          <h1 id="hero-title" class="hero-title">${n}</h1>
          <p class="hero-subtitle">Continue your learning journey</p>
          <div class="hero-progress" role="region" aria-label="Overall progress indicator">
            <div class="progress-info">
              <span class="progress-label">Overall Progress</span>
              <span class="progress-percentage" aria-label="${t} percent complete">${t}%</span>
            </div>
            <div class="progress-bar" role="progressbar" aria-valuenow="${t}" aria-valuemin="0" aria-valuemax="100" aria-label="Overall progress">
              <div class="progress-fill" style="width: ${t}%"></div>
            </div>
          </div>
        </div>
      </section>
    `}_renderQuickStats(e,n){const t=e.modulesCompleted||0,i=e.totalModules||0,s=e.totalQuizzes||0,a=e.quizzesTaken||0,o=e.averageQuizScore||0,l=n.filter(u=>u.inProgress).length;return`
      <section class="quick-stats" aria-labelledby="stats-heading">
        <h2 id="stats-heading" class="sr-only">Learning Statistics</h2>
        <div class="stats-grid" role="list">
          <div class="stat-card" role="listitem">
            <div class="stat-icon" aria-hidden="true">üìö</div>
            <div class="stat-content">
              <div class="stat-value" aria-label="${t} of ${i} modules completed">${t}/${i}</div>
              <div class="stat-label">Modules Completed</div>
            </div>
          </div>

          <div class="stat-card" role="listitem">
            <div class="stat-icon" aria-hidden="true">üìù</div>
            <div class="stat-content">
              <div class="stat-value" aria-label="${a} of ${s} quizzes taken">${a}/${s}</div>
              <div class="stat-label">Quizzes Taken</div>
            </div>
          </div>

          <div class="stat-card" role="listitem">
            <div class="stat-icon" aria-hidden="true">‚≠ê</div>
            <div class="stat-content">
              <div class="stat-value" aria-label="Average score ${o} percent">${o}%</div>
              <div class="stat-label">Average Score</div>
            </div>
          </div>

          <div class="stat-card" role="listitem">
            <div class="stat-icon" aria-hidden="true">üéØ</div>
            <div class="stat-content">
              <div class="stat-value" aria-label="${l} modules in progress">${l}</div>
              <div class="stat-label">In Progress</div>
            </div>
          </div>
        </div>
      </section>
    `}_renderQuickActions(){return`
      <section class="quick-actions" aria-labelledby="actions-heading">
        <h2 id="actions-heading" class="section-title">Quick Actions</h2>
        <div class="actions-grid" role="group" aria-label="Quick action buttons">
          <button class="action-card" data-action="start-learning" aria-label="Start learning - Browse and study modules">
            <div class="action-icon" aria-hidden="true">üìñ</div>
            <div class="action-content">
              <h3 class="action-title">Start Learning</h3>
              <p class="action-description">Browse and study modules</p>
            </div>
          </button>

          <button class="action-card" data-action="take-quiz" aria-label="Take quiz - Test your knowledge">
            <div class="action-icon" aria-hidden="true">‚úèÔ∏è</div>
            <div class="action-content">
              <h3 class="action-title">Take Quiz</h3>
              <p class="action-description">Test your knowledge</p>
            </div>
          </button>

          <button class="action-card" data-action="view-progress" aria-label="View progress - Track your achievements">
            <div class="action-icon" aria-hidden="true">üìä</div>
            <div class="action-content">
              <h3 class="action-title">View Progress</h3>
              <p class="action-description">Track your achievements</p>
            </div>
          </button>
        </div>
      </section>
    `}_renderRecentActivity(e){return!e||e.length===0?`
        <section class="recent-activity" aria-labelledby="activity-heading">
          <h2 id="activity-heading" class="section-title">Recent Activity</h2>
          <div class="empty-state" role="status">
            <p>No recent activity yet. Start learning to see your progress here!</p>
          </div>
        </section>
      `:`
      <section class="recent-activity" aria-labelledby="activity-heading">
        <h2 id="activity-heading" class="section-title">Recent Activity</h2>
        <div class="activity-list" role="list" aria-label="Recent learning activities">
          ${e.map(t=>`
        <div class="activity-item" role="listitem">
          <div class="activity-icon" aria-hidden="true">${t.icon}</div>
          <div class="activity-content">
            <div class="activity-title">${t.title}</div>
            <div class="activity-time">${t.time}</div>
          </div>
        </div>
      `).join("")}
        </div>
      </section>
    `}_renderError(){return`
      <div class="error-state">
        <h2>Unable to load dashboard</h2>
        <p>Please try refreshing the page.</p>
        <button class="btn-primary" onclick="window.location.reload()">Refresh</button>
      </div>
    `}_getGreeting(){const e=new Date().getHours();return e<12?"Good Morning! üåÖ":e<18?"Good Afternoon! ‚òÄÔ∏è":"Good Evening! üåô"}_getRecentActivity(){const e=this.stateManager.getState("progress")||{},n=[],t=e.modulesCompleted||[],i=this.stateManager.getState("modules")||[];return t.slice(-3).forEach(a=>{const o=i.find(l=>l.id===a);o&&n.push({icon:"‚úÖ",title:`Completed: ${o.title}`,time:ee(e.lastActivity)})}),(e.quizAttempts||[]).slice(-3).forEach(a=>{n.push({icon:a.score>=70?"üéâ":"üìù",title:`Quiz completed with ${a.score}%`,time:ee(a.date)})}),n.slice(0,5)}_attachEventListeners(e){const n=e.querySelector('[data-action="start-learning"]'),t=e.querySelector('[data-action="take-quiz"]'),i=e.querySelector('[data-action="view-progress"]');n&&n.addEventListener("click",()=>{window.location.hash="#/modules"}),t&&t.addEventListener("click",()=>{window.location.hash="#/quizzes"}),i&&i.addEventListener("click",()=>{window.location.hash="#/progress"})}cleanup(){}}class A{static create(e={}){const{icon:n="üì≠",title:t="No items found",message:i="There are no items to display.",action:s=null,type:a="default"}=e,o=document.createElement("div");o.className=`empty-state empty-state-${a}`,o.setAttribute("role","status"),o.setAttribute("aria-label",t);const l=s?`<button class="btn-primary empty-state-action" data-action="empty-state">
           ${s.label}
         </button>`:"";return o.innerHTML=`
      <div class="empty-state-content">
        <div class="empty-state-icon" aria-hidden="true">${n}</div>
        <h3 class="empty-state-title">${t}</h3>
        <p class="empty-state-message">${i}</p>
        ${l}
      </div>
    `,s&&s.onClick&&o.querySelector('[data-action="empty-state"]').addEventListener("click",s.onClick),o}static noModules(e="all"){const n={all:{title:"No modules available",message:"There are no learning modules available at the moment."},completed:{title:"No completed modules",message:"You haven't completed any modules yet. Start learning to see your progress here!"},"in-progress":{title:"No modules in progress",message:"You don't have any modules in progress. Start a new module to begin learning!"},"not-started":{title:"All modules started",message:"Great job! You've started all available modules."}},t=n[e]||n.all;return A.create({icon:"üìö",title:t.title,message:t.message,action:e!=="all"?{label:"View All Modules",onClick:()=>{window.location.hash="#/modules"}}:null})}static noQuizzes(e="all"){return A.create({icon:"üìù",title:"No quizzes available",message:"There are no quizzes available at the moment.",action:{label:"Browse Modules",onClick:()=>{window.location.hash="#/modules"}}})}static noQuizHistory(){return A.create({icon:"üìä",title:"No quiz history",message:"You haven't taken any quizzes yet. Take a quiz to see your results here!",action:{label:"Browse Quizzes",onClick:()=>{window.location.hash="#/quizzes"}}})}static noProgress(){return A.create({icon:"üéØ",title:"No progress yet",message:"Start learning to track your progress!",action:{label:"Start Learning",onClick:()=>{window.location.hash="#/modules"}}})}static noSearchResults(e=""){return A.create({icon:"üîç",title:"No results found",message:e?`No results found for "${e}". Try a different search term.`:"No results found. Try adjusting your search.",type:"search"})}static noFilteredResults(e=""){return A.create({icon:"üîé",title:"No matching items",message:e?`No items match the "${e}" filter. Try a different filter.`:"No items match your current filters.",type:"filter"})}static error(e="Something went wrong"){return A.create({icon:"‚ö†Ô∏è",title:"Unable to load content",message:e,type:"error",action:{label:"Try Again",onClick:()=>{window.location.reload()}}})}}class _{static render(e="Loading..."){return`
      <div class="loading-spinner loading-spinner-medium" role="status" aria-live="polite" aria-busy="true">
        <div class="spinner-content">
          <div class="spinner" aria-hidden="true">
            <div class="spinner-circle"></div>
          </div>
          <p class="spinner-message">${e}</p>
          <span class="sr-only">${e}</span>
        </div>
      </div>
    `}static create(e={}){const{size:n="medium",message:t="Loading...",fullscreen:i=!1,overlay:s=!1}=e,a=document.createElement("div");return a.className=`loading-spinner loading-spinner-${n}`,a.setAttribute("role","status"),a.setAttribute("aria-live","polite"),a.setAttribute("aria-busy","true"),i&&a.classList.add("loading-spinner-fullscreen"),s&&a.classList.add("loading-spinner-overlay"),a.innerHTML=`
      <div class="spinner-content">
        <div class="spinner" aria-hidden="true">
          <div class="spinner-circle"></div>
        </div>
        <p class="spinner-message">${t}</p>
        <span class="sr-only">${t}</span>
      </div>
    `,a}static show(e,n={}){const t=_.create(n);t.dataset.loadingSpinner="true";const i=e.innerHTML;return e.innerHTML="",e.appendChild(t),e.dataset.previousContent=i,t}static hide(e){const n=e.querySelector('[data-loading-spinner="true"]');n&&n.remove(),e.dataset.previousContent&&(e.innerHTML=e.dataset.previousContent,delete e.dataset.previousContent)}static withLoading(i,s){return d(this,arguments,function*(e,n,t={}){try{const a=yield n();return _.hide(e),a}catch(a){throw _.hide(e),a}})}static createInline(e=""){const n=document.createElement("span");return n.className="loading-inline",n.setAttribute("role","status"),n.setAttribute("aria-live","polite"),n.innerHTML=`
      <span class="spinner-inline" aria-hidden="true"></span>
      ${e?`<span class="spinner-inline-text">${e}</span>`:""}
      <span class="sr-only">Loading${e?": "+e:""}</span>
    `,n}static setButtonLoading(e,n=!0){n?(e.disabled=!0,e.dataset.originalText=e.innerHTML,e.innerHTML="",e.appendChild(_.createInline()),e.classList.add("btn-loading")):(e.disabled=!1,e.dataset.originalText&&(e.innerHTML=e.dataset.originalText,delete e.dataset.originalText),e.classList.remove("btn-loading"))}static createSkeleton(e="card",n=1){const t=document.createElement("div");t.className="skeleton-container",t.setAttribute("aria-busy","true"),t.setAttribute("aria-label","Loading content");const i=[];for(let s=0;s<n;s++)i.push(_._getSkeletonTemplate(e));return t.innerHTML=i.join(""),t}static _getSkeletonTemplate(e){switch(e){case"card":return`
          <div class="skeleton skeleton-card">
            <div class="skeleton-header">
              <div class="skeleton-line skeleton-line-short"></div>
            </div>
            <div class="skeleton-body">
              <div class="skeleton-line skeleton-line-long"></div>
              <div class="skeleton-line skeleton-line-medium"></div>
              <div class="skeleton-line skeleton-line-short"></div>
            </div>
          </div>
        `;case"list":return`
          <div class="skeleton skeleton-list-item">
            <div class="skeleton-line skeleton-line-long"></div>
            <div class="skeleton-line skeleton-line-medium"></div>
          </div>
        `;case"text":return`
          <div class="skeleton skeleton-text">
            <div class="skeleton-line skeleton-line-long"></div>
            <div class="skeleton-line skeleton-line-long"></div>
            <div class="skeleton-line skeleton-line-medium"></div>
          </div>
        `;default:return'<div class="skeleton skeleton-default"></div>'}}}class hP{constructor(e){this.moduleService=e.moduleService,this.progressService=e.progressService,this.specializationService=e.specializationService,this.router=e.router,this.currentFilter="all",this.currentCategoryFilter="all"}render(){return d(this,null,function*(){const e=document.createElement("main");e.className="module-list-view",e.setAttribute("role","main"),e.setAttribute("aria-label","Learning modules page");const n=_.create({message:"Loading modules...",size:"medium"});e.appendChild(n);try{this.currentSpecialization=this.specializationService.getCurrentSpecialization();const t=yield this.moduleService.getModules();this.modules=t,n.remove(),e.innerHTML=`
        <div class="module-list-header">
          <h1 class="page-title">Learning Modules</h1>
          <p class="page-description">Browse and study our collection of learning modules</p>
        </div>

        ${this._renderFilters()}
        ${this._renderCategoryFilters()}
        ${this._renderModuleGrid(t)}
      `,this._attachEventListeners(e)}catch(t){console.error("Error rendering module list:",t),y.error("Failed to load modules. Please try again."),n.remove();const i=A.error("Unable to load modules. Please try again.");e.appendChild(i)}return e})}_renderFilters(){return`
      <div class="module-filters" role="group" aria-label="Filter modules by status">
        <button class="filter-btn active" data-filter="all" aria-pressed="true" aria-label="Show all modules">
          All Modules
        </button>
        <button class="filter-btn" data-filter="completed" aria-pressed="false" aria-label="Show completed modules only">
          Completed
        </button>
        <button class="filter-btn" data-filter="in-progress" aria-pressed="false" aria-label="Show in progress modules only">
          In Progress
        </button>
        <button class="filter-btn" data-filter="not-started" aria-pressed="false" aria-label="Show not started modules only">
          Not Started
        </button>
      </div>
    `}_renderCategoryFilters(){return`
      <div class="module-category-filters" role="group" aria-label="Filter modules by category">
        <h3 class="category-filters-title">Filter by Category</h3>
        <div class="category-filters-buttons">
          ${this._getCategoryFilters().map(t=>`
      <button 
        class="category-filter-btn ${t.id==="all"?"active":""}" 
        data-category="${t.id}" 
        aria-pressed="${t.id==="all"?"true":"false"}"
        aria-label="Show ${t.name} modules"
        style="--category-color: ${t.color}"
      >
        <span class="category-icon" aria-hidden="true">${t.icon}</span>
        <span class="category-name">${t.name}</span>
      </button>
    `).join("")}
        </div>
      </div>
    `}_getCategoryFilters(){return[{id:"all",name:"All Categories",icon:"üìö",color:"#6b7280"},{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",icon:"üìä",color:"#2563eb"},{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",icon:"üíª",color:"#dc2626"},{id:"allgemein",name:"Allgemein",icon:"üìñ",color:"#059669"}]}_renderModuleGrid(e){console.warn("üéØ Rendering",e.length,"modules with filter:",this.currentCategoryFilter);const n=this._filterModules(e);return console.warn("üéØ After filtering:",n.length,"modules remain"),n.length===0?A.noModules(this.currentFilter).outerHTML:`
      <div class="module-grid" role="list" aria-label="Learning modules">
        ${n.map(i=>this._renderModuleCard(i)).join("")}
      </div>
    `}_renderModuleCard(e){if(!e||!e.id)return console.warn("Invalid module data:",e),"";const n=e.title||"Untitled Module",t=e.description||"No description available";e.category;const i=e.duration||e.estimatedTime||30,s=e.completed?100:e.inProgress?50:0,a=this._getStatusBadge(e),o=this._getCategoryIndicator(e),l=e.prerequisites&&e.prerequisites.length>0?`<div class="module-prerequisites">
           <span class="prereq-label">Prerequisites:</span>
           <span class="prereq-count">${e.prerequisites.length} module${e.prerequisites.length>1?"s":""}</span>
         </div>`:"",u=e.completed?"Review":e.inProgress?"Continue":"Start";return`
      <article class="module-card ${o.cssClass}" data-module-id="${e.id}" data-category="${o.category}" role="listitem" aria-labelledby="module-title-${e.id}">
        <div class="module-card-header">
          <div class="module-category-display">
            <span class="category-indicator" style="background-color: ${o.color}" aria-hidden="true">${o.icon}</span>
            <span class="category-text">${o.displayName}</span>
          </div>
          ${a}
        </div>

        <div class="module-card-body">
          <h3 id="module-title-${e.id}" class="module-title">${n}</h3>
          <p class="module-description">${t}</p>

          <div class="module-meta">
            <div class="module-duration">
              <span class="meta-icon" aria-hidden="true">‚è±Ô∏è</span>
              <span><span class="sr-only">Duration: </span>${i} minutes</span>
            </div>
            ${l}
          </div>

          <div class="module-progress">
            <div class="progress-bar" role="progressbar" aria-valuenow="${s}" aria-valuemin="0" aria-valuemax="100" aria-label="Module progress: ${s} percent">
              <div class="progress-fill" style="width: ${s}%"></div>
            </div>
            <div class="progress-text" aria-hidden="true">${s}% complete</div>
          </div>
        </div>

        <div class="module-card-footer">
          <button class="btn-primary btn-sm" data-action="view-module" data-module-id="${e.id}" aria-label="${u} module: ${n}">
            ${u} Module
          </button>
        </div>
      </article>
    `}_getCategoryIndicator(e){if(e.threeTierCategory)return this._getThreeTierCategoryIndicator(e.threeTierCategory);const n=e.category||e.categoryId;return n?n.includes("BP-DPA")||n.includes("bp-dpa")?this._getThreeTierCategoryIndicator("daten-prozessanalyse"):n.includes("BP-AE")||n.includes("bp-ae")||n==="BP-01"||n==="BP-02"||n==="BP-03"||n==="BP-04"||n==="BP-05"?this._getThreeTierCategoryIndicator("anwendungsentwicklung"):this._getThreeTierCategoryIndicator("allgemein"):this._getThreeTierCategoryIndicator("allgemein")}_getThreeTierCategoryIndicator(e){const n={"daten-prozessanalyse":{category:"daten-prozessanalyse",cssClass:"module-daten-prozessanalyse",icon:"üìä",color:"#2563eb",displayName:"Daten und Prozessanalyse"},anwendungsentwicklung:{category:"anwendungsentwicklung",cssClass:"module-anwendungsentwicklung",icon:"üíª",color:"#dc2626",displayName:"Anwendungsentwicklung"},allgemein:{category:"allgemein",cssClass:"module-allgemein",icon:"üìñ",color:"#059669",displayName:"Allgemein"}};return n[e]||n.allgemein}_getStatusBadge(e){return e.completed?'<span class="badge badge-success">‚úì Completed</span>':e.inProgress?'<span class="badge badge-warning">In Progress</span>':'<span class="badge badge-default">Not Started</span>'}_filterModules(e){let n=e;switch(this.currentFilter){case"completed":n=n.filter(t=>t.completed);break;case"in-progress":n=n.filter(t=>t.inProgress&&!t.completed);break;case"not-started":n=n.filter(t=>!t.completed&&!t.inProgress);break}return this.currentCategoryFilter!=="all"&&(n=n.filter(t=>this._getCategoryIndicator(t).category===this.currentCategoryFilter)),n}_attachEventListeners(e){e.querySelectorAll(".filter-btn").forEach(a=>{a.addEventListener("click",o=>{const l=o.target.dataset.filter;this._handleFilterChange(l,e)})}),e.querySelectorAll(".category-filter-btn").forEach((a,o)=>{a.addEventListener("click",l=>{l.preventDefault(),l.stopPropagation();const u=l.target.closest(".category-filter-btn"),c=u?u.dataset.category:a.dataset.category;this._handleCategoryFilterChange(c,e)})}),e.querySelectorAll('[data-action="view-module"]').forEach(a=>{a.addEventListener("click",o=>{const l=o.target.dataset.moduleId;window.location.hash=`#/modules/${l}`})}),e.querySelectorAll(".module-card").forEach(a=>{a.addEventListener("click",o=>{if(o.target.closest("button"))return;const l=a.dataset.moduleId;window.location.hash=`#/modules/${l}`}),a.style.cursor="pointer"})}_handleFilterChange(e,n){this.currentFilter=e,n.querySelectorAll(".filter-btn").forEach(i=>{i.dataset.filter===e?(i.classList.add("active"),i.setAttribute("aria-pressed","true")):(i.classList.remove("active"),i.setAttribute("aria-pressed","false"))}),this._refreshModuleGrid(n)}_handleCategoryFilterChange(e,n){this.currentCategoryFilter=e,n.querySelectorAll(".category-filter-btn").forEach(i=>{i.dataset.category===e?(i.classList.add("active"),i.setAttribute("aria-pressed","true")):(i.classList.remove("active"),i.setAttribute("aria-pressed","false"))}),this._refreshModuleGrid(n)}_refreshModuleGrid(e){const n=e.querySelector(".module-grid");if(n){const t=this._renderModuleGrid(this.modules),i=document.createElement("div");i.innerHTML=t;const s=i.querySelector(".module-grid");s&&(n.parentNode.replaceChild(s,n),s.querySelectorAll('[data-action="view-module"]').forEach(l=>{l.addEventListener("click",u=>{const c=u.target.dataset.moduleId;window.location.hash=`#/modules/${c}`})}),s.querySelectorAll(".module-card").forEach(l=>{l.addEventListener("click",u=>{if(u.target.closest("button"))return;const c=l.dataset.moduleId;window.location.hash=`#/modules/${c}`}),l.style.cursor="pointer",l.setAttribute("tabindex","0"),l.addEventListener("keydown",u=>{if((u.key==="Enter"||u.key===" ")&&!u.target.closest("button")){u.preventDefault();const c=l.dataset.moduleId;window.location.hash=`#/modules/${c}`}})}))}}cleanup(){}}class pP{constructor(e,n){this.moduleService=e.moduleService,this.quizService=e.quizService,this.ihkContentService=e.ihkContentService,this.router=e.router,this.moduleId=n.id,this.module=null,this.scrollProgress=0,this.marked=null,this.hljs=null}_loadDependencies(){return d(this,null,function*(){if(!this.marked||!this.hljs)try{const[e,n]=yield Promise.all([r(()=>import("./vendor-markdown-CitzaZNW.js"),[],import.meta.url),r(()=>import("./vendor-highlight-BBc-AmEf.js"),[],import.meta.url)]);this.marked=e.marked,this.hljs=n.default,this.marked.setOptions({highlight:(t,i)=>{if(i&&this.hljs.getLanguage&&this.hljs.getLanguage(i))try{return this.hljs.highlight(t,{language:i}).value}catch(s){console.warn("Highlight error:",s)}return this.hljs&&typeof this.hljs.highlightAuto=="function"?this.hljs.highlightAuto(t).value:this._escapeHtml(t)},breaks:!0,gfm:!0})}catch(e){console.warn("Failed to load markdown/highlight dependencies; using fallback parser",e),this.hljs={getLanguage:()=>!1,highlightAuto:n=>({value:this._escapeHtml(n)})},this.marked={parse:n=>{if(!n)return"";let t=String(n);return t=t.replace(/```([a-zA-Z0-9-_]*)\n([\s\S]*?)```/g,(s,a,o)=>`<pre><code>${this._escapeHtml(o)}</code></pre>`),t=t.replace(/^###\s*(.*)$/gm,"<h3>$1</h3>"),t=t.replace(/^##\s*(.*)$/gm,"<h2>$1</h2>"),t=t.replace(/^#\s*(.*)$/gm,"<h1>$1</h1>"),t=t.replace(/`([^`]+)`/g,(s,a)=>`<code>${this._escapeHtml(a)}</code>`),t=t.replace(/\[([^\]]+)\]\(([^)]+)\)/g,'<a href="$2">$1</a>'),t.split(/\n\s*\n/).map(s=>s.trim()).filter(Boolean).map(s=>`<p>${s}</p>`).join(`
`)}}}})}render(){return d(this,null,function*(){const e=document.createElement("div");e.className="module-detail-view",e.setAttribute("role","main"),e.setAttribute("aria-label","Module content");try{yield Promise.all([this._loadDependencies(),this.moduleService.getModuleById(this.moduleId).then(n=>{this.module=n})]),e.innerHTML=`
        ${this._renderScrollProgress()}
        ${this._renderHeader()}
        <div class="module-detail-container">
          ${this._renderSidebar()}
          ${this._renderContent()}
        </div>
      `,this._attachEventListeners(e),this._generateTableOfContents(e),this._setupScrollTracking(e);try{const n=e.querySelector(".markdown-content");if(n&&this.module.microQuizzes&&this.module.microQuizzes.length>0&&!n.querySelector(".micro-quiz-inline")){const i=document.createElement("div");i.className="micro-quiz-inline",i.dataset.quizId=this.module.microQuizzes[0];const s=n.querySelector("pre")||n.querySelector("h2")||n.querySelector("h3");s&&s.parentNode?s.parentNode.insertBefore(i,s.nextSibling):n.appendChild(i)}}catch(n){console.warn("Failed to inject inline micro-quiz host",n)}try{const n=e.querySelectorAll(".micro-quiz-inline");if(n&&n.length>0){const{default:t}=yield r(()=>d(this,null,function*(){const{default:i}=yield import("./MicroQuizPanel-DCB6zszV.js");return{default:i}}),[],import.meta.url);this._inlineMicroQuizPanels=this._inlineMicroQuizPanels||[];for(const i of Array.from(n)){const s=i.dataset.quizId;if(!s)continue;let a=null;try{a=yield this.ihkContentService.getQuizById(s)}catch(o){a=null}if(!a)try{const o=yield ne(Object.assign({"../data/ihk/quizzes/bp-01-conception-quiz.json":()=>r(()=>Promise.resolve().then(()=>be),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-documentation-110---2024-12-15-micro-1.json":()=>r(()=>import("./bp-01-documentation-110---2024-12-15-micro-1-Dn42FgRA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-120---2025-01-10-micro-1.json":()=>r(()=>import("./bp-01-documentation-120---2025-01-10-micro-1-VHX5bjlM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-architektur-dokumentation-micro-1.json":()=>r(()=>import("./bp-01-documentation-architektur-dokumentation-micro-1-Cs5BBwRx.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-arten-der-dokumentation-micro-1.json":()=>r(()=>import("./bp-01-documentation-arten-der-dokumentation-micro-1-Bsdtk4YE.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-best-practices-micro-1.json":()=>r(()=>import("./bp-01-documentation-best-practices-micro-1-y5wTMav2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-changelog-micro-1.json":()=>r(()=>import("./bp-01-documentation-changelog-micro-1-CTVj6sUT.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-deployment-dokumentation-micro-1.json":()=>r(()=>import("./bp-01-documentation-deployment-dokumentation-micro-1-B0ZJw08T.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-dokumentations-standards-micro-1.json":()=>r(()=>import("./bp-01-documentation-dokumentations-standards-micro-1-Bnv9bY39.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-dokumentations-tools-micro-1.json":()=>r(()=>import("./bp-01-documentation-dokumentations-tools-micro-1-DQ4wq4MA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-documentation-einfuhrung-micro-1-DzUoTKUs.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-features-micro-1.json":()=>r(()=>import("./bp-01-documentation-features-micro-1-BFxS5z6v.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-get-apiusersid-micro-1.json":()=>r(()=>import("./bp-01-documentation-get-apiusersid-micro-1-gJgbjjOR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-installation-micro-1.json":()=>r(()=>import("./bp-01-documentation-installation-micro-1-5M4Dqndz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-konfiguration-micro-1.json":()=>r(()=>import("./bp-01-documentation-konfiguration-micro-1-WN1zmG_Q.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-lizenz-micro-1.json":()=>r(()=>import("./bp-01-documentation-lizenz-micro-1-BOHNyfqw.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-monitoring-micro-1.json":()=>r(()=>import("./bp-01-documentation-monitoring-micro-1-edK_2mdi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-documentation-prufungsrelevante-aspekte-micro-1-DGiC9BSX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ie),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-documentation-start-micro-1.json":()=>r(()=>import("./bp-01-documentation-start-micro-1-BngOgNOz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-tests-micro-1.json":()=>r(()=>import("./bp-01-documentation-tests-micro-1-CD0oSQy1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-umgebungsvariablen-micro-1.json":()=>r(()=>import("./bp-01-documentation-umgebungsvariablen-micro-1-1QNPnxc0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-verwendung-micro-1.json":()=>r(()=>import("./bp-01-documentation-verwendung-micro-1-CijWhErP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-documentation-voraussetzungen-micro-1.json":()=>r(()=>import("./bp-01-documentation-voraussetzungen-micro-1-BvvlAgVO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-best-practices-micro-1.json":()=>r(()=>import("./bp-01-kerberos-best-practices-micro-1-CsVcRo_o.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-kerberos-authentifizierungsprozess-micro-1.json":()=>r(()=>import("./bp-01-kerberos-kerberos-authentifizierungsprozess-micro-1-BGol0Cjq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-kerberos-vs-andere-authentifizierungsmethoden-micro-1.json":()=>r(()=>import("./bp-01-kerberos-kerberos-vs-andere-authentifizierungsmethoden-micro-1-C166jHdL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-kernkomponenten-von-kerberos-micro-1.json":()=>r(()=>import("./bp-01-kerberos-kernkomponenten-von-kerberos-micro-1-91OvBIep.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-konfigurationsbeispiel-micro-1.json":()=>r(()=>import("./bp-01-kerberos-konfigurationsbeispiel-micro-1-D82iCKu_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-nachteile-und-herausforderungen-micro-1.json":()=>r(()=>import("./bp-01-kerberos-nachteile-und-herausforderungen-micro-1-CUuQA_5f.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-praktische-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-01-kerberos-praktische-anwendungsfalle-micro-1-CbVZu_Kz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-sicherheitsmechanismen-micro-1.json":()=>r(()=>import("./bp-01-kerberos-sicherheitsmechanismen-micro-1-8g6aV0lU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-troubleshooting-micro-1.json":()=>r(()=>import("./bp-01-kerberos-troubleshooting-micro-1-DNDcfJzt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-vorteile-von-kerberos-micro-1.json":()=>r(()=>import("./bp-01-kerberos-vorteile-von-kerberos-micro-1-B8w-J7Ii.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-was-ist-kerberos-micro-1.json":()=>r(()=>import("./bp-01-kerberos-was-ist-kerberos-micro-1-uQEfYKuU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-kerberos-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-01-kerberos-zusammenfassung-micro-1-BHbp9Ulr.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-alerting-micro-1.json":()=>r(()=>import("./bp-01-monitoring-alerting-micro-1-1xoQLGzp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-dashboards-micro-1.json":()=>r(()=>import("./bp-01-monitoring-dashboards-micro-1-lBU-E4VI.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-monitoring-einfuhrung-micro-1-DgiGEyCz.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-health-checks-micro-1.json":()=>r(()=>import("./bp-01-monitoring-health-checks-micro-1-BmKiGVI5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-logging-best-practices-micro-1.json":()=>r(()=>import("./bp-01-monitoring-logging-best-practices-micro-1-3P8KGFaX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-metriken-sammeln-micro-1.json":()=>r(()=>import("./bp-01-monitoring-metriken-sammeln-micro-1-Y9oCqoVr.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-monitoring-bereiche-micro-1.json":()=>r(()=>import("./bp-01-monitoring-monitoring-bereiche-micro-1-CrPdk1w3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-monitoring-metriken-micro-1.json":()=>r(()=>import("./bp-01-monitoring-monitoring-metriken-micro-1-DMxtxpO5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-monitoring-tools-micro-1.json":()=>r(()=>import("./bp-01-monitoring-monitoring-tools-micro-1-BUHy5nsb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-monitoring-prufungsrelevante-aspekte-micro-1-DyV6DF64.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ue),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-monitoring-sla-und-slo-micro-1.json":()=>r(()=>import("./bp-01-monitoring-sla-und-slo-micro-1-_ssb5FAR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-osi-modell-und-tcpip-modell-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-osi-modell-und-tcpip-modell-micro-1-CpyUhCh6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-ports-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-ports-micro-1-BdtdyQJU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-prufungsrelevante-aspekte-micro-1-CZUiy7Li.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-network-protocols-wichtige-protokolle-micro-1.json":()=>r(()=>import("./bp-01-network-protocols-wichtige-protokolle-micro-1-aYir2nzb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-einfuhrung-micro-1-DEug_Doq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-netzwerktypen-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-netzwerktypen-micro-1-DdKdFLDx.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-netzwerktypen-micro-3.json":()=>r(()=>import("./bp-01-networks-basics-netzwerktypen-micro-3-D9kvESMt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-prufungsrelevante-aspekte-micro-1-BxN2ZUYL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-prufungsrelevante-aspekte-micro-4.json":()=>r(()=>import("./bp-01-networks-basics-prufungsrelevante-aspekte-micro-4-BN7cA6VC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-vergleich-wichtiger-topologien-micro-2.json":()=>r(()=>import("./bp-01-networks-basics-vergleich-wichtiger-topologien-micro-2-7iWT430V.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-networks-basics-wichtige-netzwerktopologien-micro-1.json":()=>r(()=>import("./bp-01-networks-basics-wichtige-netzwerktopologien-micro-1-Dw6rSY0P.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-architektur-micro-1.json":()=>r(()=>import("./bp-01-odbc-architektur-micro-1-BkGIjptE.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-connection-pooling-micro-1.json":()=>r(()=>import("./bp-01-odbc-connection-pooling-micro-1-C33qSisA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-dsn-data-source-name-micro-1.json":()=>r(()=>import("./bp-01-odbc-dsn-data-source-name-micro-1-DAm25Mea.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-einfuhrung-micro-1.json":()=>r(()=>import("./bp-01-odbc-einfuhrung-micro-1-DXjGg3Ct.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-fehlerbehandlung-micro-1.json":()=>r(()=>import("./bp-01-odbc-fehlerbehandlung-micro-1-C7btM3iH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-odbc-funktionen-micro-1.json":()=>r(()=>import("./bp-01-odbc-odbc-funktionen-micro-1-P1XjGK3o.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-odbc-in-verschiedenen-sprachen-micro-1.json":()=>r(()=>import("./bp-01-odbc-odbc-in-verschiedenen-sprachen-micro-1-CWwxV8jG.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-odbc-vs-native-treiber-micro-1.json":()=>r(()=>import("./bp-01-odbc-odbc-vs-native-treiber-micro-1-DJxMPjmJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-01-odbc-prufungsrelevante-aspekte-micro-1-0PfNu6oR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-01-odbc-quiz.json":()=>r(()=>Promise.resolve().then(()=>on),void 0,import.meta.url),"../data/ihk/quizzes/bp-01-odbc-vorteile-von-odbc-micro-1.json":()=>r(()=>import("./bp-01-odbc-vorteile-von-odbc-micro-1-Dd0SnM4a.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-cloud-service-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-cloud-service-modelle-micro-1-BK6Qvs-P.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-deployment-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-deployment-modelle-micro-1-CboQ-i_J.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-einfuhrung-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-einfuhrung-micro-1-CMyizBlT.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-iaas-infrastructure-as-a-service-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-iaas-infrastructure-as-a-service-micro-1-CWukNkud.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-kostenmodelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-kostenmodelle-micro-1-Bhw9qwLJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-paas-platform-as-a-service-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-paas-platform-as-a-service-micro-1-CCo7O7LS.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-prufungsrelevante-aspekte-micro-1-DREHEMfB.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-quiz.json":()=>r(()=>Promise.resolve().then(()=>yn),void 0,import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-saas-software-as-a-service-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-saas-software-as-a-service-micro-1-CmFbxa4f.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-sicherheit-in-der-cloud-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-sicherheit-in-der-cloud-micro-1-DdzozhYs.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-vergleich-der-service-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-vergleich-der-service-modelle-micro-1-B4E_unS0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-cloud-models-weitere-cloud-modelle-micro-1.json":()=>r(()=>import("./bp-02-cloud-models-weitere-cloud-modelle-micro-1-BhF8kvkS.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-02-data-formats-anwendungsfalle-micro-1-_2XLP8ea.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-csv-comma-separated-values-micro-1.json":()=>r(()=>import("./bp-02-data-formats-csv-comma-separated-values-micro-1-Dloewnrt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-einfuhrung-micro-1.json":()=>r(()=>import("./bp-02-data-formats-einfuhrung-micro-1-po-cyPHf.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-format-vergleich-micro-1.json":()=>r(()=>import("./bp-02-data-formats-format-vergleich-micro-1-Cr1EoTdH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-json-javascript-object-notation-micro-1.json":()=>r(()=>import("./bp-02-data-formats-json-javascript-object-notation-micro-1-BCuMSNB3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-konvertierung-micro-1.json":()=>r(()=>import("./bp-02-data-formats-konvertierung-micro-1-CjWJGO2m.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-02-data-formats-prufungsrelevante-aspekte-micro-1-BCiN5dF8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-quiz.json":()=>r(()=>Promise.resolve().then(()=>Mn),void 0,import.meta.url),"../data/ihk/quizzes/bp-02-data-formats-xml-extensible-markup-language-micro-1.json":()=>r(()=>import("./bp-02-data-formats-xml-extensible-markup-language-micro-1-Ck3OzSXK.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-02-nas-san-anwendungsfalle-micro-1-CS4H0JZZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-best-practices-micro-1.json":()=>r(()=>import("./bp-02-nas-san-best-practices-micro-1-BDe4uGGg.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-hybrid-ansatze-micro-1.json":()=>r(()=>import("./bp-02-nas-san-hybrid-ansatze-micro-1-5WLv1P5B.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-konfigurationsbeispiele-micro-1.json":()=>r(()=>import("./bp-02-nas-san-konfigurationsbeispiele-micro-1-DPzjRu8Q.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1.json":()=>r(()=>import("./bp-02-nas-san-nas-vs-san---detaillierter-vergleich-micro-1-BQRVoYLW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-network-attached-storage-nas-micro-1.json":()=>r(()=>import("./bp-02-nas-san-network-attached-storage-nas-micro-1-DiUASTT9.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-performance-vergleich-micro-1.json":()=>r(()=>import("./bp-02-nas-san-performance-vergleich-micro-1-Cd2FqHmc.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-quiz.json":()=>r(()=>Promise.resolve().then(()=>Qn),void 0,import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-storage-area-network-san-micro-1.json":()=>r(()=>import("./bp-02-nas-san-storage-area-network-san-micro-1-DRe24iYT.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-ubersicht-micro-1.json":()=>r(()=>import("./bp-02-nas-san-ubersicht-micro-1-BnewtUPP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-nas-san-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-02-nas-san-zusammenfassung-micro-1-C-6Y35Xk.js"),[],import.meta.url),"../data/ihk/quizzes/bp-02-quality-assurance-quiz.json":()=>r(()=>Promise.resolve().then(()=>ct),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-cps-abfragerhythmus-planen-micro-1.json":()=>r(()=>import("./bp-03-cps-abfragerhythmus-planen-micro-1-CdR5buNX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-beispiele-fur-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-beispiele-fur-cps-micro-1-h-LtO0LO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-bibliotheken-und-frameworks-fur-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-bibliotheken-und-frameworks-fur-cps-micro-1-Bt0JBjoM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-cps-architektur-micro-1.json":()=>r(()=>import("./bp-03-cps-cps-architektur-micro-1-CEu10RT1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-herausforderungen-bei-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-herausforderungen-bei-cps-micro-1-DJWcRD79.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-komponenten-von-cps-micro-1.json":()=>r(()=>import("./bp-03-cps-komponenten-von-cps-micro-1-Bm1Xbgb0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-praktische-anwendungsfalle-micro-1.json":()=>r(()=>import("./bp-03-cps-praktische-anwendungsfalle-micro-1-B6rs4e3y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-quiz.json":()=>r(()=>Promise.resolve().then(()=>At),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-cps-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-03-cps-ubungsaufgaben-micro-1-F3_HSty5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-was-sind-cyber-physische-systeme-micro-1.json":()=>r(()=>import("./bp-03-cps-was-sind-cyber-physische-systeme-micro-1-BiRsPFuD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-cps-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-03-cps-zusammenfassung-micro-1-DHuA3Ra8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-authentifizierung-micro-1.json":()=>r(()=>import("./bp-03-rest-api-authentifizierung-micro-1-CMRXLLUd.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-cors-cross-origin-resource-sharing-micro-1.json":()=>r(()=>import("./bp-03-rest-api-cors-cross-origin-resource-sharing-micro-1-DqVQPgae.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-einfuhrung-micro-1.json":()=>r(()=>import("./bp-03-rest-api-einfuhrung-micro-1-BRMwoR5j.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-http-methoden-micro-1.json":()=>r(()=>import("./bp-03-rest-api-http-methoden-micro-1-Bt-21ZGO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-http-status-codes-micro-1.json":()=>r(()=>import("./bp-03-rest-api-http-status-codes-micro-1-Bq-CZWil.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-pagination-micro-1.json":()=>r(()=>import("./bp-03-rest-api-pagination-micro-1-YvL4b4Oo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-03-rest-api-prufungsrelevante-aspekte-micro-1-DrBnKvtG.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-quiz.json":()=>r(()=>Promise.resolve().then(()=>Bt),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-rate-limiting-micro-1.json":()=>r(()=>import("./bp-03-rest-api-rate-limiting-micro-1-D4ZhRZJx.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-requestresponse-format-micro-1.json":()=>r(()=>import("./bp-03-rest-api-requestresponse-format-micro-1-B1iN2zcv.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-rest-api-beispiel-python-flask-micro-1.json":()=>r(()=>import("./bp-03-rest-api-rest-api-beispiel-python-flask-micro-1-Cx_gyMzp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-rest-prinzipien-micro-1.json":()=>r(()=>import("./bp-03-rest-api-rest-prinzipien-micro-1-Cskm3-1Q.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-rest-api-url-design-micro-1.json":()=>r(()=>import("./bp-03-rest-api-url-design-micro-1-DJiCt58I.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-die-8-qualitatsmerkmale-micro-1.json":()=>r(()=>import("./bp-03-software-quality-die-8-qualitatsmerkmale-micro-1-BbY_m3wQ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-einfuhrung-micro-1.json":()=>r(()=>import("./bp-03-software-quality-einfuhrung-micro-1-_UgQeSoa.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-03-software-quality-prufungsrelevante-aspekte-micro-1-BwJMBKHP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-qualitatssicherung-micro-1.json":()=>r(()=>import("./bp-03-software-quality-qualitatssicherung-micro-1-DSTCAunj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-software-quality-quiz.json":()=>r(()=>Promise.resolve().then(()=>Yt),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-tdd-best-practices-micro-1.json":()=>r(()=>import("./bp-03-tdd-best-practices-micro-1-DqxvYEBy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-der-red-green-refactor-zyklus-micro-1.json":()=>r(()=>import("./bp-03-tdd-der-red-green-refactor-zyklus-micro-1-DYXkoYwN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-nachteile-von-tdd-micro-1.json":()=>r(()=>import("./bp-03-tdd-nachteile-von-tdd-micro-1-kW1EH-UB.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-quiz.json":()=>r(()=>Promise.resolve().then(()=>di),void 0,import.meta.url),"../data/ihk/quizzes/bp-03-tdd-tdd-in-der-praxis-micro-1.json":()=>r(()=>import("./bp-03-tdd-tdd-in-der-praxis-micro-1-BYDK4MXP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-03-tdd-ubungsaufgaben-micro-1-BZbIiiuW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-vorteile-von-tdd-micro-1.json":()=>r(()=>import("./bp-03-tdd-vorteile-von-tdd-micro-1-t6WvR0l8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-was-ist-test-driven-development-micro-1.json":()=>r(()=>import("./bp-03-tdd-was-ist-test-driven-development-micro-1-BHLfFNxo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-03-tdd-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-03-tdd-zusammenfassung-micro-1-Ct5kJ6FD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-1-model-view-controller-mvc-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-1-model-view-controller-mvc-micro-1-4C0dzwmD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-2-layered-architecture-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-2-layered-architecture-micro-1-CeJ7t5AF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-3-microservices-architecture-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-3-microservices-architecture-micro-1-BCT1KY2f.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-einfuhrung-micro-1.json":()=>r(()=>import("./bp-04-architecture-patterns-einfuhrung-micro-1-CMkklpOp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-architecture-patterns-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ei),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-behavioral-patterns-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-behavioral-patterns-micro-1-603QppDP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-creational-patterns-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-creational-patterns-micro-1-B-dnoKLt.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-einfuhrung-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-einfuhrung-micro-1-04lQmyCZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-kategorien-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-kategorien-micro-1-BC_mZ2Uu.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-prufungsrelevante-aspekte-micro-1-DzyZ77GL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-quiz.json":()=>r(()=>Promise.resolve().then(()=>xi),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-design-patterns-structural-patterns-micro-1.json":()=>r(()=>import("./bp-04-design-patterns-structural-patterns-micro-1-5yQpAKhR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-as-i-hinweis-nicht-mehr-prufungsrelevant-ab-2025-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-as-i-hinweis-nicht-mehr-prufungsrelevant-ab-2025-micro-1-B0853eZF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-deklarative-programmierung-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-deklarative-programmierung-micro-1-BQX1We1y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-funktionale-programmierung-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-funktionale-programmierung-micro-1-B94nmpjD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-imperative-programmierung-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-imperative-programmierung-micro-1-a2TgWxYM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-objektorientierte-programmierung-oop-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-objektorientierte-programmierung-oop-micro-1-CEtFgLsm.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-prufungshinweis-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-prufungshinweis-micro-1-BQ8BR9Jy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-quiz.json":()=>r(()=>Promise.resolve().then(()=>Xi),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-programming-paradigms-ubersicht-micro-1.json":()=>r(()=>import("./bp-04-programming-paradigms-ubersicht-micro-1-BIcX7UHN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-definition-of-done-dod-micro-1.json":()=>r(()=>import("./bp-04-scrum-definition-of-done-dod-micro-1-CJiTajpF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-die-drei-scrum-artefakte-micro-1.json":()=>r(()=>import("./bp-04-scrum-die-drei-scrum-artefakte-micro-1-B0aNYOQC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-die-drei-scrum-rollen-micro-1.json":()=>r(()=>import("./bp-04-scrum-die-drei-scrum-rollen-micro-1-CTkI6B2N.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-die-funf-scrum-events-micro-1.json":()=>r(()=>import("./bp-04-scrum-die-funf-scrum-events-micro-1-DlBlSVA3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-haufige-fehler-anti-patterns-micro-1.json":()=>r(()=>import("./bp-04-scrum-haufige-fehler-anti-patterns-micro-1-D9mV_hn4.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-praktische-szenarien-micro-1.json":()=>r(()=>import("./bp-04-scrum-praktische-szenarien-micro-1-oUxu91Z9.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-quiz.json":()=>r(()=>Promise.resolve().then(()=>mr),void 0,import.meta.url),"../data/ihk/quizzes/bp-04-scrum-scrum-ablauf-visualisierung-micro-1.json":()=>r(()=>import("./bp-04-scrum-scrum-ablauf-visualisierung-micro-1-BxGAyV2N.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-story-points-micro-1.json":()=>r(()=>import("./bp-04-scrum-story-points-micro-1-DgWZf2Hp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-04-scrum-ubungsaufgaben-micro-1-DekP6wYp.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-user-stories-micro-1.json":()=>r(()=>import("./bp-04-scrum-user-stories-micro-1-BZ7dS3cQ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-vorteile-von-scrum-micro-1.json":()=>r(()=>import("./bp-04-scrum-vorteile-von-scrum-micro-1-BRmGI-Hk.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-was-ist-scrum-micro-1.json":()=>r(()=>import("./bp-04-scrum-was-ist-scrum-micro-1-CBzsRfht.js"),[],import.meta.url),"../data/ihk/quizzes/bp-04-scrum-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-04-scrum-zusammenfassung-micro-1-38RqdtXj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-arrays-micro-1.json":()=>r(()=>import("./bp-05-data-structures-arrays-micro-1-DPxPszme.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-einfuhrung-micro-1.json":()=>r(()=>import("./bp-05-data-structures-einfuhrung-micro-1-BG85vDQE.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-hash-table-hash-map-micro-1.json":()=>r(()=>import("./bp-05-data-structures-hash-table-hash-map-micro-1-DS-jmf8N.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-komplexitatsvergleich-micro-1.json":()=>r(()=>import("./bp-05-data-structures-komplexitatsvergleich-micro-1-BLxK5f21.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-listen-micro-1.json":()=>r(()=>import("./bp-05-data-structures-listen-micro-1-Dm6AouwZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-05-data-structures-prufungsrelevante-aspekte-micro-1-DN-cP2kO.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-queue-warteschlange-micro-1.json":()=>r(()=>import("./bp-05-data-structures-queue-warteschlange-micro-1-B0tmQYVu.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-quiz.json":()=>r(()=>Promise.resolve().then(()=>_r),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-stack-stapel-micro-1.json":()=>r(()=>import("./bp-05-data-structures-stack-stapel-micro-1-DadcMCi0.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-data-structures-trees-baume-micro-1.json":()=>r(()=>import("./bp-05-data-structures-trees-baume-micro-1-CATDhu1s.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-encapsulation-einfuhrung-micro-1.json":()=>r(()=>import("./bp-05-encapsulation-einfuhrung-micro-1-BN6Up80k.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-encapsulation-konzept-micro-1.json":()=>r(()=>import("./bp-05-encapsulation-konzept-micro-1-Jhlph07X.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-encapsulation-quiz.json":()=>r(()=>Promise.resolve().then(()=>Vr),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-sorting-1-bubble-sort-blasensortierung-micro-1.json":()=>r(()=>import("./bp-05-sorting-1-bubble-sort-blasensortierung-micro-1-D-Gvf9wM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-2-selection-sort-auswahlsortierung-micro-1.json":()=>r(()=>import("./bp-05-sorting-2-selection-sort-auswahlsortierung-micro-1-D-PFMyGH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-3-insertion-sort-einfugesortierung-micro-1.json":()=>r(()=>import("./bp-05-sorting-3-insertion-sort-einfugesortierung-micro-1-DbEGAdMM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-einfuhrung-micro-1.json":()=>r(()=>import("./bp-05-sorting-einfuhrung-micro-1-B-rLOkKi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-quiz.json":()=>r(()=>Promise.resolve().then(()=>Xr),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-sorting-stabilitat-bei-sortieralgorithmen-micro-1.json":()=>r(()=>import("./bp-05-sorting-stabilitat-bei-sortieralgorithmen-micro-1-DDhNRVAl.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-ubungsaufgaben-micro-1.json":()=>r(()=>import("./bp-05-sorting-ubungsaufgaben-micro-1-BWLYtGl3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-vergleich-der-sortierverfahren-micro-1.json":()=>r(()=>import("./bp-05-sorting-vergleich-der-sortierverfahren-micro-1-DzLm1IJf.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-wann-welchen-algorithmus-verwenden-micro-1.json":()=>r(()=>import("./bp-05-sorting-wann-welchen-algorithmus-verwenden-micro-1-CfOsKHC8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-warum-sortieren-wichtig-ist-micro-1.json":()=>r(()=>import("./bp-05-sorting-warum-sortieren-wichtig-ist-micro-1-r1oucJBN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-zeitkomplexitat---big-o-notation-micro-1.json":()=>r(()=>import("./bp-05-sorting-zeitkomplexitat---big-o-notation-micro-1-D30GHUeQ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sorting-zusammenfassung-micro-1.json":()=>r(()=>import("./bp-05-sorting-zusammenfassung-micro-1-DstMN2NF.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-checkliste-fur-die-prufung-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-checkliste-fur-die-prufung-micro-1-7TUj_Zlr.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-haufige-fehler-vermeiden-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-haufige-fehler-vermeiden-micro-1-BYWBriM3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-prufungsrelevante-aspekte-micro-1-D2O161qN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-prufungsstrategie-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-prufungsstrategie-micro-1-DZk5S48Y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-quiz.json":()=>r(()=>Promise.resolve().then(()=>gs),void 0,import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-typische-prufungsaufgaben-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-typische-prufungsaufgaben-micro-1-Cens-DWi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-verfugbare-sql-module-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-verfugbare-sql-module-micro-1-Dy4W-Ggf.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-was-sie-konnen-sollten-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-was-sie-konnen-sollten-micro-1-8Xf-gmL8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-weiterfuhrende-module-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-weiterfuhrende-module-micro-1-9PYoiAdo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-05-sql-reference-wichtiger-hinweis-zur-prufung-micro-1.json":()=>r(()=>import("./bp-05-sql-reference-wichtiger-hinweis-zur-prufung-micro-1-BfCMmwwm.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-einfuhrung-micro-1-D5Hdp3XM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-er-diagramm-notation-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-er-diagramm-notation-micro-1-BTKJ8or1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-erweiterte-konzepte-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-erweiterte-konzepte-micro-1-CndY6brW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-grundkonzepte-der-er-modellierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-grundkonzepte-der-er-modellierung-micro-1-D-boydf2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-haufige-modellierungsfehler-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-haufige-modellierungsfehler-micro-1-DcrRjEXe.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-modellierungsprozess-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-modellierungsprozess-micro-1-CilScF_U.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-praktisches-beispiel-online-shop-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-praktisches-beispiel-online-shop-micro-1-BnS253ci.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-prufungsrelevante-aspekte-micro-1-LtS4ZA8c.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-quiz.json":()=>r(()=>Promise.resolve().then(()=>Du),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-01-er-modeling-ubergang-zum-relationalen-modell-micro-1.json":()=>r(()=>import("./bp-dpa-01-er-modeling-ubergang-zum-relationalen-modell-micro-1-BX_-d5XW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-denormalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-denormalisierung-micro-1-DCMaft1E.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-die-normalformen-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-die-normalformen-micro-1-DjLjvcC_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-einfuhrung-micro-1-D3_DeTlH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-funktionale-abhangigkeiten-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-funktionale-abhangigkeiten-micro-1-CZ6RpRRH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-normalisierungsprozess-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-normalisierungsprozess-micro-1-TwmQQIIC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-praktisches-beispiel-bibliothekssystem-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-praktisches-beispiel-bibliothekssystem-micro-1-CT0GgAET.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-prufungsrelevante-aspekte-micro-1-Db_Fw0OZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ku),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-vor--und-nachteile-der-normalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-vor--und-nachteile-der-normalisierung-micro-1-UwaC79UA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-01-normalization-ziele-der-normalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-01-normalization-ziele-der-normalisierung-micro-1-Rbs04bh-.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-datenqualitat-in-etl-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-datenqualitat-in-etl-micro-1-CyWcUX1h.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-einfuhrung-micro-1-B5dCOj94.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-etl-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-etl-grundlagen-micro-1-DkXNQXV3.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-etl-pipeline-design-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-etl-pipeline-design-micro-1-pdOywHel.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-etl-tools-und-technologien-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-etl-tools-und-technologien-micro-1-BZGIycOy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-extract-datenextraktion-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-extract-datenextraktion-micro-1-XJ8cS_Zc.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-load-datenladen-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-load-datenladen-micro-1-COygRbQj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-prufungsrelevante-aspekte-micro-1-Cff5bARv.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-fundamentals-transform-datentransformation-micro-1.json":()=>r(()=>import("./bp-dpa-02-etl-fundamentals-transform-datentransformation-micro-1-Pe1fPcuj.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-02-etl-quiz.json":()=>r(()=>Promise.resolve().then(()=>ic),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-einfuhrung-micro-1-CRLqXNUa.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-governance-betriebsaspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-governance-betriebsaspekte-micro-1-bie6OXd_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-identifikation-von-automatisierungspotenzialen-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-identifikation-von-automatisierungspotenzialen-micro-1-DJicYSQb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-kontinuierliche-verbesserung-feedback-loops-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-kontinuierliche-verbesserung-feedback-loops-micro-1-CFo3E4CW.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-orchestrierung-vs-choreographie-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-orchestrierung-vs-choreographie-micro-1-BaHzLU3E.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-prufungsrelevante-aspekte-micro-1-u7tG1lb5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-quiz.json":()=>r(()=>Promise.resolve().then(()=>cg),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-automation-orchestration-technologien-abgrenzung-micro-1.json":()=>r(()=>import("./bp-dpa-03-automation-orchestration-technologien-abgrenzung-micro-1-CeSioKgv.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-bpmn-grundelemente-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-bpmn-grundelemente-micro-1-BdexWBBC.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-bpmn-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-bpmn-grundlagen-micro-1-vCBlcYCs.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-bpmn-tools-und-software-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-bpmn-tools-und-software-micro-1-YCjeMRs_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-compliance-und-governance-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-compliance-und-governance-micro-1-Bcq1wGtg.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-einfuhrung-micro-1-wQ40VQOR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-erweiterte-bpmn-konzepte-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-erweiterte-bpmn-konzepte-micro-1-ls13TwgX.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-prozessanalyse-und--optimierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-prozessanalyse-und--optimierung-micro-1-tLrQav57.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-prozessmodellierung-in-der-praxis-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-prozessmodellierung-in-der-praxis-micro-1-BolntWM5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-fundamentals-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-bpmn-fundamentals-prufungsrelevante-aspekte-micro-1-CghZjW-T.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-bpmn-quiz.json":()=>r(()=>Promise.resolve().then(()=>kc),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-auswertung-interpretation-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-auswertung-interpretation-micro-1-DwDLPuYi.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-datenerhebung-plattformaspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-datenerhebung-plattformaspekte-micro-1-BM3C5NKU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-definition-operationalisierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-definition-operationalisierung-micro-1-JMlW4Qhq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-einfuhrung-micro-1-FBdmqIL2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-kpi-rahmenwerk-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-kpi-rahmenwerk-micro-1-CTC8XTHq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-prufungsrelevante-aspekte-micro-1-QyyzqPkZ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-quiz.json":()=>r(()=>Promise.resolve().then(()=>Im),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-kpi-measurement-steuerung-visualisierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-kpi-measurement-steuerung-visualisierung-micro-1-BZEDZro1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-einfuhrung-micro-1-p5awiDAV.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-integration-lean-six-sigma-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-integration-lean-six-sigma-micro-1-CLOQDYq6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-kontinuierliche-verbesserung-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-kontinuierliche-verbesserung-micro-1-Ruks6UDI.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-lean-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-lean-grundlagen-micro-1-DlD5-gLA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-prufungsrelevante-aspekte-micro-1-B83oNw02.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-quiz.json":()=>r(()=>Promise.resolve().then(()=>Hm),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-six-sigma-uberblick-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-six-sigma-uberblick-micro-1-SBBRipIV.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-lean-six-sigma-werkzeuge-auswahl-micro-1.json":()=>r(()=>import("./bp-dpa-03-lean-six-sigma-werkzeuge-auswahl-micro-1-B8wxYiVk.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-conformance-checking-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-conformance-checking-micro-1-B8Xuup0Y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-discovery-prozessentdeckung-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-discovery-prozessentdeckung-micro-1-CB6Wa5YN.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-einfuhrung-micro-1-825yoXiL.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-enhancement-optimierung-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-enhancement-optimierung-micro-1-Cf-hZsG1.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-event-logs-datenqualitat-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-event-logs-datenqualitat-micro-1-BdUOCWRq.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-kpi-analyse-varianten-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-kpi-analyse-varianten-micro-1-G0-AlA4B.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-03-process-mining-prufungsrelevante-aspekte-micro-1-hrah-Z_2.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-03-process-mining-quiz.json":()=>r(()=>Promise.resolve().then(()=>fm),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-bi-tools-und-technologien-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-bi-tools-und-technologien-micro-1-BDOj80oD.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-business-intelligence-grundlagen-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-business-intelligence-grundlagen-micro-1-D9ULkp0c.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-dashboard-design-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-dashboard-design-micro-1-BiNf9LKl.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-data-warehouse-konzepte-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-data-warehouse-konzepte-micro-1-DAGTdu6_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-datenqualitat-und--governance-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-datenqualitat-und--governance-micro-1-9l9n4fSy.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-einfuhrung-micro-1-DdaAtJLA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-key-performance-indicators-kpis-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-key-performance-indicators-kpis-micro-1-h_Q3yD_l.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-mobile-bi-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-mobile-bi-micro-1-BUcnd8I_.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-olap-online-analytical-processing-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-olap-online-analytical-processing-micro-1-CvCxlhPP.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-prufungsrelevante-aspekte-micro-1-B7X1yuWR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-fundamentals-self-service-bi-micro-1.json":()=>r(()=>import("./bp-dpa-04-bi-fundamentals-self-service-bi-micro-1-BaeFauM6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-04-bi-quiz.json":()=>r(()=>Promise.resolve().then(()=>Cc),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-dimensionale-modellierung-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-dimensionale-modellierung-micro-1-mpmZdKY9.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-einfuhrung-micro-1-DxgqTq0J.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-etl-prozesse-und-qualitatssicherung-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-etl-prozesse-und-qualitatssicherung-micro-1-DeGr_dCH.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-kernkomponenten-einer-data-warehouse-architektur-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-kernkomponenten-einer-data-warehouse-architektur-micro-1-B0m0714Y.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-performance--und-architekturentscheidungen-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-performance--und-architekturentscheidungen-micro-1-CLtdj4r5.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-prufungsrelevante-aspekte-micro-1-CzaQvoMJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-quiz.json":()=>r(()=>Promise.resolve().then(()=>Hc),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-05-data-warehousing-ubungen-micro-1.json":()=>r(()=>import("./bp-dpa-05-data-warehousing-ubungen-micro-1-C0Zt0x6J.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-einfuhrung-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-einfuhrung-micro-1-DEuLy0ab.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-operationalisierung-von-data-quality-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-operationalisierung-von-data-quality-micro-1-21AXLdla.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-prufungsrelevante-aspekte-micro-1-Ba5C23wb.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-quiz.json":()=>r(()=>Promise.resolve().then(()=>ud),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-strategien-der-datenbereinigung-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-strategien-der-datenbereinigung-micro-1-LE4EYbJM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-06-data-quality-wichtige-metriken-und-checks-micro-1.json":()=>r(()=>import("./bp-dpa-06-data-quality-wichtige-metriken-und-checks-micro-1-HnCK4G6V.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-deskriptive-statistik-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-deskriptive-statistik-micro-1-CwEZ_4ut.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-hypothesentests-grundprinzipien-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-hypothesentests-grundprinzipien-micro-1-Cn9RE609.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-praktische-anwendung-in-prozessen-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-praktische-anwendung-in-prozessen-micro-1-lXK_7adR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-prufungsrelevante-aspekte-micro-1-CQcrXhHR.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ad),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-07-statistical-analysis-wahrscheinlichkeitsbegriffe-micro-1.json":()=>r(()=>import("./bp-dpa-07-statistical-analysis-wahrscheinlichkeitsbegriffe-micro-1-CJT7U5o8.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-kpi-definition-und-performance-messung-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-kpi-definition-und-performance-messung-micro-1-CMW6ReiM.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-lean-prinzipien-und-verbesserungstechniken-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-lean-prinzipien-und-verbesserungstechniken-micro-1-BHSbC-yK.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-manahmenplanung-und-umsetzung-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-manahmenplanung-und-umsetzung-micro-1-C86YS5Uo.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-prozessanalyse-mit-bpmn-und-process-mining-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-prozessanalyse-mit-bpmn-und-process-mining-micro-1-Dk3-1JWJ.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-08-process-optimization-prufungsrelevante-aspekte-micro-1-BTluUtd6.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-08-process-optimization-quiz.json":()=>r(()=>Promise.resolve().then(()=>xd),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-dashboard-design-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-dashboard-design-micro-1-B7Da69bA.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-data-governance-und-datenschutz-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-data-governance-und-datenschutz-micro-1-DxH4nOuU.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-prufungsrelevante-aspekte-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-prufungsrelevante-aspekte-micro-1-B4UEm_XG.js"),[],import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-quiz.json":()=>r(()=>Promise.resolve().then(()=>em),void 0,import.meta.url),"../data/ihk/quizzes/bp-dpa-09-advanced-bi-self-service-analytics-micro-1.json":()=>r(()=>import("./bp-dpa-09-advanced-bi-self-service-analytics-micro-1-DB5equlN.js"),[],import.meta.url),"../data/ihk/quizzes/demo-mq1.json":()=>r(()=>import("./demo-mq1-Dp6YgLcC.js"),[],import.meta.url),"../data/ihk/quizzes/demo-mq2.json":()=>r(()=>import("./demo-mq2-CbNhnk9h.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-1-kundenanforderungen-analysieren-micro-1.json":()=>r(()=>import("./fue-01-planning-1-kundenanforderungen-analysieren-micro-1-DF5WdB-8.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-2-projektplanung-micro-1.json":()=>r(()=>import("./fue-01-planning-2-projektplanung-micro-1-u1F7se7T.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-3-wirtschaftlichkeitsberechnung-micro-1.json":()=>r(()=>import("./fue-01-planning-3-wirtschaftlichkeitsberechnung-micro-1-CqMgki11.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-4-projektdokumentation-micro-1.json":()=>r(()=>import("./fue-01-planning-4-projektdokumentation-micro-1-DHP0GFlH.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-5-stakeholder-management-micro-1.json":()=>r(()=>import("./fue-01-planning-5-stakeholder-management-micro-1-BbiBzFUF.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-einfuhrung-micro-1.json":()=>r(()=>import("./fue-01-planning-einfuhrung-micro-1-D5QD7okJ.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-prufungsrelevante-punkte-micro-1.json":()=>r(()=>import("./fue-01-planning-prufungsrelevante-punkte-micro-1-CJwAkSnc.js"),[],import.meta.url),"../data/ihk/quizzes/fue-01-planning-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ds),void 0,import.meta.url),"../data/ihk/quizzes/fue-01-planning-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-01-planning-zusammenfassung-micro-1-BVNhlXp4.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-datenbank-anomalien-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-datenbank-anomalien-micro-1-BmGCF5Az.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-denormalisierung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-denormalisierung-micro-1-CBzKdnML.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-normalisierung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-normalisierung-micro-1-B6T4fKca.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-quiz.json":()=>r(()=>Promise.resolve().then(()=>Ks),void 0,import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-ubersicht-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-ubersicht-micro-1-CzEfPDst.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-vor--und-nachteile-der-normalisierung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-vor--und-nachteile-der-normalisierung-micro-1-cyql_zLS.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-was-sind-redundanzen-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-was-sind-redundanzen-micro-1-BqIphg2T.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-anomalies-redundancies-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-02-anomalies-redundancies-zusammenfassung-micro-1-DLhddOaS.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-aktivitatsdiagramme-uml-micro-1.json":()=>r(()=>import("./fue-02-control-structures-aktivitatsdiagramme-uml-micro-1-CdRcm9C9.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-best-practices-micro-1.json":()=>r(()=>import("./fue-02-control-structures-best-practices-micro-1-BcRjzqLA.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-die-drei-grundstrukturen-micro-1.json":()=>r(()=>import("./fue-02-control-structures-die-drei-grundstrukturen-micro-1-BGyR1-wy.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-praktische-beispiele-micro-1.json":()=>r(()=>import("./fue-02-control-structures-praktische-beispiele-micro-1-D3yiYUSD.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-pseudocode-konventionen-micro-1.json":()=>r(()=>import("./fue-02-control-structures-pseudocode-konventionen-micro-1-BoO0fcQN.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-quiz.json":()=>r(()=>Promise.resolve().then(()=>ia),void 0,import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-ubersicht-micro-1.json":()=>r(()=>import("./fue-02-control-structures-ubersicht-micro-1-Dh8dKuLn.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-vergleich-aktivitatsdiagramm-vs-pseudocode-micro-1.json":()=>r(()=>import("./fue-02-control-structures-vergleich-aktivitatsdiagramm-vs-pseudocode-micro-1-vgxrcufO.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-warum-struktogramme-und-pap-veraltet-sind-micro-1.json":()=>r(()=>import("./fue-02-control-structures-warum-struktogramme-und-pap-veraltet-sind-micro-1-BI9VWA2L.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-control-structures-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-02-control-structures-zusammenfassung-micro-1-ByZ3yKrL.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-1-kontrollstrukturen-micro-1.json":()=>r(()=>import("./fue-02-development-1-kontrollstrukturen-micro-1-CruHhcCj.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-2-datenbank-anomalien-und-redundanzen-micro-1.json":()=>r(()=>import("./fue-02-development-2-datenbank-anomalien-und-redundanzen-micro-1-DAvh-bF5.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-3-praktische-ubungen-micro-1.json":()=>r(()=>import("./fue-02-development-3-praktische-ubungen-micro-1-D4eI5J-i.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-einfuhrung-micro-1.json":()=>r(()=>import("./fue-02-development-einfuhrung-micro-1-DskigGUu.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-prufungsrelevante-punkte-micro-1.json":()=>r(()=>import("./fue-02-development-prufungsrelevante-punkte-micro-1-BIdxotu8.js"),[],import.meta.url),"../data/ihk/quizzes/fue-02-development-quiz.json":()=>r(()=>Promise.resolve().then(()=>ba),void 0,import.meta.url),"../data/ihk/quizzes/fue-02-development-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-02-development-zusammenfassung-micro-1-Bc5BK9qW.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-arten-von-performance-tests-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-arten-von-performance-tests-micro-1-jJMZp0-q.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-best-practices-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-best-practices-micro-1-DjkgLIG-.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-haufige-bottlenecks-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-haufige-bottlenecks-micro-1-Z7TudVV2.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-performance-testing-tools-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-performance-testing-tools-micro-1-CUHKFhAr.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-quiz.json":()=>r(()=>Promise.resolve().then(()=>qa),void 0,import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-test-strategie-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-test-strategie-micro-1-B5WcYEYK.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-ubersicht-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-ubersicht-micro-1-CVlbm0PL.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-wichtige-metriken-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-wichtige-metriken-micro-1-DvsxlbSN.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-load-performance-tests-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-03-load-performance-tests-zusammenfassung-micro-1-BkKyXlcE.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-1-software-tests-micro-1.json":()=>r(()=>import("./fue-03-quality-1-software-tests-micro-1-DFXRiFQz.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-2-black-box-testing-micro-1.json":()=>r(()=>import("./fue-03-quality-2-black-box-testing-micro-1-D_E4dvGi.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-3-white-box-testing-micro-1.json":()=>r(()=>import("./fue-03-quality-3-white-box-testing-micro-1-V_WsC2b8.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-4-code-review-micro-1.json":()=>r(()=>import("./fue-03-quality-4-code-review-micro-1-RWmQcQth.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-5-last--und-performancetests-micro-1.json":()=>r(()=>import("./fue-03-quality-5-last--und-performancetests-micro-1-BrfYXGJn.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-6-testpyramide-micro-1.json":()=>r(()=>import("./fue-03-quality-6-testpyramide-micro-1-DSPKl4Xn.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-7-praktische-beispiele-micro-1.json":()=>r(()=>import("./fue-03-quality-7-praktische-beispiele-micro-1-DER6rMxA.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-einfuhrung-micro-1.json":()=>r(()=>import("./fue-03-quality-einfuhrung-micro-1-D-r3UTAO.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-prufungsrelevante-punkte-micro-1.json":()=>r(()=>import("./fue-03-quality-prufungsrelevante-punkte-micro-1-DkjqjpiW.js"),[],import.meta.url),"../data/ihk/quizzes/fue-03-quality-quiz.json":()=>r(()=>Promise.resolve().then(()=>Wa),void 0,import.meta.url),"../data/ihk/quizzes/fue-03-quality-zusammenfassung-micro-1.json":()=>r(()=>import("./fue-03-quality-zusammenfassung-micro-1-DNFOh5rb.js"),[],import.meta.url),"../data/ihk/quizzes/fue-04-security-quiz.json":()=>r(()=>Promise.resolve().then(()=>io),void 0,import.meta.url),"../data/ihk/quizzes/fue-04-security-threats-einfuhrung-micro-1.json":()=>r(()=>import("./fue-04-security-threats-einfuhrung-micro-1-C5zso6I7.js"),[],import.meta.url),"../data/ihk/quizzes/fue-04-security-threats-haufige-bedrohungen-micro-1.json":()=>r(()=>import("./fue-04-security-threats-haufige-bedrohungen-micro-1-B0uNpvtm.js"),[],import.meta.url),"../data/ihk/quizzes/fue-04-security-threats-quiz.json":()=>r(()=>Promise.resolve().then(()=>zo),void 0,import.meta.url),"../data/ihk/quizzes/kerberos-quiz.json":()=>r(()=>Promise.resolve().then(()=>Lo),void 0,import.meta.url),"../data/ihk/quizzes/scrum-quiz-2025.json":()=>r(()=>import("./scrum-quiz-2025-C24KUtaZ.js"),[],import.meta.url),"../data/ihk/quizzes/scrum-quiz.json":()=>r(()=>Promise.resolve().then(()=>Qo),void 0,import.meta.url),"../data/ihk/quizzes/sorting-algorithms-quiz-2025.json":()=>r(()=>import("./sorting-algorithms-quiz-2025-DzKT45hA.js"),[],import.meta.url),"../data/ihk/quizzes/sorting-algorithms-quiz.json":()=>r(()=>Promise.resolve().then(()=>cl),void 0,import.meta.url),"../data/ihk/quizzes/sql-comprehensive-quiz-2025.json":()=>r(()=>import("./sql-comprehensive-quiz-2025-CKWXJa4u.js"),[],import.meta.url),"../data/ihk/quizzes/sql-comprehensive-quiz.json":()=>r(()=>Promise.resolve().then(()=>El),void 0,import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-alter-table---tabellen-andern-micro-1.json":()=>r(()=>import("./sql-ddl-2025-alter-table---tabellen-andern-micro-1-BToq8ZrM.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-create-index---indizes-erstellen-micro-1.json":()=>r(()=>import("./sql-ddl-2025-create-index---indizes-erstellen-micro-1-Cf41EiKr.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-create-table---tabellen-erstellen-micro-1.json":()=>r(()=>import("./sql-ddl-2025-create-table---tabellen-erstellen-micro-1-BkZeDTXB.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-einfuhrung-micro-1.json":()=>r(()=>import("./sql-ddl-2025-einfuhrung-micro-1-DwMTLGnb.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-praxisbeispiel-projektdatenbank-micro-1.json":()=>r(()=>import("./sql-ddl-2025-praxisbeispiel-projektdatenbank-micro-1-hfXztrZr.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-quiz.json":()=>r(()=>Promise.resolve().then(()=>Bl),void 0,import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-wichtige-hinweise-fur-die-prufung-micro-1.json":()=>r(()=>import("./sql-ddl-2025-wichtige-hinweise-fur-die-prufung-micro-1-DHc1BJp_.js"),[],import.meta.url),"../data/ihk/quizzes/sql-ddl-2025-zusammenfassung-micro-1.json":()=>r(()=>import("./sql-ddl-2025-zusammenfassung-micro-1-G6sIoDly.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-delete---daten-loschen-micro-1.json":()=>r(()=>import("./sql-dml-2025-delete---daten-loschen-micro-1-DbqkrXNo.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-einfuhrung-micro-1.json":()=>r(()=>import("./sql-dml-2025-einfuhrung-micro-1-C5JXF2gJ.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-insert---daten-einfugen-micro-1.json":()=>r(()=>import("./sql-dml-2025-insert---daten-einfugen-micro-1-BT_oTRo9.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-praxisbeispiel-online-shop-micro-1.json":()=>r(()=>import("./sql-dml-2025-praxisbeispiel-online-shop-micro-1-BBmzUB0z.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-quiz.json":()=>r(()=>Promise.resolve().then(()=>Jl),void 0,import.meta.url),"../data/ihk/quizzes/sql-dml-2025-transaktionen-bonus-wissen-micro-1.json":()=>r(()=>import("./sql-dml-2025-transaktionen-bonus-wissen-micro-1-gFx0lIUa.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-update---daten-andern-micro-1.json":()=>r(()=>import("./sql-dml-2025-update---daten-andern-micro-1-CcDu3-Gr.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-wichtige-hinweise-fur-die-prufung-micro-1.json":()=>r(()=>import("./sql-dml-2025-wichtige-hinweise-fur-die-prufung-micro-1-uPETeL1D.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dml-2025-zusammenfassung-micro-1.json":()=>r(()=>import("./sql-dml-2025-zusammenfassung-micro-1-CoQW2GpP.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-aggregatfunktionen-micro-1.json":()=>r(()=>import("./sql-dql-2025-aggregatfunktionen-micro-1-Di2d4LeZ.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-distinct---duplikate-entfernen-micro-1.json":()=>r(()=>import("./sql-dql-2025-distinct---duplikate-entfernen-micro-1-D5uVQsAX.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-einfuhrung-micro-1.json":()=>r(()=>import("./sql-dql-2025-einfuhrung-micro-1-cgG2zWzp.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-group-by---gruppieren-micro-1.json":()=>r(()=>import("./sql-dql-2025-group-by---gruppieren-micro-1-bWUV2O5K.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-join---tabellen-verknupfen-micro-1.json":()=>r(()=>import("./sql-dql-2025-join---tabellen-verknupfen-micro-1-BQw6HfRL.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-komplexes-praxisbeispiel-micro-1.json":()=>r(()=>import("./sql-dql-2025-komplexes-praxisbeispiel-micro-1-k5lZSBZ6.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-limit---anzahl-begrenzen-micro-1.json":()=>r(()=>import("./sql-dql-2025-limit---anzahl-begrenzen-micro-1-lCpA4JHV.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-order-by---sortieren-micro-1.json":()=>r(()=>import("./sql-dql-2025-order-by---sortieren-micro-1-DwWmRb-M.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-select---grundlagen-micro-1.json":()=>r(()=>import("./sql-dql-2025-select---grundlagen-micro-1-B-Kd--Lw.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-subqueries-unterabfragen-micro-1.json":()=>r(()=>import("./sql-dql-2025-subqueries-unterabfragen-micro-1-CGEKrjQt.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-where---daten-filtern-selektion-micro-1.json":()=>r(()=>import("./sql-dql-2025-where---daten-filtern-selektion-micro-1-BPVPU4SU.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-wichtige-hinweise-fur-die-prufung-micro-1.json":()=>r(()=>import("./sql-dql-2025-wichtige-hinweise-fur-die-prufung-micro-1-DWC-EizH.js"),[],import.meta.url),"../data/ihk/quizzes/sql-dql-2025-zusammenfassung-micro-1.json":()=>r(()=>import("./sql-dql-2025-zusammenfassung-micro-1-CzzyXdLG.js"),[],import.meta.url),"../data/ihk/quizzes/tdd-quiz-2025.json":()=>r(()=>import("./tdd-quiz-2025-4RRwJxyp.js"),[],import.meta.url),"../data/ihk/quizzes/tdd-quiz.json":()=>r(()=>Promise.resolve().then(()=>mu),void 0,import.meta.url)}),`../data/ihk/quizzes/${s}.json`,5);a=o&&o.default?o.default:o}catch(o){a=null}if(a){const o=new t(i);o.render(a,{requiredSections:this.module.requiredSections||[]}),this._inlineMicroQuizPanels.push(o)}else console.debug&&console.warn("[ModuleDetailView] unresolved micro-quiz id",s)}}}catch(n){console.warn&&console.warn("Failed to mount inline micro quizzes",n&&n.message?n.message:n)}}catch(n){console.error("Error rendering module detail:",n),e.innerHTML=this._renderError(n.message)}return e})}_renderScrollProgress(){return`
      <div class="scroll-progress-bar" role="progressbar" aria-label="Reading progress" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
        <div class="scroll-progress-fill" style="width: 0%"></div>
      </div>
    `}_renderHeader(){const e=this.module.completed?'<span class="badge badge-success">‚úì Completed</span>':this.module.inProgress?'<span class="badge badge-warning">In Progress</span>':'<span class="badge badge-default">Not Started</span>';return`
      <header class="module-detail-header" role="banner">
        <button class="btn-ghost back-btn" data-action="back" aria-label="Go back to modules list">
          <span aria-hidden="true">‚Üê</span> Back to Modules
        </button>

        <div class="module-header-content">
          <div class="module-header-meta">
            <span class="module-category">${this.module.category||"General"}</span>
            ${e}
          </div>

          <h1 class="module-detail-title">${this.module.title}</h1>
          <p class="module-detail-description">${this.formatInlineText(this.module.description)}</p>

          <div class="module-header-info" role="list">
            <div class="info-item" role="listitem">
              <span class="info-icon" aria-hidden="true">‚è±Ô∏è</span>
              <span><span class="sr-only">Duration: </span>${this.module.duration||30} minutes</span>
            </div>
            ${this._renderPrerequisites()}
          </div>
        </div>
      </header>
    `}_normalizeContent(e){return e?String(e).replace(/\\r\\n/g,`
`).replace(/\\n/g,`
`):""}formatInlineText(e){if(!e)return"";const n=String(e).replace(/\\n/g,`
`);return this._escapeHtml(n).replace(/\n/g,"<br>")}_escapeHtml(e){const n=document.createElement("div");return n.textContent=e,n.innerHTML}_renderPrerequisites(){return!this.module.prerequisites||this.module.prerequisites.length===0?"":`
      <div class="info-item" role="listitem">
        <span class="info-icon" aria-hidden="true">üìã</span>
        <span>${this.module.prerequisites.length} prerequisite${this.module.prerequisites.length>1?"s":""}</span>
      </div>
    `}_renderSidebar(){return`
      <aside class="module-sidebar" role="complementary" aria-label="Module navigation and actions">
        <div class="sidebar-sticky">
          <h2 class="sidebar-title">Table of Contents</h2>
          <nav class="table-of-contents" id="toc" aria-label="Table of contents">
            <!-- Generated dynamically -->
          </nav>

          <div class="sidebar-actions" role="group" aria-label="Module actions">
            <button class="btn-primary w-full" data-action="mark-complete" ${this.module.completed?"disabled":""} aria-label="${this.module.completed?"Module already completed":"Mark this module as complete"}">
              ${this.module.completed?"‚úì Completed":"Mark as Complete"}
            </button>
            <button class="btn-secondary w-full" data-action="view-quiz" aria-label="Take quiz for this module">
              Take Quiz <span aria-hidden="true">‚Üí</span>
            </button>
          </div>
        </div>
      </aside>
    `}_renderContent(){const e=this.module.content||"# No content available",n=this._normalizeContent(e),t=String(n).replace(/<!--\s*micro-quiz:([a-zA-Z0-9-_]+)\s*-->/g,(s,a)=>`<div class="micro-quiz-inline" data-quiz-id="${a}"></div>`);return`
      <div class="module-content" role="region" aria-label="Module content">
        <article class="markdown-content">
          ${this.marked.parse(t)}
        </article>
      </div>
    `}_renderError(e){return`
      <div class="error-state">
        <h2>Unable to load module</h2>
        <p>${e}</p>
        <button class="btn-primary" onclick="window.location.hash = '#/modules'">
          Back to Modules
        </button>
      </div>
    `}_generateTableOfContents(e){const n=e.querySelector(".markdown-content"),t=e.querySelector("#toc");if(!n||!t)return;const i=n.querySelectorAll("h1, h2, h3");if(i.length===0){t.innerHTML='<p class="toc-empty">No sections</p>';return}const s=Array.from(i).map((a,o)=>{const l=`heading-${o}`;a.id=l;const u=parseInt(a.tagName.substring(1)),c=u>1?`toc-level-${u}`:"";return`
        <a href="#${l}" class="toc-item ${c}" data-heading-id="${l}">
          ${a.textContent}
        </a>
      `});t.innerHTML=s.join(""),t.querySelectorAll(".toc-item").forEach(a=>{a.addEventListener("click",o=>{o.preventDefault();const l=a.dataset.headingId,u=document.getElementById(l);u&&(u.scrollIntoView({behavior:"smooth",block:"start"}),this._updateActiveTocItem(l,e))})})}_setupScrollTracking(e){const t=(s=>{let a=s;for(;a&&a!==document.documentElement;){try{const l=window.getComputedStyle(a).overflowY;if((l==="auto"||l==="scroll"||l==="overlay")&&a.scrollHeight>a.clientHeight)return a}catch(o){}a=a.parentElement}return window})(e),i=()=>{let s,a,o;t===window?(o=window.innerHeight,a=document.documentElement.scrollHeight,s=window.scrollY||window.pageYOffset||document.documentElement.scrollTop):(o=t.clientHeight,a=t.scrollHeight,s=t.scrollTop);const l=Math.max(a-o,1),u=s/l*100,c=Math.min(Math.max(u,0),100),h=e.querySelector(".scroll-progress-bar"),m=e.querySelector(".scroll-progress-fill");m&&(m.style.width=`${c}%`),h&&h.setAttribute("aria-valuenow",Math.round(c)),this._updateActiveTocItemOnScroll(e,t)};t===window?window.addEventListener("scroll",i):t.addEventListener("scroll",i),this.scrollHandler=i,this._scrollContainer=t}_updateActiveTocItemOnScroll(e,n=window){const t=e.querySelectorAll('.markdown-content [id^="heading-"]'),i=e.querySelectorAll(".toc-item");let s=null;const a=l=>{const u=l.getBoundingClientRect();if(n===window)return u.top+window.scrollY;const c=n.getBoundingClientRect();return u.top-c.top+n.scrollTop},o=n===window?window.scrollY+100:n.scrollTop+100;t.forEach(l=>{a(l)<=o&&(s=l.id)}),i.forEach(l=>{l.dataset.headingId===s?l.classList.add("active"):l.classList.remove("active")})}_updateActiveTocItem(e,n){n.querySelectorAll(".toc-item").forEach(i=>{i.dataset.headingId===e?i.classList.add("active"):i.classList.remove("active")})}_attachEventListeners(e){const n=e.querySelector('[data-action="back"]');n&&n.addEventListener("click",()=>{window.location.hash="#/modules"});const t=e.querySelector('[data-action="mark-complete"]');t&&!this.module.completed&&t.addEventListener("click",()=>d(this,null,function*(){try{yield this.moduleService.markModuleComplete(this.moduleId),t.disabled=!0,t.textContent="‚úì Completed",t.classList.add("btn-success"),this._showNotification("Module marked as complete! üéâ")}catch(s){console.error("Error marking module complete:",s),this._showNotification("Failed to mark module as complete","error")}}));const i=e.querySelector('[data-action="view-quiz"]');i&&i.addEventListener("click",()=>d(this,null,function*(){try{const a=(yield this.ihkContentService.getAllQuizzes()).find(o=>o.moduleId===this.moduleId);a?window.location.hash=`#/quizzes/${a.id}`:this._showNotification("No quiz available for this module","warning")}catch(s){console.error("Error loading quiz:",s),this._showNotification("Failed to load quiz","error")}}))}_showNotification(e,n="success"){const t=document.createElement("div");t.className=`notification notification-${n}`,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.classList.add("show")},10),setTimeout(()=>{t.classList.remove("show"),setTimeout(()=>t.remove(),300)},3e3)}cleanup(){try{this.scrollHandler&&(this._scrollContainer&&this._scrollContainer!==window?this._scrollContainer.removeEventListener("scroll",this.scrollHandler):window.removeEventListener("scroll",this.scrollHandler))}catch(e){}try{this._microQuizPanel&&typeof this._microQuizPanel.destroy=="function"&&this._microQuizPanel.destroy()}catch(e){}}}function fP(f,e,n=!1){let t;return function(...s){const a=()=>{t=null,n||f.apply(this,s)},o=n&&!t;clearTimeout(t),t=setTimeout(a,e),o&&f.apply(this,s)}}class bP{constructor(e){this.services=e,this.ihkContentService=e.ihkContentService,this.specializationService=e.specializationService,this.categoryMappingService=e.categoryMappingService,this.stateManager=e.stateManager,this.router=e.router,this.quizzes=[],this.currentCategoryFilter="all",this.currentStatusFilter="all",this.filterInitialized=!1,this.debouncedRefreshQuizGrid=fP(n=>this._performQuizGridRefresh(n),100,!1),this.filterOperationInProgress=!1,this.pendingFilterOperations=new Set}render(){return d(this,null,function*(){const e=document.createElement("div");return e.className="ihk-quiz-list-view",e.innerHTML=_.render("Loading IHK quizzes..."),window.setTimeout(()=>d(this,null,function*(){var n;try{yield this.loadQuizzes(),e.innerHTML="",e.appendChild(this.renderContent()),w.announce(`${this.quizzes.length} IHK quizzes loaded`)}catch(t){console.error("Error loading IHK quizzes:",t);const i=this._getUserFriendlyFilterErrorMessage(t,{operation:"loading",quizCount:((n=this.quizzes)==null?void 0:n.length)||0}),s=A.create({icon:"‚ö†Ô∏è",title:"Error Loading Quizzes",message:i,action:{label:"Retry",onClick:()=>this.render()}});e.innerHTML="",e.appendChild(s),this._categorizeFilterError(t)==="network"?y.error("Network error loading quizzes. Check your connection."):y.error("Failed to load IHK quizzes")}}),0),e})}loadQuizzes(){return d(this,null,function*(){try{if(this.quizzes=yield this.ihkContentService.getAllQuizzes(),!Array.isArray(this.quizzes))throw new Error("Invalid quiz data: expected array");this.currentSpecialization=this.specializationService.getCurrentSpecialization(),this.enrichQuizzesWithProgress();const e=this._validateAllQuizCategories();this._showCategoryValidationWarnings(e),console.warn("Quizzes loaded successfully:",{totalQuizzes:this.quizzes.length,validQuizzes:e.validQuizzes,invalidQuizzes:e.invalidQuizzes,categoryDistribution:e.categoryDistribution})}catch(e){throw console.error("Error loading quizzes:",e),Array.isArray(this.quizzes)||(this.quizzes=[]),e}})}enrichQuizzesWithProgress(){const n=(this.stateManager.getState("progress")||{}).quizAttempts||[];this.quizzes=this.quizzes.map(t=>{const i=n.filter(o=>o.quizId===t.id),s=i.length>0?Math.max(...i.map(o=>o.score)):null,a=i.length>0?i[i.length-1]:null;return v(z({},t),{attempts:i.length,bestScore:s,lastAttempt:a,completed:s!==null&&s>=70})})}renderContent(){const e=document.createElement("div");e.className="ihk-quiz-list-content";const n=this.renderHeader();e.appendChild(n);const t=this.renderFilters();e.appendChild(t);const i=this.renderQuizGrid();return e.appendChild(i),this.attachEventListeners(e),this._initializeFilterStates(e),e}renderHeader(){const e=document.createElement("div");e.className="page-header";const n=this._filterQuizzes(this.quizzes),t=this._createQuizCountDisplay(n.length,this.quizzes.length);return e.innerHTML=`
      <h1>IHK Quizzes</h1>
      <p class="subtitle">Teste dein Wissen mit pr√ºfungsrelevanten Quizzes</p>
      <div class="quiz-count-display" role="status" aria-live="polite">
        ${t}
      </div>
    `,e}renderFilters(){const e=document.createElement("div");e.className="quiz-filters-container";const n=this.renderStatusFilters();if(e.appendChild(n),this.currentSpecialization){const t=this.renderCategoryFilters();e.appendChild(t)}return e}renderStatusFilters(){this.currentStatusFilter||(this.currentStatusFilter="all");const n=[{id:"all",label:"All Quizzes"},{id:"completed",label:"Completed"},{id:"attempted",label:"Attempted"},{id:"not-started",label:"Not Started"}].map(i=>{const s=i.id===this.currentStatusFilter;return`
        <button 
          class="filter-btn ${s?"active":""}" 
          data-status="${i.id}" 
          aria-pressed="${s?"true":"false"}"
          aria-label="Show ${i.label.toLowerCase()}"
        >
          ${i.label}
        </button>
      `}).join(""),t=document.createElement("div");return t.className="quiz-status-filters",t.innerHTML=`
      <h3 class="filter-section-title">Filter by Status</h3>
      <div class="filter-buttons">
        ${n}
      </div>
    `,t}renderCategoryFilters(){const e=this._getCategoryFilters();this.currentCategoryFilter||(this.currentCategoryFilter="all");const n=e.map(i=>{const s=i.id===this.currentCategoryFilter;return`
        <button 
          class="category-filter-btn ${s?"active":""}" 
          data-category="${i.id}" 
          aria-pressed="${s?"true":"false"}"
          aria-label="Show ${i.name} quizzes"
          style="--category-color: ${i.color}"
        >
          <span class="category-icon" aria-hidden="true">${i.icon}</span>
          <span class="category-name">${i.name}</span>
        </button>
      `}).join(""),t=document.createElement("div");return t.className="quiz-category-filters",t.innerHTML=`
      <h3 class="filter-section-title">Filter by Category</h3>
      <div class="category-filter-buttons">
        ${n}
      </div>
    `,t}_getCategoryFilters(){return[{id:"all",name:"All Categories",icon:"üìö",color:"#6b7280"},{id:"daten-prozessanalyse",name:"Daten und Prozessanalyse",icon:"üìä",color:"#2563eb"},{id:"anwendungsentwicklung",name:"Anwendungsentwicklung",icon:"üíª",color:"#dc2626"},{id:"allgemein",name:"Allgemein",icon:"üìñ",color:"#059669"}]}renderQuizGrid(){const e=document.createElement("div");e.className="quiz-grid";const n=this._filterQuizzes(this.quizzes);if(n.length===0){const t=this._createEnhancedEmptyState();return e.appendChild(t),e}return n.forEach(t=>{const i=this.renderQuizCard(t);e.appendChild(i)}),e}_filterQuizzes(e){try{if(!Array.isArray(e))return console.error("_filterQuizzes: Invalid quizzes input - not an array",{quizzes:e}),[];let n=[...e];const t=performance.now();try{n=this._applyStatusFilter(n)}catch(a){console.error("Error applying status filter:",{error:a.message,currentStatusFilter:this.currentStatusFilter,quizCount:n.length})}if(this.currentCategoryFilter!=="all")try{n=this._applyCategoryFilter(n)}catch(a){console.error("Error applying category filter:",{error:a.message,currentCategoryFilter:this.currentCategoryFilter,quizCount:n.length})}const s=performance.now()-t;return s>100&&console.warn("Filter operation took longer than expected:",{duration:`${s.toFixed(2)}ms`,inputCount:e.length,outputCount:n.length,statusFilter:this.currentStatusFilter,categoryFilter:this.currentCategoryFilter}),this._isDebugEnabled()&&console.warn("Filter operation completed:",{inputCount:e.length,outputCount:n.length,duration:`${s.toFixed(2)}ms`,statusFilter:this.currentStatusFilter,categoryFilter:this.currentCategoryFilter}),n}catch(n){return console.error("Critical error in _filterQuizzes:",{error:n.message,stack:n.stack,quizCount:(e==null?void 0:e.length)||0,statusFilter:this.currentStatusFilter,categoryFilter:this.currentCategoryFilter,timestamp:new Date().toISOString()}),Array.isArray(e)?e:[]}}_applyStatusFilter(e){switch(this.currentStatusFilter){case"completed":return e.filter(n=>{try{return n&&typeof n.completed=="boolean"&&n.completed}catch(t){return console.warn(`Error checking completion status for quiz ${n==null?void 0:n.id}:`,t),!1}});case"attempted":return e.filter(n=>{try{return n&&typeof n.attempts=="number"&&n.attempts>0&&(!n.completed||n.completed===!1)}catch(t){return console.warn(`Error checking attempt status for quiz ${n==null?void 0:n.id}:`,t),!1}});case"not-started":return e.filter(n=>{try{return n&&(typeof n.attempts=="number"?n.attempts===0:!0)}catch(t){return console.warn(`Error checking not-started status for quiz ${n==null?void 0:n.id}:`,t),!1}});case"all":default:return e}}_applyCategoryFilter(e){const n=[],t=e.filter(i=>{try{const s=this._getCategoryIndicator(i);return s._isFallback&&n.push({quizId:i==null?void 0:i.id,reason:s._fallbackReason}),s.category===this.currentCategoryFilter}catch(s){return console.warn(`Error filtering quiz ${i==null?void 0:i.id} by category:`,{error:s.message,quizId:i==null?void 0:i.id,targetCategory:this.currentCategoryFilter}),!1}});return n.length>0&&console.warn("Category filtering encountered fallbacks:",{errorCount:n.length,totalQuizzes:e.length,targetCategory:this.currentCategoryFilter,errors:n.slice(0,5)}),t}renderQuizCard(e){const n=this._getCategoryIndicator(e),t=document.createElement("article");t.className=`quiz-card ${n.cssClass}`,t.setAttribute("data-category",n.category),e.completed&&t.classList.add("completed");const i=e.completed?'<span class="badge badge-success">‚úì Bestanden</span>':e.attempts>0?'<span class="badge badge-info">Versucht</span>':"",s=e.bestScore!==null?`<div class="quiz-score">
           <span class="score-label">Beste Punktzahl:</span>
           <span class="score-value">${e.bestScore}%</span>
         </div>`:"";return t.innerHTML=`
      <div class="quiz-card-header">
        <div class="quiz-title-section">
          <div class="quiz-category-display">
            <span class="category-indicator" style="background-color: ${n.color}" aria-hidden="true">${n.icon}</span>
            <span class="category-text">${n.displayName}</span>
          </div>
          <h3>${e.title}</h3>
        </div>
        <div class="quiz-badges">
          ${i}
        </div>
      </div>
      <p class="quiz-description">${e.description}</p>
      <div class="quiz-meta">
        <span class="difficulty difficulty-${e.difficulty}">
          ${this.getDifficultyLabel(e.difficulty)}
        </span>
        <span class="questions">
          <span aria-hidden="true">‚ùì</span>
          ${e.questions.length} Fragen
        </span>
        ${e.timeLimit?`
          <span class="time-limit">
            <span aria-hidden="true">‚è±Ô∏è</span>
            ${e.timeLimit}min
          </span>
        `:""}
      </div>
      ${s}
      ${e.attempts>0?`
        <div class="quiz-attempts">
          Versuche: ${e.attempts}
        </div>
      `:""}
      <div class="quiz-card-footer">
        <button 
          class="btn btn-primary"
          onclick="window.location.hash = '#/quizzes/${e.id}'"
          aria-label="Start quiz: ${e.title}"
        >
          ${e.attempts>0?"Quiz wiederholen":"Quiz starten"}
        </button>
      </div>
    `,t}_getCategoryIndicator(e){try{if(!e)return console.warn("_getCategoryIndicator: Quiz object is null or undefined"),this._createFallbackCategoryIndicator("Quiz data missing");if(!e.id)return console.warn("_getCategoryIndicator: Quiz missing ID field",{quiz:e}),this._createFallbackCategoryIndicator("Quiz ID missing");const n=this.categoryMappingService.mapToThreeTierCategory(e);return n&&n.threeTierCategory?(this._isDebugEnabled()&&console.warn(`Category mapping successful for quiz ${e.id}:`,{quizId:e.id,originalCategory:e.category||e.categoryId,mappedCategory:n.threeTierCategory,mappingSource:n.source||"unknown"}),this._getThreeTierCategoryIndicator(n.threeTierCategory)):(console.warn(`Category mapping failed for quiz ${e.id}:`,{quizId:e.id,quizTitle:e.title,originalCategory:e.category,originalCategoryId:e.categoryId,threeTierCategory:e.threeTierCategory,mappingResult:n,fallbackApplied:"allgemein"}),this._createFallbackCategoryIndicator("Category mapping failed"))}catch(n){return console.error(`Error mapping category for quiz ${(e==null?void 0:e.id)||"unknown"}:`,{error:n.message,stack:n.stack,quizId:e==null?void 0:e.id,quizTitle:e==null?void 0:e.title,quizData:e?{category:e.category,categoryId:e.categoryId,threeTierCategory:e.threeTierCategory}:null,timestamp:new Date().toISOString(),fallbackApplied:"allgemein"}),this._createFallbackCategoryIndicator("Category processing error")}}_createFallbackCategoryIndicator(e){const n=this._getThreeTierCategoryIndicator("allgemein");return v(z({},n),{_fallbackReason:e,_isFallback:!0})}_isDebugEnabled(){return localStorage.getItem("ihk-debug")==="true"||new URLSearchParams(window.location.search).has("debug")}_getThreeTierCategoryIndicator(e){const n={"daten-prozessanalyse":{category:"daten-prozessanalyse",cssClass:"quiz-daten-prozessanalyse",icon:"üìä",color:"#2563eb",displayName:"Daten und Prozessanalyse"},anwendungsentwicklung:{category:"anwendungsentwicklung",cssClass:"quiz-anwendungsentwicklung",icon:"üíª",color:"#dc2626",displayName:"Anwendungsentwicklung"},allgemein:{category:"allgemein",cssClass:"quiz-allgemein",icon:"üìñ",color:"#059669",displayName:"Allgemein"}};return n[e]||n.allgemein}getDifficultyLabel(e){return{beginner:"Anf√§nger",intermediate:"Fortgeschritten",advanced:"Experte"}[e]||e}attachEventListeners(e){e.querySelectorAll("[data-status]").forEach(i=>{i.addEventListener("click",s=>{const a=s.currentTarget.dataset.status;this._handleStatusFilterChange(a,e)})}),e.querySelectorAll("[data-category]").forEach(i=>{i.addEventListener("click",s=>{const a=s.currentTarget.dataset.category;this._handleCategoryFilterChange(a,e)})})}_handleStatusFilterChange(e,n){const t=`status-filter-${Date.now()}`,i=performance.now();try{if(!e||typeof e!="string"){console.warn(`Invalid status parameter received: ${e}. Ignoring filter change.`);return}if(!n)throw new Error("Container element is required");const s={statusFilter:this.currentStatusFilter,categoryFilter:this.currentCategoryFilter,timestamp:Date.now()};this._isDebugEnabled()&&console.warn(`Starting status filter change (${t}):`,{fromStatus:s.statusFilter,toStatus:e,preservedCategoryFilter:s.categoryFilter,timestamp:new Date().toISOString()});const a=["all","completed","attempted","not-started"];if(!a.includes(e))throw new Error(`Invalid status: ${e}. Available: ${a.join(", ")}`);this.currentStatusFilter=e;try{this._updateStatusFilterVisualState(e,n)}catch(l){throw console.error("Error updating status filter visual state:",l),this.currentStatusFilter=s.statusFilter,new Error(`Visual state update failed: ${l.message}`)}try{this._refreshQuizGrid(n)}catch(l){console.error("Error refreshing quiz grid after status filter change:",l),this._showFilterErrorFallback(n,l)}this._showFilterOperationFeedback(n,"status filtering");try{const l=this._filterQuizzes(this.quizzes);this._announceFilterChange("status",e,l.length)}catch(l){console.warn("Failed to announce status filter change:",l)}const o=performance.now()-i;this._isDebugEnabled()&&console.warn(`Status filter change completed (${t}):`,{status:e,preservedCategoryFilter:this.currentCategoryFilter,duration:`${o.toFixed(2)}ms`,success:!0})}catch(s){const a=performance.now()-i;console.error(`Status filter change failed (${t}):`,{error:s.message,stack:s.stack,targetStatus:e,currentStatus:this.currentStatusFilter,currentCategoryFilter:this.currentCategoryFilter,duration:`${a.toFixed(2)}ms`,timestamp:new Date().toISOString(),containerExists:!!n}),y.error("Unable to apply status filter. Showing all quizzes.");try{this._resetStatusFilterWithFallback(n)}catch(o){console.error("Critical error: Status filter fallback failed:",o),this._handleCriticalFilterError(n)}}}_handleCategoryFilterChange(e,n){const t=`category-filter-${Date.now()}`,i=performance.now();try{if(!e||typeof e!="string"){console.warn(`Invalid category parameter received: ${e}. Ignoring filter change.`);return}if(!n)throw new Error("Container element is required");const s={categoryFilter:this.currentCategoryFilter,statusFilter:this.currentStatusFilter,timestamp:Date.now()};if(!this.currentSpecialization){console.warn("Category filter change ignored - no specialization selected");return}this._isDebugEnabled()&&console.warn(`Starting category filter change (${t}):`,{fromCategory:s.categoryFilter,toCategory:e,preservedStatusFilter:s.statusFilter,timestamp:new Date().toISOString()});const a=this._getCategoryFilters().map(l=>l.id);if(!a.includes(e))throw new Error(`Invalid category: ${e}. Available: ${a.join(", ")}`);this.currentCategoryFilter=e;try{this._updateCategoryFilterVisualState(e,n)}catch(l){throw console.error("Error updating visual state:",l),this.currentCategoryFilter=s.categoryFilter,new Error(`Visual state update failed: ${l.message}`)}try{this._refreshQuizGridWithFallback(n)}catch(l){console.error("Error refreshing quiz grid:",l),this._showFilterErrorFallback(n,l)}this._showFilterOperationFeedback(n,"category filtering");try{const l=this._filterQuizzes(this.quizzes);this._announceFilterChange("category",e,l.length)}catch(l){console.warn("Failed to announce filter change:",l)}const o=performance.now()-i;this._isDebugEnabled()&&console.warn(`Category filter change completed (${t}):`,{category:e,preservedStatusFilter:this.currentStatusFilter,duration:`${o.toFixed(2)}ms`,success:!0})}catch(s){const a=performance.now()-i;console.error(`Category filter change failed (${t}):`,{error:s.message,stack:s.stack,targetCategory:e,currentCategory:this.currentCategoryFilter,duration:`${a.toFixed(2)}ms`,timestamp:new Date().toISOString(),containerExists:!!n}),y.error("Unable to apply category filter. Showing all quizzes.");try{this._resetToAllCategoriesWithFallback(n)}catch(o){console.error("Critical error: Fallback to all categories failed:",o),this._handleCriticalFilterError(n)}}}_updateCategoryFilterVisualState(e,n){const t=n.querySelectorAll("[data-category]");if(t.length===0){console.warn("No category filter buttons found - category filters may not be rendered");return}const i=[];t.forEach(s=>{const a=s.dataset.category===e;i.push({button:s,isActive:a,shouldAddClass:a,shouldRemoveClass:!a,ariaPressed:a?"true":"false"})}),i.forEach(s=>{try{s.shouldAddClass&&s.button.classList.add("active"),s.shouldRemoveClass&&s.button.classList.remove("active"),s.button.setAttribute("aria-pressed",s.ariaPressed)}catch(a){console.warn("Error updating button state:",{error:a.message,buttonCategory:s.button.dataset.category})}})}_refreshQuizGridWithFallback(e){try{this._refreshQuizGrid(e)}catch(n){console.error("Quiz grid refresh failed, attempting fallback:",n),this._showFilterErrorFallback(e,n)}}_showFilterErrorFallback(e,n){const t=e.querySelector(".quiz-grid");if(t){const i=this._getUserFriendlyFilterErrorMessage(n,{operation:"filtering",currentCategoryFilter:this.currentCategoryFilter,currentStatusFilter:this.currentStatusFilter}),s=A.create({icon:"‚ö†Ô∏è",title:"Filter Error",message:i,action:{label:"Reset Filters",onClick:()=>this._resetAllFilters(e)}});t.innerHTML="",t.appendChild(s);const a=this._categorizeFilterError(n),o=this._getFilterErrorGuidance(a,{currentCategoryFilter:this.currentCategoryFilter});o&&y.warning(o)}}_resetToAllCategoriesWithFallback(e){const n=this.currentStatusFilter;this.currentCategoryFilter="all";try{this._syncCategoryFilterVisualState(e),this._refreshQuizGrid(e),this.currentStatusFilter=n,console.warn('Category filter reset to "all", status filter preserved:',{categoryFilter:this.currentCategoryFilter,statusFilter:this.currentStatusFilter})}catch(t){throw console.error("Failed to reset to all categories:",t),this.currentStatusFilter=n,t}}_handleCriticalFilterError(e){console.error("Critical filter error - attempting view reload"),e.innerHTML=_.render("Reloading quizzes..."),setTimeout(()=>{this.render().then(n=>{e.parentNode&&e.parentNode.replaceChild(n,e)}).catch(n=>{console.error("Failed to reload view:",n),e.innerHTML=`
          <div class="error-state">
            <h3>Unable to Load Quizzes</h3>
            <p>Please refresh the page to try again.</p>
            <button onclick="window.location.reload()" class="btn btn-primary">
              Refresh Page
            </button>
          </div>
        `})},1e3)}_resetAllFilters(e){try{this.currentCategoryFilter="all",this.currentStatusFilter="all",this._syncCategoryFilterVisualState(e),this._syncStatusFilterVisualState(e),this._refreshQuizGrid(e),w.announce("All filters have been reset"),y.success("Filters reset successfully")}catch(n){console.error("Error resetting filters:",n),y.error("Failed to reset filters")}}_validateQuizCategory(e){const n={isValid:!1,warnings:[],errors:[],category:null,confidence:"low"};if(!e)return n.errors.push("Quiz object is null or undefined"),n;if(!e.id)return n.errors.push("Quiz missing required ID field"),n;const t=e.threeTierCategory&&typeof e.threeTierCategory=="string",i=e.category&&typeof e.category=="string",s=e.categoryId&&typeof e.categoryId=="string";return!t&&!i&&!s?(n.warnings.push('Quiz has no category information - will default to "allgemein"'),n.category="allgemein",n.confidence="low"):t?["daten-prozessanalyse","anwendungsentwicklung","allgemein"].includes(e.threeTierCategory)?(n.isValid=!0,n.category=e.threeTierCategory,n.confidence="high"):(n.warnings.push(`Invalid threeTierCategory value: "${e.threeTierCategory}"`),n.category="allgemein",n.confidence="low"):(n.warnings.push("Quiz uses legacy category format - mapping required"),n.confidence="medium",i&&(typeof e.category!="string"||e.category.trim()==="")&&n.warnings.push("Legacy category field is empty or invalid"),s&&(typeof e.categoryId!="string"||e.categoryId.trim()==="")&&n.warnings.push("Legacy categoryId field is empty or invalid")),(!e.title||typeof e.title!="string"||e.title.trim()==="")&&n.warnings.push("Quiz missing or invalid title"),(!e.questions||!Array.isArray(e.questions)||e.questions.length===0)&&n.warnings.push("Quiz has no questions or invalid questions array"),n}_validateAllQuizCategories(){if(!Array.isArray(this.quizzes)||this.quizzes.length===0)return{totalQuizzes:0,validQuizzes:0,invalidQuizzes:0,warnings:[],errors:[],categoryDistribution:{}};const e={totalQuizzes:this.quizzes.length,validQuizzes:0,invalidQuizzes:0,warnings:[],errors:[],categoryDistribution:{"daten-prozessanalyse":0,anwendungsentwicklung:0,allgemein:0,unknown:0},validationDetails:[]};return this.quizzes.forEach((n,t)=>{const i=this._validateQuizCategory(n);i.isValid?e.validQuizzes++:e.invalidQuizzes++,i.warnings.forEach(a=>{e.warnings.push({quizId:n.id||`index-${t}`,quizTitle:n.title||"Unknown",warning:a})}),i.errors.forEach(a=>{e.errors.push({quizId:n.id||`index-${t}`,quizTitle:n.title||"Unknown",error:a})});const s=i.category||"unknown";Object.prototype.hasOwnProperty.call(e.categoryDistribution,s)?e.categoryDistribution[s]++:e.categoryDistribution.unknown++,e.validationDetails.push({quizId:n.id,validation:i})}),e}_showCategoryValidationWarnings(e){if(!e||e.warnings.length===0&&e.errors.length===0)return;const n=e.errors.length,t=e.warnings.length;n>0&&(console.error("Category validation errors found:",{errorCount:n,totalQuizzes:e.totalQuizzes,errors:e.errors.slice(0,3)}),y.error(`${n} quiz${n>1?"zes have":" has"} category errors. Check console for details.`)),t>0&&(console.warn("Category validation warnings found:",{warningCount:t,totalQuizzes:e.totalQuizzes,warnings:e.warnings.slice(0,5)}),t>5&&y.warning(`${t} quiz${t>1?"zes have":" has"} category warnings. Check console for details.`)),this._isDebugEnabled()&&console.warn("Category validation summary:",{totalQuizzes:e.totalQuizzes,validQuizzes:e.validQuizzes,invalidQuizzes:e.invalidQuizzes,errorCount:n,warningCount:t,categoryDistribution:e.categoryDistribution})}_getUserFriendlyFilterErrorMessage(e,n={}){const t=this._categorizeFilterError(e),i={"category-mapping":"Unable to determine quiz categories. Showing all quizzes.","data-validation":"Some quiz data is invalid. Showing available quizzes.",performance:"Filtering is taking longer than expected. Please wait...",network:"Connection issue while filtering. Please try again.",unknown:"An unexpected error occurred while filtering. Showing all quizzes."},s=i[t]||i.unknown,a=this._getFilterErrorGuidance(t,n);return a?`${s} ${a}`:s}_categorizeFilterError(e){if(!e||!e.message)return"unknown";const n=e.message.toLowerCase();return n.includes("category")||n.includes("mapping")?"category-mapping":n.includes("validation")||n.includes("invalid")?"data-validation":n.includes("timeout")||n.includes("performance")?"performance":n.includes("network")||n.includes("fetch")?"network":"unknown"}_getFilterErrorGuidance(e,n){switch(e){case"category-mapping":return'Try selecting "All Categories" to see all available quizzes.';case"data-validation":return"Some quizzes may not display correctly.";case"performance":return"Consider refreshing the page if this persists.";case"network":return"Check your internet connection and try again.";default:return"Try refreshing the page or contact support if the problem continues."}}_getCategoryDisplayName(e){return{all:"All Categories","daten-prozessanalyse":"Daten und Prozessanalyse",anwendungsentwicklung:"Anwendungsentwicklung",allgemein:"Allgemein"}[e]||e}_initializeFilterStates(e){if(!this.filterInitialized)try{this.currentCategoryFilter="all",this.currentStatusFilter="all",this._syncCategoryFilterVisualState(e),this._syncStatusFilterVisualState(e),this.filterInitialized=!0,w.announce("Filters initialized. All categories and all statuses are shown.")}catch(n){console.error("Error initializing filter states:",n),y.error("Failed to initialize filters")}}_syncCategoryFilterVisualState(e){e.querySelectorAll("[data-category]").forEach(t=>{t.dataset.category===this.currentCategoryFilter?(t.classList.add("active"),t.setAttribute("aria-pressed","true")):(t.classList.remove("active"),t.setAttribute("aria-pressed","false"))})}_syncStatusFilterVisualState(e){e.querySelectorAll("[data-status]").forEach(t=>{t.dataset.status===this.currentStatusFilter?(t.classList.add("active"),t.setAttribute("aria-pressed","true")):(t.classList.remove("active"),t.setAttribute("aria-pressed","false"))})}_refreshQuizGrid(e){this.debouncedRefreshQuizGrid(e)}_performQuizGridRefresh(e){const n=`refresh-${Date.now()}`,t=performance.now();try{if(this.filterOperationInProgress){console.warn("Filter operation already in progress, queuing refresh"),this.pendingFilterOperations.add(n);return}this.filterOperationInProgress=!0;const i=e.querySelector(".quiz-grid");if(!i)throw new Error("Quiz grid container not found");i.classList.add("refreshing"),requestAnimationFrame(()=>{try{const s=this._filterQuizzes(this.quizzes);if(i.innerHTML="",s.length===0){const o=this._createEnhancedEmptyState();i.appendChild(o)}else s.forEach(o=>{const l=this.renderQuizCard(o);i.appendChild(l)});i.classList.remove("refreshing"),this._updateQuizCountDisplay(e);const a=performance.now()-t;this._isDebugEnabled()&&console.warn(`Quiz grid refresh completed (${n}):`,{duration:`${a.toFixed(2)}ms`,quizCount:this.quizzes.length,filteredCount:s.length}),this._processPendingFilterOperations(e)}catch(s){console.error("Error during quiz grid rendering:",s),i.classList.remove("refreshing"),this._showFilterErrorFallback(e,s)}finally{this.filterOperationInProgress=!1}})}catch(i){console.error(`Quiz grid refresh failed (${n}):`,i),this.filterOperationInProgress=!1,this._showFilterErrorFallback(e,i)}}_processPendingFilterOperations(e){this.pendingFilterOperations.size>0&&(console.warn(`Processing ${this.pendingFilterOperations.size} pending filter operations`),this.pendingFilterOperations.clear(),setTimeout(()=>{this.filterOperationInProgress||this._performQuizGridRefresh(e)},10))}_updateStatusFilterVisualState(e,n){const t=n.querySelectorAll("[data-status]");if(t.length===0)throw new Error("No status filter buttons found in container");const i=[];t.forEach(s=>{const a=s.dataset.status===e;i.push({button:s,isActive:a,shouldAddClass:a,shouldRemoveClass:!a,ariaPressed:a?"true":"false"})}),i.forEach(s=>{try{s.shouldAddClass&&s.button.classList.add("active"),s.shouldRemoveClass&&s.button.classList.remove("active"),s.button.setAttribute("aria-pressed",s.ariaPressed)}catch(a){console.warn("Error updating status button state:",{error:a.message,buttonStatus:s.button.dataset.status})}})}_getStatusDisplayName(e){return{all:"All Quizzes",completed:"Completed",attempted:"Attempted","not-started":"Not Started"}[e]||e}_createEnhancedEmptyState(){if(!(this.currentCategoryFilter!=="all"||this.currentStatusFilter!=="all"))return A.create({icon:"üìö",title:"No IHK Quizzes Available",message:"There are currently no IHK quizzes available. Please check back later or contact support if this seems incorrect.",action:{label:"Browse Modules",onClick:()=>{window.location.hash="#/modules"}}});const n=this._getCategoryDisplayName(this.currentCategoryFilter),t=this._getStatusDisplayName(this.currentStatusFilter),i=[];this.currentCategoryFilter!=="all"&&i.push(`category "${n}"`),this.currentStatusFilter!=="all"&&i.push(`status "${t}"`);const s=i.join(" and "),a=this.quizzes?this.quizzes.length:0;let o=`No quizzes match your current filters (${s}).`;a>0&&(o+=` There are ${a} total quizzes available.`);const l=this._getFilterAdjustmentSuggestions();return l.length>0&&(o+=` Try ${l.join(" or ")}.`),A.create({icon:"üîç",title:"No Matching Quizzes",message:o,type:"filter",action:{label:"Clear All Filters",onClick:()=>{this._resetAllFilters()}}})}_getFilterAdjustmentSuggestions(){const e=[];if(this.currentCategoryFilter!=="all"&&e.push('selecting "All Categories"'),this.currentStatusFilter!=="all"&&e.push('selecting "All Quizzes"'),this.quizzes&&this.quizzes.length>0){const n=this._getAvailableCategories(),t=this._getAvailableStatuses();if(this.currentCategoryFilter!=="all"&&n.length>1){const i=n.filter(s=>s!==this.currentCategoryFilter);if(i.length>0){const s=this._getCategoryDisplayName(i[0]);e.push(`trying "${s}"`)}}if(this.currentStatusFilter!=="all"&&t.length>1){const i=t.filter(s=>s!==this.currentStatusFilter);if(i.length>0){const s=this._getStatusDisplayName(i[0]);e.push(`trying "${s}"`)}}}return e.slice(0,3)}_getAvailableCategories(){if(!this.quizzes||this.quizzes.length===0)return[];const e=new Set;return this.quizzes.forEach(n=>{try{const t=this._getCategoryIndicator(n);t&&t.category&&e.add(t.category)}catch(t){}}),Array.from(e)}_getAvailableStatuses(){if(!this.quizzes||this.quizzes.length===0)return[];const e=new Set;return this.quizzes.forEach(n=>{n.completed?e.add("completed"):n.attempts>0?e.add("attempted"):e.add("not-started")}),Array.from(e)}_createQuizCountDisplay(e,n){return e===n?`<span class="quiz-count-text">Showing all ${n} quizzes</span>`:`<span class="quiz-count-text">Showing ${e} of ${n} quizzes</span>`}_updateQuizCountDisplay(e){try{const n=e.querySelector(".quiz-count-display");if(!n){console.warn("Quiz count display element not found");return}const t=this._filterQuizzes(this.quizzes),i=this._createQuizCountDisplay(t.length,this.quizzes.length);n.innerHTML=i,n.classList.add("updating"),setTimeout(()=>{n.classList.remove("updating")},300)}catch(n){console.error("Error updating quiz count display:",n)}}_showFilterOperationFeedback(e,n="filtering"){try{const t=e.querySelectorAll(".filter-btn, .category-filter-btn");t.forEach(s=>{s.classList.add("filtering"),s.disabled=!0});const i=e.querySelector(".quiz-grid");i&&i.classList.add("updating"),setTimeout(()=>{t.forEach(s=>{s.classList.remove("filtering"),s.disabled=!1}),i&&i.classList.remove("updating")},150)}catch(t){console.error("Error showing filter operation feedback:",t)}}_announceFilterChange(e,n,t){try{const i=this._getCategoryDisplayName(this.currentCategoryFilter),s=this._getStatusDisplayName(this.currentStatusFilter);let a="";e==="category"?a=`Category filter changed to ${this._getCategoryDisplayName(n)}. `:e==="status"&&(a=`Status filter changed to ${this._getStatusDisplayName(n)}. `),a+=`Current filters: ${i} and ${s}. `,t===0?a+="No quizzes match these filters.":t===1?a+="1 quiz matches these filters.":a+=`${t} quizzes match these filters.`,w.announce(a)}catch(i){console.error("Error announcing filter change:",i)}}_resetStatusFilterWithFallback(e){try{const n=this.currentCategoryFilter;this.currentStatusFilter="all",this._updateStatusFilterVisualState("all",e),this._refreshQuizGrid(e),this.currentCategoryFilter=n,console.warn('Status filter reset to "all", category filter preserved:',{statusFilter:this.currentStatusFilter,categoryFilter:this.currentCategoryFilter})}catch(n){throw console.error("Failed to reset status filter:",n),n}}}class N{constructor(e,n,t){this.score=e,this.totalQuestions=n,this.totalPoints=t,this.percentage=Math.round(e/t*100)}getPerformanceBadge(){return this.percentage>=90?{icon:"üèÜ",text:"Excellent",class:"excellent",message:"Outstanding performance!"}:this.percentage>=80?{icon:"ü•á",text:"Very Good",class:"very-good",message:"Great job!"}:this.percentage>=70?{icon:"ü•à",text:"Good",class:"good",message:"Well done!"}:this.percentage>=60?{icon:"ü•â",text:"Pass",class:"pass",message:"You passed!"}:{icon:"üìö",text:"Needs Review",class:"needs-review",message:"Keep studying!"}}render(){const e=this.getPerformanceBadge(),n=document.createElement("div");return n.className="quiz-results-display",n.innerHTML=`
      <div class="score-display">
        <div class="score-circle ${e.class}">
          <div class="score-content">
            <span class="percentage">${this.percentage}%</span>
            <span class="fraction">(${this.score}/${this.totalPoints})</span>
          </div>
        </div>
        <div class="performance-badge">
          <span class="badge-icon">${e.icon}</span>
          <span class="badge-text">${e.text}</span>
          <p class="badge-message">${e.message}</p>
        </div>
      </div>
      <div class="progress-bar-container">
        <div class="progress-bar">
          <div class="progress-fill ${e.class}" style="width: 0%" data-target="${this.percentage}"></div>
        </div>
        <div class="progress-label">
          ${this.score} out of ${this.totalPoints} points
        </div>
      </div>
      <div class="score-breakdown">
        <div class="breakdown-item">
          <span class="breakdown-value">${this.totalQuestions}</span>
          <span class="breakdown-label">Total Questions</span>
        </div>
        <div class="breakdown-item">
          <span class="breakdown-value">${Math.round(this.score/this.totalPoints*this.totalQuestions)}</span>
          <span class="breakdown-label">Correct Answers</span>
        </div>
        <div class="breakdown-item">
          <span class="breakdown-value">${this.totalQuestions-Math.round(this.score/this.totalPoints*this.totalQuestions)}</span>
          <span class="breakdown-label">Incorrect Answers</span>
        </div>
      </div>
    `,setTimeout(()=>{this.animateProgressBar(n)},100),n}animateProgressBar(e){const n=e.querySelector(".progress-fill"),t=n.getAttribute("data-target");n.style.transition="width 1.5s ease-in-out",n.style.width=`${t}%`}static create(e,n,t){return new N(e,n,t).render()}}class B{constructor(e,n){this.questions=e,this.userAnswers=n}isAnswerCorrect(e,n){return n?Array.isArray(e.correctAnswer)?Array.isArray(n)?JSON.stringify(n.sort())===JSON.stringify(e.correctAnswer.sort()):!1:n===e.correctAnswer:!1}formatAnswer(e){return e?Array.isArray(e)?e.join(", "):typeof e=="boolean"?e?"True":"False":String(e):"No answer provided"}renderQuestion(e,n){var o;const t=this.userAnswers[e.id],i=this.isAnswerCorrect(e,t),s=i?"correct":"incorrect",a=document.createElement("div");return a.className=`question-review ${s}`,a.innerHTML=`
      <div class="question-header">
        <div class="question-number-badge">
          <span class="question-number">Q${n+1}</span>
          <span class="status-icon">${i?"‚úÖ":"‚ùå"}</span>
        </div>
        <div class="question-points">
          ${e.points} ${e.points===1?"point":"points"}
        </div>
      </div>
      
      <div class="question-content">
        <div class="question-text">${e.question}</div>
        ${e.code?`
          <div class="code-block-wrapper">
            <div class="code-header">
              <span class="language-label">${((o=e.language)==null?void 0:o.toUpperCase())||"CODE"}</span>
            </div>
            <pre><code class="language-${e.language||"text"}">${this.escapeHtml(e.code)}</code></pre>
          </div>
        `:""}
      </div>

      <div class="answers-comparison">
        <div class="answer-row user-answer">
          <div class="answer-label">Your Answer:</div>
          <div class="answer-value ${s}">
            ${this.formatAnswer(t)}
          </div>
        </div>
        
        ${i?"":`
          <div class="answer-row correct-answer">
            <div class="answer-label">Correct Answer:</div>
            <div class="answer-value correct">
              ${this.formatAnswer(e.correctAnswer)}
            </div>
          </div>
        `}
      </div>

      ${e.explanation?`
        <div class="explanation-section">
          <div class="explanation-header">
            <span class="explanation-icon">üí°</span>
            <strong>Explanation</strong>
          </div>
          <div class="explanation-content">
            ${e.explanation}
          </div>
        </div>
      `:""}

      ${e.options&&e.type!=="code"?`
        <div class="options-review">
          <div class="options-header">Available Options:</div>
          <div class="options-list">
            ${e.options.map(l=>{let u="";Array.isArray(e.correctAnswer)?u=e.correctAnswer.includes(l)?"correct-option":"":u=l===e.correctAnswer?"correct-option":"";let c="";return Array.isArray(t)?c=t.includes(l)?"user-selected":"":c=t===l?"user-selected":"",`
                <div class="option-item ${u} ${c}">
                  <span class="option-text">${l}</span>
                  ${u?'<span class="correct-indicator">‚úì</span>':""}
                  ${c&&!u?'<span class="incorrect-indicator">‚úó</span>':""}
                </div>
              `}).join("")}
          </div>
        </div>
      `:""}
    `,a}render(){const e=document.createElement("div");e.className="answer-review-section";const n=document.createElement("div");n.className="review-header",n.innerHTML=`
      <h2>üìã Review Your Answers</h2>
      <p class="review-description">
        Review each question to understand your performance and learn from any mistakes.
      </p>
    `,e.appendChild(n);const t=document.createElement("div");return t.className="questions-container",this.questions.forEach((i,s)=>{const a=this.renderQuestion(i,s);t.appendChild(a)}),e.appendChild(t),e}escapeHtml(e){const n=document.createElement("div");return n.textContent=e,n.innerHTML}static create(e,n){return new B(e,n).render()}}class x{constructor(e,n,t,i){this.quizId=e,this.score=n,this.totalPoints=t,this.router=i,this.percentage=Math.round(n/t*100)}retakeQuiz(){confirm("Are you sure you want to retake this quiz? Your current results will be replaced.")&&window.location.reload()}reviewIncorrectAnswers(){const e=document.querySelector(".answer-review-section");e&&(e.scrollIntoView({behavior:"smooth",block:"start"}),e.querySelectorAll(".question-review.incorrect").forEach((t,i)=>{setTimeout(()=>{t.classList.add("highlight-incorrect"),setTimeout(()=>{t.classList.remove("highlight-incorrect")},2e3)},i*200)}))}continueLearning(){this.router?this.router.navigate("/modules"):window.location.hash="#/modules"}findRelatedContent(){this.router?this.router.navigate("/modules?related="+encodeURIComponent(this.quizId)):window.location.hash="#/modules?related="+encodeURIComponent(this.quizId)}backToOverview(){this.router?this.router.navigate("/quizzes"):window.location.hash="#/quizzes"}shareResults(){const e=`I just completed a quiz and scored ${this.percentage}%! üéâ`;navigator.share?navigator.share({title:"Quiz Results",text:e,url:window.location.href}).catch(n=>console.warn("Error sharing:",n)):navigator.clipboard.writeText(e+" "+window.location.href).then(()=>{this.showNotification("Results copied to clipboard!")}).catch(n=>{console.warn("Error copying to clipboard:",n)})}showNotification(e){const n=document.createElement("div");n.className="action-notification",n.textContent=e,document.body.appendChild(n),setTimeout(()=>{n.classList.add("show")},10),setTimeout(()=>{n.classList.remove("show"),setTimeout(()=>{document.body.removeChild(n)},300)},2e3)}render(){const e=document.createElement("div");e.className="quiz-action-buttons";const n=document.createElement("div");n.className="primary-actions";const t=document.createElement("button");t.className="btn btn-primary action-btn",t.innerHTML=`
      <span class="btn-icon">üîÑ</span>
      <span class="btn-text">Retake Quiz</span>
    `,t.addEventListener("click",()=>this.retakeQuiz()),n.appendChild(t);const i=document.createElement("button");i.className="btn btn-success action-btn",i.innerHTML=`
      <span class="btn-icon">‚û°Ô∏è</span>
      <span class="btn-text">Continue Learning</span>
    `,i.addEventListener("click",()=>this.continueLearning()),n.appendChild(i),e.appendChild(n);const s=document.createElement("div");if(s.className="secondary-actions",this.score<this.totalPoints){const l=document.createElement("button");l.className="btn btn-secondary action-btn",l.innerHTML=`
        <span class="btn-icon">üìñ</span>
        <span class="btn-text">Review Incorrect Answers</span>
      `,l.addEventListener("click",()=>this.reviewIncorrectAnswers()),s.appendChild(l)}if(this.percentage<70){const l=document.createElement("button");l.className="btn btn-info action-btn",l.innerHTML=`
        <span class="btn-icon">üîç</span>
        <span class="btn-text">Find Related Content</span>
      `,l.addEventListener("click",()=>this.findRelatedContent()),s.appendChild(l)}if(this.percentage>=70){const l=document.createElement("button");l.className="btn btn-outline action-btn",l.innerHTML=`
        <span class="btn-icon">üì§</span>
        <span class="btn-text">Share Results</span>
      `,l.addEventListener("click",()=>this.shareResults()),s.appendChild(l)}const a=document.createElement("button");a.className="btn btn-outline action-btn",a.innerHTML=`
      <span class="btn-icon">üìã</span>
      <span class="btn-text">Back to Overview</span>
    `,a.addEventListener("click",()=>this.backToOverview()),s.appendChild(a),e.appendChild(s);const o=document.createElement("div");return o.className="encouragement-message",o.innerHTML=this.getEncouragementMessage(),e.appendChild(o),e}getEncouragementMessage(){return this.percentage>=90?`
        <div class="encouragement excellent">
          <span class="encouragement-icon">üåü</span>
          <p>Excellent work! You've mastered this topic. Ready for the next challenge?</p>
        </div>
      `:this.percentage>=80?`
        <div class="encouragement very-good">
          <span class="encouragement-icon">üéØ</span>
          <p>Great job! You have a solid understanding. Keep up the momentum!</p>
        </div>
      `:this.percentage>=70?`
        <div class="encouragement good">
          <span class="encouragement-icon">üëç</span>
          <p>Well done! You passed. Review the explanations to strengthen your knowledge.</p>
        </div>
      `:this.percentage>=60?`
        <div class="encouragement pass">
          <span class="encouragement-icon">üìö</span>
          <p>You passed, but there's room for improvement. Review the material and try again!</p>
        </div>
      `:`
      <div class="encouragement needs-review">
        <span class="encouragement-icon">üí™</span>
        <p>Don't give up! Review the explanations and related content, then try again. You've got this!</p>
      </div>
    `}static create(e,n,t,i=null){return new x(e,n,t,i).render()}}class kP{constructor(e){this.services=e,this.ihkContentService=e.ihkContentService,this.quizService=e.quizService,this.router=e.router,this.quiz=null,this.currentQuestionIndex=0,this.answers={},this.showResults=!1,this.startTime=null,this.endTime=null,this.timerInterval=null,this.timeRemaining=0,this.timerStarted=!1}render(e){return d(this,null,function*(){const n=document.createElement("div");return n.className="ihk-quiz-view",n.innerHTML=_.render("Loading quiz..."),window.setTimeout(()=>d(this,null,function*(){try{if(this.quiz=yield this.ihkContentService.getQuizById(e),!this.quiz){const t=A.create({icon:"üìù",title:"Quiz Not Found",message:"The requested quiz could not be found.",action:{label:"Back to Overview",onClick:()=>this.router.navigate("/")}});n.innerHTML="",n.appendChild(t);return}this.startTime=Date.now(),this.quiz.timeLimit&&this.initializeTimer(),n.innerHTML="",n.appendChild(this.renderContent()),this.setupPageVisibilityHandling(),w.announce(`Quiz loaded: ${this.quiz.title}`)}catch(t){console.error("Error loading quiz:",t);const i=A.create({icon:"‚ö†Ô∏è",title:"Error Loading Quiz",message:"Failed to load quiz content. Please try again.",action:{label:"Retry",onClick:()=>this.render(e)}});n.innerHTML="",n.appendChild(i),y.error("Failed to load quiz")}}),0),n})}renderContent(){const e=document.createElement("div");if(e.className="ihk-quiz-content",this.showResults)e.appendChild(this.renderResults());else{const n=this.renderBreadcrumb();e.appendChild(n);const t=this.renderHeader();e.appendChild(t);const i=this.renderProgress();e.appendChild(i);const s=this.renderQuestion();e.appendChild(s);const a=this.renderNavigation();e.appendChild(a)}return e}renderBreadcrumb(){const e=document.createElement("nav");return e.className="breadcrumb",e.setAttribute("aria-label","Breadcrumb"),e.innerHTML=`
      <ol>
        <li><a href="#/">Home</a></li>
        <li><a href="#/quizzes">Quizzes</a></li>
        <li><span aria-current="page">${this.quiz.title}</span></li>
      </ol>
    `,e}renderHeader(){const e=document.createElement("header");e.className="quiz-header";const n=[];return this.quiz.newIn2025&&n.push('<span class="badge badge-new">Neu 2025</span>'),e.innerHTML=`
      <div class="quiz-badges">
        ${n.join("")}
      </div>
      <h1>${this.quiz.title}</h1>
      <p class="quiz-description">${this.quiz.description}</p>
      <div class="quiz-metadata">
        <span class="meta-item">
          <strong>Kategorie:</strong> ${this.quiz.category}
        </span>
        <span class="meta-item">
          <strong>Schwierigkeit:</strong> 
          <span class="difficulty difficulty-${this.quiz.difficulty}">
            ${this.getDifficultyLabel(this.quiz.difficulty)}
          </span>
        </span>
        <span class="meta-item">
          <strong>Fragen:</strong> ${this.quiz.questions.length}
        </span>
        ${this.quiz.timeLimit?`
          <span class="meta-item">
            <strong>Zeitlimit:</strong> ${this.quiz.timeLimit} Min.
          </span>
        `:""}
        <span class="meta-item">
          <strong>Bestehensgrenze:</strong> ${this.quiz.passingScore}%
        </span>
      </div>
    `,e}renderProgress(){const e=document.createElement("div");e.className="quiz-progress";const n=(this.currentQuestionIndex+1)/this.quiz.questions.length*100;return e.innerHTML=`
      <div class="progress-info">
        <span>Frage ${this.currentQuestionIndex+1} von ${this.quiz.questions.length}</span>
        ${this.quiz.timeLimit?`
          <span class="time-remaining" id="time-remaining" role="timer" aria-live="polite">
            Zeit: ${this.getFormattedTimeRemaining()||this.quiz.timeLimit+":00"}
          </span>
        `:""}
      </div>
      <div class="progress-bar" role="progressbar" 
           aria-valuenow="${n}" 
           aria-valuemin="0" 
           aria-valuemax="100"
           aria-label="Quiz progress">
        <div class="progress-fill" style="width: ${n}%"></div>
      </div>
    `,e}renderQuestion(){var i;const e=document.createElement("section");e.className="quiz-question",e.setAttribute("aria-labelledby","question-heading");const n=this.quiz.questions[this.currentQuestionIndex],t=this.currentQuestionIndex+1;return e.innerHTML=`
      <h2 id="question-heading">Frage ${t}</h2>
      <div class="question-content">
        <p class="question-text">${n.question}</p>
        ${n.code?`
          <div class="code-block-wrapper">
            <div class="code-header">
              <span class="language-label">${((i=n.language)==null?void 0:i.toUpperCase())||"CODE"}</span>
            </div>
            <pre><code class="language-${n.language||"text"}">${this.escapeHtml(n.code)}</code></pre>
          </div>
        `:""}
      </div>
      <div class="question-options">
        ${this.renderOptions(n)}
      </div>
      <div class="question-points">
        <span>${n.points} ${n.points===1?"Punkt":"Punkte"}</span>
      </div>
    `,e}renderOptions(e){const n=e.id,t=this.answers[n];switch(e.type){case"single-choice":return e.options.map(i=>`
          <label class="option-label">
            <input 
              type="radio" 
              name="question-${n}" 
              value="${i}"
              ${t===i?"checked":""}
              onchange="window.ihkQuizView.saveAnswer('${n}', this.value)"
            />
            <span class="option-text">${i}</span>
          </label>
        `).join("");case"multiple-choice":{const i=t||[];return e.options.map(s=>`
          <label class="option-label">
            <input 
              type="checkbox" 
              name="question-${n}" 
              value="${s}"
              ${i.includes(s)?"checked":""}
              onchange="window.ihkQuizView.saveMultipleAnswer('${n}', this.value, this.checked)"
            />
            <span class="option-text">${s}</span>
          </label>
        `).join("")}case"true-false":return`
          <label class="option-label">
            <input 
              type="radio" 
              name="question-${n}" 
              value="true"
              ${t==="true"?"checked":""}
              onchange="window.ihkQuizView.saveAnswer('${n}', this.value)"
            />
            <span class="option-text">Wahr</span>
          </label>
          <label class="option-label">
            <input 
              type="radio" 
              name="question-${n}" 
              value="false"
              ${t==="false"?"checked":""}
              onchange="window.ihkQuizView.saveAnswer('${n}', this.value)"
            />
            <span class="option-text">Falsch</span>
          </label>
        `;case"code":return`
          <textarea 
            class="code-answer"
            placeholder="Gib deine Antwort hier ein..."
            onchange="window.ihkQuizView.saveAnswer('${n}', this.value)"
          >${t||""}</textarea>
        `;default:return"<p>Unbekannter Fragetyp</p>"}}renderNavigation(){const e=document.createElement("div");e.className="quiz-navigation";const n=this.currentQuestionIndex===0,t=this.currentQuestionIndex===this.quiz.questions.length-1;return e.innerHTML=`
      <button 
        class="btn btn-secondary"
        ${n?"disabled":""}
        onclick="window.ihkQuizView.previousQuestion()"
      >
        ‚Üê Zur√ºck
      </button>
      ${t?`
        <button 
          class="btn btn-primary"
          onclick="window.ihkQuizView.submitQuiz()"
        >
          Quiz abschlie√üen
        </button>
      `:`
        <button 
          class="btn btn-primary"
          onclick="window.ihkQuizView.nextQuestion()"
        >
          Weiter ‚Üí
        </button>
      `}
    `,window.ihkQuizView=this,e}renderResults(){const e=document.createElement("div");e.className="quiz-results-enhanced";const n=this.calculateScore(),t=n.percentage>=this.quiz.passingScore,i=this.endTime?Math.round((this.endTime-this.startTime)/1e3/60):0,s=document.createElement("div");s.className="enhanced-results-header",s.innerHTML=`
      <div class="results-status ${t?"passed":"failed"}">
        <div class="status-icon">${t?"üéâ":"üìö"}</div>
        <h1>${t?"Congratulations! You Passed!":"Keep Learning!"}</h1>
        <p class="status-message">
          ${t?"Great job! You have successfully completed this quiz.":"Don't worry, review the explanations and try again."}
        </p>
        ${i>0?`<p class="time-taken">Completed in ${i} minutes</p>`:""}
      </div>
    `,e.appendChild(s);const a=N.create(n.earned,this.quiz.questions.length,n.total);e.appendChild(a);const o=B.create(this.quiz.questions,this.answers);e.appendChild(o);const l=x.create(this.quiz.id,n.earned,n.total,this.router);return e.appendChild(l),e}saveAnswer(e,n){this.answers[e]=n}saveMultipleAnswer(e,n,t){this.answers[e]||(this.answers[e]=[]),t?this.answers[e].push(n):this.answers[e]=this.answers[e].filter(i=>i!==n)}nextQuestion(){this.currentQuestionIndex<this.quiz.questions.length-1&&(this.currentQuestionIndex++,this.updateView(),w.announce(`Question ${this.currentQuestionIndex+1} of ${this.quiz.questions.length}`))}previousQuestion(){this.currentQuestionIndex>0&&(this.currentQuestionIndex--,this.updateView(),w.announce(`Question ${this.currentQuestionIndex+1} of ${this.quiz.questions.length}`))}submitQuiz(){return d(this,null,function*(){this.stopTimer(),this.endTime=Date.now(),this.showResults=!0;const e=this.calculateScore(),n=this.quiz.questions.map(t=>({questionId:t.id,userAnswer:this.answers[t.id],isCorrect:this.checkAnswer(t,this.answers[t.id])}));yield this.quizService.saveQuizAttempt(this.quiz.id,e.percentage,n),this.updateView(),w.announce("Quiz completed. Results are now displayed.")})}updateView(){const e=document.querySelector(".ihk-quiz-content");if(e){const n=this.renderContent();e.replaceWith(n)}}calculateScore(){let e=0,n=0,t=0,i=0;return this.quiz.questions.forEach(s=>{n+=s.points;const a=this.answers[s.id];this.checkAnswer(s,a)?(e+=s.points,t++):i++}),{earned:e,total:n,percentage:Math.round(e/n*100),correct:t,incorrect:i}}checkAnswer(e,n){return n?Array.isArray(e.correctAnswer)?Array.isArray(n)?JSON.stringify(n.sort())===JSON.stringify(e.correctAnswer.sort()):!1:n===e.correctAnswer:!1}formatAnswer(e){return e?Array.isArray(e)?e.join(", "):e:"Keine Antwort"}escapeHtml(e){const n=document.createElement("div");return n.textContent=e,n.innerHTML}getDifficultyLabel(e){return{beginner:"Anf√§nger",intermediate:"Fortgeschritten",advanced:"Experte"}[e]||e}initializeTimer(){!this.quiz.timeLimit||this.timerStarted||(this.timeRemaining=this.quiz.timeLimit*60,this.timerStarted=!0,this.startTimer())}startTimer(){this.timerInterval&&clearInterval(this.timerInterval),this.timerInterval=setInterval(()=>{this.timeRemaining--,this.updateTimerDisplay(),this.timeRemaining<=0&&this.handleTimeUp(),this.timeRemaining===300&&(y.warning("Nur noch 5 Minuten verbleibend!"),w.announce("Warning: 5 minutes remaining")),this.timeRemaining===60&&(y.warning("Nur noch 1 Minute verbleibend!"),w.announce("Warning: 1 minute remaining")),this.timeRemaining===30&&(y.error("Nur noch 30 Sekunden!"),w.announce("Warning: 30 seconds remaining"))},1e3)}updateTimerDisplay(){const e=document.getElementById("time-remaining");if(!e)return;const n=Math.floor(this.timeRemaining/60),t=this.timeRemaining%60,i=`${n}:${t.toString().padStart(2,"0")}`;e.textContent=`Zeit: ${i}`,this.timeRemaining<=300&&e.classList.add("time-warning"),this.timeRemaining<=60&&e.classList.add("time-critical")}handleTimeUp(){this.stopTimer(),y.error("Zeit abgelaufen! Quiz wird automatisch beendet."),w.announce("Time is up! Quiz will be submitted automatically."),setTimeout(()=>{this.submitQuiz()},2e3)}stopTimer(){this.timerInterval&&(clearInterval(this.timerInterval),this.timerInterval=null)}pauseTimer(){this.timerInterval&&(clearInterval(this.timerInterval),this.timerInterval=null)}resumeTimer(){this.timerStarted&&!this.timerInterval&&this.timeRemaining>0&&this.startTimer()}getFormattedTimeRemaining(){const e=Math.floor(this.timeRemaining/60),n=this.timeRemaining%60;return`${e}:${n.toString().padStart(2,"0")}`}setupPageVisibilityHandling(){document.addEventListener("visibilitychange",()=>{document.hidden?this.pauseTimer():this.resumeTimer()}),window.addEventListener("blur",()=>{this.pauseTimer()}),window.addEventListener("focus",()=>{this.resumeTimer()})}cleanup(){this.stopTimer(),document.removeEventListener("visibilitychange",this.handleVisibilityChange),window.removeEventListener("blur",this.handleWindowBlur),window.removeEventListener("focus",this.handleWindowFocus)}}class zP{constructor(e){this.progressService=e.progressService,this.moduleService=e.moduleService,this.quizService=e.quizService,this.ihkContentService=e.ihkContentService,this.stateManager=e.stateManager,this.specializationService=e.specializationService}render(){return d(this,null,function*(){const e=document.createElement("main");e.className="progress-view",e.setAttribute("role","main"),e.setAttribute("aria-label","Progress tracking page");try{const n=this.specializationService?this.specializationService.getCurrentSpecialization():null,t=yield this.progressService.getOverallProgress(),i=yield this.moduleService.getModules(),s=this.progressService.getQuizHistory(),a=yield this.ihkContentService.getAllQuizzes();let o=null,l=null;if(n&&this.specializationService)try{o=yield this.progressService.getSpecializationStatistics(n),l=t.categoryBreakdown||{}}catch(u){console.warn("Could not load specialization statistics:",u)}e.innerHTML=`
        <header class="progress-header">
          <h1 class="page-title">Your Progress</h1>
          <p class="page-description">Track your learning journey and achievements</p>
          ${n?this._renderSpecializationHeader(n):""}
        </header>

        ${this._renderOverallProgress(t,o)}
        ${l?this._renderCategoryBreakdown(l,n):""}
        ${this._renderModuleCompletion(i,n)}
        ${this._renderQuizHistory(s,a)}
        ${this._renderExportSection()}
      `,this._attachEventListeners(e)}catch(n){console.error("Error rendering progress view:",n),e.innerHTML=this._renderError()}return e})}_renderSpecializationHeader(e){if(!this.specializationService)return"";const n=this.specializationService.getSpecializationConfig(e);return n?`
      <div class="specialization-header">
        <div class="specialization-badge" style="background-color: ${n.color}20; border-color: ${n.color}">
          <span class="specialization-icon">${n.icon}</span>
          <span class="specialization-name">${n.name}</span>
        </div>
      </div>
    `:""}_renderOverallProgress(e,n){const t=e.overallPercentage||0,i=e.lastActivity?M(e.lastActivity):"No activity yet",s=n?`
      <div class="specialization-progress-info">
        <h3 class="specialization-progress-title">Specialization Progress</h3>
        <div class="specialization-stats">
          ${n.strengths.length>0?`
            <div class="stat-item strengths">
              <span class="stat-icon">üí™</span>
              <div class="stat-content">
                <div class="stat-label">Strengths</div>
                <div class="stat-value">${n.strengths.join(", ")}</div>
              </div>
            </div>
          `:""}
          ${n.improvementAreas.length>0?`
            <div class="stat-item improvements">
              <span class="stat-icon">üìà</span>
              <div class="stat-content">
                <div class="stat-label">Areas for Improvement</div>
                <div class="stat-value">${n.improvementAreas.join(", ")}</div>
              </div>
            </div>
          `:""}
        </div>
      </div>
    `:"";return`
      <section class="overall-progress-section">
        <div class="progress-card">
          <h2 class="card-title">Overall Progress</h2>

          <div class="progress-circle-container">
            <svg class="progress-circle" viewBox="0 0 200 200">
              <circle
                class="progress-circle-bg"
                cx="100"
                cy="100"
                r="90"
              />
              <circle
                class="progress-circle-fill"
                cx="100"
                cy="100"
                r="90"
                stroke-dasharray="${t/100*565.48} 565.48"
              />
            </svg>
            <div class="progress-circle-text">
              <div class="progress-percentage">${t}%</div>
              <div class="progress-label">Complete</div>
            </div>
          </div>

          <div class="progress-summary">
            <div class="summary-item">
              <span class="summary-icon">üìö</span>
              <div class="summary-content">
                <div class="summary-value">${e.modulesCompleted}/${e.totalModules}</div>
                <div class="summary-label">Modules Completed</div>
              </div>
            </div>

            <div class="summary-item">
              <span class="summary-icon">üìù</span>
              <div class="summary-content">
                <div class="summary-value">${e.quizzesTaken}</div>
                <div class="summary-label">Quizzes Taken</div>
              </div>
            </div>

            <div class="summary-item">
              <span class="summary-icon">‚≠ê</span>
              <div class="summary-content">
                <div class="summary-value">${e.averageQuizScore}%</div>
                <div class="summary-label">Average Score</div>
              </div>
            </div>

            <div class="summary-item">
              <span class="summary-icon">üïí</span>
              <div class="summary-content">
                <div class="summary-value">${i}</div>
                <div class="summary-label">Last Activity</div>
              </div>
            </div>
          </div>

          ${s}
        </div>
      </section>
    `}_renderCategoryBreakdown(e,n){return!e||Object.keys(e).length===0?"":`
      <section class="category-breakdown-section">
        <h2 class="section-title">Progress by Category</h2>
        <div class="category-grid">
          ${Object.entries(e).map(([i,s])=>{const a=s.modulesCompleted>0?Math.round(s.modulesCompleted/Math.max(s.modulesCompleted+1,1)*100):0,o=this._getRelevanceColor(s.relevance);return`
        <div class="category-item">
          <div class="category-header">
            <div class="category-info">
              <h4 class="category-name">${s.name}</h4>
              <span class="category-relevance" style="background-color: ${o}20; color: ${o}">
                ${s.relevance}
              </span>
            </div>
            <div class="category-completion">${a}%</div>
          </div>
          
          <div class="category-progress-bar">
            <div class="progress-bar-fill" style="width: ${a}%; background-color: ${o}"></div>
          </div>
          
          <div class="category-stats">
            <div class="category-stat">
              <span class="stat-icon">üìö</span>
              <span class="stat-text">${s.modulesCompleted} modules</span>
            </div>
            <div class="category-stat">
              <span class="stat-icon">üìù</span>
              <span class="stat-text">${s.quizzesTaken} quizzes</span>
            </div>
            ${s.averageQuizScore>0?`
              <div class="category-stat">
                <span class="stat-icon">‚≠ê</span>
                <span class="stat-text">${s.averageQuizScore}% avg</span>
              </div>
            `:""}
          </div>
        </div>
      `}).join("")}
        </div>
      </section>
    `}_getRelevanceColor(e){const n={high:"#10b981",medium:"#f59e0b",low:"#6b7280",none:"#9ca3af"};return n[e]||n.none}_renderModuleCompletion(e,n){const t=e.filter(l=>l.completed),i=e.filter(l=>l.inProgress&&!l.completed),s=e.filter(l=>!l.completed&&!l.inProgress);let a={};return n&&this.specializationService&&(a=this._categorizeModules(e,n)),`
      <section class="module-completion-section">
        <h2 class="section-title">Module Progress</h2>

        ${Object.keys(a).length>0?`
      <div class="category-filter-tabs">
        <button class="category-tab active" data-category="all">
          All Categories
        </button>
        ${Object.entries(a).map(([l,u])=>`
          <button class="category-tab" data-category="${l}">
            ${this._getCategoryDisplayName(l)} (${u.length})
          </button>
        `).join("")}
      </div>
    `:""}

        <div class="module-status-tabs">
          <button class="status-tab active" data-tab="all">
            All (${e.length})
          </button>
          <button class="status-tab" data-tab="completed">
            Completed (${t.length})
          </button>
          <button class="status-tab" data-tab="in-progress">
            In Progress (${i.length})
          </button>
          <button class="status-tab" data-tab="not-started">
            Not Started (${s.length})
          </button>
        </div>

        <div class="module-list" data-tab-content="all">
          ${this._renderModuleList(e,n)}
        </div>

        <div class="module-list hidden" data-tab-content="completed">
          ${this._renderModuleList(t,n)}
        </div>

        <div class="module-list hidden" data-tab-content="in-progress">
          ${this._renderModuleList(i,n)}
        </div>

        <div class="module-list hidden" data-tab-content="not-started">
          ${this._renderModuleList(s,n)}
        </div>

        ${Object.entries(a).map(([l,u])=>`
          <div class="module-list hidden" data-category-content="${l}">
            ${this._renderModuleList(u,n)}
          </div>
        `).join("")}
      </section>
    `}_categorizeModules(e,n){if(!this.specializationService)return{};const t={};return e.forEach(i=>{const s=this._getModuleCategoryId(i),a=this.specializationService.getCategoryRelevance(s,n);let o="general";a==="high"&&s.includes("BP-AE")?o="anwendungsentwicklung":a==="high"&&s.includes("BP-DPA")&&(o="daten-prozessanalyse"),t[o]||(t[o]=[]),t[o].push(i)}),t}_getModuleCategoryId(e){return e.category?e.category:e.id.includes("bp-ae-")?"BP-AE":e.id.includes("bp-dpa-")?"BP-DPA":e.id.includes("fue-")?"FUE":"general"}_getCategoryDisplayName(e){return{general:"General",anwendungsentwicklung:"Anwendungsentwicklung","daten-prozessanalyse":"Daten- und Prozessanalyse"}[e]||e}_renderModuleList(e,n){return e.length===0?'<div class="empty-state"><p>No modules in this category.</p></div>':e.map(t=>{const i=this._getModuleCategoryId(t),s=n&&this.specializationService?this.specializationService.getCategoryRelevance(i,n):"medium",a=this._getRelevanceColor(s);return`
            <div class="module-progress-item">
              <div class="module-info">
                <div class="module-header">
                  <h3 class="module-name">${t.title}</h3>
                  <div class="module-indicators">
                    <span class="module-category" style="background-color: ${a}20; color: ${a}">
                      ${this._getCategoryDisplayName(this._getModuleCategoryId(t))}
                    </span>
                    ${s!=="medium"?`
                      <span class="relevance-indicator" style="background-color: ${a}20; color: ${a}">
                        ${s}
                      </span>
                    `:""}
                  </div>
                </div>
                ${t.description?`<p class="module-description">${t.description}</p>`:""}
              </div>
              <div class="module-status">
                ${this._getModuleStatusBadge(t)}
              </div>
            </div>
          `}).join("")}_getModuleStatusBadge(e){return e.completed?'<span class="badge badge-success">‚úì Completed</span>':e.inProgress?'<span class="badge badge-warning">In Progress</span>':'<span class="badge badge-default">Not Started</span>'}_renderQuizHistory(e,n){return e.length===0?`
        <section class="quiz-history-section">
          <h2 class="section-title">Quiz History</h2>
          ${A.noQuizHistory().outerHTML}
        </section>
      `:`
      <section class="quiz-history-section">
        <h2 class="section-title">Quiz History</h2>
        <div class="table-container">
          <table class="quiz-history-table">
            <thead>
              <tr>
                <th>Quiz</th>
                <th>Score</th>
                <th>Correct</th>
                <th>Date</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              ${e.map(i=>{const s=n.find(o=>o.id===i.quizId);return`
          <tr>
            <td>${s?s.title:"Unknown Quiz"}</td>
            <td>
              <span class="score-badge ${i.passed?"score-pass":"score-fail"}">
                ${i.score}%
              </span>
            </td>
            <td>${i.correctAnswers}/${i.totalQuestions}</td>
            <td>${M(i.date)}</td>
            <td>
              <span class="badge ${i.passed?"badge-success":"badge-error"}">
                ${i.passed?"Passed":"Failed"}
              </span>
            </td>
          </tr>
        `}).join("")}
            </tbody>
          </table>
        </div>
      </section>
    `}_renderExportSection(){return`
      <section class="export-section">
        <div class="export-card">
          <div class="export-content">
            <h3 class="export-title">Export Your Progress</h3>
            <p class="export-description">
              Download your learning progress as a JSON file for backup or analysis.
            </p>
          </div>
          <button class="btn-primary" data-action="export-progress">
            <span>üì•</span>
            Export Progress
          </button>
        </div>
      </section>
    `}_renderError(){return`
      <div class="error-state">
        <h2>Unable to load progress</h2>
        <p>Please try refreshing the page.</p>
        <button class="btn-primary" onclick="window.location.reload()">Refresh</button>
      </div>
    `}_attachEventListeners(e){e.querySelectorAll(".status-tab").forEach(s=>{s.addEventListener("click",()=>{const a=s.dataset.tab;this._switchTab(a,e)})}),e.querySelectorAll(".category-tab").forEach(s=>{s.addEventListener("click",()=>{const a=s.dataset.category;this._switchCategoryTab(a,e)})});const i=e.querySelector('[data-action="export-progress"]');i&&i.addEventListener("click",()=>d(this,null,function*(){try{_.setButtonLoading(i,!0),yield new Promise(s=>setTimeout(s,300)),yield this.progressService.exportProgress(),_.setButtonLoading(i,!1),y.success("Progress exported successfully!")}catch(s){console.error("Error exporting progress:",s),_.setButtonLoading(i,!1),y.error("Failed to export progress. Please try again.")}}))}_switchTab(e,n){n.querySelectorAll(".status-tab").forEach(a=>{a.dataset.tab===e?a.classList.add("active"):a.classList.remove("active")}),n.querySelectorAll("[data-tab-content]").forEach(a=>{a.dataset.tabContent===e?a.classList.remove("hidden"):a.classList.add("hidden")}),n.querySelectorAll("[data-category-content]").forEach(a=>{a.classList.add("hidden")})}_switchCategoryTab(e,n){if(n.querySelectorAll(".category-tab").forEach(i=>{i.dataset.category===e?i.classList.add("active"):i.classList.remove("active")}),e==="all"){const i=n.querySelector(".status-tab.active");i&&this._switchTab(i.dataset.tab,n)}else n.querySelectorAll("[data-tab-content]").forEach(a=>{a.classList.add("hidden")}),n.querySelectorAll("[data-category-content]").forEach(a=>{a.dataset.categoryContent===e?a.classList.remove("hidden"):a.classList.add("hidden")})}_showNotification(e,n="success"){const t=document.createElement("div");t.className=`notification notification-${n}`,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.classList.add("show")},10),setTimeout(()=>{t.classList.remove("show"),setTimeout(()=>t.remove(),300)},3e3)}cleanup(){}}class vP{validateModule(e){return!(!e||typeof e!="object"||!e.id||typeof e.id!="string"||e.id.trim()===""||!e.title||typeof e.title!="string"||e.title.trim()===""||!e.category||typeof e.category!="string"||e.category.trim()==="")}filterValidModules(e){if(!Array.isArray(e))return console.warn("WheelModuleValidator: modules is not an array, returning empty array"),[];const n=e.filter(t=>{const i=this.validateModule(t);return i||console.warn("WheelModuleValidator: Invalid module filtered out:",t),i});return console.warn(`WheelModuleValidator: Filtered ${e.length} modules to ${n.length} valid modules`),n}getFallbackModules(){const e=[{id:"intro-basics",title:"Introduction to Basics",category:"fundamentals"},{id:"getting-started",title:"Getting Started",category:"basics"},{id:"bp-03-tdd",title:"Test-Driven Development (TDD)",category:"BP-03"},{id:"bp-04-scrum",title:"Scrum",category:"BP-04"},{id:"bp-05-sorting",title:"Sortierverfahren",category:"BP-05"}],n=this.filterValidModules(e);return n.length===0?(console.error("WheelModuleValidator: All fallback modules are invalid! This should never happen."),[{id:"emergency-fallback",title:"Learning Module",category:"general"}]):n}logValidationFailure(e,n){console.warn("WheelModuleValidator: Validation failed",{module:e,reason:n,timestamp:new Date().toISOString()})}validateModuleWithLogging(e){return!e||typeof e!="object"?(this.logValidationFailure(e,"Module is null, undefined, or not an object"),!1):!e.id||typeof e.id!="string"||e.id.trim()===""?(this.logValidationFailure(e,"Module id is missing, not a string, or empty"),!1):!e.title||typeof e.title!="string"||e.title.trim()===""?(this.logValidationFailure(e,"Module title is missing, not a string, or empty"),!1):!e.category||typeof e.category!="string"||e.category.trim()===""?(this.logValidationFailure(e,"Module category is missing, not a string, or empty"),!1):!0}}class yP{constructor(e){this.services=e,this.ihkContentService=e.ihkContentService,this.stateManager=e.stateManager,this.router=e.router,this.modules=[],this.selectedModule=null,this.isSpinning=!1,this.validator=new vP}render(){return d(this,null,function*(){const e=document.createElement("div");return e.className="wheel-view",e.innerHTML=_.render("Loading modules..."),setTimeout(()=>d(this,null,function*(){try{if(yield this.loadModules(),this.modules.length===0){e.innerHTML="",e.appendChild(this.showNoModulesMessage());return}if(this.modules.length<2){e.innerHTML="",e.appendChild(this.renderInsufficientModules());return}e.innerHTML="",e.appendChild(this.renderContent()),this.loadLastSelection(),w.announce("Wheel of Fortune loaded")}catch(n){console.error("WheelView: Critical error during render:",n),this.logCriticalError("render",n);const t=A.create({icon:"‚ö†Ô∏è",title:"Fehler beim Laden des Gl√ºcksrads",message:"Die Module konnten nicht geladen werden. Bitte versuchen Sie es erneut.",action:{label:"Erneut versuchen",onClick:()=>{this.modules=[],this.selectedModule=null,this.render().then(i=>{const s=document.querySelector(".wheel-view");s&&s.parentNode&&s.parentNode.replaceChild(i,s)}).catch(i=>{console.error("WheelView: Retry also failed:",i),y.error("Wiederholung fehlgeschlagen")})}}});e.innerHTML="",e.appendChild(t),y.error("Gl√ºcksrad konnte nicht geladen werden")}}),0),e})}loadModules(){return d(this,null,function*(){let e=[],n="unknown";try{console.warn("WheelView: Starting module loading...");try{const i=yield this.ihkContentService.searchContent("",{});if(Array.isArray(i)&&i.length>0)e=i,n="IHKContentService",console.warn(`WheelView: Successfully loaded ${i.length} modules from IHKContentService`);else throw console.warn("WheelView: IHKContentService returned empty or invalid result:",i),new Error("IHKContentService returned no valid modules")}catch(i){console.error("WheelView: IHKContentService failed:",i),console.warn("WheelView: Using fallback modules due to service failure"),e=this.validator.getFallbackModules(),n="fallback"}try{console.warn(`WheelView: Validating ${e.length} raw modules...`),this.modules=this.validator.filterValidModules(e),this.modules.length===0&&(console.error("WheelView: All modules failed validation, using emergency fallback"),this.modules=this.validator.getFallbackModules(),n="emergency-fallback"),console.warn(`WheelView: Successfully validated ${this.modules.length} modules from ${n}`)}catch(i){console.error("WheelView: Module validation failed:",i);try{this.modules=this.validator.getFallbackModules(),n="emergency-fallback",console.warn("WheelView: Using emergency fallback modules")}catch(s){console.error("WheelView: Even fallback modules failed:",s),this.modules=[{id:"emergency-module",title:"Learning Module",category:"general"}],n="absolute-emergency"}}}catch(i){console.error("WheelView: Critical error during module loading:",i),this.modules=[{id:"critical-error-fallback",title:"Learning Module",category:"general"}],n="critical-error-fallback",this.logCriticalError("loadModules",i)}this.modules.every(i=>this.validator.validateModule(i))||(console.error("WheelView: Final validation failed - some modules are still invalid"),this.modules=this.validator.getFallbackModules(),n="final-validation-fallback"),console.warn(`WheelView: Module loading complete - ${this.modules.length} valid modules from ${n}`)})}showNoModulesMessage(){return A.create({icon:"üéØ",title:"Keine Module verf√ºgbar",message:"Es sind derzeit keine g√ºltigen Module zum Lernen verf√ºgbar. Bitte versuchen Sie es sp√§ter erneut.",action:{label:"Erneut laden",onClick:()=>{this.render().then(e=>{const n=document.querySelector(".wheel-view");n&&n.parentNode&&n.parentNode.replaceChild(e,n)})}}})}loadLastSelection(){try{const e=this.stateManager.getState("lastWheelModule");if(e&&this.validator.validateModule(e))this.selectedModule=e,this.updateDisplay(),console.warn("WheelView: Restored last wheel selection:",e.title);else if(e){console.warn("WheelView: Last saved module is invalid, ignoring:",e);try{this.stateManager.setState("lastWheelModule",null)}catch(n){console.error("WheelView: Failed to clear invalid saved state:",n)}}}catch(e){console.error("WheelView: Error loading last selection:",e),this.logCriticalError("loadLastSelection",e)}}renderInsufficientModules(){return A.create({icon:"üéØ",title:"Nicht gen√ºgend Module verf√ºgbar",message:"Mindestens 2 Module werden ben√∂tigt, um das Gl√ºcksrad zu nutzen."})}renderContent(){const e=document.createElement("div");e.className="wheel-content";const n=this.renderHeader();e.appendChild(n);const t=this.renderWheelContainer();e.appendChild(t);const i=this.renderControls();e.appendChild(i);const s=this.renderSelectedDisplay();return e.appendChild(s),e}renderHeader(){const e=document.createElement("div");return e.className="page-header",e.innerHTML=`
      <h1>üéØ Lern-Modul</h1>
      <p class="subtitle">Lass das Gl√ºcksrad entscheiden, welches Modul du als n√§chstes lernst!</p>
    `,e}renderWheelContainer(){const e=document.createElement("div");e.className="wheel-container",e.setAttribute("role","region"),e.setAttribute("aria-label","Module selection wheel");const n=this.createWheelSVG();return e.innerHTML=`
      <div class="wheel-display">
        <div class="wheel-svg-container" id="wheel-svg-container">
          ${n}
          <div class="wheel-pointer">‚ñº</div>
          <button class="wheel-spin-overlay" id="wheel-spin-overlay" aria-label="Click wheel to spin">
            <span class="spin-icon">üé≤</span>
            <span class="spin-text">DREHEN</span>
          </button>
        </div>
        <div class="wheel-result-display" id="wheel-result-display">
          <div class="wheel-result-text">Klicke auf das Rad zum Drehen</div>
        </div>
      </div>
    `,setTimeout(()=>{const t=e.querySelector("#wheel-svg-container"),i=e.querySelector("#wheel-spin-overlay");t&&(t.style.cursor="pointer",t.addEventListener("click",()=>this.spin())),i&&i.addEventListener("click",s=>{s.stopPropagation(),this.spin()})},0),e}createWheelSVG(){if(!this.modules||this.modules.length===0)return'<div class="wheel-placeholder">Loading...</div>';const e=this.validator.filterValidModules(this.modules);if(e.length===0)return console.error("WheelView: No valid modules to render in wheel"),'<div class="wheel-placeholder">No valid modules available</div>';const n=e,t=["#3b82f6","#8b5cf6","#ec4899","#f59e0b","#10b981","#06b6d4","#6366f1","#f97316"],i=360/n.length,s=380,a=400,o=400;let l="";return n.forEach((u,c)=>{if(!this.validator.validateModule(u)){console.warn("WheelView: Invalid module found during rendering, skipping:",u);return}const h=c*i-90,m=(c+1)*i-90,g=t[c%t.length],p=h*Math.PI/180,b=m*Math.PI/180,S=a+s*Math.cos(p),k=o+s*Math.sin(p),E=a+s*Math.cos(b),T=o+s*Math.sin(b),I=i>180?1:0,dg=`
        M ${a} ${o}
        L ${S} ${k}
        A ${s} ${s} 0 ${I} 1 ${E} ${T}
        Z
      `,V=(h+m)/2,F=V*Math.PI/180,K=s*.7,W=a+K*Math.cos(F),j=o+K*Math.sin(F),mg=u.title.length>25?u.title.substring(0,23)+"...":u.title;l+=`
        <path 
          d="${dg}" 
          fill="${g}" 
          stroke="#fff" 
          stroke-width="4"
          class="wheel-segment"
        />
        <text 
          x="${W}" 
          y="${j}" 
          text-anchor="middle" 
          dominant-baseline="middle"
          fill="#fff" 
          font-size="20" 
          font-weight="bold"
          class="wheel-text"
          transform="rotate(${V}, ${W}, ${j})"
        >
          ${mg}
        </text>
      `}),`
      <svg 
        id="wheel-svg" 
        width="800" 
        height="800" 
        viewBox="0 0 800 800"
        class="wheel-svg"
      >
        <g id="wheel-group">
          ${l}
          <!-- Center circle -->
          <circle 
            cx="${a}" 
            cy="${o}" 
            r="50" 
            fill="#1f2937" 
            stroke="#fff" 
            stroke-width="5"
          />
          <text 
            x="${a}" 
            y="${o}" 
            text-anchor="middle" 
            dominant-baseline="middle"
            fill="#fff" 
            font-size="60"
          >
            üéØ
          </text>
        </g>
      </svg>
    `}renderControls(){const e=document.createElement("div");return e.className="wheel-controls",e.innerHTML=`
      <button 
        class="btn btn-secondary btn-again" 
        id="btn-again"
        aria-label="Spin again"
        style="display: none;"
      >
        üîÑ Nochmal drehen
      </button>
      <button 
        class="btn btn-primary btn-goto" 
        id="btn-goto"
        aria-label="Go to selected module"
        style="display: none;"
      >
        ‚û°Ô∏è Zum Modul
      </button>
    `,setTimeout(()=>{const n=e.querySelector("#btn-again"),t=e.querySelector("#btn-goto");n&&n.addEventListener("click",()=>this.spin()),t&&t.addEventListener("click",()=>this.navigateToModule())},0),e}renderSelectedDisplay(){const e=document.createElement("div");return e.className="selected-module-display",e.id="selected-module-display",e.setAttribute("role","status"),e.setAttribute("aria-live","polite"),e.setAttribute("aria-atomic","true"),e.innerHTML=`
      <p class="selected-label">Ausgew√§hltes Modul:</p>
      <div class="selected-module-container" id="selected-module-container">
        <p class="selected-module" id="selected-module-text">Noch kein Modul ausgew√§hlt</p>
        <p class="click-hint" id="click-hint" style="display: none;">üëÜ Klicken zum √ñffnen</p>
      </div>
    `,e}spin(){return d(this,null,function*(){if(this.isSpinning)return;const e=this.validator.filterValidModules(this.modules);if(e.length===0){console.error("WheelView: No valid modules available for spinning"),y.error("Keine g√ºltigen Module zum Drehen verf√ºgbar");return}this.isSpinning=!0;const n=document.querySelector("#wheel-spin-overlay"),t=document.querySelector("#btn-again"),i=document.querySelector("#btn-goto");n&&(n.style.display="none"),t&&(t.style.display="none"),i&&(i.style.display="none");const s=Math.floor(Math.random()*e.length);this.selectedModule=e[s],this.validator.validateModule(this.selectedModule)||(console.error("WheelView: Selected module is invalid:",this.selectedModule),this.selectedModule=e[0]),console.warn("üéØ Spinning wheel:"),console.warn("  Selected index:",s),console.warn("  Selected module:",this.selectedModule.title);const a=this.modules.findIndex(l=>l.id===this.selectedModule.id),o=a>=0?a:s;yield this.animateSelection(o),this.updateDisplay(),this.saveSelection(),t&&(t.style.display="inline-block"),i&&(i.style.display="inline-block"),w.announce(`Selected module: ${this.selectedModule.title}`),this.isSpinning=!1,t&&setTimeout(()=>t.focus(),100)})}animateSelection(e){return d(this,null,function*(){const n=document.querySelector("#wheel-group"),t=document.querySelector("#wheel-result-display .wheel-result-text");if(!n)return;const i=360/this.modules.length,s=-90+e*i+i/2,a=90-s+180,l=Math.floor(3+Math.random()*3)*360+a;if(console.warn("üé≤ Animation calculation:"),console.warn("  Segment angle:",i),console.warn("  Target segment center:",s),console.warn("  Target angle:",a),console.warn("  Total rotation:",l),console.warn("  Final module:",this.selectedModule.title),n.style.transition="none",n.style.transform="rotate(0deg)",n.offsetHeight,n.style.transition="transform 3.5s cubic-bezier(0.17, 0.67, 0.12, 0.99)",n.style.transform=`rotate(${l}deg)`,t&&(t.innerHTML='<div class="wheel-result-text">Spinning...</div>',t.style.opacity="0.5"),yield this.sleep(3500),t){const u=this.modules[e],c=l%360,h=(-90+i/2+c)%360,m=Math.round((360-i/2-c)/i)%this.modules.length,g=m<0?m+this.modules.length:m;console.warn("üèÜ Winner verification:"),console.warn("  Final index (selected):",e),console.warn("  Winner module:",u.title),console.warn("  Total rotation:",l),console.warn("  Final rotation (mod 360):",c),console.warn("  Segment 0 center after rotation:",h),console.warn("  Calculated segment at pointer:",g),t.innerHTML=`
        <span class="winner-text">${u.title}</span>
        <span class="winner-click-icon">üéØ</span>
      `,t.style.opacity="1",t.classList.add("wheel-result-highlight");const p=t.parentElement;if(p){p.style.cursor="pointer",p.classList.add("clickable-result"),p.setAttribute("role","button"),p.setAttribute("tabindex","0"),p.setAttribute("aria-label",`Open winning module: ${u.title}`);const b=p.cloneNode(!0);p.parentNode.replaceChild(b,p),b.addEventListener("click",()=>{this.navigateToModule()}),b.addEventListener("keydown",S=>{(S.key==="Enter"||S.key===" ")&&(S.preventDefault(),this.navigateToModule())})}setTimeout(()=>{const b=document.querySelector(".wheel-result-display .wheel-result-text");b&&b.classList.remove("wheel-result-highlight")},1e3)}})}sleep(e){return new Promise(n=>setTimeout(n,e))}updateDisplay(){const e=document.querySelector("#selected-module-text"),n=document.querySelector("#selected-module-container"),t=document.querySelector("#click-hint");if(e&&this.selectedModule&&(e.textContent=`${this.selectedModule.title} (${this.selectedModule.category||"N/A"})`,n)){n.style.cursor="pointer",n.classList.add("clickable-module"),n.setAttribute("role","button"),n.setAttribute("tabindex","0"),n.setAttribute("aria-label",`Open module: ${this.selectedModule.title}`),t&&(t.style.display="block");const i=n.cloneNode(!0);n.parentNode.replaceChild(i,n),i.addEventListener("click",()=>{this.navigateToModule()}),i.addEventListener("keydown",s=>{(s.key==="Enter"||s.key===" ")&&(s.preventDefault(),this.navigateToModule())}),i.addEventListener("mouseenter",()=>{i.classList.add("hover")}),i.addEventListener("mouseleave",()=>{i.classList.remove("hover")})}}saveSelection(){try{if(!this.validator.validateModule(this.selectedModule)){console.warn("WheelView: Cannot save invalid selected module:",this.selectedModule);return}const e={id:this.selectedModule.id,title:this.selectedModule.title,category:this.selectedModule.category,selectedAt:new Date().toISOString()};this.stateManager.setState("lastWheelModule",e),console.warn("WheelView: Successfully saved wheel selection to state")}catch(e){console.error("WheelView: Failed to save wheel state:",e),this.logCriticalError("saveSelection",e)}}navigateToModule(){if(!this.selectedModule){y.warning("Bitte w√§hle zuerst ein Modul aus");return}if(!this.validator.validateModule(this.selectedModule)){console.error("WheelView: Cannot navigate to invalid module:",this.selectedModule),y.error("Das ausgew√§hlte Modul ist ung√ºltig");return}try{console.warn("WheelView: Navigating to module:",this.selectedModule.id),window.location.hash=`#/modules/${this.selectedModule.id}`}catch(e){console.error("WheelView: Navigation failed:",e),this.logCriticalError("navigateToModule",e),y.error("Modul konnte nicht ge√∂ffnet werden")}}logCriticalError(e,n){const t={operation:e,error:{message:n.message,stack:n.stack,name:n.name},timestamp:new Date().toISOString(),modules:this.modules?this.modules.length:"undefined",selectedModule:this.selectedModule?this.selectedModule.id:"none"};console.error("WheelView: Critical Error Log:",t)}getValidModuleCount(){try{return Array.isArray(this.modules)?this.validator.filterValidModules(this.modules).length:0}catch(e){return console.error("WheelView: Error getting module count:",e),0}}cleanup(){}}class SP{constructor(e){this.services=e}render(){const e=document.createElement("div");return e.className="not-found-view",e.innerHTML=`
      <div class="not-found-content">
        <div class="not-found-icon" aria-hidden="true">üîç</div>
        <h1 class="not-found-title">Page Not Found</h1>
        <p class="not-found-message">
          Oops! The page you're looking for doesn't exist or has been moved.
        </p>
        <div class="not-found-actions">
          <button class="btn btn-primary" id="go-home-btn">
            Go to Home
          </button>
          <button class="btn btn-secondary" id="go-back-btn">
            Go Back
          </button>
        </div>
        <div class="not-found-suggestions">
          <h2>You might be interested in:</h2>
          <ul class="suggestion-list">
            <li>
              <a href="#/modules" class="suggestion-link">
                üìö Browse Learning Modules
              </a>
            </li>
            <li>
              <a href="#/quizzes" class="suggestion-link">
                üìù Take a Quiz
              </a>
            </li>
            <li>
              <a href="#/progress" class="suggestion-link">
                üìä View Your Progress
              </a>
            </li>
          </ul>
        </div>
      </div>
    `,setTimeout(()=>{const n=e.querySelector("#go-home-btn"),t=e.querySelector("#go-back-btn");n&&n.addEventListener("click",()=>{window.location.hash="#/"}),t&&t.addEventListener("click",()=>{window.history.back()})},0),e}}class wP{constructor(e,n){this.specializationService=e,this.onSelectionChange=n||(()=>{}),this.isModalOpen=!1,this.isFirstTime=!1,this.currentSpecialization=null,this.render=this.render.bind(this),this.showSpecializationModal=this.showSpecializationModal.bind(this),this.hideSpecializationModal=this.hideSpecializationModal.bind(this),this.handleSpecializationChange=this.handleSpecializationChange.bind(this),this.handleModalClick=this.handleModalClick.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this),this.init()}init(){return d(this,null,function*(){try{this.currentSpecialization=this.specializationService.getCurrentSpecialization(),this.isFirstTime=!this.specializationService.hasSelectedSpecialization()}catch(e){console.error("Error initializing SpecializationSelector:",e)}})}needsSpecializationSelection(){return!this.specializationService.hasSelectedSpecialization()}render(){const e=document.createElement("div");return e.className="specialization-selector",this.isModalOpen&&e.appendChild(this.renderModal()),e}renderModal(){const e=this.specializationService.getAvailableSpecializations(),n=document.createElement("div");n.className="specialization-modal-overlay",n.setAttribute("role","dialog"),n.setAttribute("aria-modal","true"),n.setAttribute("aria-labelledby","specialization-modal-title"),n.addEventListener("click",this.handleModalClick);const t=document.createElement("div");t.className="specialization-modal-content";const i=document.createElement("div");i.className="specialization-modal-header";const s=document.createElement("h2");s.id="specialization-modal-title",s.className="specialization-modal-title",s.textContent=this.isFirstTime?"W√§hle deine Fachrichtung":"Fachrichtung wechseln";const a=document.createElement("p");a.className="specialization-modal-subtitle",a.textContent=this.isFirstTime?"W√§hle deine Spezialisierung, um relevante Lerninhalte zu erhalten.":"Du kannst jederzeit zwischen den Fachrichtungen wechseln.",i.appendChild(s),i.appendChild(a);const o=document.createElement("div");o.className="specialization-options",e.forEach(u=>{const c=this.renderSpecializationOption(u);o.appendChild(c)});const l=document.createElement("div");if(l.className="specialization-modal-footer",!this.isFirstTime){const u=document.createElement("button");u.className="btn btn-secondary",u.textContent="Abbrechen",u.addEventListener("click",this.hideSpecializationModal),l.appendChild(u)}if(!this.isFirstTime){const u=document.createElement("button");u.className="specialization-modal-close",u.innerHTML="&times;",u.setAttribute("aria-label","Modal schlie√üen"),u.addEventListener("click",this.hideSpecializationModal),i.appendChild(u)}return t.appendChild(i),t.appendChild(o),t.appendChild(l),n.appendChild(t),document.addEventListener("keydown",this.handleKeyDown),n}renderSpecializationOption(e){const n=document.createElement("div");n.className=`specialization-option ${this.currentSpecialization===e.id?"selected":""}`,n.setAttribute("role","button"),n.setAttribute("tabindex","0"),n.setAttribute("aria-label",`${e.description} ausw√§hlen`);const t=()=>{this.handleSpecializationChange(e.id)};n.addEventListener("click",t),n.addEventListener("keydown",h=>{(h.key==="Enter"||h.key===" ")&&(h.preventDefault(),t())});const i=document.createElement("div");i.className="specialization-icon",i.style.color=e.color,i.textContent=e.icon;const s=document.createElement("div");s.className="specialization-content";const a=document.createElement("h3");a.className="specialization-name",a.textContent=e.name;const o=document.createElement("p");o.className="specialization-full-name",o.textContent=e.description;const l=document.createElement("p");l.className="specialization-description",l.textContent=e.description;const u=document.createElement("span");u.className="specialization-exam-code",u.textContent=`Pr√ºfung: ${e.examCode}`,s.appendChild(a),s.appendChild(o),s.appendChild(l),s.appendChild(u);const c=document.createElement("div");return c.className="specialization-indicator",this.currentSpecialization===e.id&&(c.innerHTML="‚úì"),n.appendChild(i),n.appendChild(s),n.appendChild(c),n}showSpecializationModal(e=!1){this.isFirstTime=e,this.isModalOpen=!0;const n=document.querySelector(".specialization-modal-overlay");n&&n.remove();const t=this.renderModal();document.body.appendChild(t),setTimeout(()=>{const i=t.querySelector(".specialization-option");i&&i.focus()},100),document.body.style.overflow="hidden"}hideSpecializationModal(){this.isModalOpen=!1;const e=document.querySelector(".specialization-modal-overlay");e&&e.remove(),document.removeEventListener("keydown",this.handleKeyDown),document.body.style.overflow=""}handleSpecializationChange(e){return d(this,null,function*(){try{if(!e)throw new Error("Invalid specialization ID");if(!this.isFirstTime&&this.currentSpecialization&&this.currentSpecialization!==e&&!(yield this.showConfirmationDialog(e)))return;yield this.specializationService.setSpecialization(e),this.currentSpecialization=e,this.hideSpecializationModal(),this.showSuccessNotification(e),this.onSelectionChange(e),window.dispatchEvent(new CustomEvent("specialization-changed",{detail:{specializationId:e,updateCategories:!0}}))}catch(n){console.error("Error changing specialization:",n),this.showErrorNotification("Fehler beim Wechseln der Fachrichtung")}})}showConfirmationDialog(e){return d(this,null,function*(){return new Promise(n=>{const t=this.specializationService.getSpecializationConfig(e),i=this.specializationService.getSpecializationConfig(this.currentSpecialization),s=this.createConfirmationDialog(i,t);document.body.appendChild(s);const a=()=>{l(),n(!0)},o=()=>{l(),n(!1)},l=()=>{s.remove(),document.removeEventListener("keydown",u),document.body.style.overflow=""},u=c=>{c.key==="Escape"&&o()};s.querySelector(".confirm-btn").addEventListener("click",a),s.querySelector(".cancel-btn").addEventListener("click",o),s.querySelector(".confirmation-close").addEventListener("click",o),document.addEventListener("keydown",u),document.body.style.overflow="hidden",setTimeout(()=>{s.querySelector(".cancel-btn").focus()},100)})})}createConfirmationDialog(e,n){const t=document.createElement("div");return t.className="confirmation-modal-overlay",t.setAttribute("role","dialog"),t.setAttribute("aria-modal","true"),t.setAttribute("aria-labelledby","confirmation-title"),t.innerHTML=`
      <div class="confirmation-modal-content">
        <div class="confirmation-modal-header">
          <h3 id="confirmation-title" class="confirmation-title">
            Fachrichtung wechseln?
          </h3>
          <button class="confirmation-close" aria-label="Dialog schlie√üen">&times;</button>
        </div>
        
        <div class="confirmation-modal-body">
          <div class="specialization-change-preview">
            <div class="current-spec">
              <div class="spec-label">Aktuell:</div>
              <div class="spec-info">
                <span class="spec-icon" style="color: ${e.color}">${e.icon}</span>
                <span class="spec-name">${e.name}</span>
              </div>
            </div>
            
            <div class="change-arrow">‚Üí</div>
            
            <div class="new-spec">
              <div class="spec-label">Neu:</div>
              <div class="spec-info">
                <span class="spec-icon" style="color: ${n.color}">${n.icon}</span>
                <span class="spec-name">${n.name}</span>
              </div>
            </div>
          </div>
          
          <div class="confirmation-message">
            <p><strong>Was passiert beim Wechsel?</strong></p>
            <ul class="confirmation-details">
              <li>‚úÖ Dein gesamter Lernfortschritt bleibt erhalten</li>
              <li>‚úÖ Allgemeine IT-Inhalte bleiben verf√ºgbar</li>
              <li>üîÑ Die angezeigten Module werden an deine neue Fachrichtung angepasst</li>
              <li>üìä Deine Fortschrittsstatistiken werden entsprechend aktualisiert</li>
            </ul>
          </div>
        </div>
        
        <div class="confirmation-modal-footer">
          <button class="btn btn-secondary cancel-btn">Abbrechen</button>
          <button class="btn btn-primary confirm-btn">Fachrichtung wechseln</button>
        </div>
      </div>
    `,t}showSuccessNotification(e){const n=this.specializationService.getSpecializationConfig(e),t=document.createElement("div");t.className="specialization-success-notification",t.setAttribute("role","alert"),t.setAttribute("aria-live","polite"),t.innerHTML=`
      <div class="success-notification-content">
        <div class="success-header">
          <span class="success-icon">${n.icon}</span>
          <div class="success-text">
            <h4 class="success-title">Fachrichtung erfolgreich gewechselt!</h4>
            <p class="success-subtitle">Du lernst jetzt f√ºr ${n.name}</p>
          </div>
          <button class="success-close" aria-label="Benachrichtigung schlie√üen">&times;</button>
        </div>
        
        <div class="success-details">
          <div class="success-benefits">
            <div class="benefit-item">
              <span class="benefit-icon">‚úÖ</span>
              <span class="benefit-text">Dein Fortschritt wurde vollst√§ndig √ºbernommen</span>
            </div>
            <div class="benefit-item">
              <span class="benefit-icon">üìö</span>
              <span class="benefit-text">Inhalte wurden an deine Fachrichtung angepasst</span>
            </div>
            <div class="benefit-item">
              <span class="benefit-icon">üéØ</span>
              <span class="benefit-text">Relevante Module werden jetzt priorisiert</span>
            </div>
          </div>
          
          <div class="success-actions">
            <button class="btn btn-primary btn-sm explore-content">
              Inhalte erkunden
            </button>
          </div>
        </div>
      </div>
    `,t.style.cssText=`
      position: fixed;
      top: 20px;
      right: 20px;
      max-width: 400px;
      background: white;
      border: 1px solid #e5e7eb;
      border-left: 4px solid ${n.color};
      border-radius: 8px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
      z-index: 10000;
      animation: slideInRight 0.3s ease-out;
    `,document.body.appendChild(t);const i=t.querySelector(".success-close"),s=t.querySelector(".explore-content"),a=()=>{t.style.animation="slideOutRight 0.3s ease-in",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)};i.addEventListener("click",a),s.addEventListener("click",()=>{a(),window.location.hash="#/modules"}),setTimeout(a,8e3),this._addNotificationStyles()}_addNotificationStyles(){if(document.querySelector("#specialization-notification-styles"))return;const e=document.createElement("style");e.id="specialization-notification-styles",e.textContent=`
      @keyframes slideInRight {
        from {
          transform: translateX(100%);
          opacity: 0;
        }
        to {
          transform: translateX(0);
          opacity: 1;
        }
      }
      
      @keyframes slideOutRight {
        from {
          transform: translateX(0);
          opacity: 1;
        }
        to {
          transform: translateX(100%);
          opacity: 0;
        }
      }
      
      .specialization-success-notification {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      }
      
      .success-notification-content {
        padding: 16px;
      }
      
      .success-header {
        display: flex;
        align-items: flex-start;
        gap: 12px;
        margin-bottom: 12px;
      }
      
      .success-icon {
        font-size: 24px;
        flex-shrink: 0;
      }
      
      .success-text {
        flex: 1;
      }
      
      .success-title {
        margin: 0 0 4px 0;
        font-size: 16px;
        font-weight: 600;
        color: #111827;
      }
      
      .success-subtitle {
        margin: 0;
        font-size: 14px;
        color: #6b7280;
      }
      
      .success-close {
        background: none;
        border: none;
        font-size: 20px;
        color: #9ca3af;
        cursor: pointer;
        padding: 0;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        flex-shrink: 0;
      }
      
      .success-close:hover {
        background: #f3f4f6;
        color: #374151;
      }
      
      .success-details {
        border-top: 1px solid #f3f4f6;
        padding-top: 12px;
      }
      
      .success-benefits {
        margin-bottom: 12px;
      }
      
      .benefit-item {
        display: flex;
        align-items: center;
        gap: 8px;
        margin-bottom: 6px;
        font-size: 13px;
        color: #374151;
      }
      
      .benefit-item:last-child {
        margin-bottom: 0;
      }
      
      .benefit-icon {
        font-size: 14px;
        flex-shrink: 0;
      }
      
      .success-actions {
        display: flex;
        justify-content: flex-end;
      }
      
      .btn {
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 13px;
        font-weight: 500;
        border: none;
        cursor: pointer;
        transition: all 0.2s;
      }
      
      .btn-primary {
        background: #3b82f6;
        color: white;
      }
      
      .btn-primary:hover {
        background: #2563eb;
      }
      
      .btn-sm {
        padding: 4px 8px;
        font-size: 12px;
      }
      
      @media (max-width: 480px) {
        .specialization-success-notification {
          left: 10px;
          right: 10px;
          max-width: none;
        }
      }
    `,document.head.appendChild(e)}showErrorNotification(e){const n=document.createElement("div");n.className="toast toast-error",n.innerHTML=`
      <div class="toast-content">
        <span class="toast-icon">‚ö†Ô∏è</span>
        <span class="toast-message">${e}</span>
      </div>
    `,document.body.appendChild(n),setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},5e3)}handleModalClick(e){e.target.classList.contains("specialization-modal-overlay")&&(this.isFirstTime||this.hideSpecializationModal())}handleKeyDown(e){e.key==="Escape"&&!this.isFirstTime&&this.hideSpecializationModal()}getCurrentSpecialization(){return this.currentSpecialization}isModalVisible(){return this.isModalOpen}destroy(){this.hideSpecializationModal(),document.removeEventListener("keydown",this.handleKeyDown)}}class AP{constructor(){this.services={},this.navigation=null}init(){return d(this,null,function*(){try{w.init(),this.setupErrorHandling(),this.initializeServices(),yield this.loadInitialData(),this.initializeTheme(),yield this.initializeSpecializationSelection(),this.createNavigation(),this.registerRoutes(),this.setupGlobalEventListeners(),this.services.router.init(),w.announce("Application loaded successfully")}catch(e){console.error("‚ùå Failed to initialize application:",e),this.showFatalError(e)}})}initializeServices(){const e=document.getElementById("app");if(!e)throw new Error("App container not found");const n=document.createElement("main");n.id="main-content",n.className="main-content",e.appendChild(n),this.services.storageService=new P,this.services.stateManager=new uP(this.services.storageService),this.services.specializationService=new lP(this.services.stateManager,this.services.storageService),this.services.categoryMappingService=new Tg(this.services.specializationService),this.services.themeManager=new cP(this.services.storageService),this.services.router=new oP(n),this.services.router.setSpecializationService(this.services.specializationService),this.services.ihkContentService=new eP(this.services.stateManager,this.services.storageService,this.services.specializationService,this.services.categoryMappingService),this.services.moduleService=new nP(this.services.stateManager,this.services.storageService,this.services.ihkContentService,this.services.specializationService),this.services.quizService=new sP(this.services.stateManager,this.services.storageService,this.services.ihkContentService,this.services.specializationService),this.services.progressService=new rP(this.services.stateManager,this.services.storageService,this.services.moduleService,this.services.quizService),this.services.examProgressService=new qg(this.services.stateManager,this.services.storageService)}loadInitialData(){return d(this,null,function*(){this.services.stateManager.loadFromStorage();let e=this.services.stateManager.getState("modules");(!e||e.length===0)&&this.services.stateManager.setState("modules",O),this.services.stateManager.getState("progress")||this.services.stateManager.setState("progress",{modulesCompleted:[],modulesInProgress:[],quizAttempts:[],lastActivity:new Date().toISOString()}),this.services.specializationService.migrateExistingUser("anwendungsentwicklung"),this.services.stateManager.saveToStorage()})}initializeTheme(){this.services.themeManager.init(),this.services.themeManager.watchSystemPreference()}initializeSpecializationSelection(){return d(this,null,function*(){try{this.specializationSelector=new wP(this.services.specializationService,e=>{this.handleSpecializationSelection(e)}),yield this.specializationSelector.init()}catch(e){console.error("Error initializing specialization selection:",e)}})}handleSpecializationSelection(e){try{this.navigation&&this.navigation.updateSpecialization(e),this.services.router&&this.services.router.refresh(),this.services.stateManager.saveToStorage(),console.warn(`Specialization selected: ${e}`)}catch(n){console.error("Error handling specialization selection:",n)}}createNavigation(){this.navigation=new mP(this.services.themeManager,this.services.router,this.services.specializationService,this.specializationSelector);const e=document.getElementById("app"),n=document.getElementById("main-content"),t=this.navigation.render();e.insertBefore(t,n)}registerRoutes(){const e=this.services.router;e.register("/",D.wrap(()=>d(this,null,function*(){return yield new gP(this.services).render()}))),e.register("/modules",D.wrap(()=>d(this,null,function*(){return yield new hP(this.services).render()}))),e.register("/modules/:id",D.wrap(n=>d(this,null,function*(){return yield new pP(this.services,n).render()}))),e.register("/quizzes",D.wrap(()=>d(this,null,function*(){return yield new bP(this.services).render()}))),e.register("/quizzes/:id",D.wrap(n=>d(this,null,function*(){return yield new kP(this.services).render(n.id)}))),e.register("/assessment-demo",D.wrap(()=>d(this,null,function*(){const n=document.getElementById("main-content"),{default:t}=yield r(()=>d(this,null,function*(){const{default:o}=yield import("./MicroQuizPanel-DCB6zszV.js");return{default:o}}),[],import.meta.url),i=document.createElement("div");i.id="assessment-demo-container",n.appendChild(i);const s=new t(i),a={id:"demo-quiz-1",title:"Demo Micro-Quiz",questions:[{id:"q1",type:"single-choice",question:"Pick A",options:["A","B"],correctAnswer:"A"}]};return s.render(a),i}))),e.register("/progress",D.wrap(()=>d(this,null,function*(){return yield new zP(this.services).render()}))),e.register("/wheel",D.wrap(()=>d(this,null,function*(){return yield new yP(this.services).render()}))),e.registerNotFound(()=>new SP(this.services).render())}setupGlobalEventListeners(){document.addEventListener("showSpecializationModal",()=>{this.specializationSelector&&this.specializationSelector.showSpecializationModal(!1)}),document.addEventListener("specialization-changed",e=>{this.navigation&&this.navigation._updateSpecializationIndicator(),this.services.router&&this.services.router.refresh()})}setupErrorHandling(){window.addEventListener("error",e=>{console.error("Uncaught error:",e.error),y.error("An unexpected error occurred. Please refresh the page."),e.preventDefault()}),window.addEventListener("unhandledrejection",e=>{console.error("Unhandled promise rejection:",e.reason),y.error("An unexpected error occurred. Please try again or refresh the page."),e.preventDefault()}),window.addEventListener("storage",e=>{e.key===null&&y.warning("Storage was cleared. Your progress may be lost.")}),window.addEventListener("storage-quota-warning",e=>{y.warning("Storage is almost full. Only essential progress was saved.",{duration:1e4,action:{label:"Export Progress",onClick:()=>{window.location.hash="#/progress"}}})}),window.addEventListener("storage-quota-error",e=>{y.handleStorageError(e.detail.error)})}showFatalError(e){const n=document.getElementById("app");n.innerHTML=`
      <div style="
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        padding: 2rem;
        text-align: center;
      ">
        <h1 style="font-size: 2rem; margin-bottom: 1rem; color: #ef4444;">
          ‚ö†Ô∏è Application Error
        </h1>
        <p style="margin-bottom: 2rem; color: #6b7280;">
          We're sorry, but something went wrong. Please try refreshing the page.
        </p>
        <button 
          onclick="window.location.reload()" 
          style="
            padding: 0.75rem 1.5rem;
            background: #3b82f6;
            color: white;
            border: none;
            border-radius: 0.5rem;
            cursor: pointer;
            font-size: 1rem;
          "
        >
          Refresh Page
        </button>
        <details style="margin-top: 2rem; text-align: left; max-width: 600px;">
          <summary style="cursor: pointer; color: #6b7280;">Error Details</summary>
          <pre style="
            margin-top: 1rem;
            padding: 1rem;
            background: #f3f4f6;
            border-radius: 0.5rem;
            overflow: auto;
            font-size: 0.875rem;
          ">${e.stack||e.message}</pre>
        </details>
      </div>
    `}}const EP=new AP;EP.init();(function(){const f=document.querySelector(".nav-scroll-progress"),e=f&&f.querySelector(".bar");if(!f||!e)return;let n=!1;function t(){const s=document.documentElement,a=s.scrollTop||document.body.scrollTop,o=s.scrollHeight||document.body.scrollHeight,l=s.clientHeight||window.innerHeight,u=o-l;let c=0;u>0&&(c=a/u*100,c<0&&(c=0),c>100&&(c=100)),e.style.width=c+"%",f.setAttribute("aria-valuenow",String(Math.round(c))),n=!1}function i(){n||(n=!0,requestAnimationFrame(t))}window.addEventListener("scroll",i,{passive:!0}),window.addEventListener("resize",i),document.readyState==="complete"||document.readyState==="interactive"?t():document.addEventListener("DOMContentLoaded",t,{once:!0})})();export{P as S};
//# sourceMappingURL=index-BLjbATF-.js.map
