{"version":3,"file":"MicroQuizPanel-CX9EAHGz.js","sources":["../../../src/assessment/scoring/partialCredit.js","../../../src/assessment/event/EventBus.js","../../../src/assessment/evaluators/gatingEvaluators.js","../../../src/assessment/services/AssessmentService.js","../../../src/assessment/i18n/i18nAssessment.js","../../../src/assessment/a11y/A11yAnnouncer.js","../../../src/assessment/components/MicroQuizPanel.js"],"sourcesContent":["// Partial credit scoring utilities (Req 7.5)\nexport function multiSelectPartial({\n  selected,\n  correct,\n  totalOptions,\n  weight = 1,\n}) {\n  const correctSet = new Set(correct);\n  let correctSelected = 0;\n  let incorrectSelected = 0;\n  selected.forEach(opt => {\n    if (correctSet.has(opt)) correctSelected++;\n    else incorrectSelected++;\n  });\n  const totalCorrect = correctSet.size;\n  const totalOptionsNonCorrect = totalOptions - totalCorrect;\n  const raw =\n    correctSelected / totalCorrect -\n    incorrectSelected / (totalOptionsNonCorrect || 1);\n  const partial = Math.max(0, Math.min(1, raw));\n  return partial * weight;\n}\n\nexport function roundHalfUp(value, decimals = 1) {\n  const factor = 10 ** decimals;\n  return Math.round(value * factor + Number.EPSILON) / factor; // half-up for positive decimals\n}\n","// Simple EventBus (Req 7.7)\n\n// Minimal UUID fallback implementation (no dependency) inlined until separated\nfunction generateUUID() {\n  // Guard access to global crypto (Node vs browser)\n  if (\n    typeof crypto !== 'undefined' &&\n    crypto &&\n    typeof crypto.randomUUID === 'function'\n  ) {\n    return crypto.randomUUID();\n  }\n  // Basic RFC4122 v4-ish fallback\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nconst listeners = new Map();\nconst queue = [];\n\nconst IS_DEV = import.meta?.env?.DEV ?? true;\n\nexport function emitEvent(name, payload = {}) {\n  const envelope = {\n    id: generateUUID(),\n    name,\n    ts: new Date().toISOString(),\n    payload,\n    version: 1,\n  };\n  queue.push(envelope);\n  // Immediate dispatch\n  if (listeners.has(name)) {\n    listeners.get(name).forEach(cb => {\n      try {\n        cb(envelope);\n      } catch (e) {\n        console.error('Event handler error', e);\n      }\n    });\n  }\n  if (IS_DEV) console.warn('[event]', envelope);\n  return envelope;\n}\n\nexport function subscribe(name, handler) {\n  if (!listeners.has(name)) listeners.set(name, new Set());\n  listeners.get(name).add(handler);\n  return () => listeners.get(name)?.delete(handler);\n}\n\nexport function getQueuedEvents() {\n  return [...queue];\n}\n","// Gating evaluator stubs (Req 7.1, 7.3, 7.4)\nexport function evaluateSectionReadable(sectionProgress) {\n  if (!sectionProgress) return false;\n  return sectionProgress.readRatio >= 0.85 || !!sectionProgress.manuallyMarked;\n}\n\nexport function evaluateMicroQuizStart(sectionProgress, featureEnabled) {\n  const allowed = featureEnabled\n    ? evaluateSectionReadable(sectionProgress)\n    : true;\n  const reasons = allowed ? [] : ['SECTION_UNREAD'];\n  return { allowed, reasons };\n}\n\nexport function deriveUnmetCriteria(moduleState) {\n  const unmet = [];\n  if (moduleState?.requiredSections) {\n    moduleState.requiredSections.forEach(sec => {\n      if (!evaluateSectionReadable(moduleState.sectionProgress?.[sec])) {\n        unmet.push({ code: 'SECTION_UNREAD', id: sec });\n      }\n    });\n  }\n  if (moduleState?.microQuizzes) {\n    moduleState.microQuizzes.forEach(mq => {\n      if (!moduleState.microQuizState?.[mq]?.passed) {\n        unmet.push({ code: 'MICRO_NOT_PASSED', id: mq });\n      }\n    });\n  }\n  return unmet;\n}\n\nexport function evaluateFinalExamUnlock(moduleState) {\n  if (!moduleState) return { status: 'LOCKED', unmetCriteria: [] };\n  const unmet = deriveUnmetCriteria(moduleState);\n\n  // Outdated check: detect module structure changes after last pass\n  if (\n    moduleState.finalExamPassed &&\n    moduleState.structureSignature !== moduleState.lastPassedSignature\n  ) {\n    return { status: 'OUTDATED', unmetCriteria: unmet };\n  }\n\n  // Cooldown support (placeholder): if moduleState.cooldownUntil in future -> COOLDOWN\n  if (\n    moduleState.cooldownUntil &&\n    new Date(moduleState.cooldownUntil) > new Date()\n  ) {\n    return { status: 'COOLDOWN', unmetCriteria: unmet };\n  }\n\n  if (unmet.length === 0) {\n    return {\n      status: moduleState.finalExamPassed ? 'PASSED' : 'READY',\n      unmetCriteria: [],\n    };\n  }\n  return { status: 'LOCKED', unmetCriteria: unmet };\n}\n","// AssessmentService (Req 7.*) manages quiz attempts, gating state, and score derivation.\nimport StorageService from '../../services/StorageService.js';\nimport { multiSelectPartial, roundHalfUp } from '../scoring/partialCredit.js';\nimport { emitEvent } from '../event/EventBus.js';\nimport { evaluateFinalExamUnlock } from '../evaluators/gatingEvaluators.js';\n\nconst ATTEMPTS_KEY = 'assessment.attempts.v1';\nconst PROGRESS_KEY = 'assessment.progress.v1';\nconst DRAFT_KEY = 'assessment.draft.v1';\n\nexport class AssessmentService {\n  constructor(\n    retentionPolicy = { maxAttemptsStored: 20, pruneStrategy: 'FIFO' },\n    storageInstance = null\n  ) {\n    this.retentionPolicy = retentionPolicy;\n    this.storage = storageInstance || new StorageService('assessment');\n  }\n\n  _safeGet(key, fallback) {\n    try {\n      const data = this.storage.get(key);\n      return data || fallback;\n    } catch (_) {\n      return fallback;\n    }\n  }\n\n  getAttempts(quizId) {\n    const attempts = this._safeGet(ATTEMPTS_KEY, []);\n    return attempts.filter(a => a.quizId === quizId);\n  }\n\n  saveAttempt(attempt) {\n    const attempts = this._safeGet(ATTEMPTS_KEY, []);\n    attempts.push(attempt);\n    this._prune(attempts, attempt.quizId);\n    this.storage.set(ATTEMPTS_KEY, attempts);\n    emitEvent('quiz.attempt.save', {\n      quizId: attempt.quizId,\n      score: attempt.score,\n    });\n  }\n\n  async submitAttemptWithRetry(attempt, maxRetries = 3) {\n    let tries = 0;\n    const backoffs = [1000, 3000, 7000];\n    while (tries <= maxRetries) {\n      try {\n        // In this local-only implementation, attempt to save to storage directly so synchronous errors are caught\n        const attempts = this._safeGet(ATTEMPTS_KEY, []);\n        attempts.push({\n          ...attempt,\n          status: 'SAVED',\n          savedAt: new Date().toISOString(),\n        });\n        this.storage.set(ATTEMPTS_KEY, attempts);\n        emitEvent('quiz.submit', { quizId: attempt.quizId, status: 'SAVED' });\n        return { status: 'SAVED' };\n      } catch (err) {\n        tries += 1;\n        if (tries > maxRetries) {\n          // Mark pending sync\n          const pendingAttempt = {\n            ...attempt,\n            status: 'PENDING_SYNC',\n            createdAt: new Date().toISOString(),\n          };\n          const attempts = this._safeGet(ATTEMPTS_KEY, []);\n          attempts.push(pendingAttempt);\n          try {\n            this.storage.set(ATTEMPTS_KEY, attempts);\n          } catch (e) {\n            /* if set fails while marking pending, ignore to avoid throwing */\n          }\n          emitEvent('quiz.attempt.pending', { quizId: attempt.quizId });\n          return { status: 'PENDING_SYNC' };\n        }\n        // exponential backoff pause\n        const wait = backoffs[Math.min(tries - 1, backoffs.length - 1)];\n        await new Promise(r => setTimeout(r, wait));\n      }\n    }\n  }\n\n  _prune(allAttempts, quizId) {\n    const quizAttempts = allAttempts.filter(a => a.quizId === quizId);\n    if (quizAttempts.length > this.retentionPolicy.maxAttemptsStored) {\n      const overflow =\n        quizAttempts.length - this.retentionPolicy.maxAttemptsStored;\n      // Remove oldest for this quiz\n      let removed = 0;\n      for (let i = 0; i < allAttempts.length && removed < overflow; i++) {\n        if (allAttempts[i].quizId === quizId) {\n          allAttempts.splice(i, 1);\n          i--;\n          removed++;\n        }\n      }\n      emitEvent('quiz.attempt.pruned', { quizId, removed: overflow });\n    }\n  }\n\n  scoreQuiz(quiz, answers) {\n    // answers: { questionId: string, selected: string[]|string }\n    let total = 0;\n    let earned = 0;\n    const questionScores = [];\n    (quiz.questions || []).forEach(q => {\n      const weight = typeof q.weight === 'number' ? q.weight : 1;\n      total += weight * 100;\n      const userAns = (answers || []).find(a => a.questionId === q.id);\n      if (!userAns) {\n        questionScores.push({ questionId: q.id, score: 0 });\n        return;\n      }\n      let fraction = 0;\n      // Support different JSON shapes: correctAnswer, correct, answer\n      const correctField = q.correctAnswer ?? q.correct ?? q.answer;\n      try {\n        if (q.type === 'multiple-choice') {\n          const selected = Array.isArray(userAns.selected)\n            ? userAns.selected\n            : userAns.selected\n              ? [userAns.selected]\n              : [];\n          const correctArr = Array.isArray(correctField)\n            ? correctField\n            : correctField\n              ? [correctField]\n              : [];\n          fraction = multiSelectPartial({\n            selected,\n            correct: correctArr,\n            totalOptions: (q.options || []).length,\n            weight: 1,\n          });\n        } else if (q.type === 'single-choice' || q.type === 'true-false') {\n          const correctVal = Array.isArray(correctField)\n            ? correctField[0]\n            : correctField;\n          fraction = userAns.selected === correctVal ? 1 : 0;\n        } else {\n          // Placeholder for ordering/gap fill future\n          fraction = 0;\n        }\n      } catch (err) {\n        // Defensive: if scoring helper throws (malformed quiz), treat as zero for that question\n        fraction = 0;\n        emitEvent('quiz.scoring.error', {\n          quizId: quiz.id,\n          questionId: q.id,\n          error: String(err),\n        });\n      }\n      const questionScore = Number.isFinite(fraction)\n        ? Math.min(100, fraction * weight * 100)\n        : 0;\n      earned += questionScore;\n      questionScores.push({ questionId: q.id, score: questionScore });\n    });\n    const rawPercent =\n      total > 0 && Number.isFinite(earned) ? (earned / total) * 100 : 0;\n    let finalScore = roundHalfUp(rawPercent, 1);\n    if (!Number.isFinite(finalScore) || Number.isNaN(finalScore))\n      finalScore = 0;\n    return { finalScore, questionScores };\n  }\n\n  startDraft(quizId, data) {\n    const drafts = this._safeGet(DRAFT_KEY, {});\n    drafts[quizId] = { ...data, updatedAt: new Date().toISOString() };\n    this.storage.set(DRAFT_KEY, drafts);\n  }\n\n  clearDraft(quizId) {\n    const drafts = this._safeGet(DRAFT_KEY, {});\n    delete drafts[quizId];\n    this.storage.set(DRAFT_KEY, drafts);\n  }\n\n  getDraft(quizId) {\n    const drafts = this._safeGet(DRAFT_KEY, {});\n    return drafts[quizId] || null;\n  }\n\n  evaluateModule(moduleState) {\n    return evaluateFinalExamUnlock(moduleState);\n  }\n}\n\nexport default new AssessmentService();\n","// Assessment i18n loader (Req 7.8)\nimport en from './assessment.en.json';\nimport de from './assessment.de.json';\nimport { emitEvent } from '../event/EventBus.js';\n\nconst locales = { en, de };\nlet currentLocale = 'en';\n\nexport function setAssessmentLocale(locale) {\n  if (locales[locale]) currentLocale = locale;\n  else currentLocale = 'en';\n}\n\nexport function tAssessment(key) {\n  const loc = locales[currentLocale] || locales.en;\n  if (loc[key]) return loc[key];\n  if (locales.en[key]) return locales.en[key];\n  // Emit missing key event\n  try {\n    emitEvent('i18n.missing', { key, locale: currentLocale });\n  } catch (err) {\n    // Non-critical: if event bus is not available, log a warning for diagnostics\n    // Use console.warn which is allowed by our ESLint config\n    console.warn('Could not emit i18n.missing event', err);\n  }\n  return key; // Debug fallback\n}\n","// A11yAnnouncer creates a polite live region and listens for quiz.submit events to announce results (Req 7.6)\nimport { subscribe } from '../event/EventBus.js';\nimport { tAssessment } from '../i18n/i18nAssessment.js';\n\nclass A11yAnnouncer {\n  constructor() {\n    this.node = null;\n    this._init();\n    // subscribe returns an unsubscribe function in our EventBus contract\n    this._unsub = subscribe('quiz.submit', this._onQuizSubmit.bind(this));\n    // Clean up when the page unloads (single-page apps may handle differently)\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener === 'function'\n    ) {\n      this._onUnload = this.destroy.bind(this);\n      window.addEventListener('beforeunload', this._onUnload);\n    }\n  }\n\n  _init() {\n    if (typeof document === 'undefined') return;\n    const existing = document.getElementById('assessment-live-region');\n    if (existing) {\n      this.node = existing;\n      return;\n    }\n    this.node = document.createElement('div');\n    this.node.id = 'assessment-live-region';\n    this.node.setAttribute('aria-live', 'polite');\n    this.node.setAttribute('aria-atomic', 'true');\n    // role=status is well-supported by screen readers for short, important messages\n    this.node.setAttribute('role', 'status');\n    // visually hide but keep accessible\n    this.node.style.position = 'absolute';\n    this.node.style.left = '-9999px';\n    this.node.style.width = '1px';\n    this.node.style.height = '1px';\n    this.node.style.overflow = 'hidden';\n    document.body.appendChild(this.node);\n  }\n\n  _onQuizSubmit(envelope) {\n    const payload = (envelope && envelope.payload) || {};\n    // Use i18n where available, but fall back to sensible English strings\n    const savedKey = 'quiz.resultsAvailable';\n    const pendingKey = 'quiz.submissionPending';\n    let baseText = '';\n    try {\n      baseText =\n        payload.status === 'SAVED'\n          ? tAssessment(savedKey) || 'Quiz results available'\n          : tAssessment(pendingKey) || 'Quiz submission pending';\n    } catch (e) {\n      // If i18n loader isn't present or throws, fallback\n      baseText =\n        payload.status === 'SAVED'\n          ? 'Quiz results available'\n          : 'Quiz submission pending';\n    }\n\n    // If a numeric score is available, include it in the announcement (e.g. \"Score: 85%\")\n    let text = baseText;\n    if (typeof payload.score === 'number') {\n      // keep one decimal where relevant\n      const scoreValue = Math.round(payload.score * 10) / 10;\n      text = `${baseText} — Score: ${scoreValue}%`;\n    }\n\n    if (this.node) this.node.textContent = text;\n\n    // Move focus to results heading if present; ensure it's programmatically focusable\n    const heading = document.querySelector('.quiz-results-heading');\n    if (heading) {\n      if (!heading.hasAttribute('tabindex'))\n        heading.setAttribute('tabindex', '-1');\n      if (typeof heading.focus === 'function') heading.focus();\n    }\n  }\n\n  // Remove live region and unsubscribe\n  destroy() {\n    try {\n      if (this._unsub && typeof this._unsub === 'function') this._unsub();\n      if (typeof window !== 'undefined' && this._onUnload)\n        window.removeEventListener('beforeunload', this._onUnload);\n      if (this.node && this.node.parentNode)\n        this.node.parentNode.removeChild(this.node);\n    } catch (e) {\n      // swallow cleanup errors — announcer is best-effort\n\n      console.warn('A11yAnnouncer cleanup error', e);\n    } finally {\n      this.node = null;\n      this._unsub = null;\n    }\n  }\n}\n\nexport default new A11yAnnouncer();\n","import AssessmentService from '../services/AssessmentService.js';\nimport { emitEvent } from '../event/EventBus.js';\nimport { tAssessment } from '../i18n/i18nAssessment.js';\nimport A11yAnnouncer from '../a11y/A11yAnnouncer.js';\n\n// Minimal MicroQuizPanel: renders into container, delegates scoring/submission\nexport default class MicroQuizPanel {\n  constructor(container) {\n    this.container = container;\n    this.root = document.createElement('div');\n    this.root.className = 'micro-quiz-panel';\n  }\n\n  render(quiz, moduleState = {}) {\n    this.quiz = quiz;\n    this.moduleState = moduleState;\n    this.root.innerHTML = '';\n\n    const header = document.createElement('h3');\n    header.textContent = quiz.title || 'Micro-Quiz';\n    this.root.appendChild(header);\n\n    const form = document.createElement('form');\n    form.className = 'micro-quiz-form';\n    form.setAttribute('aria-labelledby', header.id || '');\n\n    quiz.questions.slice(0, 5).forEach((q, idx) => {\n      const fieldset = document.createElement('fieldset');\n      const legend = document.createElement('legend');\n      legend.textContent = q.question;\n      fieldset.appendChild(legend);\n\n      const opts = q.options || [];\n      opts.forEach(opt => {\n        const label = document.createElement('label');\n        const input = document.createElement('input');\n        input.type = q.type === 'multiple-choice' ? 'checkbox' : 'radio';\n        input.name = `q-${q.id}`;\n        input.value = opt;\n        label.appendChild(input);\n        label.appendChild(document.createTextNode(opt));\n        fieldset.appendChild(label);\n      });\n      form.appendChild(fieldset);\n    });\n\n    const submit = document.createElement('button');\n    submit.type = 'button';\n    submit.textContent = tAssessment('quiz.submit.button') || 'Submit';\n    submit.addEventListener('click', () => this._onSubmit(form));\n    form.appendChild(submit);\n\n    this.root.appendChild(form);\n    this.container.appendChild(this.root);\n    emitEvent('quiz.view', { quizId: quiz.id });\n  }\n\n  _gatherAnswers(form) {\n    const answers = [];\n    const qs = this.quiz.questions.slice(0, 5);\n    qs.forEach(q => {\n      const name = `q-${q.id}`;\n      const inputs = Array.from(form.querySelectorAll(`[name=\"${name}\"]`));\n      if (q.type === 'multiple-choice') {\n        const selected = inputs.filter(i => i.checked).map(i => i.value);\n        answers.push({ questionId: q.id, selected });\n      } else {\n        const sel = inputs.find(i => i.checked);\n        answers.push({ questionId: q.id, selected: sel ? sel.value : null });\n      }\n    });\n    return answers;\n  }\n\n  async _onSubmit(form) {\n    emitEvent('quiz.start', { quizId: this.quiz.id });\n    const answers = this._gatherAnswers(form);\n    const scoreResult = AssessmentService.scoreQuiz(this.quiz, answers);\n    const attempt = {\n      quizId: this.quiz.id,\n      answers,\n      score: scoreResult.finalScore,\n      date: new Date().toISOString(),\n    };\n    // submit attempt with retry\n    const res = await AssessmentService.submitAttemptWithRetry(attempt);\n    // show or update results heading\n    const headingSelector = '.quiz-results-heading';\n    // Find all existing result headings inside this panel and normalize to at most one\n    const existingHeadings = Array.from(\n      this.root.querySelectorAll(headingSelector)\n    );\n    let heading = existingHeadings.length > 0 ? existingHeadings[0] : null;\n    const qScores = scoreResult.questionScores || [];\n    const earnedPoints = qScores.reduce(\n      (s, q) => s + (Number.isFinite(q.score) ? q.score : 0),\n      0\n    );\n    const totalPoints = (this.quiz.questions || []).reduce(\n      (s, q) => s + (q.weight || 1) * 100,\n      0\n    );\n    const percent =\n      Number.isFinite(scoreResult.finalScore) &&\n      !Number.isNaN(scoreResult.finalScore)\n        ? scoreResult.finalScore\n        : totalPoints > 0\n          ? Number(((earnedPoints / totalPoints) * 100).toFixed(1))\n          : 0;\n\n    const text = `${tAssessment('quiz.result.label') || 'Result'}: ${percent}% (${Math.round(earnedPoints)}/${Math.round(totalPoints)} pts)`;\n    if (heading) {\n      // update existing heading text\n      heading.textContent = text;\n      // remove any duplicate headings beyond the first\n      existingHeadings.slice(1).forEach(h => {\n        if (h && h.parentNode) h.parentNode.removeChild(h);\n      });\n    } else {\n      // create and insert the heading immediately after the form for predictable placement\n      heading = document.createElement('h4');\n      heading.className = 'quiz-results-heading';\n      heading.tabIndex = -1;\n      heading.textContent = text;\n      const formEl = this.root.querySelector('form');\n      if (formEl && formEl.parentNode)\n        formEl.parentNode.insertBefore(heading, formEl.nextSibling);\n      else this.root.appendChild(heading);\n    }\n\n    emitEvent('quiz.submit', {\n      quizId: this.quiz.id,\n      status: res.status,\n      score: percent,\n    });\n\n    // Highlight correct and incorrect answers for each question and disable inputs\n    try {\n      this._highlightResults(scoreResult, form);\n    } catch (err) {\n      console.warn('Failed to highlight quiz results', err);\n    }\n  }\n\n  _highlightResults(scoreResult, form) {\n    if (!this.quiz || !form) return;\n    const qs = this.quiz.questions.slice(0, 5);\n    const qScoreMap =\n      scoreResult && scoreResult.questionScores\n        ? scoreResult.questionScores.reduce((m, q) => {\n            m[q.questionId] = q.score;\n            return m;\n          }, {})\n        : {};\n\n    qs.forEach(q => {\n      const name = `q-${q.id}`;\n      const inputs = Array.from(form.querySelectorAll(`[name=\"${name}\"]`));\n      if (!inputs || inputs.length === 0) return;\n\n      // Determine correct answers (support multiple field names)\n      const correctField = q.correctAnswer ?? q.correct ?? q.answer;\n      const correctArr = Array.isArray(correctField)\n        ? correctField\n        : correctField != null\n          ? [correctField]\n          : [];\n      const correctSet = new Set(correctArr);\n\n      // Determine if question was fully correct based on scoring (score === 100)\n      const qScore = Number.isFinite(qScoreMap[q.id]) ? qScoreMap[q.id] : 0;\n      const fullyCorrect = qScore >= 99.5;\n\n      inputs.forEach(input => {\n        // Find the label for this input (closest label or parent)\n        let label = input.closest('label');\n        if (!label) label = input.parentElement;\n\n        const val = input.value;\n        const isCorrectOption = correctSet.has(val);\n        const isSelected = !!input.checked;\n\n        // Clear any previous marker classes\n        if (label) {\n          label.classList.remove('correct-option', 'incorrect-selected');\n        }\n\n        // Mark correct options visually\n        if (isCorrectOption) {\n          if (label) label.classList.add('correct-option');\n          // For screen reader clarity, mark aria-describedby\n          input.setAttribute('data-correct', 'true');\n          // add visible badge\n          if (label && !label.querySelector('.result-badge')) {\n            const b = document.createElement('span');\n            b.className = 'result-badge correct-badge';\n            b.textContent = 'Correct';\n            label.appendChild(b);\n          }\n          // inline style fallback to guarantee visibility\n          if (label) {\n            label.style.backgroundColor = '#e6ffed';\n            label.style.borderLeft = '4px solid #28a745';\n            label.style.paddingLeft = '6px';\n          }\n        }\n\n        // Mark incorrect selected options\n        if (!isCorrectOption && isSelected) {\n          if (label) label.classList.add('incorrect-selected');\n          input.setAttribute('aria-invalid', 'true');\n          if (label && !label.querySelector('.result-badge')) {\n            const b = document.createElement('span');\n            b.className = 'result-badge incorrect-badge';\n            b.textContent = 'Incorrect';\n            label.appendChild(b);\n          }\n          // inline style fallback\n          if (label) {\n            label.style.backgroundColor = '#fff0f0';\n            label.style.borderLeft = '4px solid #d93025';\n            label.style.paddingLeft = '6px';\n          }\n        }\n\n        // Disable inputs to prevent changes after submit\n        input.disabled = true;\n      });\n\n      // If the question was fully correct, add a small visually-hidden confirmation to the fieldset\n      try {\n        const fieldset = inputs[0] && inputs[0].closest('fieldset');\n        if (fieldset) {\n          // remove any existing result note or list\n          const prevNote = fieldset.querySelector('.question-result-note');\n          if (prevNote) prevNote.remove();\n          const prevList = fieldset.querySelector('.correct-answers-list');\n          if (prevList) prevList.remove();\n\n          const note = document.createElement('div');\n          note.className = 'question-result-note sr-only';\n          note.textContent = fullyCorrect\n            ? 'Question answered correctly'\n            : 'Question has incorrect selections';\n          fieldset.appendChild(note);\n\n          // If not fully correct, show a visible list of correct answers\n          if (!fullyCorrect && correctArr.length > 0) {\n            const list = document.createElement('div');\n            list.className = 'correct-answers-list';\n            list.textContent = 'Correct answer(s): ' + correctArr.join(', ');\n            fieldset.appendChild(list);\n          }\n        }\n      } catch (e) {\n        // ignore\n      }\n    });\n\n    // mark panel as answered so styles/behaviors can target it\n    try {\n      this.root.classList.add('answered');\n    } catch (e) {\n      /* ignore */\n    }\n  }\n\n  destroy() {\n    if (this.root && this.root.parentNode)\n      this.root.parentNode.removeChild(this.root);\n    // ensure announcer is cleaned up when panel is removed\n    try {\n      A11yAnnouncer.destroy();\n    } catch (e) {\n      /* best-effort cleanup */\n    }\n  }\n}\n"],"names":["multiSelectPartial","selected","correct","totalOptions","weight","correctSet","correctSelected","incorrectSelected","opt","totalCorrect","totalOptionsNonCorrect","raw","roundHalfUp","value","decimals","factor","__pow","generateUUID","c","r","listeners","emitEvent","name","payload","envelope","cb","e","subscribe","handler","_a","evaluateSectionReadable","sectionProgress","deriveUnmetCriteria","moduleState","unmet","sec","mq","_b","evaluateFinalExamUnlock","ATTEMPTS_KEY","DRAFT_KEY","AssessmentService","retentionPolicy","storageInstance","StorageService","key","fallback","_","quizId","a","attempt","attempts","maxRetries","__async","tries","backoffs","__spreadProps","__spreadValues","err","pendingAttempt","wait","allAttempts","quizAttempts","overflow","removed","i","quiz","answers","total","earned","questionScores","q","userAns","fraction","correctField","correctArr","correctVal","questionScore","rawPercent","finalScore","data","drafts","AssessmentService$1","locales","en","de","currentLocale","tAssessment","loc","A11yAnnouncer","existing","savedKey","pendingKey","baseText","text","scoreValue","heading","A11yAnnouncer$1","MicroQuizPanel","container","header","form","idx","fieldset","legend","label","input","submit","inputs","sel","scoreResult","res","existingHeadings","earnedPoints","s","totalPoints","percent","h","formEl","qs","qScoreMap","m","fullyCorrect","val","isCorrectOption","isSelected","b","prevNote","prevList","note","list"],"mappings":"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"}